Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 149, 166, 185, 186, 195, 222, 223, 224, 225, 226, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 328, 329, 338, 348, 349, 350, 351, 352, 354, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 390], "i": [0, 2, 3, 5, 6, 7, 10, 15, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 200, 203, 209, 216, 219, 222, 223, 224, 225, 227, 229, 234, 235, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 322, 325, 326, 327, 328, 329, 330, 336, 338, 339, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396], "onli": [0, 10, 195, 200, 203, 222, 223, 229, 234, 235, 239, 319, 339, 356, 359, 361, 362, 363, 365, 368, 370, 371, 372, 375, 377, 378, 379, 383, 386, 388], "us": [0, 2, 10, 15, 48, 133, 149, 166, 185, 186, 191, 195, 200, 202, 203, 205, 209, 211, 212, 215, 216, 219, 222, 223, 226, 229, 234, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 348, 349, 350, 351, 352, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390], "refer": [0, 3, 5, 6, 200, 219, 222, 224, 239, 241, 338, 350, 351, 352, 355, 362, 365, 373, 375, 378, 383, 385, 389, 390], "convert": [0, 2, 5, 6, 10, 15, 191, 202, 203, 354, 364, 378, 383, 390], "python": [0, 5, 6, 10, 234, 235, 325, 336, 349, 350, 351, 356, 357, 358, 359, 361, 363, 364, 382], "docstr": [0, 234, 235], "api": [0, 5, 6, 8, 239, 319, 349, 351, 359, 361, 362, 363, 365, 366, 370, 371, 388, 395], "document": [0, 197, 229, 319, 320, 349, 350, 351, 352, 355, 375, 377, 378, 379, 389, 390], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 203, 205, 206, 209, 211, 212, 214, 216, 219, 222, 223, 224, 225, 226, 227, 229, 232, 234, 235, 236, 238, 239, 241, 242, 319, 322, 325, 327, 328, 330, 336, 338, 339, 348, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 383, 386, 388, 389, 390], "creat": [0, 191, 200, 203, 209, 214, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 348, 358, 364, 365, 374, 383, 386], "doc": [0, 150, 197, 222, 239, 358, 362, 370, 379], "usag": [0, 351, 386, 387], "py": [0, 3, 223, 350, 351, 356, 358, 360, 364, 382], "exampl": [0, 8, 10, 130, 195, 203, 224, 234, 235, 239, 319, 320, 342, 348, 350, 351, 352, 355, 358, 359, 361, 362, 364, 365, 366, 368, 370, 372, 386, 389, 390, 395], "def": [0, 203, 338, 339, 351, 358], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 133, 191, 192, 195, 202, 205, 209, 211, 212, 214, 216, 217, 222, 223, 224, 225, 226, 227, 229, 234, 235, 338, 339, 350, 351, 358, 362, 366, 370, 371, 386], "1": [0, 10, 197, 202, 203, 204, 218, 222, 223, 229, 234, 235, 237, 239, 329, 338, 339, 348, 350, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 366, 367, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 386, 388, 389, 390], "x": [0, 150, 206, 234, 235, 361, 371, 374, 375, 377, 378, 383, 390], "2": [0, 10, 200, 203, 205, 222, 223, 234, 329, 338, 339, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 366, 367, 372, 373, 374, 379, 380, 381, 383, 385, 386, 388], "print": [0, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 366], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 359, 370, 377, 383, 385], "level": [0, 14, 235, 319, 348, 351, 359, 361, 371, 374, 382], "pleas": [0, 3, 5, 6, 219, 222, 224, 239, 241, 318, 338, 339, 350, 352, 353, 355, 358, 362, 365, 368, 369, 370, 371, 375, 378, 383, 389, 390], "set": [0, 10, 48, 195, 197, 204, 205, 215, 216, 222, 223, 227, 229, 234, 235, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 348, 350, 351, 359, 361, 362, 363, 365, 366, 369, 370, 371, 374, 383], "100": [0, 203, 229, 234, 235, 351, 383, 390], "integ": [0, 222, 223, 226, 350, 354, 361, 362, 379, 383, 389, 390], "type": [0, 5, 6, 7, 10, 15, 48, 133, 191, 192, 195, 202, 203, 205, 211, 216, 217, 222, 223, 225, 226, 227, 229, 234, 238, 239, 241, 330, 338, 349, 350, 351, 352, 353, 354, 359, 360, 361, 363, 366, 368, 370, 371, 376, 382, 383, 386, 387, 390], "int": [0, 10, 195, 197, 202, 203, 218, 222, 229, 234, 329, 339, 358, 370, 371, 372, 375], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 133, 191, 192, 195, 202, 203, 205, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 234, 235, 238, 239, 319, 329, 338, 339, 351, 352, 360, 366, 386, 389], "str": [0, 10, 48, 133, 195, 197, 202, 203, 204, 211, 215, 217, 218, 222, 229, 232, 234, 235, 236, 239, 241, 339, 350], "parameter1": 0, "float": [0, 203, 204, 216, 218, 222, 223, 224, 225, 226, 229, 232, 236, 329, 350, 352, 354, 358, 364, 370, 371, 372, 386, 387, 389, 390], "parameter2": 0, "import": [0, 8, 10, 217, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 350, 351, 352, 355, 358, 359, 361, 363, 366, 370, 371, 375, 386, 387, 388, 389, 390], "o": [0, 10, 239, 338, 350, 351, 356, 367, 371, 376, 381], "rang": [0, 26, 203, 229, 338, 351, 358, 361, 383, 389, 390], "3": [0, 10, 329, 338, 339, 350, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 373, 374, 379, 381, 383, 384, 386], "0": [0, 8, 10, 191, 195, 203, 204, 206, 218, 222, 226, 232, 234, 235, 237, 238, 239, 326, 327, 329, 338, 339, 350, 351, 352, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390], "valu": [0, 10, 15, 191, 192, 202, 203, 215, 219, 222, 224, 227, 229, 234, 235, 329, 350, 351, 352, 358, 359, 360, 361, 362, 370, 371, 372, 373, 375, 377, 378, 383, 386, 387, 389, 390], "true": [0, 8, 195, 203, 222, 229, 232, 234, 235, 236, 338, 351, 354, 355, 357, 358, 360, 361, 370, 371, 377, 380, 383, 386, 387, 390], "fals": [0, 195, 197, 203, 204, 206, 211, 222, 229, 234, 235, 329, 338, 339, 352, 355, 358, 361, 370, 371, 383, 386], "bool": [0, 195, 197, 203, 204, 211, 222, 229, 232, 234, 235, 236, 326, 327, 328, 329, 339, 352, 358, 370, 371, 386, 387], "function2": 0, "pep": 0, "484": [0, 367], "annot": 0, "style": [0, 349], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 191, 192, 202, 206, 209, 211, 219, 222, 223, 224, 225, 226, 227, 229, 234, 235, 239, 338, 339, 348, 350, 352, 353, 355, 358, 359, 360, 361, 362, 363, 365, 366, 370, 371, 374, 375, 376, 377, 378, 379, 386, 387, 388, 389, 390], "neural_compressor": [0, 203, 215, 229], "config": [0, 2, 8, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 202, 205, 208, 209, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 229, 234, 235, 336, 339, 350, 351, 352, 353, 355, 359, 360, 362, 365, 370, 383, 388, 389], "mixedprecisionconfig": 0, "eval_func": [0, 215, 216, 229, 338], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 170, 171, 172, 174, 175, 189, 190, 192, 195, 200, 202, 203, 206, 208, 209, 212, 215, 216, 217, 222, 223, 224, 226, 227, 229, 238, 239, 336, 338, 350, 352, 353, 355, 357, 358, 361, 362, 366, 367, 370, 375, 376, 377, 378, 381, 385, 386, 387, 389, 390, 399], "accuraci": [0, 203, 209, 229, 338, 352, 353, 355, 375, 383, 386, 387, 389], "conf": [0, 8, 203, 359, 360, 361, 365, 382], "output_model": 0, "mix_precis": 0, "fit": [0, 215, 222, 372], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 79, 191, 192, 195, 197, 202, 203, 204, 205, 206, 209, 212, 215, 216, 217, 218, 227, 229, 232, 234, 235, 236, 237, 238, 329, 338, 350, 352, 353, 354, 360, 386, 387, 389, 390], "arg": [0, 14, 79, 211, 216, 224, 229, 239, 327, 338, 360, 365], "kwarg": [0, 14, 79, 203, 211, 224, 229, 234, 235], "an": [0, 3, 10, 15, 191, 214, 222, 223, 226, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 348, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 375, 376, 379, 384, 386, 388, 399], "If": [0, 10, 205, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 349, 352, 354, 358, 359, 360, 361, 362, 363, 366, 370, 376, 383, 385, 386, 389, 390], "ar": [0, 10, 150, 200, 205, 206, 222, 223, 224, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 338, 348, 349, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 386, 387, 389, 390], "accept": [0, 229, 348, 388], "thei": [0, 10, 200, 211, 222, 348, 352, 357, 366, 369, 370, 371, 373, 377, 383], "should": [0, 10, 211, 222, 223, 229, 234, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 359, 361, 362, 365, 366, 369, 370, 371, 376, 383, 384, 386, 387, 390], "list": [0, 5, 6, 7, 8, 10, 15, 48, 191, 192, 195, 203, 204, 215, 218, 222, 224, 229, 234, 235, 351, 352, 357, 358, 359, 362, 370, 371, 384, 390], "option": [0, 10, 195, 202, 203, 211, 215, 217, 222, 229, 234, 235, 338, 339, 360, 366, 370, 379, 383], "argument": [0, 195, 203, 224, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 352, 360, 384, 386, 387, 389, 390], "kei": [0, 8, 10, 15, 191, 222, 224, 227, 229, 234, 235, 319, 351, 360, 361, 362, 370, 371, 373], "dict": [0, 10, 15, 191, 192, 195, 203, 212, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 234, 235, 239, 350, 358, 359, 389], "section": [0, 351, 368, 379, 380], "support": [0, 10, 15, 133, 197, 203, 206, 217, 218, 222, 223, 228, 239, 329, 355, 356, 357, 358, 359, 360, 361, 365, 366, 371, 375, 376, 378, 380, 382, 383, 388, 389, 393], "ani": [0, 10, 211, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 349, 358, 366, 388], "restructuredtext": 0, "format": [0, 14, 79, 229, 338, 360, 377, 378, 381, 382, 390], "includ": [0, 219, 222, 225, 226, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 328, 329, 348, 349, 351, 353, 359, 360, 361, 368, 371, 379, 383, 385, 390], "liter": 0, "block": [0, 222, 224, 234, 235, 353, 369, 372, 373, 374, 375, 376, 378, 379, 389], "rais": [0, 222, 223, 227, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319], "attributeerror": 0, "except": [0, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 361, 370], "valueerror": 0, "equal": [0, 10, 229, 362, 369, 370], "generator1": 0, "n": [0, 10, 206, 222, 234, 235, 329, 350, 352, 361, 362, 364, 367, 369, 372, 373, 374, 375, 378, 379, 381, 383], "gener": [0, 10, 150, 202, 203, 222, 224, 229, 234, 235, 239, 339, 351, 352, 358, 362, 366, 370, 371, 374, 375, 378, 380, 382, 383, 386, 387, 390], "have": [0, 2, 10, 191, 195, 222, 223, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 349, 351, 358, 359, 360, 361, 362, 363, 366, 371, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 389, 390], "yield": [0, 390], "next": [0, 2, 8, 226, 234, 235, 338, 362, 363, 370, 372, 374, 376, 377, 378, 379], "number": [0, 15, 195, 203, 205, 206, 222, 223, 226, 235, 239, 339, 350, 361, 362, 366, 369, 372, 375, 378, 379, 383, 384, 390], "example_gener": 0, "4": [0, 10, 203, 218, 222, 229, 234, 235, 329, 338, 339, 348, 350, 352, 353, 356, 358, 360, 361, 362, 365, 366, 367, 373, 374, 375, 376, 379, 380, 383, 389], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 222, 223, 239, 338, 349, 350, 351, 358, 361, 362, 364, 365, 366, 369, 371, 375, 383, 390], "public": [0, 326, 327, 328, 329, 348, 365, 370, 371], "mai": [0, 2, 10, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 328, 329, 348, 349, 351, 358, 361, 366, 372, 373, 374, 376, 377, 378, 379, 383, 385, 390], "here": [0, 10, 212, 229, 345, 351, 357, 358, 361, 362, 363, 365, 366, 371, 379, 390, 391, 398], "attr1": 0, "descript": [0, 195, 229, 349, 350, 352, 360, 379, 386, 387, 389, 390], "attr2": 0, "attr5": 0, "after": [0, 10, 130, 149, 166, 185, 186, 219, 222, 223, 224, 225, 226, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 354, 357, 360, 361, 362, 363, 365, 366, 369, 371, 376, 378, 379, 382, 383, 384, 390], "specifi": [0, 10, 197, 203, 205, 212, 214, 216, 218, 228, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 362, 363, 371, 375, 377, 383, 389, 390], "method1": 0, "execut": [0, 212, 223, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 338, 351, 361, 365, 368, 370, 371, 375, 376, 378, 380, 383, 384, 390], "It": [0, 10, 211, 222, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 352, 358, 360, 361, 362, 365, 366, 374, 375, 377, 378, 383], "": [0, 10, 15, 48, 191, 203, 222, 223, 229, 235, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 327, 338, 348, 351, 352, 358, 359, 360, 362, 363, 365, 367, 372, 376, 378, 381, 383, 384, 388, 390], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 101, 130, 161, 191, 192, 211, 216, 222, 224, 242, 319, 338, 339, 347, 351, 352, 358, 360, 361, 362, 363, 374, 382, 387, 390, 393, 400], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 101, 130, 161, 191, 192, 209, 229, 242, 320, 330, 338, 347, 351, 358, 360, 362, 365, 370, 375, 378, 382, 393, 400], "start_pipelin": 2, "pipelin": [2, 208, 209, 212, 394], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 322, 351, 352, 358, 363, 366, 374, 377, 379, 399], "interfac": [2, 203, 234, 235, 327, 354, 357, 368], "firstli": 2, "loader": [2, 11, 193, 361, 363, 366], "get": [2, 8, 10, 14, 15, 191, 192, 205, 206, 219, 222, 223, 225, 226, 229, 236, 238, 241, 354, 358, 361, 362, 363, 365, 366, 370, 377, 379, 384, 388, 395], "comput": [2, 10, 191, 200, 229, 234, 235, 343, 351, 355, 366, 368, 369, 370, 371, 372, 375, 377, 378, 382, 388, 390, 396], "correspond": [2, 5, 6, 10, 223, 338, 358, 362, 366, 368, 375, 379, 382, 390], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 130, 203, 209, 217, 229, 237, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 343, 352, 353, 356, 358, 359, 363, 368, 388, 389, 390, 396], "contain": [2, 10, 15, 150, 191, 192, 222, 223, 224, 226, 227, 229, 234, 235, 239, 338, 343, 350, 352, 358, 359, 361, 362, 366, 368, 370, 382, 383, 384, 389, 390, 396], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 149, 166, 185, 186, 191, 192, 238, 354, 366, 367, 381], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 109, 130, 140, 191, 192, 193, 203, 229, 329, 360, 365, 366, 370, 371, 383, 384, 390], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 130, 191, 192, 193, 202, 219, 222, 223, 225, 226, 229, 234, 235, 329, 358, 359, 360, 362, 363, 365, 377, 382, 383, 389, 390], "Then": [2, 10, 352, 362, 363, 378, 379, 383, 389, 390], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 358, 361, 363], "pack": [2, 11, 36, 193, 379], "them": [2, 5, 6, 10, 358, 359, 362, 370, 373, 375, 378, 379, 390], "our": [2, 350, 354, 366, 370, 372, 373, 375, 377, 378, 379, 388], "form": [2, 10, 195, 229, 352, 360, 366, 369, 374, 378, 383], "exploit": [2, 366], "abov": [2, 10, 234, 235, 357, 358, 361, 362, 366, 372, 373, 375, 376, 377, 382], "consist": [2, 349], "sub": [2, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 358, 361, 362, 370, 377, 378], "whichcan": [2, 10, 109, 130, 150, 197, 211, 222, 223, 224, 226, 229, 234, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 350, 351, 352, 354, 358, 359, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 387, 388, 389, 390], "see": [2, 10, 150, 195, 200, 234, 235, 318, 348, 351, 358, 360, 361, 362, 363, 366, 367, 369, 374, 378, 380, 381, 382, 383, 385], "new": [2, 5, 6, 7, 10, 15, 222, 226, 229, 349, 366, 370, 371, 384, 391], "big": [2, 361, 362], "like": [2, 5, 6, 7, 10, 150, 191, 222, 239, 350, 351, 352, 355, 358, 359, 360, 361, 362, 363, 366, 370, 371, 373, 380, 386, 387, 389, 390], "layernorm": [2, 10, 39, 112, 358, 362, 366, 368, 383], "There": [2, 352, 358, 359, 360, 376, 380, 383, 387, 389], "differ": [2, 8, 13, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 170, 171, 172, 174, 175, 189, 190, 205, 214, 222, 338, 348, 350, 351, 352, 355, 358, 359, 361, 362, 363, 366, 369, 376, 379, 386, 387, 389, 390], "flow": [2, 10, 358, 362], "one": [2, 5, 6, 10, 222, 224, 226, 234, 329, 338, 351, 352, 355, 357, 358, 360, 361, 362, 366, 370, 372, 373, 378, 382, 383, 388], "subgraph": [2, 10, 161, 361, 363], "final": [2, 222, 223, 361, 362, 363, 365, 366, 372, 375, 376, 378, 386], "yaml": [2, 8, 10, 212, 214, 227, 229, 360, 361, 363, 382], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 133, 161, 203, 206, 209, 211, 212, 214, 224, 227, 229, 230, 239, 242, 326, 327, 328, 329, 350, 351, 358, 359, 360, 361, 363, 365, 370, 371, 382, 383, 384, 385], "bin": [2, 8, 215, 359, 360, 361, 363, 380, 382], "configur": [2, 90, 203, 205, 211, 212, 214, 216, 218, 222, 224, 227, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 329, 338, 350, 353, 354, 361, 369, 370, 374, 391], "infer": [2, 8, 13, 202, 216, 229, 235, 319, 353, 355, 357, 358, 360, 361, 362, 363, 373, 375, 376, 378, 387, 390, 397], "base": [3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 211, 217, 219, 222, 229, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 338, 350, 351, 354, 355, 356, 363, 365, 367, 372, 374, 375, 376, 377, 378, 380, 381, 388], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 191, 203, 209, 216, 238, 336, 355, 356, 359, 366, 390], "onnx": [3, 5, 15, 192, 203, 229, 351, 355, 358, 360, 361, 377, 388, 394, 399], "onnx_extractor": [3, 4, 11, 193], "tf_extractor": [3, 4, 11, 193], "more": [3, 5, 6, 10, 150, 222, 318, 352, 355, 357, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 373, 375, 376, 377, 379, 381, 382, 383], "detail": [3, 10, 338, 343, 345, 348, 349, 351, 352, 353, 355, 357, 358, 360, 361, 362, 365, 366, 367, 368, 373, 380, 381, 383, 389, 390, 396, 398], "A": [3, 10, 205, 212, 217, 219, 222, 223, 224, 225, 226, 227, 229, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 359, 366, 367, 369, 372, 373, 379, 381, 382, 383], "super": [3, 358, 361], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 130, 191, 192, 222, 328, 330, 343, 353, 357, 358, 359, 361, 363, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 383, 390, 396, 399], "do": [3, 203, 206, 215, 216, 224, 229, 348, 354, 358, 359, 361, 362, 366, 370, 372, 389, 390], "addit": [3, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 351, 353, 360, 372, 376, 384, 391], "attribut": [3, 5, 6, 7, 10, 48, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 338, 360, 362, 365, 371], "without": [3, 215, 223, 229, 348, 352, 358, 359, 376, 379, 380, 383], "modifi": [3, 8, 10, 109, 130, 200, 224, 235, 359, 360, 363], "topologi": 3, "modul": [4, 9, 11, 12, 36, 101, 213, 221, 338, 363, 364], "torch_extractor": [4, 11, 193], "all": [5, 6, 7, 8, 10, 11, 36, 48, 130, 133, 193, 222, 223, 224, 229, 234, 235, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 338, 348, 351, 352, 357, 358, 359, 360, 362, 366, 367, 370, 371, 372, 373, 375, 378, 381, 382, 386, 389, 390], "input": [5, 6, 8, 10, 15, 26, 130, 150, 191, 192, 202, 216, 217, 222, 223, 229, 234, 235, 329, 338, 339, 350, 351, 352, 354, 355, 359, 360, 361, 362, 365, 374, 376, 377, 379, 383, 388], "compos": [5, 6, 7, 209, 229, 338, 358, 363, 378], "order": [5, 6, 8, 10, 209, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 350, 358, 360, 366, 369, 375, 376, 378, 379], "origin": [5, 6, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 202, 222, 223, 224, 227, 239, 350, 352, 358, 363, 376, 377, 390], "calcul": [5, 6, 150, 206, 219, 222, 224, 225, 338, 360, 366, 369, 371, 372, 375, 376, 379, 383, 390], "notic": [5, 6, 363, 370, 377, 378, 385], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 222, 225, 229, 338, 351, 352, 369, 390], "between": [5, 6, 223, 234, 235, 329, 338, 352, 376, 379, 383, 390], "For": [5, 6, 10, 15, 130, 222, 224, 318, 338, 348, 351, 355, 358, 361, 362, 366, 367, 368, 370, 373, 377, 378, 379, 380, 381, 388], "relat": [5, 6, 225, 229, 345, 352, 358, 362, 366, 373, 378, 389, 390, 398], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 133, 191, 192, 222, 223, 226], "graph_def": [5, 6, 7, 191], "input_tensor": [5, 6, 7, 10, 15, 48, 191, 192, 234, 235, 358, 362], "output_tensor": [5, 6, 7, 10, 15, 48, 191, 192, 358, 362], "record": [5, 6, 7, 200, 338, 360, 361], "dest": [5, 6, 7, 10, 15, 191], "name": [5, 6, 7, 8, 10, 15, 48, 73, 133, 191, 195, 203, 204, 211, 217, 218, 219, 222, 223, 225, 226, 232, 236, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 364, 366, 367, 371, 381, 382, 385, 386, 387, 388, 389, 390], "object": [5, 6, 7, 191, 195, 203, 208, 212, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 229, 231, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 351, 352, 355, 358, 365, 389, 394], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 191], "torch": [7, 150, 192, 197, 202, 203, 222, 229, 234, 235, 339, 351, 388], "torchextractor": 7, "torchscript": [7, 67, 192, 202, 203, 229, 339], "defint": [8, 79], "add_config_item": 8, "val": [8, 10, 227], "add": [8, 10, 26, 203, 206, 224, 227, 352, 359, 360, 361, 362, 366, 368, 370, 371, 378, 383, 384, 399], "pair": [8, 203, 234, 359, 371, 379], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 234, 235, 238, 329, 362, 365, 366], "insert": [8, 10, 363, 365, 366, 370, 371, 390], "ir": [8, 358, 359, 360, 361, 380, 382, 399], "remove_nod": 8, "node_nam": [8, 10, 15, 191, 358, 362], "remov": [8, 10, 140, 235, 348, 349, 371, 389], "get_node_id": [8, 358], "id": [8, 10, 211, 235, 238, 371, 372], "accord": [8, 222, 226, 358, 361, 379], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 202, 204, 218, 223, 228, 338, 360, 364, 376, 378, 383, 384, 390], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 191, 192, 203, 215, 222, 223, 229, 234, 235, 338, 350, 352, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 375, 376, 377, 379, 383, 388], "get_pre_node_nam": 8, "previou": [8, 209, 222, 229, 351, 359, 391], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 191], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 390], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 234, 329, 358, 366, 369, 372, 373, 374, 378, 379, 382, 383], "pybind": 8, "executor": [8, 358, 359, 360], "input_data": [8, 10, 11, 101, 193, 359], "graph_init": [8, 359, 361], "initi": [8, 10, 15, 48, 203, 212, 223, 229, 234, 235, 329, 338, 370, 371, 375, 388, 389], "newgraph": 8, "out": [8, 10, 222, 229, 349, 351, 358, 359, 362, 368, 377, 390], "input_0": [8, 359, 361], "input_1": [8, 359, 361], "input_2": [8, 359, 361], "save": [8, 195, 206, 215, 229, 350, 351, 358, 359, 360, 363, 373, 377, 379, 390], "output_dir": [8, 195, 215, 229, 338, 350, 363, 364], "ymal": 8, "graph_dispatch": [8, 361], "tune": [8, 203, 229, 319, 350, 351, 352, 385, 386, 387, 389, 399], "inputs_shap": [8, 361], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 222, 383], "7": [8, 10, 329, 338, 351, 353, 356, 357, 358, 362, 364, 366, 367, 373, 381, 383, 386, 390], "sparsiti": [8, 203, 222, 223, 224, 226, 367, 382, 383, 389], "spars": [8, 223, 319, 329, 351, 361, 368, 369, 378, 383, 397], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 193, 222, 234, 235, 360, 361, 368, 369, 373, 375, 376, 379, 383, 397], "innerproduct": [8, 26, 109, 360, 361, 368], "reorder": [8, 11, 36, 193, 375, 376], "util": [10, 15, 191, 192, 203, 205, 208, 220, 240, 350, 358, 366, 369, 375, 376, 379, 383], "names_from_input": 10, "static": [10, 236, 326, 329, 360, 363, 370, 373, 375, 388], "method": [10, 206, 214, 218, 225, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 350, 353, 370, 373, 375, 378, 380, 389, 390], "valid": [10, 203, 216, 222, 223, 227, 229, 339, 349, 350, 352, 355, 366, 385, 391, 398], "string": [10, 15, 191, 192, 195, 206, 212, 214, 222, 223, 224, 225, 226, 227, 238, 239, 328, 350, 352, 358, 361, 362, 365, 371, 386, 387, 389, 390], "defin": [10, 195, 203, 212, 214, 215, 222, 223, 224, 225, 226, 229, 326, 338, 348, 351, 352, 358, 359, 365, 366, 379, 384, 386, 389, 390], "field": [10, 203, 350, 370, 371, 390], "tupl": [10, 205, 217, 222, 234, 235], "In": [10, 209, 222, 223, 225, 229, 234, 338, 348, 351, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 386, 387, 390], "nodedef": [10, 191], "end": [10, 223, 224, 234, 235, 239, 319, 351, 360, 363, 365, 366, 371, 380], "also": [10, 222, 349, 351, 358, 359, 360, 362, 363, 365, 366, 369, 370, 371, 372, 375, 378, 379, 380, 387, 390], "get_data_dtyp": 10, "data": [10, 73, 202, 222, 239, 241, 329, 338, 351, 353, 358, 359, 361, 363, 364, 365, 369, 370, 371, 372, 375, 376, 379, 383, 390, 394, 398], "const": [10, 15, 191, 326, 327, 328, 329, 365, 368, 370, 371, 372, 373], "dtype": [10, 15, 73, 191, 192, 197, 229, 351, 354, 359, 360, 361, 365], "numpi": [10, 15, 351, 359], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 109, 203, 368, 383, 390, 397], "info": [10, 14, 15, 150, 191, 192, 222, 227, 338, 351, 358, 359, 380], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "environ_info_init": 10, "environ": [10, 237, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 383, 384], "insert_environ_info": 10, "remove_environ_info_item": 10, "item": [10, 227, 339, 351, 355], "get_environ_info": 10, "search_straight_pattern": [10, 366], "input_pattern": [10, 366], "search": [10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 203, 206, 209, 212, 229, 338, 353, 362], "user": [10, 195, 223, 224, 227, 234, 235, 239, 319, 320, 338, 339, 342, 345, 351, 354, 358, 360, 362, 364, 375, 377, 380, 383, 387, 388, 395, 398], "pattern": [10, 11, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 203, 208, 220, 223, 225, 327, 363, 369, 372, 382, 389, 399], "intern": [10, 362, 375], "grpah": [10, 15, 191], "structur": [10, 223, 353, 358, 359, 361, 374, 378, 382, 389], "attent": [10, 234, 235, 327, 338, 348, 360, 366, 377], "chain": [10, 370, 371], "call": [10, 223, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 354, 358, 361, 362, 369, 370, 371, 375, 378, 379, 390], "must": [10, 200, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 356, 362, 366, 369, 370, 372, 379], "straight": 10, "sequenc": [10, 197, 205, 222, 234, 235, 351, 355, 358, 362, 366, 374, 383], "mean": [10, 11, 36, 193, 200, 203, 222, 234, 235, 239, 329, 350, 358, 359, 360, 361, 362, 366, 369, 370, 372, 376, 379, 383, 386, 389, 390], "otherwis": [10, 195, 348, 358, 361, 375, 383], "op_typ": [10, 15, 48, 191, 192, 358, 361, 362, 371], "element": [10, 222, 224, 229, 358, 366, 368, 372, 374, 377, 379, 383, 397], "could": [10, 222, 224, 327, 348, 358, 359, 360, 362, 363, 366, 373, 382, 383, 389, 390], "mandatori": 10, "while": [10, 223, 359, 362, 366, 372, 375, 378, 383, 390], "stand": [10, 358], "mybe": 10, "mul": [10, 358, 362, 366, 370], "addv2": [10, 26, 366], "below": [10, 203, 319, 338, 349, 350, 351, 352, 358, 359, 361, 363, 366, 369, 374, 376, 377, 378, 379, 387], "extractor": [10, 11, 193, 361, 363, 366], "length": [10, 203, 205, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 351, 362, 366, 370, 383, 390], "match": [10, 338, 352, 361, 362, 366, 374, 377], "result": [10, 195, 209, 216, 229, 319, 338, 339, 348, 351, 353, 358, 361, 362, 367, 370, 371, 372, 375, 376, 377, 378, 379, 381, 385, 389, 390], "24": [10, 338, 366, 367, 373, 381], "layer": [10, 203, 205, 222, 224, 227, 234, 235, 338, 360, 366, 370, 374, 377, 389, 397], "each": [10, 150, 195, 203, 209, 222, 223, 229, 234, 235, 239, 338, 350, 360, 361, 362, 369, 372, 374, 375, 376, 377, 378, 379, 382, 383, 384, 389], "still": [10, 224, 319, 366, 372, 390], "last": [10, 200, 203, 219, 222, 229, 234, 235, 362, 366, 369, 374, 375, 377, 390], "former": [10, 366], "search_pattern": [10, 366], "pattern_list": 10, "complet": [10, 358, 367, 372, 375, 378, 381], "represent": [10, 348, 355, 358, 362, 363], "its": [10, 130, 209, 222, 223, 229, 338, 348, 352, 358, 362, 363, 366, 374, 375, 376, 379, 382, 383, 385], "op_idx": 10, "howev": [10, 224, 361, 362, 366, 369, 373, 376, 379], "due": [10, 234, 362, 366, 369, 390], "few": [10, 195, 374], "complic": [10, 358, 366], "therefor": [10, 354, 369, 374, 377, 379, 390], "fist": 10, "repres": [10, 222, 223, 224, 225, 226, 227, 348, 360, 362, 366, 369, 371, 372, 375, 390], "main": [10, 197, 224, 229, 234, 235, 239, 362, 376, 383], "top": [10, 319, 350, 351, 374], "down": 10, "head": [10, 234, 235, 366, 371, 377, 378], "tail": [10, 366, 380], "left": [10, 222, 234, 235, 373, 377, 379], "bert_large_squad": 10, "pb": [10, 355], "squareddiffer": [10, 26, 366], "rsqrt": [10, 26, 366], "5": [10, 84, 85, 86, 87, 88, 162, 163, 164, 167, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 203, 204, 329, 338, 339, 350, 352, 358, 359, 360, 362, 365, 366, 367, 373, 381, 383], "8": [10, 229, 329, 338, 351, 353, 354, 356, 358, 360, 362, 364, 366, 367, 371, 372, 373, 379, 380, 381, 383, 390], "9": [10, 203, 239, 338, 350, 351, 355, 356, 358, 366, 367, 373, 381, 383, 389], "6": [10, 329, 338, 352, 353, 357, 358, 362, 366, 367, 371, 373, 380, 381, 390], "same": [10, 222, 235, 352, 354, 358, 359, 360, 362, 363, 366, 369, 372, 375, 376, 379, 382, 383, 384], "func": [10, 338, 361], "follow": [10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 197, 234, 235, 322, 325, 330, 336, 339, 348, 349, 350, 351, 352, 356, 358, 360, 361, 362, 363, 365, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 390], "frozen": [10, 359, 363], "you": [10, 197, 203, 215, 234, 235, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 349, 350, 351, 352, 354, 358, 359, 361, 362, 363, 366, 370, 371, 373, 380, 382, 383, 385, 386, 388, 389, 390, 391], "had": [10, 358], "better": [10, 209, 216, 229, 338, 358, 359, 360, 361, 369, 375, 376, 377, 378, 382, 386, 387, 390], "identifi": [10, 211, 372], "your": [10, 229, 239, 241, 319, 349, 350, 351, 355, 358, 359, 360, 361, 362, 370, 371, 383, 385, 388], "own": [10, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 358, 362, 363, 370, 376, 387], "casual": 10, "tf": [10, 216, 234, 338], "control": [10, 202, 203, 338, 358], "start": [10, 223, 234, 235, 360, 366, 384, 395], "mostli": [10, 366], "longest": [10, 366], "path": [10, 195, 203, 209, 211, 212, 214, 215, 224, 227, 229, 238, 239, 350, 351, 355, 359, 360, 361, 363, 380, 382, 383], "sometim": [10, 362, 390], "connect": [10, 219, 389], "But": [10, 359, 369, 388], "don": [10, 203, 222, 234, 235, 365, 370], "t": [10, 203, 222, 234, 235, 327, 329, 338, 350, 352, 365, 369, 370, 372, 377, 378, 379, 383, 389], "need": [10, 109, 203, 222, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 350, 351, 352, 358, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 383, 389, 390, 391], "least": [10, 222, 224, 376], "doesn": [10, 338, 370, 379, 383], "exist": [10, 211, 239, 338, 355, 358, 388], "relationship": 10, "sever": [10, 226, 350, 358, 363, 366, 369, 383, 390], "split": [10, 11, 36, 193, 339, 350, 361, 369, 373, 376], "representtaion": 10, "two": [10, 222, 223, 226, 229, 352, 358, 361, 362, 364, 365, 370, 371, 373, 375, 376, 377, 378, 379, 387, 388, 389, 390], "idx": [10, 329, 371], "some": [10, 130, 235, 351, 358, 359, 360, 361, 362, 365, 366, 370, 371, 375, 379, 390], "outsid": [10, 234, 235, 362, 366], "give": [10, 358, 362, 369], "just": [10, 235, 351, 358, 359, 360, 361, 362, 363, 366, 371, 379, 382, 386], "empti": [10, 26, 362, 366, 371, 384], "algorithm": [10, 48, 133, 203, 212, 329, 338, 350, 361, 362, 365, 366, 369, 370, 376, 383, 389, 390], "kind": [10, 90, 328, 365, 376, 383], "beaus": 10, "make": [10, 48, 130, 222, 223, 226, 229, 339, 348, 349, 357, 358, 359, 368, 369, 370, 371, 372, 374, 375, 376, 377, 380, 383], "sure": [10, 130, 222, 223, 226, 339, 358, 372, 383], "whole": [10, 200, 209, 338, 353, 360, 361, 374, 375, 376, 378, 380], "so": [10, 211, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 352, 357, 358, 361, 362, 365, 366, 370, 372, 373, 374, 375, 376, 378, 379, 380, 383, 386, 387, 389, 390], "check": [10, 15, 109, 203, 222, 223, 227, 229, 345, 349, 351, 358, 361, 362, 366, 371, 398], "symmetr": [10, 366, 375, 383, 390], "consecut": [10, 373, 379], "y": [10, 150, 371], "shape": [10, 11, 36, 73, 193, 222, 234, 235, 329, 338, 351, 359, 360, 361, 365, 369, 375, 377, 383], "df": [10, 366], "duplic": 10, "would": [10, 222, 358, 362, 363, 366, 380], "perform": [10, 203, 209, 212, 223, 225, 229, 234, 235, 236, 338, 339, 343, 351, 352, 354, 355, 359, 360, 361, 364, 369, 372, 373, 374, 375, 376, 377, 378, 379, 383, 386, 387, 389, 390, 396], "befor": [10, 203, 219, 222, 223, 224, 225, 226, 229, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 349, 352, 354, 358, 359, 361, 362, 363, 366, 370, 371, 372, 373, 375, 376, 378, 383, 390], "splice": 10, "de": 10, "total": [10, 203, 205, 222, 223, 226, 234, 338, 339, 350, 362, 366, 372, 379, 380], "step": [10, 203, 219, 222, 223, 224, 225, 226, 229, 357, 358, 360, 362, 363, 364, 365, 366, 370, 375, 377, 378, 383], "c": [10, 329, 330, 351, 356, 357, 358, 359, 361, 366, 367, 372, 374, 381, 383], "d": [10, 338, 350, 352, 369, 377], "e": [10, 150, 195, 203, 209, 222, 229, 338, 348, 351, 352, 361, 370, 371, 375, 376, 377, 383, 384], "f": [10, 329, 352, 365, 380, 390], "c1": 10, "d1": [10, 383], "c2": 10, "d2": 10, "c3": [10, 380], "d3": [10, 380], "now": [10, 239, 357, 358, 359, 361, 362, 363, 370, 371, 378, 383, 388], "part": [10, 195, 223, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 362, 365, 366, 378, 379], "As": [10, 352, 358, 360, 362, 363, 373, 377, 379], "appli": [10, 203, 222, 223, 348, 353, 355, 370, 371, 375, 376, 377, 379, 383, 389, 390], "everi": [10, 222, 223, 224, 358, 369, 383], "right": [10, 234, 235, 348, 373, 377, 379, 388], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 328, 358, 359, 370, 371], "ordereddict": [10, 48, 358], "construct": [10, 48, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 370, 371], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 235, 351, 352, 355, 358, 362, 389, 390], "specif": [10, 211, 212, 227, 328, 330, 338, 348, 352, 356, 358, 361, 362, 369, 374, 375, 376, 382, 383, 386, 387, 388, 390], "ccontain": 10, "insid": [10, 362, 365, 374, 376], "been": [10, 222, 223, 234, 235, 349, 352, 371, 375, 388], "pattern_map": [10, 358, 362], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 216, 229, 239, 319, 338, 351, 360, 362, 399], "mapping_config": 10, "first": [10, 203, 229, 350, 357, 358, 361, 362, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 390], "second": [10, 203, 234, 235, 339, 357, 362, 364, 365, 366, 373, 374, 377, 379, 380, 383, 390], "third": [10, 362, 374, 379, 385], "requir": [10, 130, 200, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 355, 362, 364, 366, 367, 369, 372, 373, 375, 383, 390], "old": 10, "reshap": [10, 11, 36, 53, 149, 166, 185, 186, 193, 222, 358, 359, 360, 365], "paddingsequ": [10, 51, 132, 359], "search_mod": [10, 358, 362], "embed": [10, 234, 235, 359, 362, 366, 370], "m": [10, 222, 329, 351, 352, 353, 360, 361, 367, 369, 372, 373, 374, 375, 376, 378, 379, 381, 383], "fusion": [10, 90, 130, 365, 366, 370, 371, 376, 399], "about": [10, 219, 348, 351, 358, 362, 365, 367, 371, 379, 381], "in_pattern": 10, "input_id": [10, 234, 235, 355, 359], "segment_id": [10, 355, 359], "input_mask": [10, 223, 355, 359], "out_pattern": 10, "th": [10, 362], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 362], "where": [10, 26, 222, 234, 235, 338, 352, 362, 369, 371, 374, 375, 377, 379, 383, 384], "go": [10, 372], "mayb": [10, 361, 379], "happen": [10, 360, 379], "sepcial": 10, "biasadd": [10, 20, 362, 366], "bia": [10, 15, 203, 329, 360, 383], "unfix": 10, "locat": [10, 73, 358, 359, 362, 366, 379, 383, 391], "other": [10, 63, 109, 211, 329, 348, 349, 350, 351, 358, 359, 360, 361, 362, 366, 367, 375, 378, 379, 381, 383, 385, 390], "write": [10, 350, 358, 366, 375, 376, 378], "note": [10, 222, 224, 339, 353, 356, 358, 359, 360, 361, 362, 364, 365, 366, 370, 371, 377, 378, 379, 383, 390], "That": [10, 378, 379], "too": [10, 358, 369, 370, 375], "decompos": [10, 358], "list2str": [10, 358], "src_perm": 10, "emit": [10, 362], "ret": [10, 366, 380], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 219, 223, 225, 226], "lazi": 10, "till": 10, "later": [10, 358, 366], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 358, 390], "avail": [10, 322, 325, 330, 336, 351, 374], "fwk": 10, "na": [10, 203, 208, 229, 350, 368], "set_environ_var": 10, "env": [10, 364], "var": [10, 150, 329], "kv": 10, "del_environ_var": 10, "delet": [10, 211, 389], "assert": [11, 36, 193, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338], "batch_matmul": [11, 36, 193], "batch_matmul_v2": [11, 36, 193], "bias_add": [11, 15, 36, 193], "cast": [11, 36, 193], "concat": [11, 36, 193, 358], "conv": [11, 36, 193, 203, 222, 360, 361, 371], "co": [11, 36, 193, 197, 211, 351], "empty_op": [11, 36, 193, 358], "expand_dim": [11, 36, 193], "fused_batch_matmul_v2": [11, 36, 193], "fused_batch_norm_v3": [11, 36, 193], "fused_gemm": [11, 36, 193], "fused_matmul": [11, 36, 193], "gather": [11, 36, 193, 222, 229, 234, 235, 327, 358, 370], "gather_el": [11, 36, 193, 358], "gelu": [11, 36, 101, 193, 358, 365, 368, 371, 383], "gemm": [11, 36, 193, 203, 354, 369, 372, 378, 383, 397], "iterator_get_next": [11, 36, 193], "iterator_v2": [11, 36, 193, 358], "layer_norm": [11, 36, 101, 193, 358], "log_softmax": [11, 36, 193], "map_and_batch_dataset": [11, 36, 193, 358], "matmul": [11, 15, 26, 36, 109, 193, 203, 222, 354, 360, 362, 363, 366, 368, 378, 383, 397], "mkl_layer_norm": [11, 36, 193], "model_dataset": [11, 36, 193], "one_hot": [11, 36, 193], "onnx_input": [11, 36, 193], "optimize_dataset": [11, 36, 193, 358], "padding_sequ": [11, 36, 101, 193, 359], "placehold": [11, 36, 193], "pos_emb": [11, 36, 193], "pow": [11, 36, 193, 358, 362], "quantize_linear": [11, 36, 193, 358], "quantize_v2": [11, 36, 193], "quantized_fused_matmul_and_dequant": [11, 36, 193], "quantized_matmul_with_bias_and_dequant": [11, 36, 193], "reduce_mean": [11, 36, 193, 358], "reduce_sum": [11, 36, 193], "rsub": [11, 36, 193], "scatter_el": [11, 36, 193], "sin": [11, 36, 193], "size": [11, 36, 193, 195, 202, 203, 222, 229, 234, 235, 338, 348, 351, 355, 359, 361, 369, 372, 374, 376, 377, 378, 383, 390], "softmax": [11, 36, 193, 234, 327, 338, 352, 368, 377, 378], "squeez": [11, 36, 193], "strided_slic": [11, 36, 193], "top_k": [11, 36, 193, 239], "unpack": [11, 36, 193, 229, 358], "unsqueez": [11, 36, 193, 358], "view": [11, 36, 193, 349, 360, 369, 391], "sub_graph": [11, 193, 358, 361], "innerproductreshapefus": [11, 97, 101, 193], "add_cls_token": [11, 101, 193], "add_embed": [11, 101, 193], "arangewithreciproc": [11, 101, 193], "attentionblock_attentionmaskaddreshap": [11, 101, 193], "attentionblock_constantofshapewithmul": [11, 101, 193], "attentionblock_qkvprereshap": [11, 101, 193], "attentionblock_qkvreshap": [11, 101, 193], "attentionblock_resize2gath": [11, 101, 193], "attentionblock_weightreshapeto4d": [11, 101, 193], "attention_mask_length_adaptive_keep_indic": [11, 101, 193], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 101, 193], "attention_reshap": [11, 101, 193], "cast_to": [11, 101, 193], "collect_quant_info": [11, 101, 193], "conv_reshap": [11, 101, 193], "decoder_attn_reshap": [11, 101, 193], "einsumwitharang": [11, 101, 193], "embeddingbag": [11, 26, 101, 193], "generate_sequ": [11, 101, 193], "innerproductwithbiasgelu": [11, 101, 193], "innerproductwithslic": [11, 101, 193], "innerproductwithswish": [11, 101, 193], "input_fil": [11, 101, 193], "insert_bf16_nod": [11, 101, 193], "insert_quant_nod": [11, 101, 193], "int8_bf16_mixed_precision_check": [11, 101, 193], "interact_featur": [11, 101, 193], "last_layer_shap": [11, 101, 193], "layer_norm_with_reduce_mean": [11, 101, 193, 358], "layer_norm_with_transpos": [11, 101, 193], "llama_embed": [11, 101, 193], "llama_matmulwithtranspos": [11, 101, 193], "llama_postprocess": [11, 101, 193], "llama_rotary_pos_emb": [11, 101, 193], "lower_all_tupl": [11, 101, 193], "matmul_with_bia": [11, 101, 193], "matmul_with_bias_add": [11, 101, 193], "matmul_with_bias_gelu": [11, 101, 193], "matmul_with_bias_relu": [11, 101, 193], "matmul_with_bias_sigmoid": [11, 101, 193], "matmul_with_bias_tanh": [11, 101, 193], "matmul_with_bias_unsqueez": [11, 101, 193], "matmul_with_transpos": [11, 101, 193], "merged_embeddingbag": [11, 101, 193], "operator_adaptor": [11, 101, 193], "output_data": [11, 101, 193, 359], "position_embed": [11, 101, 193], "position_embeddings_v1": [11, 101, 193], "qkv_merg": [11, 101, 193], "qkv_reshap": [11, 101, 193], "quantize_fus": [11, 101, 193], "quantized_graph_dtype_refactor": [11, 101, 193], "remove_constant_op": [11, 101, 193], "remove_last_view": [11, 101, 193], "remove_rang": [11, 101, 193], "removeslic": [11, 101, 193], "reshape_after_restore_hidden_st": [11, 101, 193], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 101, 193], "reshape_before_restore_hidden_st": [11, 101, 193], "reshape_fus": [11, 101, 193], "resnetblock_instancenormreshapefromconv": [11, 101, 193], "resnetblock_instancenormreshapefromdiv": [11, 101, 193], "restore_hidden_states_in_length_adaptive_update_indic": [11, 101, 193], "rms_norm": [11, 101, 193], "rotary_pos_emb": [11, 101, 193], "slicemask": [11, 101, 193], "stablediffusion_explicitnhwctranspos": [11, 101, 193], "stablediffusion_mhareshap": [11, 101, 193], "stablediffusion_reshapefus": [11, 101, 193], "stablediffusion_bf16convert": [11, 101, 193], "start_end_logit": [11, 101, 193], "subgraph_match": [11, 101, 193, 361], "textencdoer_word_embed": [11, 101, 193], "textencoder_attentionmaskaddreshap": [11, 101, 193], "textencoder_attentionreshap": [11, 101, 193], "textencoder_kvreshap": [11, 101, 193], "textencoder_mulreshap": [11, 101, 193], "textencoder_qreshap": [11, 101, 193], "textencoder_softmaxreshap": [11, 101, 193], "textencoder_causal_attention_mask": [11, 101, 193], "token_type_embed": [11, 101, 193, 358], "token_type_embeddings_v1": [11, 101, 193, 358], "torch_embed": [11, 101, 193], "torch_ip_insert_bia": [11, 101, 193], "torchinsertbf16nod": [11, 101, 193], "torchpaddingsqu": [11, 101, 193], "transformer2dmodel_attentionmaskaddreshap": [11, 101, 193], "transformer2dmodel_constantofshapewithmul": [11, 101, 193], "transformer2dmodel_ffnslic": [11, 101, 193], "transformer2dmodel_ffnslice_1": [11, 101, 193], "transformer2dmodel_qkvprereshap": [11, 101, 193], "transformer2dmodel_qkvreshap": [11, 101, 193], "transformer2dmodel_qkvreshape4d": [11, 101, 193], "transformer2dmodel_encoderhiddenstatesreshap": [11, 101, 193], "transformer2dmodel_getsamplebatch": [11, 101, 193], "transformer2dmodel_instancenormreshapefromadd": [11, 101, 193], "transformer2dmodel_instancenormreshapefromconcat": [11, 101, 193], "transformer2dmodel_sampleslic": [11, 101, 193], "transformer2dmodel_upblockres": [11, 101, 193], "transpose_batch_matmul": [11, 101, 193, 358], "word_embed": [11, 101, 193, 359], "graph_util": [11, 193, 358, 362, 366], "logger": [11, 193, 208, 220, 380], "onnx_util": [11, 193], "optim": [11, 193, 319, 336, 338, 339, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 370, 371, 372, 374, 386, 387, 388, 389, 390], "tf_util": [11, 193], "torch_util": [11, 193], "load": [13, 206, 209, 216, 217, 229, 234, 235, 351, 358, 359, 360, 361, 363, 369, 371, 372, 373, 374, 379], "frontend": [13, 374], "get_logg": 14, "log": [14, 351, 359, 365], "msg": 14, "error": [14, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 359, 365, 380], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 192], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 191, 192], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 191, 359, 365], "graph_nodes_dict": [15, 191], "Be": [15, 191], "class": [15, 191, 195, 217, 329, 330, 339, 350, 352, 358, 365, 370, 371], "cerat": 15, "output_nam": [15, 359], "ouput": 15, "param": [15, 191, 229, 370, 371], "node_names_detail": [15, 191], "is_supported_onnx_graph": [15, 266], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 203, 217, 229, 351, 353, 360, 361, 363, 368, 371, 376, 377, 383, 390, 399], "int32": [15, 351, 359], "matric": [15, 372, 377, 378], "scale": [15, 229, 329, 370, 375, 378, 390], "arrai": [15, 359], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 191], "nodes_dict": [15, 47, 48, 191, 192], "engine_graph": [15, 47, 48, 191, 192], "tf_dtype": [15, 191, 192], "set_attr": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 358], "batchmatmul": 18, "batchmatmulv2": 19, "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 351, 354, 356, 358, 364], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 133, 219, 222, 223, 225, 226, 369, 370, 371, 372, 374, 375, 376, 377, 379, 399], "multiheadattenion": 26, "binaryadd": [26, 370], "constantofshap": 26, "dequantizelinear": [26, 363], "dequant": [26, 370, 371, 375, 383], "erf": [26, 365], "expand": [26, 234, 235], "fill": [26, 362, 377], "flatmapdataset": 26, "ident": [26, 222, 348, 352], "makeiter": 26, "matmulwithbiasadd": [26, 121], "matmulwithbiasgelu": [26, 122], "matmulwithbiastanh": [26, 125], "matmulwithbia": [26, 120], "qlinearmatmul": [26, 363], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 358, 362, 377], "squar": [26, 234, 235], "stopgradi": 26, "tanh": [26, 365, 371, 383], "tensorslicedataset": 26, "transposebatchmatmul": [26, 189, 358], "relu": [26, 371, 383], "matmulwithbiasrelu": [26, 123], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 229, 329, 338, 358, 370, 372, 377], "sigmoid": 26, "matmulwithbiassigmoid": [26, 124], "flatten": 26, "mergedembeddingbag": [26, 128], "convolut": [26, 352, 361], "expandindic": 26, "tile": [26, 63, 369, 373, 375, 377, 378, 379, 383], "opani": 26, "sequencelength": [26, 367], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 372, 384], "stack": [26, 378], "constant": [26, 140, 229], "listconstruct": 26, "latrang": 26, "masked_fil": 26, "floor_divid": 26, "max": [26, 203, 205, 229, 351, 367, 370, 372, 374, 379, 381, 390], "listunpack": 26, "silu": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 358], "gatherel": [33, 358], "iteratorgetnext": 37, "iteratorv2": [38, 358], "logsoftmax": [40, 327], "mapandbatchdataset": [41, 358], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 358], "operator_typ": [48, 358], "subclass": [48, 133, 222, 223, 226, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327], "cl": [48, 133, 222, 223, 225, 226, 338], "registr": [48, 133, 358], "optimizedataset": [49, 358], "packagepositionembed": 53, "quantizelinear": [55, 358, 363], "quantiz": [55, 203, 208, 211, 215, 216, 229, 319, 351, 354, 370, 371, 375, 376, 378, 383, 386, 394, 399], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 358, 362], "reducesum": 60, "aten": 63, "self": [63, 203, 234, 235, 239, 338, 350, 358, 360], "scalar": [63, 370], "alpha": [63, 219, 225, 329, 376, 383], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 371], "topk": 74, "input_shap": [79, 360, 361, 383], "weight_optim": 79, "weight": [79, 203, 219, 222, 223, 225, 226, 234, 235, 329, 338, 352, 354, 360, 361, 363, 369, 372, 373, 374, 378, 379, 383, 386, 387, 389, 390], "fuse": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 363, 370, 371], "acceler": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 343, 351, 353, 354, 363, 370, 371, 375, 377, 390, 396], "strategi": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 203, 216, 372], "addclstoken": [81, 90], "addembed": 82, "stabl": [84, 85, 86, 87, 88, 150, 162, 163, 164, 167, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 319, 351, 356, 375], "diffusionv1": [84, 85, 86, 87, 88, 163, 164, 167, 168, 169, 176, 177, 180, 181, 182, 188], "attentionmasklengthadaptiveexpandindic": 90, "attentionoutputlayernormlengthadaptiveexpandindic": 91, "attentionreshap": 92, "castto": 93, "collectquantinfo": 94, "convreshap": 95, "decoderattnreshap": 96, "generatesequ": 100, "inputdata": [105, 358], "inputfil": 106, "insertbf16nod": 107, "insertquantnod": 108, "quantizedgraphdtyperefactor": [109, 139], "int8bf16mixedprecisioncheck": 109, "inferenc": 109, "under": [109, 229, 351, 358, 359, 360, 363, 375, 376, 383, 385], "in8": 109, "bf16": [109, 203, 229, 351, 353, 363, 368, 371, 373, 375, 378, 383], "mix": [109, 361], "precis": [109, 229, 354, 363, 387, 390, 399], "And": [109, 360, 361, 362, 363, 366, 370], "u8": [109, 363, 365, 371, 378, 383], "s8": [109, 363, 370, 371, 375, 383], "fp32": [109, 203, 229, 351, 353, 359, 360, 361, 363, 365, 370, 371, 373, 374, 376, 378, 383, 388, 390], "interactfeatur": 110, "lastlayershap": 111, "layernormwithreducemean": [113, 358], "layernormwithtranspos": 114, "llamaembed": 115, "llamamatmulwithtranspos": 116, "llamapostprocess": 117, "roraryposemb": [118, 153], "llamaroraryposemb": 118, "loweralltupl": 119, "matmulwithbiasunsqueez": 126, "matmulwithtranspos": 127, "multiheadattent": 129, "bass": [129, 133, 156], "operatoradaptor": 130, "sweep": 130, "receiv": [130, 211, 362, 366], "outputdata": [131, 358], "pattern_registri": [133, 358], "pattern_typ": [133, 358], "positionembed": 134, "positionembeddingsv1": 135, "qkvmerg": 136, "qkvreshap": 137, "qunatizefus": 138, "quantizedgraphdtypecheck": 139, "removeconstantop": 140, "removelastview": 141, "removerang": 142, "reshapeafterrestorehiddenst": 144, "reshapebeforeandafterattentionoutlayernormgatherel": 145, "reshapebeforerestorehiddenst": 146, "reshapefus": 147, "qkv": [149, 166, 185, 186, 361, 363], "groupnorm": [150, 327], "channel": [150, 222, 370, 374, 375, 379, 383, 389], "separ": [150, 348, 366, 379, 385], "num_group": 150, "group": [150, 225, 353, 358, 366, 372, 377, 379, 389], "num_channel": 150, "epsilon": [150, 358], "gamma": 150, "beta": [150, 219, 329, 376, 383], "http": [150, 197, 200, 219, 222, 224, 234, 239, 241, 350, 351, 356, 357, 359, 365, 385, 391], "pytorch": [150, 195, 203, 206, 209, 211, 215, 222, 224, 229, 234, 235, 237, 336, 350, 351, 354, 356, 364, 382, 388, 389, 390], "org": [150, 200, 219, 234, 356], "nn": [150, 202, 229, 374], "html": [150, 365], "restorehiddenstatesinlengthadapt": 151, "rmsnorm": 152, "explicitnhwctransposeforconv": 155, "startendlogit": 160, "matcher": [161, 338, 363], "subgraphmatch": [161, 361], "textencoder_wordembed": 162, "textencoderv1": [162, 178, 179, 183, 184, 187], "textencoder_casualattentionmask": 169, "tokentypeembed": [170, 358], "tokentypeembeddingsv1": [171, 358], "torchembed": 172, "torchinnerproductinsertbia": 173, "torchpaddingsequ": 175, "transformer2dmodel_ffninputslic": 178, "transformer2dmodel_ffninputslice_1": 179, "transformer2dmodel_qkvreshapeto4d": 182, "wordembed": 190, "create_tf_nod": 191, "when": [191, 203, 222, 223, 227, 229, 234, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 348, 353, 358, 359, 361, 362, 365, 366, 369, 371, 372, 374, 375, 376, 378, 379, 383, 386, 387, 390], "tendorflow": 191, "get_tensor_dest_op": 191, "someth": 191, "store": [191, 203, 206, 209, 211, 219, 222, 223, 225, 226, 338, 358, 362, 363, 366, 369, 370, 371, 372, 373, 376, 377, 379], "dest_op_nam": 191, "tf_extract_oper": 191, "tf_dtype_id": 191, "deal": [191, 338, 360], "multipl": [191, 223, 230, 234, 235, 239, 339, 353, 358, 360, 371, 372, 374, 375, 376, 377, 378, 379, 383, 386, 387], "indetermin": 191, "torch_extract_oper": 192, "compil": [193, 322, 355, 357, 358, 359, 361, 362, 364, 366, 399], "model_arg": 195, "task": [195, 217, 235, 238, 338, 350, 351, 352, 353, 364, 371, 377, 380, 388], "new_fewshot": 195, "batch_siz": [195, 197, 202, 203, 229, 234, 235, 238, 339, 351, 359, 360, 364, 377, 383], "devic": [195, 197, 206, 350, 352, 359, 361, 388], "cpu": [195, 203, 319, 328, 339, 350, 351, 355, 356, 359, 365, 367, 369, 371, 380, 381, 388], "no_cach": 195, "limit": [195, 203, 352, 374, 378], "bootstrap_it": 195, "100000": 195, "description_dict": 195, "check_integr": 195, "decontamination_ngrams_path": 195, "seed": [195, 203, 338], "1234": 195, "user_model": 195, "instanti": [195, 211, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "union": [195, 229, 329], "lm": 195, "get_model": 195, "create_from_arg_str": 195, "ignor": [195, 229, 234, 235, 358], "taken": [195, 234, 235], "eval_harness_nam": 195, "__name__": 195, "num_fewshot": 195, "shot": [195, 219, 226], "context": [195, 200], "batch": [195, 202, 229, 329, 351, 359, 374, 375, 377, 384], "g": [195, 203, 209, 222, 229, 338, 352, 370, 371, 375, 376, 384], "cuda": [195, 197, 350], "run": [195, 215, 223, 227, 229, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 350, 383, 384, 390], "whether": [195, 203, 211, 222, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 345, 358, 360, 366, 383, 398], "cach": [195, 211, 327, 365, 372, 375, 376, 377, 383], "per": [195, 222, 360, 367, 370, 373, 375, 381, 383, 384, 389], "test": [195, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 349, 351, 353, 356, 367, 381, 383, 384], "iter": [195, 203, 209, 223, 226, 229, 338, 339, 351, 359, 361, 365, 370, 374, 377, 378, 383, 384], "bootstrap": 195, "statist": 195, "dictionari": [195, 212, 229], "task_nam": [195, 363, 364], "relev": [195, 351], "suit": 195, "provid": [195, 202, 203, 206, 211, 215, 216, 229, 234, 235, 239, 241, 319, 338, 339, 351, 353, 354, 355, 358, 368, 371, 375, 376, 378, 386, 390], "autocausallm": 197, "pretrain": [197, 234, 235, 358], "token": [197, 215, 234, 235, 239, 339, 350, 351, 353, 355, 363, 388], "subfold": 197, "revis": [197, 211], "max_gen_tok": 197, "256": [197, 338, 360, 381, 383], "max_length": [197, 203, 339, 351], "add_special_token": 197, "use_acceler": 197, "device_map_opt": 197, "auto": [197, 203, 209, 216, 350, 360, 365, 371], "max_memory_per_gpu": 197, "max_cpu_memori": 197, "offload_fold": 197, "offload": 197, "causal": [197, 235, 350], "languag": [197, 234, 235, 319, 348, 350, 351, 353, 388], "find": [197, 338, 358, 361, 365, 366, 374, 389], "hf": 197, "transform": [197, 203, 216, 217, 229, 234, 235, 239, 338, 339, 343, 349, 350, 352, 356, 357, 358, 359, 370, 371, 376, 377, 378, 379, 385, 387, 388, 389, 390, 391, 396], "model_doc": 197, "automodelforcausallm": 197, "autoseq2seqlm": 197, "seq2seq": [197, 229, 234, 235], "automodelforseq2seqlm": 197, "multitokeneoscriteria": 197, "pretrainedtoken": 197, "initial_decoder_input_length": 197, "criteria": [197, 208, 220, 387], "stop": [197, 203, 239, 350, 390], "multi": [197, 359, 360, 361], "lambada": [199, 339], "dataset": [200, 216, 229, 238, 239, 339, 350, 353, 386, 390], "word": [200, 234, 235, 353, 379], "predict": [200, 209, 229, 234, 235, 338, 350, 351, 352], "broad": 200, "discours": 200, "arxiv": [200, 219, 234], "pdf": 200, "1606": 200, "06031": 200, "capabl": [200, 339, 376, 379], "text": [200, 224, 239, 319, 339, 351, 353, 364, 371, 380, 385, 388], "understand": [200, 372, 375], "collect": [200, 203, 339, 358, 360, 390], "narr": 200, "passag": 200, "share": [200, 229, 372], "characterist": [200, 348], "human": 200, "subject": [200, 385], "abl": [200, 377, 390], "guess": 200, "expos": [200, 370, 371], "sentenc": [200, 234, 235, 239, 339, 350, 351], "preced": 200, "target": [200, 202, 203, 222, 226, 227, 229, 338, 360, 379, 389], "To": [200, 222, 226, 234, 235, 338, 349, 358, 372, 375, 377, 379, 383, 384], "succe": 200, "cannot": [200, 235, 369, 375, 379, 384], "simpli": 200, "reli": 200, "local": [200, 211, 222, 223, 229, 358, 369, 372, 375], "keep": [200, 227, 362], "track": 200, "inform": [200, 216, 219, 222, 223, 224, 225, 226, 318, 322, 325, 330, 336, 348, 349, 351, 352, 359, 360, 367, 371, 374, 381, 382, 383, 389, 390, 391, 395], "broader": 200, "homepag": 200, "zenodo": 200, "2630551": 200, "x4xzn5nkjui": 200, "lambadastandard": 200, "standard": [200, 211], "lambadaopenai": 200, "openai": 200, "version": [200, 201, 211, 229, 348, 351, 356, 361, 367, 381, 385], "gpt": [200, 319, 350, 351, 353], "github": [200, 222, 224, 239, 241, 349, 350, 351, 356, 357, 359, 365, 385, 391], "com": [200, 222, 224, 239, 241, 350, 351, 356, 357, 359, 367, 381, 385, 391], "issu": [200, 318, 338, 345, 348, 349, 351, 376, 390, 398], "131": [200, 367], "issuecom": 200, "497136199": 200, "api_doc_exampl": 201, "pytorchbenchmark": 202, "executorbenchmark": 202, "refactor_batch_s": 202, "old_batch_s": 202, "default": [202, 203, 211, 215, 217, 227, 229, 234, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 350, 351, 352, 358, 361, 367, 371, 375, 379, 380, 381, 383, 386, 387, 389, 390], "batched_valu": 202, "get_example_input": [202, 339], "dataload": [202, 215, 229, 238, 339, 351], "batched_data": 202, "preprocess_model": 202, "example_input": [202, 339], "additional_cmd": 202, "jit": [202, 203, 229, 326, 327, 328, 329, 339, 343, 368, 370, 371, 374, 378, 383, 396], "trace": [202, 203, 339, 360], "benchmarkconfig": [202, 203, 339], "process": [202, 203, 209, 212, 222, 223, 224, 226, 227, 229, 239, 338, 351, 353, 358, 359, 361, 362, 366, 369, 370, 372, 375, 376, 379, 389, 390], "raw_cmd": 202, "preprocess": [202, 203, 350, 351, 378], "scriptmodul": 202, "model_name_or_path": [202, 211, 229, 239, 339, 350], "build": [202, 212, 216, 229, 338, 351, 357, 369, 375, 376, 380, 387], "inc": [203, 211, 215, 216, 229, 364], "nncf": 203, "check_valu": 203, "src": [203, 329, 359, 371, 379, 383], "supported_typ": 203, "supported_valu": 203, "given": [203, 211, 222, 223, 234, 235, 350, 366, 371, 374, 377, 379, 389], "datatyp": [203, 353, 354], "uint8": [203, 377, 390], "_datatyp": 203, "dynamiclengthconfig": [203, 229, 355], "length_config": [203, 234, 235, 355], "const_rat": 203, "num_sandwich": 203, "length_drop_ratio_bound": [203, 205], "layer_dropout_prob": [203, 205], "layer_dropout_bound": [203, 205], "dynamic_train": 203, "load_store_fil": 203, "evo_it": 203, "30": [203, 373], "population_s": 203, "20": [203, 339, 351, 356, 359, 364, 367, 373, 380, 381], "mutation_s": 203, "mutation_prob": [203, 206], "crossover_s": 203, "num_cpu": 203, "48": [203, 367, 381], "distributed_world_s": 203, "latency_constraint": 203, "evo_eval_metr": 203, "eval_f1": [203, 206, 355, 386, 390], "dynam": [203, 208, 229, 365, 368, 370, 374, 376, 383, 397], "adapt": [203, 319, 348, 351], "maximum": [203, 222, 223, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 367, 381, 390], "drop": [203, 205, 353, 376, 379, 386], "ratio": [203, 205, 206, 222, 223, 224, 226, 352, 381, 383, 386, 387, 389], "sandwich": 203, "num": [203, 338, 350, 360, 369, 371, 377], "train": [203, 209, 212, 215, 216, 223, 224, 229, 319, 338, 350, 351, 352, 355, 382, 389], "dropout": [203, 205], "probabl": [203, 205, 338, 376], "evolut": [203, 207, 208, 353], "popul": [203, 206], "mutat": [203, 206], "crossov": [203, 206], "distribut": [203, 238, 338, 352, 376, 390, 391], "world": 203, "latenc": [203, 338, 339, 351, 353, 360, 367, 372, 390], "constraint": [203, 206, 390], "metric": [203, 208, 209, 212, 216, 229, 231, 338, 351, 355, 394], "quantizationconfig": [203, 215, 216, 229, 351, 355], "approach": [203, 212, 214, 350, 352, 353, 355, 371, 372], "posttrainingstat": [203, 353, 354, 355, 390], "basic": [203, 212, 222, 235, 238, 351, 356, 365, 375], "timeout": [203, 390], "max_trial": [203, 338, 390], "config_fil": 203, "sampling_s": 203, "use_bf16": 203, "recip": [203, 229, 350, 361, 387], "earli": [203, 390], "combin": [203, 229, 338, 361, 366, 370, 371, 390], "decid": [203, 374, 390], "exit": [203, 390], "time": [203, 360, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 390], "evalu": [203, 206, 209, 212, 215, 216, 222, 223, 224, 229, 338, 352, 360, 377, 386, 387, 389, 390], "notraineroptim": [203, 215, 352, 389, 390], "guarante": [203, 390], "how": [203, 205, 219, 222, 223, 229, 318, 349, 358, 359, 360, 363, 364, 366, 371, 372, 373, 383, 386, 389], "mani": [203, 205, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 360, 362, 370, 372, 373, 376, 378, 383], "sampl": [203, 205, 229, 239, 338, 339, 350, 351, 355, 367, 377, 390], "smooth_quant": 203, "smooth": 203, "smooth_quant_arg": 203, "fast_bias_correct": 203, "fast": [203, 319, 351, 355], "correct": [203, 227, 348, 362, 366, 377], "weight_correct": 203, "gemm_to_matmul": 203, "graph_optimization_level": 203, "disable_al": 203, "enable_bas": 203, "enable_extend": 203, "enable_al": 203, "first_conv_or_matmul_quant": 203, "last_conv_or_matmul_quant": 203, "pre_post_process_quant": 203, "postprocess": 203, "add_qdq_pair_to_weight": 203, "qdq": [203, 229, 354, 363], "vaild": 203, "onnxrt_trt_ep": 203, "optypes_to_exclude_output_qu": 203, "optyp": 203, "dedicated_qdq_pair": 203, "dedic": 203, "pruningconfig": [203, 355], "epoch": [203, 223, 224, 389], "epoch_rang": [203, 218], "initial_sparsity_ratio": [203, 218], "target_sparsity_ratio": [203, 218, 222, 223, 355, 389], "97": [203, 218, 381, 389], "pruner_config": [203, 355, 389], "pruner": [203, 208, 218, 219, 220, 224, 229, 352, 389], "prune": [203, 208, 215, 216, 219, 220, 222, 223, 225, 226, 227, 229, 234, 235, 319, 351, 394], "goal": [203, 229, 389], "behavior": [203, 229, 348, 349, 352, 369, 370, 375, 389, 390], "nlp": [203, 224, 229, 239, 241, 319, 350, 351, 353, 355, 359, 389, 390], "wil": 203, "basicmagnitud": [203, 218, 353, 355, 389], "typel": 203, "init_prune_config": 203, "init": [203, 209, 215, 216, 220, 237, 238, 338, 350, 351, 356, 357, 359, 371], "distillationconfig": [203, 229, 355], "criterion": [203, 204, 216, 219, 222, 223, 232, 355, 386, 390], "distil": [203, 208, 209, 215, 216, 229, 350, 351, 364, 394], "inc_config": 203, "knowledgeloss": [203, 204, 352], "tfdistillationconfig": [203, 338], "loss_typ": [203, 204, 338, 352], "loss_weight": [203, 338], "train_step": [203, 338], "temperatur": [203, 204, 239, 338, 350, 352], "loss": [203, 229, 234, 235, 338, 350, 352, 390], "knowledgedistillationloss": [203, 352], "flashdistillationconfig": 203, "block_nam": [203, 338], "layer_mappings_for_knowledge_transf": [203, 338], "add_origin_loss": [203, 204, 338, 352], "flash": [203, 209, 229], "autodistillationconfig": [203, 338], "search_spac": [203, 212, 338], "search_algorithm": [203, 338], "bo": [203, 338, 385], "knowledge_transf": [203, 338], "regular_distil": [203, 338], "disil": 203, "space": [203, 209, 212, 223, 229, 338, 348, 349, 361, 369, 372], "bayesian": [203, 338], "architectur": [203, 209, 212, 216, 229, 234, 235, 338, 351, 356, 369, 376, 378], "candid": 203, "trial": [203, 229], "random": [203, 234, 338, 376], "knowledg": [203, 229, 319, 338, 350, 351], "transfer": [203, 229, 238, 352], "stage": [203, 209, 229, 338], "autodistil": [203, 209, 216, 229, 394], "regular": [203, 209, 225, 389], "nasconfig": [203, 212, 214], "parser": 203, "procedur": [203, 222, 383], "backend": [203, 229, 237, 339, 351, 353, 355, 356, 357, 358, 361, 363, 366, 368, 383, 390], "warmup": [203, 339, 361], "cores_per_inst": [203, 229, 339], "num_of_inst": [203, 229, 339], "benchmark": [203, 208, 229, 230, 351, 361, 367, 368, 381, 384, 394], "skip": [203, 339, 372, 384], "core": [203, 339, 359, 367, 369, 375, 376, 381, 384, 385], "instanc": [203, 209, 212, 229, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 339, 348, 359, 360, 367, 381, 384, 386, 387, 388], "enabl": [203, 223, 339, 354, 355, 367, 369, 375, 376, 380, 381], "want": [203, 215, 339, 345, 358, 359, 360, 361, 363, 366, 369, 370, 371, 383, 386, 398], "prunerv2": 203, "target_spars": [203, 222], "pruning_typ": 203, "op_nam": 203, "excluded_op_nam": 203, "start_step": [203, 223], "end_step": [203, 223], "pruning_scop": 203, "pruning_frequ": [203, 223], "min_sparsity_ratio_per_op": [203, 222], "max_sparsity_ratio_per_op": [203, 222, 223], "sparsity_decay_typ": 203, "pruning_op_typ": 203, "reg_typ": [203, 371], "criterion_reduce_typ": 203, "resume_from_pruned_checkpoint": 203, "similiar": 203, "weightpruningconfig": 203, "pruning_config": [203, 215, 216, 229, 355, 389], "snip_momentum": [203, 219], "4x1": [203, 222, 360, 369, 379], "global": [203, 222, 223], "98": [203, 381], "exp": [203, 371, 378, 383], "linear": [203, 222, 338, 352, 371, 374, 377], "ce": [204, 338, 352], "loss_weight_ratio": [204, 352], "layer_map": [204, 352], "distillationcriterionmod": 204, "restor": [205, 353], "sample_length_configur": 205, "max_seq_length": [205, 206], "num_hidden_lay": 205, "layer_config": [205, 234, 235], "length_drop_prob": 205, "length_drop_ratio": 205, "min_length": 205, "hidden": [205, 222, 234, 235, 338, 372], "truncat": [205, 351], "less": [205, 339, 352, 361, 375, 379, 389], "than": [205, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 360, 361, 362, 370, 375, 377, 382, 383, 390], "min": [205, 229, 390], "sample_layer_configur": 205, "layer_dropout": 205, "depend": [205, 212, 349, 351, 356, 357], "paramat": 205, "bound": 205, "kept": [205, 222], "evolust": 206, "evolustionari": 206, "approx_ratio": 206, "12": [206, 350, 356, 357, 360, 367, 373, 377, 380, 381, 383], "l": [206, 338, 352], "384": [206, 338, 361, 367, 381], "approxim": [206, 378], "invers": [206, 378], "store2str": 206, "gene": 206, "mac": 206, "score": [206, 219, 222, 223, 225, 234, 235, 388], "parent": [206, 223, 226], "parmat": 206, "lower_constraint": 206, "upper_constraint": 206, "eval_metr": 206, "evolutionari": [206, 229], "load_stor": 206, "store_fil": 206, "save_stor": 206, "get_stor": 206, "set_lower_constraint": 206, "setter": [206, 234, 235], "lower": [206, 239, 379, 387, 390], "set_upper_constraint": 206, "upper": [206, 371], "save_popul": 206, "population_fil": 206, "convex_hul": 206, "pareto_fronti": 206, "add_gen": 206, "rai": 206, "packag": [207, 210, 319, 350, 351], "drop_and_restore_util": [207, 208], "mixtur": 208, "auto_distil": [208, 210, 338], "basic_na": [208, 213], "pytorch_prun": 208, "reg": [208, 220, 223, 370, 371], "schedul": [208, 215, 220, 223, 225, 229, 338, 343, 368, 396], "get_throughput": [208, 231], "utility_tf": [208, 231], "optimizer_tf": 208, "trainer": [208, 215, 336, 351, 353, 354, 355], "handl": [209, 229, 234, 235, 318, 327, 338, 365, 373, 374], "both": [209, 229, 234, 235, 348, 350, 355, 375, 377, 382, 383, 384, 386, 390], "model_build": [209, 212, 216, 229, 338], "conf_fname_or_obj": [209, 212, 214], "design": [209, 229, 358, 370, 371, 382, 394], "three": [209, 218, 224, 228, 229, 338, 351, 358, 362, 366, 377, 378, 389, 390], "major": [209, 229, 338, 369, 375, 376, 378, 379, 390], "explor": [209, 229, 338, 355], "compress": [209, 229, 319, 338, 352, 355, 369, 373, 375, 379, 382, 390], "discov": [209, 229, 338], "potenti": [209, 229, 329, 338, 349, 376], "measur": [209, 229, 338, 339, 352, 368, 386, 387, 389, 390], "hardwar": [209, 229, 338, 349, 352, 380, 382], "etc": [209, 229, 338, 352, 360], "select": [209, 225, 229, 234, 235, 338, 371, 383], "best": [209, 212, 229, 338, 348, 353], "res_save_path": [209, 212], "model_cl": [209, 216, 229, 338], "found": [209, 212, 351, 357, 358, 379], "estim": [209, 212, 360, 379], "load_search_result": 209, "init_by_cfg": [209, 212], "create_distil": 209, "optimizedmodel": 211, "from_pretrain": [211, 234, 235, 339, 351, 355, 388], "function": [211, 212, 215, 216, 224, 229, 326, 327, 328, 329, 338, 352, 358, 361, 362, 365, 366, 370, 371, 383, 386, 389, 390], "classmethod": [211, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "intel": [211, 222, 224, 239, 318, 339, 349, 350, 355, 356, 357, 358, 359, 367, 369, 380, 381, 385, 387, 388, 389, 390, 391], "compressor": [211, 216, 222, 224, 319, 339, 351, 387, 390], "repositori": [211, 351], "hug": [211, 319, 351, 363], "face": [211, 319, 320, 348, 351, 363], "hub": [211, 388], "directori": [211, 215, 363, 382], "host": 211, "cache_dir": 211, "download": [211, 234, 235, 391], "force_download": 211, "forc": 211, "re": [211, 373], "overrid": [211, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 365], "resume_download": 211, "incomplet": 211, "attempt": 211, "resum": [211, 229], "branch": [211, 383], "tag": 211, "commit": [211, 348, 384], "sinc": [211, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 352, 375, 376, 378], "we": [211, 212, 235, 345, 348, 350, 351, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 386, 387, 388, 390, 398], "git": [211, 350, 351, 356, 357, 359], "system": [211, 351, 357], "artifact": 211, "huggingfac": [211, 239, 351, 364, 386, 388], "allow": [211, 339], "q_model": 211, "basicna": 212, "conf_fnam": 212, "obj": [212, 214, 227], "common": [214, 222, 348, 351, 390], "nasbas": 214, "orchestr": [215, 229], "orchestrate_optim": [215, 229], "compon": [215, 229, 370, 385], "experiment": [215, 229, 371], "callabl": [215, 216, 229, 338], "train_func": [215, 216, 229, 338], "saved_result": [215, 351], "aggreg": 215, "save_model": [215, 238, 351], "json": [215, 239, 350], "pytorch_model": 215, "init_quant": [215, 216, 229, 370], "quant_config": [215, 216, 229, 351, 355, 390], "calib_func": 215, "calib_dataload": [215, 229], "prepar": [215, 216, 234, 235, 350, 360, 362, 365, 370, 371, 379, 390], "invok": [215, 216], "_inc_quant": 215, "calibr": [215, 229, 390], "init_prun": [215, 216, 229], "init_distil": [215, 216, 229], "distillation_config": [215, 216, 229, 352, 355], "teacher_model": [215, 216, 229, 338, 352, 355], "teacher": [215, 216, 338, 352, 353], "tfoptim": [216, 338, 352], "pretrainedmodel": [216, 229, 338], "training_args_tf": 216, "tftrainingargu": 216, "train_dataset": [216, 338, 351, 355], "eval_dataset": [216, 338, 351, 355], "compute_metr": [216, 338, 351], "task_typ": [216, 238], "task_id": [216, 238], "entri": [216, 229, 234, 235, 385], "techniqu": [216, 351, 353, 355, 390], "builtin_eval_func": [216, 229], "saved_model": 216, "quantized_model_path": 216, "larger": [216, 222, 229], "model_builder_builtin": [216, 229, 338], "arch_para": [216, 229], "built": [216, 338, 387], "builder": [216, 338], "autodistillation_config": [216, 229, 338], "build_train_func": 216, "infer_framework_load_model": 217, "autoconfig": [217, 351, 355, 388], "model_class": 217, "model_kwarg": [217, 234, 235, 388], "pruningmod": 218, "current": [218, 219, 222, 223, 224, 226, 228, 360, 370, 371, 372, 374, 375, 377, 382, 383], "prunerconfig": [218, 355], "update_frequ": 218, "prune_typ": [218, 355, 389], "per_tensor": 218, "register_criterion": 219, "registri": [219, 222, 223, 225, 226], "get_criterion": 219, "pruningcriterion": 219, "on_step_begin": [219, 223, 224], "begin": [219, 223, 224, 235, 338, 370, 371], "on_before_optimizer_step": [219, 223, 224, 225], "on_after_optimizer_step": [219, 223, 224, 225], "magnitudecriterion": 219, "magnitud": [219, 389], "criterion_class": 219, "deriv": [219, 222, 223, 225, 226, 327, 376, 377], "determin": [219, 222, 223, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 361, 380], "magtinud": 219, "gradientcriterion": 219, "gradient": 219, "absolut": [219, 386, 389, 390], "snipcriterion": 219, "snip": 219, "product": [219, 351, 367, 377, 381, 387, 390], "singl": [219, 226, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 372, 377], "network": [219, 222, 338, 352, 358, 359, 360, 362, 374, 389, 390], "sensit": 219, "ab": [219, 234, 390], "1810": 219, "02340": 219, "snipmomentumcriterion": 219, "momentum": 219, "mechan": 219, "much": [219, 363, 372], "preserv": 219, "updat": [219, 222, 223, 226, 227, 350, 351, 356, 357, 359, 376, 389], "register_pattern": 222, "get_pattern": 222, "assertionerror": [222, 223, 227], "basepattern": [222, 225], "unit": [222, 368, 375], "dure": [222, 226, 229, 359, 375, 379, 384, 387, 389, 390], "is_glob": 222, "take": [222, 348, 352, 360, 362, 365, 370, 378, 379], "contrast": 222, "individu": [222, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348], "keep_mask_lay": 222, "whose": [222, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 366], "mask": [222, 223, 226, 234, 235, 329, 353, 370, 371, 373, 375, 378], "invalid_lay": 222, "reach": [222, 226, 349, 351], "minimum": 222, "reduce_tensor": 222, "dim": [222, 234, 235, 359, 365, 369, 375, 379, 383], "reduc": [222, 351, 365, 369, 370, 372, 374, 375, 376, 378, 379, 390], "along": [222, 361, 374, 377, 379], "dimens": [222, 234, 235, 338, 352, 361, 374, 375, 377, 379, 383], "axi": [222, 351, 358, 360, 377, 378], "get_mask": 222, "pre_mask": 222, "layer_nam": 222, "unprun": 222, "abstract": [222, 226, 234, 235], "get_masks_glob": 222, "get_masks_loc": 222, "get_single_mask_per_target_ratio": 222, "exact_sparsity_ratio": 222, "get_block_size_dict": 222, "mainli": [222, 226, 361, 375, 376], "implement": [222, 223, 224, 225, 226, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 343, 351, 358, 361, 362, 366, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 396], "get_sparsity_ratio": [222, 224], "return_dict": [222, 234, 235], "zero": [222, 223, 224, 371, 372, 374, 375, 379, 389], "zero_cnt": 222, "total_cnt": 222, "get_pattern_lock_mask": 222, "obtain": [222, 225, 226, 227, 351, 353, 360, 378], "posit": [222, 234, 235, 348, 351, 355, 361, 366, 383, 388], "lock": [222, 389], "check_layer_valid": 222, "block_siz": 222, "get_reduced_masks_from_data": 222, "update_residual_cnt": 222, "yet": 222, "get_sparsity_ratio_each_lay": 222, "sparsity_ratio": 222, "zero_point": 222, "cnt": 222, "sparsityinfo": 222, "adjust_ratio": 222, "key_new_spars": 222, "max_sparsity_ratio": 222, "min_sparsity_ratio": 222, "final_target_sparsity_ratio": 222, "adjust": [222, 339, 365, 390], "examin": 222, "propos": [222, 338, 352, 369], "indic": [222, 234, 235, 329, 366, 370, 371, 377, 379, 383, 386], "adjust_sparsity_ratio": 222, "patternnxm": 222, "nxm": [222, 223, 369], "height": 222, "width": [222, 369, 370, 374, 376, 390], "vertic": 222, "direct": [222, 329], "becaus": [222, 358, 370, 373, 378, 390], "calul": 222, "ration": 222, "block_size_1": 222, "block_size_2": 222, "wise": [222, 368, 383, 397], "block_wis": 222, "get_sparsity_ratio_progress": 222, "reshape_orig_to_pattern": 222, "s1": 222, "s2": 222, "reshape_reduced_to_orig": 222, "orig_shap": 222, "permut": [222, 360, 373, 377, 383], "reduce_scor": 222, "recalcul": 222, "get_mask_per_threshold": 222, "cur_target_sparsity_ratio": 222, "keep_exact_sparsity_ratio": 222, "togeth": [222, 351], "keep_pre_mask": 222, "remain": [222, 329], "unchang": 222, "count_new_masked_cnt": 222, "new_added_mask": 222, "count": [222, 360, 365], "ad": [222, 223, 234, 235, 358, 362, 366, 370, 379, 383, 388], "update_new_added_mask": 222, "cur_mask": 222, "bacaus": 222, "update_progressive_mask": 222, "progressive_step": 222, "progressive_config": 222, "progress": [222, 223, 226], "update_progressive_masks_linear": 222, "update_progressive_masks_scor": 222, "update_progressive_masks_loc": 222, "domain": [222, 319, 343, 351, 368, 396], "update_progressive_masks_glob": 222, "patternninm": 222, "continu": [222, 234, 369, 372, 376, 377], "blob": [222, 239], "master": [222, 224], "md": [222, 239, 360, 363], "get_least_ninm_mask_from_data": 222, "elementwis": 222, "sparisti": 222, "get_ele_mask_per_threshold": 222, "least_ninm_mask": 222, "least_m_in_m_mask": 222, "register_prun": 223, "parse_valid_pruner_typ": 223, "get_prun": 223, "cuurent": 223, "baseprun": 223, "what": [223, 348, 370, 371, 377, 389], "current_sparsity_ratio": 223, "global_step": 223, "trigger": [223, 230, 349], "frequenc": [223, 367, 381, 389], "show": [223, 348, 351, 358, 359, 362, 363, 366, 373, 375, 377], "on_epoch_begin": [223, 224], "mask_weight": 223, "formal": [223, 234], "mask_weights_gener": 223, "local_step": [223, 224], "update_mask": 223, "on_epoch_end": [223, 224], "on_step_end": [223, 224], "on_train_begin": [223, 224], "phase": [223, 224, 352, 389], "on_train_end": [223, 224], "on_before_ev": [223, 224], "on_after_ev": [223, 224], "check_is_pruned_step": 223, "boolean": 223, "basicprun": 223, "arrang": 223, "within": [223, 338, 348, 374], "chang": [223, 226, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 349, 358, 369, 370, 379, 384, 385], "proce": 223, "regul": 223, "term": [223, 225, 338, 352, 374, 377, 379, 385, 386, 387, 390], "set_global_step": 223, "patternlockprun": 223, "fix": [223, 349, 361, 373], "inherit": [223, 226, 339, 352, 358, 365, 388, 389, 390], "progressiveprun": 223, "interpol": 223, "fine": [223, 319, 350, 351, 389, 390], "grain": 223, "improv": [223, 349, 351, 360, 370, 372, 374, 375, 379, 390], "interv": [223, 383], "check_progressive_valid": 223, "check_is_pruned_progressive_step": 223, "update_masks_progress": 223, "print_progressive_spars": 223, "templat": [224, 327, 329], "tree": 224, "huggingface_model": 224, "classif": [224, 234, 235, 319, 338, 351, 352, 353, 364, 388], "eager": [224, 390], "config_file_path": 224, "pruner_info": 224, "update_config": 224, "read": [224, 351, 359], "pass": [224, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 329, 370, 371, 388, 390], "elementwise_over_matmul_gemm_conv": 224, "elementwise_over_al": 224, "blockwise_over_matmul_gemm_conv": 224, "ensur": [224, 375], "register_reg": 225, "regulariz": 225, "get_reg_typ": 225, "get_reg": 225, "basereg": 225, "grouplasso": [225, 389], "coeff": 225, "lasso": [225, 353, 389], "variabl": [225, 329, 362, 365, 383, 384], "reg_term": 225, "coeffient": 225, "register_schedul": 226, "get_schedul": 226, "pruningschedul": 226, "dens": [226, 329, 360, 361, 366, 368, 379, 383, 389], "gradual": 226, "update_sparsity_ratio": 226, "target_ratio": 226, "current_prune_step": 226, "total_prune_step": 226, "init_ratio": 226, "oneshotschedul": 226, "onc": [226, 319, 351, 360, 378], "iterativeschedul": 226, "init_sparsity_ratio": 226, "check_config": 227, "prune_config": 227, "everyth": 227, "reset_none_to_default": 227, "undefin": 227, "update_param": 227, "process_weight_config": 227, "global_config": 227, "local_config": 227, "default_config": 227, "pruners_info": 227, "process_yaml_config": 227, "check_key_valid": 227, "template_config": 227, "user_config": 227, "process_and_check_config": 227, "process_config": 227, "parse_to_prun": 227, "quantizationmod": 228, "easili": [229, 369, 370], "finetun": [229, 351, 353, 355, 388], "basetrain": 229, "builtin_train_func": 229, "automativ": 229, "low": [229, 351, 355, 369, 376, 378, 387, 390, 399], "achiev": [229, 351, 372, 387], "point": [229, 234, 235, 338, 362, 370, 371, 375, 378, 390], "automat": [229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 350, 360, 361, 362, 370, 383], "pruningconf": 229, "smaller": [229, 352, 375, 389], "config_list": 229, "optimizt": 229, "create_optimizer_builtin": 229, "resume_from_checkpoint": 229, "optuna": 229, "ignore_keys_for_ev": 229, "tor": 229, "checkpoint": [229, 234], "present": [229, 234, 378], "state": [229, 234, 235, 351, 367, 381], "hyperparamet": [229, 338], "keyword": 229, "hide": [229, 234, 235], "deprec": [229, 234, 235], "training_step": 229, "inject": [229, 371], "being": [229, 375], "fed": 229, "most": [229, 351, 362, 366, 370, 371, 372, 377, 388], "expect": [229, 234, 235, 348, 349, 379, 387], "label": [229, 234, 235, 239, 350, 384, 388], "training_step_length_adapt": 229, "compute_loss": 229, "return_output": 229, "By": [229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 359], "nas_config": 229, "baseic": 229, "callabel": 229, "auto_distil_evaluation_loop": 229, "prediction_loss_onli": 229, "ignore_kei": 229, "metric_key_prefix": 229, "eval": [229, 338, 386], "trainer_util": 229, "evalloopoutput": 229, "work": [229, 318, 371, 388], "doe": [229, 358, 370, 371, 372, 373, 374, 377, 383], "avoid": [229, 234, 235, 366, 369, 371, 375, 377, 378, 383], "memori": [229, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 390], "huge": 229, "prefix": [229, 383], "export_to_onnx": [229, 351, 354], "tranfer": 229, "paramert": 229, "export_to_fp32_onnx": 229, "save_path": [229, 354], "opset_vers": [229, 354], "14": [229, 354, 367, 373, 380, 381], "do_constant_fold": [229, 354], "verbos": [229, 354], "export": [229, 351, 359, 360, 363, 388, 394], "fold": [229, 383], "export_to_bf16_onnx": 229, "export_to_int8_onnx": 229, "quant_format": [229, 354], "s8s8": [229, 354, 375], "sample_s": 229, "calibrate_method": 229, "minmax": 229, "scale_map": [229, 351], "export_to_jit": 229, "set_dynamic_config": [229, 355], "dynamic_config": [229, 355], "run_evolutionary_search": 229, "nlptrainer": [229, 351, 352, 355, 389, 390], "nlpseq2seqtrain": 229, "special": [230, 371, 377], "greater_is_bett": [232, 236, 338, 355, 386, 387, 390], "is_rel": [232, 355, 386, 390], "01": [232, 355, 381, 386, 390], "weight_ratio": [232, 236, 386, 387, 390], "modeling_bert_dynam": 233, "modeling_roberta_dynam": 233, "bert": [234, 338, 351, 352, 353, 359, 360, 361, 364, 366, 367, 370, 375, 376, 377, 378], "load_tf_weights_in_bert": 234, "tf_checkpoint_path": 234, "bertembed": [234, 235], "token_typ": 234, "forward": [234, 235, 338, 360, 365, 390], "longtensor": [234, 235], "token_type_id": [234, 235], "position_id": [234, 235], "inputs_emb": [234, 235], "floattensor": [234, 235], "past_key_values_length": [234, 235], "bertselfattent": 234, "position_embedding_typ": [234, 235], "transpose_for_scor": [234, 235], "hidden_st": [234, 235], "attention_mask": [234, 235], "head_mask": [234, 235], "encoder_hidden_st": [234, 235], "encoder_attention_mask": [234, 235], "past_key_valu": [234, 235], "output_attent": [234, 235], "bertselfoutput": 234, "bertattent": 234, "prune_head": [234, 235], "bertintermedi": 234, "intermedi": [234, 338, 358, 363, 366, 379, 390], "bertoutput": 234, "bertlay": 234, "output_length": [234, 235], "always_keep_cls_token": [234, 235], "feed_forward_chunk": [234, 235], "attention_output": [234, 235], "feed": [234, 235, 352, 359], "chunk": 234, "bertencod": 234, "encod": [234, 235, 338, 360, 366], "use_cach": [234, 235], "output_hidden_st": [234, 235], "modeling_output": [234, 235], "basemodeloutputwithpastandcrossattent": [234, 235], "bertpool": 234, "pooler": [234, 235], "bertpredictionheadtransform": 234, "bertlmpredictionhead": 234, "bertonlymlmhead": 234, "sequence_output": 234, "bertonlynsphead": 234, "pooled_output": 234, "bertpretraininghead": 234, "bertpretrainedmodel": 234, "simpl": [234, 235, 351, 356, 359, 370, 378, 388], "bertforpretrainingoutput": 234, "bertforpretrain": 234, "sum": [234, 339, 352, 360, 376, 378, 379, 383], "prediction_logit": [234, 235], "sequence_length": [234, 235], "vocab_s": [234, 235], "vocabulari": 234, "seq_relationship_logit": 234, "hidden_s": [234, 235, 338], "plu": 234, "num_head": [234, 235], "averag": [234, 339, 351, 360], "bertmodel": 234, "add_pooling_lay": [234, 235], "behav": [234, 235], "well": [234, 235, 354, 390, 391], "decod": [234, 235, 380], "case": [234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 352, 353, 360, 361, 369, 371, 372, 373, 383, 384], "cross": [234, 235], "describ": [234, 235, 328, 350, 372, 374, 377, 383, 386, 387], "1706": [234, 367, 381], "03762": 234, "ashish": [234, 235], "vaswani": [234, 235], "noam": [234, 235], "shazeer": [234, 235], "niki": [234, 235], "parmar": [234, 235], "jakob": [234, 235], "uszkoreit": [234, 235], "llion": [234, 235], "jone": [234, 235], "aidan": [234, 235], "gomez": [234, 235], "lukasz": [234, 235], "kaiser": [234, 235], "illia": [234, 235], "polosukhin": [234, 235], "is_decod": [234, 235], "add_cross_attent": [234, 235], "get_input_embed": [234, 235], "getter": [234, 235], "set_input_embed": [234, 235], "set_length_config": [234, 235], "set_output_attent": [234, 235], "basemodeloutputwithpoolingandcrossattent": [234, 235], "pad": [234, 235, 339, 351, 360, 375, 379, 383], "n_layer": [234, 235], "embed_size_per_head": [234, 235], "precomput": [234, 235], "speed": [234, 235, 358, 362], "up": [234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 360, 362, 371, 383], "decoder_input_id": [234, 235], "those": [234, 235, 377, 389, 390], "past": [234, 235], "instead": [234, 235, 372], "get_output_embed": [234, 235], "set_output_embed": [234, 235], "new_embed": [234, 235], "next_sentence_label": 234, "legaci": [234, 235], "berttoken": 234, "uncas": [234, 338, 351, 353, 355, 363, 388], "hello": [234, 235], "my": [234, 235], "dog": [234, 235], "cute": [234, 235], "return_tensor": [234, 235, 339, 351, 355], "pt": [234, 235, 339, 351, 355, 388], "bertlmheadmodel": 234, "causallmoutputwithcrossattent": [234, 235], "prepare_inputs_for_gener": [234, 235], "bertformaskedlm": 234, "maskedlmoutput": [234, 235], "bertfornextsentencepredict": 234, "nextsentencepredictoroutput": 234, "prompt": 234, "itali": 234, "pizza": 234, "serv": 234, "restaur": 234, "unslic": 234, "next_sent": 234, "sky": 234, "blue": 234, "shorter": 234, "wavelength": 234, "light": 234, "logit": [234, 235, 338, 351, 352, 355, 359], "wa": 234, "bertforsequenceclassif": 234, "sequenceclassifieroutput": [234, 235], "regress": [234, 235, 350], "num_label": [234, 235, 351, 355], "entropi": [234, 235, 338], "bertformultiplechoic": 234, "choic": [234, 235, 353], "multiplechoicemodeloutput": [234, 235], "num_choic": [234, 235], "bertfortokenclassif": 234, "tokenclassifieroutput": [234, 235], "bertforquestionansw": 234, "question": [234, 348, 349, 351, 353, 373], "answer": [234, 235, 348, 353], "start_posit": [234, 235], "end_posit": [234, 235], "questionansweringmodeloutput": [234, 235], "span": [234, 235], "clamp": [234, 235], "account": [234, 235, 348], "expand_gath": [234, 235], "roberta": [235, 353], "robertaembed": 235, "tini": [235, 353], "tweak": 235, "create_position_ids_from_inputs_emb": 235, "directli": [235, 370, 373, 375, 376], "sequenti": [235, 362, 370, 371, 374], "robertaselfattent": 235, "robertaselfoutput": 235, "robertaattent": 235, "attenion": 235, "robertaintermedi": 235, "intermidi": 235, "robertaoutput": 235, "robertalay": 235, "robertaencod": 235, "roberata": 235, "robertapool": 235, "robertapretrainedmodel": 235, "update_keys_to_ignor": 235, "del_keys_to_ignor": 235, "robertamodel": 235, "_": [235, 338, 350, 352, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 375, 376, 377, 378, 382, 383, 386, 387, 388, 389, 390], "robertaforcausallm": 235, "robertatoken": 235, "robertaconfig": 235, "robertaformaskedlm": 235, "robertalmhead": 235, "featur": [235, 319, 338, 347, 349, 351, 352, 363, 366, 369, 376, 380, 388, 391, 400], "robertaforsequenceclassif": 235, "robertaformultiplechoic": 235, "robertafortokenclassif": 235, "robertaclassificationhead": 235, "robertaforquestionansw": 235, "quanstion": 235, "create_position_ids_from_input_id": 235, "padding_idx": 235, "non": [235, 374, 377, 379, 383, 384], "symbol": 235, "fairseq": 235, "make_posit": 235, "models": [236, 353, 387], "distributed_init": [237, 238], "gloo": 237, "world_siz": 237, "rank": 237, "init_method": 237, "master_addr": 237, "127": [237, 360, 380, 381, 390], "master_port": 237, "12345": 237, "distibut": 237, "tfdataload": 238, "worker_address": 238, "worker": 238, "address": [238, 319, 348, 370, 376], "treat": [238, 358], "chief": 238, "get_filepath": 238, "base_dirpath": 238, "folder": [238, 357, 358, 359, 360, 361, 363], "keras2savedmodel": 238, "kera": 238, "augment": [239, 241, 394], "extens": [239, 349, 350, 355, 356, 357, 358, 359, 385, 387, 388, 389, 391], "dataaugment": [239, 350], "augmenter_typ": [239, 350], "wai": [239, 351, 360, 361, 362, 366, 369, 371, 375, 377, 380], "enhanc": [239, 355, 374], "textgenerationaug": [239, 350], "keyboardaug": [239, 350], "aug": [239, 319, 350], "input_dataset": [239, 350], "origin_data": 239, "output_path": [239, 350], "join": [239, 350], "result_path": [239, 350], "test1": [239, 350], "cv": [239, 350], "augmenter_argu": [239, 350], "gpt2": [239, 350], "medium": [239, 319, 350, 351, 384], "data_aug": [239, 350], "text_generation_augment": 239, "raw_dataset": [239, 350, 351, 355], "No": [239, 353], "glue": [239, 350, 351], "sst2": [239, 339, 350, 351, 353, 360, 364], "eo": [239, 350], "k": [239, 329, 350, 361, 370, 372, 373, 374, 375, 377, 378, 379, 381, 383], "p": [239, 350, 351], "top_p": 239, "effect": [239, 319, 350, 351, 358, 383], "tend": 239, "toward": [239, 348], "greedi": 239, "repetition_penalti": 239, "primarili": 239, "ctrl": [239, 350, 353], "num_return_sent": 239, "entir": [239, 360, 369, 375, 376, 389], "num_sampl": 239, "condit": [239, 350, 361, 362, 385], "stop_token": 239, "mit_data_augment": 239, "nlpaug": [239, 241, 350], "librari": [239, 241, 343, 349, 370, 371, 375, 396], "help": [239, 241, 350, 351, 366, 370, 382], "machin": [239, 241, 350, 383], "learn": [239, 241, 319, 350, 363, 371, 387, 390], "project": [239, 241, 348, 349, 350], "makcedward": [239, 241], "suffix": 239, "csv": [239, 350], "column_nam": 239, "sentence1": 239, "sentence2": 239, "data_augment": [240, 350], "augmentertyp": 241, "enumer": [241, 329], "get_augmenter_from_typ": 241, "aug_typ": 241, "augment_typ": 241, "testaddclstoken": 244, "methodnam": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "runtest": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "code": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 328, 329, 351, 355, 356, 358, 361, 371, 372, 373, 374, 375, 380, 383, 385], "itself": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 380], "place": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 371, 376, 389], "fixtur": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "testcas": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "constructor": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 365], "author": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 385], "deconstruct": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "setup": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 350, 351, 356, 358], "teardown": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "respect": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 362, 363], "necessari": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348, 365, 379, 383], "__init__": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358], "alwai": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 366, 375, 384], "signatur": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "failureexcept": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "fail": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "deem": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 348], "rather": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 362, 370], "longmessag": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "long": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 366], "messag": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "repr": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "failur": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "explicit": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 348, 365, 371], "maxdiff": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "diff": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "difflib": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "look": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 358, 360, 371, 372], "setupclass": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "hook": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "teardownclass": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "testaddembed": 245, "testattentionreshap": [246, 247, 294, 297], "testtorchmodel": [248, 262], "testbinaryop": 249, "testtorchop": [250, 252, 258, 261, 270, 271, 273, 275, 276, 285, 288, 290, 299, 300, 302, 307, 311], "testcastto": 251, "testconvreshap": 253, "testdecoderattnreshap": 254, "testdispatchertuningacc": 255, "testdispatchertuningthroughput": 256, "testdynamicquant": 257, "testembeddingbag": 259, "testexecutionopt": [260, 264], "testgraphdispatch": 263, "testinsertinputouputdata": 265, "testissupportedonnxgraph": 266, "testlastlayershap": 267, "testlayernormwithreducemean": [268, 296, 298], "testlayernormwithtranspos": 269, "testtorchlinear": 272, "testmain": 274, "testmatmulwithbiasrelu": 277, "testmatmulwithbiassigmoid": 278, "testmatmulwithbiastanh": 279, "testmergedembeddingbag": 280, "testonnxutil": 282, "testoperatoradaptor": 283, "testop": 284, "testpaddingsequ": 286, "testpatterndispatch": 287, "testpositionembed": 289, "testprimitivecacheacc": 291, "testprimitivecachethroughput": 292, "testqkvmerg": 293, "testquantonnxexecut": 295, "teststartendlogit": 301, "testtextencod": 303, "testtextencoderbf16": 304, "testtfutil": 305, "testtokentypeembed": 306, "testtransposebatchmatmul": 308, "testunet": 309, "testunetbf16": 310, "testvaedecod": 312, "testvaedecoderbf16": 313, "testweightsharingacc": 314, "testweightsharingdispatchertuningacc": 315, "testweightsharingdispatchertuningthroughput": 316, "testweightsharingthroughput": 317, "center": 318, "resolv": 318, "guidelin": 318, "innov": [319, 351], "toolkit": [319, 351, 353], "particular": 319, "4th": [319, 351], "xeon": [319, 351, 353, 356, 369, 378, 381, 385, 390], "scalabl": [319, 351, 353, 356, 370], "processor": [319, 351, 353, 356, 367, 381], "sapphir": [319, 351, 356], "rapid": [319, 351, 356], "codenam": 319, "seamless": [319, 351], "experi": [319, 348, 351, 373, 378, 379], "extend": [319, 351, 372], "leverag": [319, 338, 351, 352, 355], "advanc": [319, 338, 348, 351, 368, 380], "softwar": [319, 351, 385], "uniqu": [319, 351], "awar": [319, 351], "runtim": [319, 329, 351, 380, 383, 390], "releas": [319, 351, 395], "neurip": [319, 351], "2022": [319, 351, 367, 381], "paper": [319, 351, 355], "distilbert": [319, 338, 351, 353, 355, 363, 388], "quala": [319, 351, 353, 355], "minilm": [319, 351, 353, 355], "2021": [319, 351], "pre": [319, 351, 362, 372, 382], "diffus": [319, 351, 353, 375], "j": [319, 351, 353, 357, 358, 359, 368, 374, 379, 380, 383], "6b": [319, 351, 353], "neox": [319, 351], "bloom": [319, 351], "176b": [319, 351], "t5": [319, 351, 353], "flan": [319, 351], "workflow": [319, 351, 352, 361, 363, 377], "setfit": [319, 351], "sentiment": [319, 351], "analysi": [319, 351], "dlsa": [319, 351], "neuralchat": [319, 351], "chatbot": [319, 351], "through": [319, 339, 351, 358, 370, 373, 374, 375, 380], "effici": [319, 351, 355], "peft": [319, 351], "blog": [319, 351], "publish": [319, 348, 351, 385], "april": 319, "2023": [319, 385], "tech": 319, "artifici": 319, "intellig": 319, "ai": [319, 351], "With": [319, 378, 390], "mlperf": 319, "bar": 319, "5x": 319, "commun": [319, 348], "mleffici": [319, 351], "dec": [319, 351], "nov": [319, 351], "coher": [319, 376], "novemb": 319, "alibaba": 319, "deep": [319, 350, 351, 363, 371, 387, 390], "purif": 319, "kernel": [320, 329, 347, 359, 360, 365, 367, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 400], "namespac": [326, 327, 328, 329], "jd": [326, 327, 328, 329, 371], "meet": [326, 327, 328, 329, 358, 373, 375, 379], "convent": [326, 327, 328, 329], "refactor": [326, 327, 328, 329], "engine_t": 326, "cpu_engine_t": 326, "gpu_ocl_engine_t": 326, "inlin": [326, 327, 328, 329, 370], "engine_kind": [326, 328, 371], "runtime_kind": [326, 328], "virtual": [326, 327, 328, 365, 370, 371], "get_engine_kind": 326, "get_runtime_kind": 326, "std": [326, 327, 328, 329, 368, 370, 371], "vector": [326, 327, 328, 329, 365, 368, 370, 371, 372, 374, 377, 379], "impl_list_item_t": [326, 327], "get_implementation_list": 326, "operator_desc": [326, 327, 330, 368], "op_desc": [326, 327, 368, 371], "create_kernel": 326, "shared_ptr": [326, 327, 365], "kernel_t": [326, 327], "stream_t": 326, "create_stream": 326, "create_memory_storag": 326, "memory_storage_t": 326, "protect": [326, 327], "engine_kind_": [326, 328], "runtime_kind_": [326, 328], "cpu_inst": 326, "null_inst": 326, "storag": 326, "empty_list": 326, "typenam": [327, 329], "arg_t": 327, "void": [327, 328, 329, 365, 368, 370, 371, 372], "proxy_bas": 327, "hpp": [327, 328, 329, 361, 368, 383], "proxi": [327, 343, 368, 375, 396], "anyth": 327, "similar": [327, 362, 370, 373, 374, 376, 377, 389], "onednn": [327, 365], "struct": [327, 329, 370, 371], "oneapi": [327, 365, 380], "dnnl": [327, 361, 365], "136": 327, "reset_sp": 327, "sp": 327, "get_sp": 327, "create_proxy_object": 327, "result_ref": 327, "privat": [327, 328, 348, 359, 365, 369, 370, 371, 376], "member": [327, 328, 329, 348, 365, 370, 371], "data_handle_": 327, "kernel_desc_proxi": 327, "kernel_desc_t": 327, "real": [327, 361, 376, 377, 380], "attention_desc": 327, "dynamic_quant_desc": 327, "dynamic_quant_matmul_desc": 327, "eltwiseop_desc": 327, "gather_desc": 327, "groupnorm_desc": 327, "layernorm_ba_desc": [327, 370], "layernormalized_spmm_desc": 327, "logsoftmax_desc": 327, "mha_dense_desc": 327, "slice_desc": 327, "softmax_desc": 327, "sparse_matmul_desc": [327, 368], "transpose_matmul_desc": 327, "transpose_mha_desc": 327, "kernel_kind": [327, 328, 371], "impl_list_": 327, "nullptr": [327, 329, 370], "kernel_proxi": 327, "dynamic_qu": 327, "dynamic_quant_matmul": 327, "eltwiseop": [327, 370, 371], "layernorm_ba": 327, "layernormalized_spmm": 327, "mha_dens": [327, 383], "slice": [327, 375], "sparse_matmul": [327, 380], "transpose_matmul": 327, "transpose_mha": 327, "kdp": 327, "rt_data": [327, 368], "size_t": [327, 329, 361, 371], "get_workspace_s": 327, "kd": [327, 338, 352], "sparse_matmul_desc_t": 327, "sparse_matmul_t": 327, "descriptor": [328, 365, 383], "ker_kind": [328, 368, 371], "kernel_prop": [328, 371], "ker_prop": [328, 368, 371], "eng_kind": [328, 368, 371], "tensor_desc": [328, 371], "ts_desc": [328, 368, 371], "unordered_map": [328, 371], "postop_attr": [328, 329, 371], "apply_postops_list": [328, 371], "rh": [328, 377], "set_binaryop_list": [328, 370], "binaryop_attr": [328, 329, 370], "binaryop_list": [328, 370], "uint64_t": 328, "impl_nthr": 328, "get_binaryop_list": [328, 370], "dim_t": [328, 329], "tensor_shap": 328, "data_typ": [328, 329, 365, 370, 371, 383], "tensor_dtyp": 328, "format_typ": 328, "tensor_ftyp": 328, "ker_kind_": [328, 371], "ker_prop_": [328, 371], "forward_infer": [328, 365, 371], "undef": [328, 329, 370, 371], "impl_nthr_": [328, 371], "ts_descs_": [328, 371], "attrs_": [328, 371], "apply_postops_list_": [328, 371], "binaryop_list_": [328, 370], "enum": [329, 370, 371], "attention_io": 329, "merge_src": 329, "merge_dst": 329, "q_weight": 329, "k_weight": 329, "v_weight": 329, "q_bia": 329, "k_bia": 329, "v_bia": 329, "q_scale": 329, "k_scale": 329, "v_scale": 329, "reshape_input": 329, "q_k_src2": 329, "q_k_scale": 329, "qk_v_output_zero_point": 329, "qk_v_output_scal": 329, "ssd": [329, 371, 383], "eltwiseop_param_t": [329, 371], "element_num": [329, 371], "in_dt": 329, "out_dt": 329, "element_num_each_th": 329, "remain_el": 329, "eltwiseop_data_t": 329, "dst": [329, 365, 370, 371, 373, 374, 375, 378, 379, 383], "gather_param_t": 329, "dt": [329, 370, 371], "dt_size": 329, "int64_t": 329, "extend_mask": 329, "src_axis_s": 329, "dst_axis_s": 329, "src_size": 329, "idx_siz": 329, "outer_s": 329, "inner_s": 329, "binary_ts_s": 329, "gather_data_t": 329, "binaryop_addr": [329, 370], "16": [329, 339, 353, 354, 359, 367, 373, 374, 375, 376, 379, 380, 381, 383, 390], "spec_translnorm_typ": 329, "normal": [329, 370, 378, 397], "layernorm_ba_param_t": 329, "input_dt": [329, 370, 383], "output_dt": [329, 383], "output2_dt": 329, "spec_typ": [329, 383], "row_num": 329, "col_num": 329, "process_col": [329, 370], "direct_process_row": 329, "process_batch_per_k": 329, "ker_per_batch": 329, "batch_num": 329, "thread_elt_offset": [329, 370], "split_output": 329, "layernorm_ba_data_t": 329, "dst2": 329, "process_row": 329, "anonym": 329, "ep": 329, "1e": 329, "matmul_param_t": 329, "m_tile": 329, "n_tile": 329, "matmul_fp8_param_t": 329, "bfloat16_t": 329, "weight_bf16": 329, "int8_t": 329, "weight_int8": 329, "float8_t": 329, "weight_fp8": 329, "weight_typ": 329, "has_scale0": 329, "thread_num": 329, "matmul_data_t": 329, "src0": [329, 383], "src1": [329, 360, 370, 383], "src2": [329, 370, 383], "matmul_u8_data_t": 329, "uint8_t": [329, 370, 371], "zp": [329, 370], "matmul_fp8_data_t": 329, "mata": 329, "matb": 329, "matc": 329, "matd": 329, "astep": 329, "bstep": 329, "cstep": 329, "dstep": 329, "kpo": 329, "matmul_io": 329, "io": [329, 365], "dst0": 329, "scale0": 329, "zp0": 329, "matmul_io_max": 329, "mean_var_reduce_param_t": 329, "bm": 329, "bn": 329, "mean_var_reduce_data_t": 329, "mean_in": 329, "var_in": 329, "mean_out": 329, "var_out": 329, "spec_softmax_typ": 329, "lut": [329, 368, 370, 371, 383], "softmax_param_t": 329, "sepc_typ": 329, "scalar_num": 329, "vec_align_len": 329, "vec_tail_len": 329, "vec_num_per_thr": 329, "vec_num_tail_thr": 329, "get_lut_exp_attr": 329, "softmax_data_t": 329, "tmp": [329, 371, 373, 375, 378], "process_vec_num": 329, "typedef": 329, "amx_params_t": 329, "amx_bf16_params_t": 329, "amx_int8_params_t": 329, "amx_inputs_t": 329, "amx_bf16f32_inputs_t": 329, "amx_bf16bf16_inputs_t": 329, "sparse_schem": 329, "scenario": [329, 350, 375], "spmm_vnni": 329, "sparse_x_dens": 329, "dense_x_spars": 329, "sparse_x_spars": 329, "subfunc_level": [329, 383], "non_kdim": 329, "kdim": 329, "subfunc_level_max": [329, 383], "constexpr": 329, "wei": [329, 375, 383], "todo": [329, 392], "yi": 329, "conflict": 329, "dst_m1": 329, "dst_m2": 329, "work_spac": 329, "vnni_param_t": 329, "spmm_type": 329, "primit": [329, 365], "jit_domain": 329, "has_bia": 329, "append_sum": 329, "output_typ": [329, 360], "tile_w": 329, "sub_func": 329, "im_start": 329, "blocksiz": 329, "indptr": 329, "welford": [329, 376], "dst_t": 329, "vnni_data_t": 329, "ptr_dens": 329, "int32_t": 329, "ptr_bia": 329, "ptr_dst": 329, "ptr_scale": 329, "ptr_dst_m1": 329, "ptr_dst_m2": 329, "num_tilem": 329, "tilem": 329, "tilen": 329, "blocks_per_group": 329, "64": [329, 338, 356, 360, 367, 375, 377, 378, 380, 381, 383], "sizeof": 329, "nnz_group": 329, "nrowptr": 329, "colidx": 329, "group_rowptr": 329, "same_src_dtyp": 329, "src_t": 329, "wgt_t": 329, "bia_t": 329, "avx512_fp32_params_t": 329, "bsc_data_t": 329, "sparse_ptr": 329, "im_end": 329, "in_start": 329, "in_end": 329, "avx512_data_t": 329, "transpose_copy_param": 329, "srcptr": 329, "dstptr": 329, "srcstride": 329, "dststride": 329, "seq_vnni_copy_param": 329, "transpose_mha_step1_param": 329, "expsum": 329, "cfg": 329, "batchk": [329, 378], "sumstep": 329, "cbatchstep": 329, "scaleab": 329, "transpose_mha_step2_param": 329, "sumptr": 329, "transpose_mha_step3_param": 329, "scalec": 329, "zeropointc": 329, "transpose_mha_io": 329, "src_k": 329, "src_q": 329, "src_v": 329, "tmp2m": 329, "sl_pad": 329, "head_num": [329, 377, 383], "head_siz": [329, 377, 383], "seq_len": [329, 351, 359, 360, 364, 377, 383], "scale_q": 329, "scale_k": 329, "scale_v": 329, "scale_dst": 329, "zp_dst": 329, "transpose_mha_io_max": 329, "arch": 338, "proposit": 338, "promis": [338, 374], "assess": 338, "128": [338, 351, 359, 360, 364, 367, 381, 383, 390], "advisor": 338, "ever": 338, "student": [338, 352, 353], "minim": [338, 352, 379], "done": [338, 352, 361, 375, 383, 390], "z": [338, 352], "distanc": [338, 352], "euclidean": [338, 352], "kullback": [338, 352], "leibler": [338, 352], "diverg": [338, 352], "assign": 338, "cal": 338, "sloss": 338, "mismatch": 338, "512": [338, 360, 374, 376, 379, 381, 383], "desir": [338, 360], "unmatch": 338, "agent": 338, "train_func_builtin": 338, "flash_distil": 338, "eval_func_builtin": 338, "els": [338, 339, 358, 365], "search_loop": 338, "model_arch_para": 338, "oob": 338, "246": 338, "intra_bottleneck_s": 338, "96": [338, 367, 381], "160": [338, 367, 380], "num_attention_head": 338, "intermediate_s": 338, "640": 338, "num_feedforward_network": 338, "mobilebert": [338, 352, 353], "kl": 338, "mse": 338, "best_model_arch": 338, "automodelforpretrain": 338, "higher_is_bett": 338, "10": [338, 350, 351, 356, 359, 360, 367, 373, 381, 383], "42": [338, 367, 381], "500": 338, "25000": 338, "mobilebert_distil": 338, "sgd": 338, "learning_r": 338, "001": 338, "mobilebert_na": 338, "5000": 338, "partial": 338, "pylint": [338, 349], "disabl": [338, 348, 367, 381, 383], "e1101": 338, "makedir": 338, "exist_ok": 338, "120": [338, 380], "240": 338, "eval_loss": [338, 355], "tfautomodelforsequenceclassif": 338, "physic": [339, 348, 377], "model_nam": [339, 388], "dataset_nam": 339, "autotoken": [339, 351, 388], "load_dataset": [339, 350, 351], "195": 339, "intel_extension_for_transform": [339, 351, 352, 355, 356, 358, 359, 361, 363, 366, 368, 383, 386, 387, 388, 389, 390], "summari": 339, "003": 339, "throughput": [339, 351, 367, 375], "5071": 339, "933": [339, 367], "guid": [342, 351, 352, 358, 371, 373, 395], "formerli": [343, 351, 356, 368, 396], "known": [343, 351, 368, 396], "sparselib": [343, 361, 368, 396], "high": [343, 351, 359, 368, 375, 376, 379, 396], "assembli": [343, 368, 372, 374, 379, 380, 396], "introduc": [345, 349, 369, 370, 371, 372, 373, 375, 377, 378, 379, 390, 398], "who": [345, 348, 371, 398], "might": [345, 362, 398], "profil": [345, 398, 399], "intruct": [345, 398], "met": [345, 398], "request": [345, 351, 398], "interest": 348, "foster": 348, "open": [348, 350, 359, 363], "welcom": [348, 349], "maintain": [348, 349, 351, 362, 391], "particip": [348, 372], "harass": 348, "free": [348, 370, 383], "everyon": 348, "regardless": 348, "ag": 348, "bodi": [348, 377], "ethnic": 348, "sex": 348, "gender": 348, "express": 348, "educ": 348, "socio": 348, "econom": 348, "statu": [348, 387, 390], "nation": 348, "person": 348, "appear": 348, "race": 348, "religion": 348, "sexual": 348, "orient": 348, "contribut": 348, "inclus": 348, "Being": 348, "viewpoint": 348, "gracefulli": 348, "critic": 348, "focus": 348, "empathi": 348, "unaccept": 348, "imageri": 348, "unwelcom": 348, "troll": 348, "insult": 348, "derogatori": 348, "comment": 348, "polit": 348, "attack": 348, "electron": 348, "permiss": 348, "reason": [348, 362, 365, 376], "consid": [348, 361, 369, 371, 373, 384], "inappropri": 348, "profession": 348, "clarifi": 348, "appropri": [348, 358, 370, 378], "fair": 348, "action": 348, "edit": 348, "reject": 348, "wiki": 348, "align": [348, 369, 371, 379], "ban": 348, "temporarili": 348, "perman": 348, "threaten": 348, "offens": 348, "harm": [348, 379], "offici": 348, "mail": 348, "post": [348, 360, 383], "via": [348, 370, 373, 380], "social": 348, "media": 348, "act": [348, 374], "appoint": 348, "onlin": [348, 351, 376], "offlin": [348, 373, 379, 390], "event": 348, "further": [348, 355, 361, 374], "abus": 348, "report": [348, 349, 351], "contact": [348, 391], "complaint": 348, "review": [348, 349], "investig": [348, 379], "circumst": 348, "team": 348, "oblig": 348, "confidenti": 348, "regard": 348, "incid": 348, "polici": [348, 395], "good": [348, 372, 373], "faith": 348, "temporari": [348, 377], "repercuss": 348, "leadership": 348, "faq": 348, "page": [348, 349, 351, 355], "send": 349, "flake8": 349, "autopep8": 349, "clean": 349, "bug": [349, 351], "jira": 349, "ticket": 349, "xxx": [349, 351], "risk": 349, "pr": [349, 383], "reproduc": 349, "submit": [349, 351], "intend": 349, "safe": 349, "collabor": 349, "adher": 349, "tool": [350, 351, 353, 360, 368, 383], "integr": [350, 399], "lab": 350, "pip": [350, 351, 356, 364], "clone": [350, 351, 356, 357, 358], "cd": [350, 351, 356, 357, 358, 359, 364, 368, 380, 383], "submodul": [350, 351, 356, 357, 359], "recurs": [350, 351, 356, 357, 359, 366], "dev": 350, "data_fil": 350, "delimit": [350, 383], "asserttru": 350, "len": [350, 358, 359, 366, 377], "column": [350, 369, 374, 376, 379, 389], "conduct": 350, "deploy": [350, 351, 355, 361, 364], "ocraug": 350, "spellingaug": 350, "contextualwordembsforsentenceaug": 350, "xl": 350, "xlnet": [350, 353], "Not": [350, 374], "enough": [350, 375, 390], "rescu": 350, "natur": [350, 351, 353, 376], "sst": [350, 351, 353, 355, 388], "txt": [350, 351, 356, 359, 361, 364, 380], "w": [350, 359, 360, 361, 369, 372, 378], "fw": 350, "clm": [350, 353], "train_fil": 350, "validation_fil": 350, "model_dir": 350, "python3": [350, 357], "run_clm": 350, "do_train": 350, "do_ev": 350, "overwrite_output_dir": 350, "secondli": 350, "training_set": 350, "line": [350, 358, 361, 369, 376, 377, 379, 384], "repetit": 350, "penalti": 350, "platform": [351, 382, 390], "particularli": 351, "gen": [351, 371], "imag": [351, 353, 363, 366, 373, 379], "becom": [351, 362, 379], "wide": [351, 352, 371, 372, 390], "art": 351, "popular": 351, "visit": [351, 367, 381], "skylak": 351, "cascad": [351, 356], "lake": [351, 356], "ic": 351, "cooper": [351, 375], "seri": [351, 370, 373, 383], "hbm": 351, "develop": [351, 365], "easi": [351, 361, 363], "rich": 351, "demonstr": [351, 353, 355, 377, 379], "extrem": [351, 355], "significantli": [351, 376, 378], "cento": [351, 356], "ubuntu": [351, 356, 367, 381], "04": [351, 353, 356, 367, 381], "window": [351, 357], "r": [351, 356, 364, 367, 381, 390], "succeed": 351, "grep": 351, "matrix": [351, 355, 369, 372, 373, 374, 376, 377, 378, 379, 383, 389, 393], "23": [351, 373, 381], "load_metr": 351, "np": 351, "automodelforsequenceclassif": [351, 355], "evalpredict": 351, "english": [351, 353, 355, 388], "lambda": 351, "label2id": [351, 355], "id2label": [351, 355], "neg": [351, 355, 383], "pred": 351, "argmax": [351, 355], "label_id": 351, "q_config": [351, 355, 390], "eval_accuraci": [351, 352, 355, 389], "tmp_trainer": 351, "enable_executor": [351, 354], "neural_engin": [351, 355, 357, 358, 359, 360, 361, 363, 366, 368, 383], "set_log_fil": 351, "load_graph": 351, "dummydataload": 351, "compute_perform": 351, "glog_minloglevel": [351, 359, 364], "input_model": [351, 360, 363, 364], "warm_up": 351, "p50": 351, "50": [351, 380], "p90": 351, "90": [351, 353, 360, 367], "p99": 351, "99": [351, 353, 381], "sec": [351, 367], "tutori": [351, 359], "resourc": [351, 352, 372], "catalog": 351, "brand": [351, 385], "claim": [351, 385], "properti": [351, 359, 385], "trademark": 351, "larg": [352, 353, 366, 367, 369, 372, 375, 376, 377, 383], "signific": 352, "expens": 352, "deploi": [352, 399], "power": [352, 353], "mobil": 352, "shown": [352, 361, 374, 378, 379], "produc": [352, 379], "instruct": [352, 362, 370, 373, 375, 378, 379, 380, 383, 390], "besid": [352, 371], "often": 352, "patient": 352, "compact": 352, "agnost": 352, "summar": [352, 353], "usual": [352, 362, 369, 379, 390], "1x1": [352, 361], "d_conf": [352, 355], "tune_metr": [352, 389], "metric_": 352, "classifi": 352, "distillation_conf": 352, "distilled_model": 352, "intermediatelayersloss": 352, "meanwhil": [353, 369], "posttrainingdynam": [353, 354, 390], "wikitext": 353, "10004": [353, 354], "xsum": 353, "cnn": 353, "cnn_dailymail": 353, "dm": 353, "lambdalab": 353, "sd": 353, "pokemon": 353, "mlm": 353, "plm": 353, "eleutherai": 353, "neo": 353, "125m": 353, "sshleifer": 353, "wip": [353, 373], "star": 353, "ehdwns1516": 353, "uncased_swag": 353, "swag": 353, "squad": 353, "valhalla": 353, "longform": 353, "4096": [353, 381], "squadv1": 353, "lvwerra": 353, "pegasu": 353, "samsum": 353, "textattack": [353, 363], "mrpc": [353, 363, 364], "echarlaix": 353, "acc91": 353, "d37": 353, "hybrid": 353, "elast": 353, "conll03": 353, "conll2003": 353, "small": [353, 361, 375, 377], "translat": 353, "wmt16": 353, "helsinki": 353, "opu": 353, "mt": [353, 382], "en": 353, "ro": 353, "quantizationawaretrain": [353, 354], "maskinun": 353, "distilgpt2": 353, "rocketknight1": 353, "dslim": 353, "ner": 353, "mb": 353, "f1": [353, 386], "gflop": [353, 381, 384], "speedup": 353, "compar": [353, 369, 372, 383, 390], "415": [353, 367], "47": [353, 367, 381], "88": [353, 367, 380, 381], "58": [353, 381], "56": [353, 380, 381], "35": [353, 367, 381], "1x": 353, "la": [353, 372], "minilmv2": 353, "115": 353, "89": [353, 381], "28": [353, 367, 373, 381], "76": [353, 380, 381], "33x": 353, "269": 353, "253": 353, "252": [353, 380], "202": 353, "104": 353, "34": [353, 381], "87": [353, 381], "11": [353, 356, 364, 373, 381], "44": [353, 360, 367, 380, 381], "49": [353, 366, 367, 381], "94x": 353, "84": [353, 381], "85": [353, 367, 381], "21x": 353, "315": 353, "251": [353, 381], "242": [353, 367, 381], "159": [353, 380], "142": [353, 381], "33": [353, 381], "86": [353, 381], "68": [353, 380, 381], "41": [353, 367, 381], "55": [353, 380, 381], "82x": 353, "amount": [353, 372], "torchprofil": 353, "platinum": [353, 367, 381], "8280": 353, "unstructur": [353, 389], "nbsp": [353, 367, 381], "qnli": 353, "qqp": 353, "mnli": 353, "v1": 353, "tinybert_general_4l_312d": 353, "distilroberta": 353, "cola": 353, "krishna2020": 353, "googl": 353, "wikipedia": 353, "prajjwal1": 353, "approch": 353, "pruneofa": 353, "patternlock": [353, 389], "bhadresh": 353, "savani": 353, "emot": 353, "fac": 353, "mini": [353, 360, 364, 367], "gchhablani": 353, "philschmid": 353, "l6": 353, "h384": 353, "moshew": [353, 364], "80": [353, 360, 367, 381], "1x4": [353, 379], "desigh": 354, "32": [354, 359, 367, 373, 374, 376, 377, 378, 379, 380, 381, 383], "bit": [354, 355, 369, 370, 376, 379, 390], "bfloat": 354, "fetch": [354, 369, 372], "flag": 354, "enable_bf16": 354, "bfloat16": 354, "qlinear": [354, 363], "u8s8": 354, "u8u8": 354, "highli": 354, "suggest": [354, 370], "quick": [355, 358], "p_conf": [355, 389], "reduct": [355, 374, 377], "accommod": 355, "budget": 355, "tradeoff": [355, 373], "dynamic_length_config": 355, "aim": [355, 358, 360, 362], "opportun": 355, "hw": 355, "sw": 355, "satisfi": [356, 366, 375], "success": 356, "recommend": [356, 358, 361, 364, 366, 376, 380], "protobuf": [356, 364], "nightli": 356, "conda": [356, 364], "visual": 356, "studio": 356, "compat": 356, "icelak": 356, "futur": [356, 363, 370, 371, 380], "ipex": [356, 390], "13": [356, 367, 373, 381], "linux": 357, "gcc": 357, "cmake": [357, 359, 368, 380, 383], "repo_path": 357, "mkdir": [357, 359, 368, 380, 383], "dpython_execut": 357, "dne_with_sparselib": [357, 383], "neural_engine_bin": 357, "neural_engine_pi": [357, 361], "cpython": 357, "37m": 357, "x86_64": 357, "gnu": 357, "libkernellib": 357, "libneural_engin": 357, "pure": [357, 371], "certain": [358, 366], "simplifi": [358, 362], "attach": [358, 366], "distilbert_bas": 358, "assum": [358, 366, 372], "command": [358, 359, 363, 384], "repo": [358, 383], "instal": [358, 395], "These": [358, 362, 366, 372, 378], "roughli": [358, 375], "divid": [358, 366, 369, 374, 375, 378, 384], "categori": [358, 360], "dst_shape": [358, 359, 365], "father": 358, "keep_dim": 358, "ax": [358, 377], "come": 358, "rewrit": 358, "_attr": 358, "successfulli": [358, 366], "forget": [358, 362, 365], "reinstal": 358, "enter": 358, "you_work_dir": 358, "noth": [358, 366], "wrong": [358, 366], "anoth": [358, 362, 380], "correctli": 358, "distil_bert_bas": 358, "pattern_mapping_config": 358, "div": [358, 362], "even": [358, 369], "delv": 358, "recogn": [358, 399], "put": [358, 359, 362], "namedtupl": 358, "__call__": 358, "retriev": 358, "actual": [358, 359, 376], "equival": [358, 379], "supported_pattern": 358, "influenc": [358, 362], "arbitrari": 358, "pattern_dict": 358, "new_node_nam": 358, "ret_old_nod": 358, "talk": 358, "denomin": 358, "numer": [358, 390], "stabil": 358, "_set_attr": 358, "ln_node_idx": 358, "finish": [358, 362, 364], "yourself": [358, 366], "seq": [359, 377], "bert_model": 359, "30522": 359, "1024": [359, 360, 361, 381, 383], "125018112": 359, "slightli": 359, "activ": [359, 363, 364, 369, 373, 374, 375, 378, 383, 390], "throught": 359, "numactl": 359, "bind": 359, "omp_num_thread": 359, "session": 359, "close": 359, "again": [359, 376], "nerual": 359, "cc": 359, "cmakelist": 359, "reus": [359, 375], "engine_integr": 359, "itrex": 359, "cp": 359, "nlp_executor": 359, "neural_engine_exampl": 359, "ne": 359, "root": 359, "ne_root": 359, "project_source_dir": 359, "link": [359, 365, 389], "lib": 359, "runtime_output_directori": 359, "add_execut": 359, "target_include_directori": 359, "boost_inc_dir": 359, "target_link_librari": 359, "cmake_thread_libs_init": 359, "gflag": 359, "dir": 359, "set_target_properti": 359, "analyz": 360, "let": [360, 365, 372, 373], "readm": [360, 363], "run_executor": [360, 364], "model_and_token": [360, 363, 364], "Of": [360, 366, 372], "cours": [360, 366, 372], "proflil": 360, "latanc": 360, "perf": [360, 379, 383, 384], "perfrom": 360, "chrome": 360, "tell": [360, 362, 370, 371], "inst": 360, "pref": 360, "semi": 360, "70": [360, 367], "256x256": [360, 383], "settabl": 360, "256x1024": 360, "1024x256": 360, "gelu_tanh": [360, 365], "add_37": 360, "116": [360, 381], "641": 360, "00": 360, "075": 360, "0375": 360, "comparison": [360, 379], "185": 360, "801": 360, "693": 360, "366": 360, "content": 360, "part1": [360, 365], "modif": 360, "xlsx": 360, "titl": [360, 385], "model_infer": 360, "friendli": [360, 375, 376], "000": 360, "wall": 360, "durat": 360, "17": [360, 367, 373, 381], "138": 360, "iteration4": 360, "726": 360, "phrase": 360, "0m": 360, "perm": [360, 377], "add_284": 360, "028": [360, 381], "044": 360, "reshape_tim": 360, "004m": 360, "forward_tim": 360, "044m": 360, "input_tensor_nam": 360, "matmul_357": 360, "matmul_358": 360, "matmul_346": 360, "input_typ": 360, "f32": [360, 365], "output_tensor_nam": 360, "output_shap": 360, "append_op": 360, "src1_perm": 360, "try": [361, 390], "pictur": [361, 369, 382], "bring": [361, 374, 378, 379], "merg": [361, 366], "off": 361, "model_path": 361, "isa": [361, 368, 370, 375, 378, 379, 380], "int8_model_path": 361, "shape_0": 361, "shape_1": 361, "shape_2": 361, "enlarg": 361, "subsequ": [361, 375, 378], "remark": 361, "micro": [361, 369, 374, 379], "oc": [361, 383], "mk": 361, "kn": 361, "nhwc": 361, "nxhxw": 361, "h": 361, "nk": 361, "km": 361, "mmkmb": 361, "mmxmb": 361, "fulfil": 361, "omp": 361, "higher": [361, 377, 379, 383, 390], "unrol": [361, 372, 374], "know": [361, 373], "disk": [361, 363], "dp": 361, "executionopt": 361, "enable_op_tun": 361, "execution_opt": 361, "engine_dispatch_t": 361, "workspac": 361, "tabl": [361, 371, 379], "row": [361, 372, 373, 375, 379, 389], "rest": [361, 362, 366, 377, 379], "hash": [361, 370], "kernel_config": [361, 383], "kernel_nam": [361, 383], "3025159985633461085": 361, "40": [361, 367], "14124194128933833351": 361, "thing": 361, "affect": [361, 375, 378, 384], "simul": [361, 379, 380], "warmup_it": 361, "num_iter": 361, "dispatch_table_file_root": 361, "file_root": 361, "script": [361, 363, 382], "prevent": 361, "imprecis": 361, "purpos": [362, 366, 370, 375], "realiz": 362, "suppli": [362, 366], "recognit": [362, 366], "embeddings_reshap": 362, "said": 362, "thought": 362, "st": 362, "nd": 362, "copi": [362, 377], "greater": [362, 386, 387], "sent": 362, "written": 362, "phenomenon": 362, "Its": 362, "situat": [362, 376], "nod": 362, "leav": [362, 377, 379, 383], "old_node_index": 362, "_get_pattern_info": 362, "_create_out_pattern": 362, "_replace_pattern": 362, "emitt": 363, "netron": 363, "bash": [363, 364], "prepare_model": [363, 364], "sh": [363, 364, 384], "ptq": 363, "ir_path": 363, "focu": [364, 377, 386], "home": 364, "distilbert_base_uncas": 364, "prepare_dataset": 364, "shell": 364, "tokenizer_dir": 364, "data_dir": 364, "geluoper": 365, "destructor": 365, "operatorconfig": 365, "algorithm_": 365, "eng_": 365, "eltwise_forward": 365, "gelu_p_": 365, "src_m_": 365, "dst_m_": 365, "attrs_map": 365, "operator_conf_": 365, "becuas": 365, "src_shape": 365, "dst_tensor_ptr": 365, "set_shap": 365, "stride": [365, 369], "src_stride": 365, "getstrid": 365, "dst_stride": 365, "desc": [365, 370, 371], "src_md": 365, "dst_md": 365, "part2": 365, "gelu_algorithm": 365, "gelu_erf": 365, "eltwise_gelu_erf": 365, "eltwise_gelu_tanh": 365, "gelu_d": 365, "prop_kind": 365, "primitive_desc": 365, "gelu_pd": 365, "unrefernc": 365, "manag": 365, "strictli": 365, "alia": 365, "src_data": 365, "dst_data": 365, "mutable_data": 365, "data_ptr": 365, "stream": 365, "set_data_handl": 365, "const_cast": 365, "reinterpret_cast": 365, "memory_args_": 365, "dnnl_arg_src": 365, "dnnl_arg_dst": 365, "unref": 365, "unref_tensor": 365, "especi": [365, 379], "int8_lut_optim": 365, "int8_lut_acc_test": 365, "set_dtyp": 365, "register_operator_class": 365, "rule": 366, "recruit": 366, "ln_pattern": 366, "grow": 366, "concis": 366, "intuit": [366, 375], "choos": 366, "prefer": [366, 377], "longer": 366, "ones": 366, "op_type1": 366, "op_type2": 366, "type1": 366, "type2": 366, "elig": 366, "a_node_name_1": 366, "b_node_name_1": 366, "c_node_name_1": 366, "a_node_name_2": 366, "b_node_name_2": 366, "c_node_name_2": 366, "a_node_name_n": 366, "b_node_name_n": 366, "c_node_name_n": 366, "bert_large_model_path": 366, "layer_0": 366, "layer_1": 366, "layer_2": 366, "afterward": 366, "volatil": 366, "incorrect": 366, "outcom": 366, "Or": 366, "exactli": 366, "screen": 366, "occur": [366, 369, 376], "alreadi": 366, "moment": 366, "varianc": [366, 376], "batchnorm": 366, "mul_1": 366, "mul_2": 366, "add_1": 366, "07": [367, 381], "8375c": [367, 381], "aw": [367, 381], "c6i": [367, 381], "12xlarg": [367, 381], "vari": [367, 381], "factor": [367, 381], "www": [367, 381], "batchsiz": 367, "2652": 367, "36": [367, 381], "513": 367, "lt": [367, 381], "50m": 367, "2181": 367, "43": [367, 381], "628": 367, "1719": 367, "91": [367, 381], "75": [367, 381], "1487": [367, 381], "255": [367, 378, 390], "1220": 367, "39": [367, 381], "143": 367, "1304": 367, "46": [367, 381], "066": 367, "1102": [367, 381], "870": 367, "487": 367, "750": 367, "82": [367, 380, 381], "690": [367, 381], "188": 367, "910": [367, 381], "921": [367, 381], "729": 367, "71": [367, 380, 381], "619": 367, "38": [367, 380, 381], "821": [367, 381], "499": 367, "429": [367, 380], "936": [367, 381], "680": 367, "318": [367, 381], "557": 367, "262": 367, "467": 367, "589": 367, "405": 367, "339": 367, "473": 367, "119": [367, 381], "389": 367, "945": [367, 381], "360": 367, "274": 367, "843": 367, "259": [367, 380, 381], "442": 367, "241": 367, "364": 367, "016": [367, 381], "303": 367, "266": 367, "45": [367, 381], "05": [367, 381], "221": 367, "973": 367, "112": [367, 381], "349": 367, "938": [367, 381], "275": [367, 380], "614": 367, "217": 367, "37": [367, 381], "039": 367, "301": 367, "166": 367, "033": 367, "320": 367, "769": 367, "263": 367, "724": [367, 381], "207": 367, "819": [367, 381], "181": 367, "021": 367, "979": [367, 381], "74": [367, 381], "235": 367, "63": [367, 381], "091": 367, "51": [367, 381], "914": [367, 381], "698": [367, 381], "905": [367, 381], "8972": 367, "076": [367, 381], "20m": 367, "7192": 367, "19": [367, 373, 381], "906": 367, "5482": 367, "509": 367, "4808": 367, "952": 367, "3678": 367, "409": 367, "4750": 367, "975": [367, 381], "3647": 367, "867": 367, "2921": 367, "587": [367, 381], "2576": 367, "18": [367, 373, 381], "768": [367, 381], "2131": [367, 381], "913": [367, 381], "2804": 367, "096": 367, "2263": 367, "037": 367, "1938": 367, "756": [367, 381], "1581": 367, "15": [367, 373, 374, 379, 381], "1409": 367, "015": 367, "2116": 367, "113": 367, "1777": 367, "972": [367, 381], "1474": 367, "392": 367, "1278": 367, "1137": 367, "752": 367, "1594": 367, "124": 367, "1347": [367, 381], "1126": 367, "993": [367, 381], "258": 367, "890": [367, 381], "877": [367, 381], "1319": 367, "1086": 367, "931": [367, 381], "545": 367, "833": 367, "332": [367, 381], "747": [367, 381], "141": 367, "1106": [367, 381], "31": [367, 373, 374, 381], "924": 367, "446": 367, "719": 367, "633": 367, "501": 367, "816": 367, "961": 367, "549": 367, "807": 367, "868": [367, 381], "701": [367, 381], "117": 367, "613": 367, "618": 367, "515": 367, "75384": 367, "989": 367, "1m": 367, "55628": 367, "917": 367, "49120": 367, "957": [367, 381], "41598": 367, "39218": 367, "31211": 367, "788": [367, 381], "28399": 367, "848": 367, "24910": 367, "966": 367, "20505": 367, "18575": 367, "865": 367, "25485": 367, "987": 367, "17468": 367, "16771": 367, "971": [367, 381], "16004": 367, "996": [367, 381], "13381": 367, "894": [367, 381], "13990": 367, "863": [367, 381], "13154": 367, "12535": 367, "12102": 367, "998": 367, "8426": [367, 381], "8736": 367, "8282": 367, "967": 367, "6659": 367, "898": [367, 381], "6477": 367, "6290": 367, "974": [367, 381], "8598": 367, "6449": 367, "935": [367, 381], "6263": [367, 381], "965": [367, 381], "6080": 367, "988": 367, "3684": 367, "817": [367, 381], "6246": 367, "978": 367, "6374": 367, "947": [367, 381], "6026": 367, "3300": [367, 381], "926": 367, "3226": 367, "6221": 367, "958": 367, "6322": 367, "6081": 367, "985": [367, 381], "3368": 367, "3264": 367, "distillbert": 367, "15460": 367, "296": 367, "10m": 367, "13129": 367, "363": 367, "11323": 367, "578": [367, 381], "10072": 367, "599": 367, "8689": 367, "7901": 367, "205": [367, 381], "6737": 367, "562": 367, "5440": 367, "904": [367, 381], "4920": 367, "786": [367, 381], "4460": 367, "053": 367, "5280": 367, "179": 367, "4339": 367, "244": [367, 380], "3634": [367, 381], "928": 367, "3255": 367, "211": [367, 381], "2928": 367, "197": [367, 381], "3681": 367, "527": [367, 381], "2965": [367, 381], "106": [367, 381], "2741": 367, "862": [367, 381], "2351": 367, "2150": 367, "282": 367, "2918": 367, "316": 367, "2505": [367, 381], "602": 367, "2010": [367, 381], "995": 367, "1872": 367, "609": [367, 381], "2409": 367, "983": 367, "1993": 367, "013": 367, "1671": [367, 381], "627": 367, "1484": 367, "1342": [367, 381], "1910": 367, "456": [367, 381], "1659": 367, "687": 367, "1293": 367, "245": [367, 381], "1230": 367, "798": 367, "1091": 367, "261": 367, "1627": 367, "908": 367, "1397": 367, "684": 367, "1130": 367, "1081": 367, "353": 367, "982": [367, 381], "187": [367, 380], "manufactur": [367, 381], "amazon": [367, 381], "ec2": [367, 381], "bio": [367, 381], "1021": [367, 381], "microcod": [367, 381], "0xd000331": [367, 381], "irq": [367, 381], "balanc": [367, 381], "xeonplatinum": 367, "90ghz": [367, 381], "9ghz": [367, 381], "5ghz": [367, 381], "thread": 367, "socket": [367, 381], "numa": [367, 381], "turbo": [367, 381], "frequencygovern": [367, 381], "workdir": 368, "dne_with_test": 368, "ON": [368, 383], "ut": [368, 371], "dne_with_sparselib_onli": [368, 383], "dne_with_sparselib_benchmark": [368, 383], "test_spmm_vnni_kernel": 368, "box": 368, "profl": [368, 380], "op_attr": [368, 370, 371, 377], "spmm_desc": 368, "spmm_kern": 368, "data0": 368, "data1": 368, "data2": 368, "data3": 368, "data4": 368, "vnni": [368, 369, 373, 377, 378, 381, 383, 390, 397], "amx": [368, 375, 378, 383, 397], "residu": 368, "avx512": [368, 369, 373, 390], "mha": [368, 397], "avx512f": [368, 377, 383, 397], "spmm": [369, 377, 383], "deeplearn": 369, "multipli": [369, 375, 379, 390], "adopt": [369, 374, 379], "modern": 369, "spatial": [369, 375], "program": [369, 385], "64byte": 369, "organ": 369, "associ": 369, "access": [369, 374, 375], "b1": 369, "b2": 369, "simd": [369, 370, 374], "evenli": 369, "discontinu": 369, "fulli": [369, 378, 379], "worst": 369, "veri": [369, 371, 372, 375], "miss": [369, 379], "frequent": 369, "destin": [369, 374, 377, 383], "l1": 369, "l2": [369, 375, 383], "perhap": 369, "mxk": [369, 383], "bxm": 369, "xk": 369, "bxkxm": 369, "2d": [369, 383], "respons": [369, 375, 376, 378], "frac": [369, 377], "binaryop": 370, "dl": 370, "changeabl": 370, "operand": [370, 374], "horizont": 370, "overhead": [370, 376, 377, 378, 379], "move": 370, "binaryop_injector": 370, "postop": [370, 371, 383], "quit": 370, "eltwise_injector": [370, 371], "escap": [370, 371], "compute_vector": 370, "arithmet": 370, "brows": 370, "vpaddb": 370, "vaddp": 370, "unlik": 370, "ptr": [370, 371, 380], "static_addr": 370, "addr": 370, "binaryop_alg": 370, "per_channel_qu": 370, "per_channel_dequ": 370, "op_alg": [370, 371], "op_dt": 370, "alg": 370, "set_scal": 370, "set_zp": 370, "binary_injector_init": 370, "set_mask": 370, "reg64": [370, 371], "zmm": [370, 371, 374, 376, 379], "get_addr": 370, "broadcast": [370, 374, 379, 380, 383], "enable_mask": 370, "vector_comput": [370, 371], "bianryop": 370, "comput_vector": 370, "wrapper": 370, "jit_binary_injector": 370, "addr_typ": 370, "jit_gener": [370, 371], "opmask": [370, 371], "mov": [370, 380], "addr_ptr": 370, "zmm_src1": 370, "regexp": 370, "step1": [370, 371, 378], "binary_injector": 370, "step2": [370, 371, 378], "data_param": 370, "param_": [370, 371], "front": 370, "append_loop_len": 370, "zmm_byte_s": 370, "get_data_s": 370, "offset_exp": 370, "bianryop_attr_list": 370, "append_vec": 370, "binary_add": 370, "eltwis": 371, "tradit": 371, "obvious": [371, 372, 376], "useless": 371, "idea": [371, 379, 389], "xbyak": 371, "binari": [371, 378, 383, 397], "algo": 371, "aplha": 371, "sacl": 371, "postop_alg": 371, "int8_lut": 371, "postop_typ": 371, "mathemat": 371, "satur": 371, "round": [371, 390], "unus": 371, "\u03b1x": 371, "\u03b2": 371, "le": 371, "gt": 371, "eng_kind_": 371, "omp_get_max_thread": 371, "omp_get_num_proc": 371, "eltwise_injector_init": 371, "chian": 371, "escape_reg": 371, "escape_eras": 371, "eras": 371, "prepare_t": 371, "zmm_src": 371, "postop_idx": 371, "reg_idx": 371, "step0": 371, "jit_eltwiseop_t": 371, "assign_reg": 371, "eltwiseop_kd_t": 371, "op_desc_": 371, "params_": 371, "remain_task_mask": 371, "scratch_": 371, "r10": 371, "reg_src": 371, "addr_src": 371, "r15": [371, 380], "addr_dst": 371, "r14": [371, 380], "reg_param": 371, "rdi": [371, 380], "remain_element_num": 371, "rsi": 371, "getidx": 371, "alloc": [371, 372, 375], "rcx": 371, "rdx": 371, "rsp": 371, "step3": [371, 378], "preambl": 371, "load_param": 371, "vmovup": [371, 380], "postambl": 371, "fp32_gelu_attr": 371, "bf16_gelu_attr": 371, "push_back": 371, "gen_cas": 371, "data0_desc": 371, "postop_list": 371, "fp32_gelu": [371, 383], "fp32_exp": 371, "mask_mock1": 371, "reg64_mock1": 371, "zmm_mock1": 371, "fp32_exp_attr": 371, "data1_desc": 371, "bf16_gelu": 371, "bf16_exp": [371, 383], "bf16_exp_attr": 371, "dt1op1": 371, "dt2op2": 371, "hase": 371, "get_true_data": 371, "rf_data": 371, "your_kernel_log": 371, "apply_postop_list": 371, "unit_test_util": 371, "articl": [372, 390], "gpu": 372, "opencl": 372, "snippet": 372, "unintellig": 372, "__kernel": 372, "naive_gemm": 372, "__global": 372, "globalrow": 372, "get_global_id": 372, "globalcol": 372, "col": [372, 373, 376, 378], "over": [372, 374, 377], "acc": [372, 383, 384], "0f": 372, "mxn": [372, 378, 383], "2xk": 372, "redund": [372, 389], "asub": 372, "bsub": 372, "tile_gemm": 372, "get_local_id": 372, "get_group_id": 372, "__local": 372, "initialis": 372, "accumul": [372, 377, 379], "numtil": 372, "tiledrow": 372, "tiledcol": 372, "synchronis": 372, "barrier": 372, "clk_local_mem_f": 372, "full": [372, 385, 390], "white": 372, "figur": [372, 375, 376, 377, 379, 382], "half": [372, 378], "correspondingli": 372, "increas": 372, "workload": [372, 377], "localmemori": 372, "tight": 372, "ll": 372, "twice": [372, 378], "ping": 372, "pong": 372, "tidm": 372, "tidn": 372, "offsetm": 372, "offset": [372, 376, 377], "offsetn": 372, "areg": 372, "breg": 372, "wm": 372, "wn": 372, "lpta": 372, "tid": 372, "mod2": 372, "div2": 372, "tiledindex": 372, "indexa": 372, "indexb": 372, "veca": 372, "vecb": 372, "tt": 372, "pragma": 372, "tdpbf16p": 373, "16x32": 373, "32x16": 373, "FOR": [373, 374, 379], "TO": 373, "colsb": 373, "byte": [373, 379], "endfor": [373, 374, 379], "write_row_and_zero": 373, "zero_upper_row": 373, "zero_tileconfig_start": 373, "layout": [373, 376, 377, 378], "successor": 373, "1x16": [373, 379], "concaten": [373, 379, 383], "intrins": 373, "tileloadd": 373, "nonzero": 373, "vmovdqu32": 373, "consum": 373, "altern": [373, 379], "lot": 373, "disast": 373, "16x1": [373, 377], "greatli": [373, 378], "impact": 373, "fly": 373, "__m512i": 373, "_mm512_set_epi16": 373, "29": [373, 381], "27": [373, 381], "26": [373, 380, 381], "25": [373, 381, 383], "22": [373, 381], "21": [373, 381], "__m256i": 373, "lo": 373, "_mm256_loadu_epi": 373, "li": 373, "vec": 373, "_mm512_inserti32x8": 373, "_mm512_castsi256_si512": 373, "_mm512_permutexvar_epi16": 373, "_mm512_storeu_epi32": 373, "vfmadd": 374, "vfmadd231p": [374, 380], "degre": 374, "parallel": [374, 375, 376, 379, 383], "conting": 374, "bsc": 374, "variant": 374, "bsr": 374, "openmp": 374, "thu": [374, 390], "relief": 374, "bottleneck": [374, 376], "microkernel": 374, "peripher": 374, "implicit": 374, "technologi": 375, "among": [375, 378], "satisfactori": 375, "inevit": 375, "solv": [375, 376, 390], "facilit": [375, 378], "At": [375, 376, 378], "flexibl": 375, "divis": 375, "tdpbssd": 375, "tile_k": 375, "formula": 375, "max_tile_k": 375, "back": [375, 376, 377, 378], "extra": 375, "hope": 375, "large_wei_threshold": 375, "16xpad_n": 375, "buffer": [375, 376, 378], "tilestor": 375, "pseudo": 375, "tile_m": [375, 383], "16xn": 375, "dp_tile_n": 375, "k_dim_dp": 375, "write_tile_to_tmp_buf": 375, "dequantize_tile_on_tmp_buf": 375, "calculate_scale_on_tmp_buf": 375, "write_back_scal": 375, "quant_tile_n": 375, "quantize_on_tmp_buf": 375, "write_tile_to_dst": 375, "per_channel_dynamic_quant": 375, "desid": 375, "du": 375, "principl": 375, "possibl": 375, "premis": 375, "rate": [375, 376], "therebi": 375, "feel": [375, 383], "benefit": [375, 379, 390], "suitabl": 375, "chart": 375, "naiv": 376, "solut": [376, 379], "gap": 376, "layernrom": 376, "3d": [376, 397], "poor": 376, "fewer": 376, "wast": 376, "inconsist": 376, "scene": 376, "quarter": 376, "depict": 376, "protocol": 376, "bandwidth": [376, 378, 390], "gain": [376, 390], "brought": [376, 390], "majotr": 376, "layternorm": 376, "encapsul": 376, "ba": [376, 380, 383], "discret": 376, "append": [376, 383, 384], "overal": 376, "p2031": [377, 383], "2013": 377, "noperm": [377, 383], "p1302": [377, 383], "p2013": [377, 383], "equat": [377, 390], "dot": [377, 390], "rm": 377, "q": [377, 378], "v": [377, 378], "qk": 377, "textunderscor": 377, "nativ": 377, "sparelib": 377, "axis": 377, "conceptu": 377, "head_nun": 377, "perm2031": 377, "perm2013": 377, "perm1302": 377, "concept": [377, 379], "lh": 377, "float32": [377, 390], "illustr": 377, "inner": 377, "16x16": 377, "drawn": 377, "lighter": 377, "cell": [377, 379], "respectfulli": 377, "vnni_noperm_p2013_p1302": 377, "transpose_4b_8x8": 377, "legend": 377, "explan": 377, "contigu": 377, "ellipsi": 377, "thinner": 377, "border": 377, "bolder": 377, "color": [377, 379], "16x32x16": 377, "lead": [377, 379], "suboptim": 377, "piec": 377, "turn": 377, "boost": 377, "twofold": 377, "unifi": 377, "roll": 377, "logic": [378, 380], "worth": 378, "clear": 378, "fact": [378, 390], "spr": 378, "latter": 378, "2nd": 378, "clx": 378, "4x16": [378, 379], "launch": 378, "prior": 378, "iteraion": 378, "polynomi": 378, "essenti": 378, "incom": 378, "far": 378, "four": 379, "adjac": 379, "unsign": [379, 383], "sign": [379, 390], "tmp1": 379, "zeroextend16": 379, "signextend16": 379, "tmp2": 379, "tmp3": 379, "tmp4": 379, "dword": [379, 380], "transposit": 379, "discuss": 379, "typic": 379, "sai": 379, "4x4": 379, "pick": 379, "mxkxn": 379, "problem": [379, 383], "densiti": 379, "fma": 379, "bubbl": 379, "16x4": 379, "highlight": 379, "4x": 379, "talent": 379, "smart": 379, "gui": [379, 380], "swizzl": 379, "workaround": 379, "unfortun": 379, "difficulti": 379, "bad": 379, "cost": 379, "2x1": 379, "conclus": 379, "against": 379, "brief": 380, "sparse_lib_verbos": 380, "sparselib_verbos": 380, "nthr": 380, "224": [380, 381], "exec": 380, "shape_256_256_128": 380, "4658": [380, 381], "56982": 380, "itt": 380, "dne_with_sparselib_vtun": 380, "opt": 380, "latest": [380, 391], "manual": 380, "dcmake_vtune_hom": 380, "sparse_lib_vtun": 380, "ssh": 380, "analys": 380, "verifi": 380, "sparse_lib_dump": 380, "xed64": 380, "click": 380, "xdi": 380, "push": 380, "53": [380, 381], "rbx": 380, "rbp": 380, "4154": 380, "r12": 380, "4155": 380, "r13": 380, "4156": 380, "4157": 380, "dataxf": 380, "bd00040000": 380, "ebp": 380, "0x400": 380, "4c8b3f": 380, "qword": 380, "4c8b7708": 380, "0x8": 380, "4c8b6f10": 380, "0x10": 380, "1a": 380, "avx512evex": 380, "62f17d48efc0": 380, "vpxord": 380, "zmm0": 380, "62f15d48efe4": 380, "zmm4": 380, "62513d48efc0": 380, "zmm8": 380, "2c": 380, "62511d48efe4": 380, "zmm12": 380, "62f17548efc9": 380, "zmm1": 380, "62f15548efe": 380, "zmm5": 380, "3e": 380, "62513548efc9": 380, "zmm9": 380, "62511548efe": 380, "zmm13": 380, "4a": 380, "62f16d48efd2": 380, "zmm2": 380, "62f14d48eff6": 380, "zmm6": 380, "62512d48efd2": 380, "zmm10": 380, "5c": 380, "62510d48eff6": 380, "zmm14": 380, "62": [380, 381], "62c17c481006": 380, "zmm16": 380, "zmmword": 380, "62c17c48104e01": 380, "zmm17": 380, "0x40": 380, "6f": 380, "62c17c48105602": 380, "zmm18": 380, "0x80": 380, "62427d48183f": 380, "vbroadcastss": 380, "zmm31": 380, "7c": 380, "vfma": 380, "62927d40b8c7": 380, "62927540b8cf": 380, "62926d40b8d7": 380, "8e": 380, "62427d48187f04": 380, "95": [380, 381], "62927d40b8e7": 380, "9b": 380, "62927540b8ef": 380, "a1": 380, "62926d40b8f7": 380, "a7": 380, "62427d48187f08": 380, "0x20": 380, "ae": 380, "62127d40b8c7": 380, "b4": 380, "62127540b8cf": 380, "62126d40b8d7": 380, "c0": 380, "62427d48187f0c": 380, "0x30": 380, "c7": 380, "62127d40b8e7": 380, "62127540b8ef": 380, "62126d40b8f7": 380, "d9": 380, "62c17c48104603": 380, "0xc0": 380, "e0": 380, "62c17c48104e04": 380, "0x100": 380, "e7": 380, "62c17c48105605": 380, "0x140": 380, "ee": 380, "62427d48187f01": 380, "0x4": 380, "f5": 380, "fb": 380, "101": 380, "107": 380, "62427d48187f05": 380, "0x14": 380, "10e": 380, "114": 380, "11a": 380, "62427d48187f09": 380, "0x24": 380, "12d": 380, "133": 380, "139": 380, "62427d48187f0d": 380, "0x34": 380, "140": 380, "146": 380, "14c": 380, "152": 380, "62c17c48104606": 380, "0x180": 380, "62c17c48104e07": 380, "0x1c0": 380, "62c17c48105608": 380, "0x200": 380, "167": [380, 381], "62427d48187f02": 380, "16e": 380, "174": 380, "17a": 380, "180": 380, "62427d48187f06": 380, "0x18": 380, "18d": 380, "193": 380, "199": 380, "62427d48187f0a": 380, "0x28": 380, "1a0": 380, "1a6": 380, "1ac": 380, "1b2": 380, "62427d48187f0e": 380, "0x38": 380, "1b9": 380, "1bf": 380, "1c5": 380, "1cb": 380, "62c17c48104609": 380, "0x240": 380, "1d2": 380, "62c17c48104e0a": 380, "0x280": 380, "1d9": 380, "62c17c4810560b": 380, "0x2c0": 380, "1e0": 380, "62427d48187f03": 380, "0xc": 380, "1e7": 380, "1ed": 380, "1f3": 380, "1f9": 380, "62427d48187f07": 380, "0x1c": 380, "200": 380, "206": 380, "20c": 380, "212": 380, "62427d48187f0b": 380, "0x2c": 380, "219": [380, 381], "21f": 380, "225": 380, "22b": 380, "62427d48187f0f": 380, "0x3c": 380, "232": [380, 381], "238": 380, "23e": 380, "62d17c48114500": 380, "24b": 380, "62d17c48116503": 380, "62517c48114506": 380, "62517c48116509": 380, "260": 380, "62d17c48114d01": 380, "267": 380, "62d17c48116d04": 380, "26e": 380, "62517c48114d07": 380, "62517c48116d0a": 380, "27c": 380, "62d17c48115502": 380, "283": 380, "62d17c48117505": 380, "28a": 380, "62517c48115508": 380, "291": 380, "62517c4811750b": 380, "298": [380, 381], "pop": 380, "415f": 380, "29a": 380, "415e": 380, "29c": 380, "415d": 380, "29e": 380, "415c": 380, "2a0": 380, "5d": 380, "2a1": 380, "5b": 380, "2a2": 380, "avx": 380, "c5f877": 380, "vzeroupp": 380, "2a5": 380, "xed3": 380, "stat": 380, "cycl": 380, "29220": 380, "236418": 380, "118": 380, "2003": 380, "54": [380, 381], "00348609": 381, "601": 381, "00310676": 381, "675": 381, "00261406": 381, "802": 381, "00216633": 381, "968": 381, "068": 381, "00164658": 381, "1273": 381, "0112255": 381, "284": 381, "00947462": 381, "885": 381, "377": 381, "00764146": 381, "1097": 381, "78": 381, "0058452": 381, "1435": 381, "00407149": 381, "2060": 381, "0127448": 381, "658": 381, "198": 381, "0111132": 381, "754": 381, "835": 381, "00940157": 381, "892": 381, "00760217": 381, "1103": 381, "0054935": 381, "1527": 381, "044202": 381, "759": 381, "0364227": 381, "0292454": 381, "1147": 381, "0223472": 381, "1501": 381, "0149058": 381, "2251": 381, "216338": 381, "620": 381, "408": 381, "179593": 381, "345": 381, "135054": 381, "806": 381, "0946983": 381, "1417": 381, "0609701": 381, "2201": 381, "190508": 381, "704": 381, "526": 381, "159566": 381, "841": 381, "130863": 381, "1025": 381, "103927": 381, "1291": 381, "0739962": 381, "1813": 381, "0250395": 381, "753": 381, "784": 381, "0210726": 381, "895": 381, "682": 381, "0170987": 381, "0130778": 381, "1443": 381, "00923343": 381, "2044": 381, "3072": 381, "112882": 381, "668": 381, "818": 381, "0879386": 381, "858": 381, "525": 381, "068835": 381, "1096": 381, "79": 381, "0487342": 381, "1549": 381, "0317559": 381, "2377": 381, "109308": 381, "679": 381, "0922471": 381, "805": 381, "638": 381, "0759107": 381, "0558945": 381, "1329": 381, "61": 381, "0358752": 381, "2071": 381, "57": 381, "00565044": 381, "742": 381, "297": 381, "00503604": 381, "832": 381, "00447544": 381, "937": 381, "182": 381, "00368479": 381, "1138": 381, "00270954": 381, "1547": 381, "0183481": 381, "386": 381, "0154121": 381, "1088": 381, "0125696": 381, "1334": 381, "00959948": 381, "1747": 381, "72": 381, "00677631": 381, "2475": 381, "0206321": 381, "813": 381, "162": 381, "0184267": 381, "483": 381, "0164699": 381, "1018": 381, "66": 381, "0135801": 381, "1235": 381, "010552": 381, "1589": 381, "0721208": 381, "930": 381, "506": 381, "059613": 381, "1125": 381, "0483781": 381, "1387": 381, "0366748": 381, "1829": 381, "83": 381, "0248571": 381, "2699": 381, "376539": 381, "712": 381, "902": 381, "31929": 381, "840": 381, "727": 381, "261265": 381, "1027": 381, "193579": 381, "1386": 381, "118429": 381, "2266": 381, "309195": 381, "177": 381, "256619": 381, "1046": 381, "213454": 381, "1257": 381, "165192": 381, "1624": 381, "118402": 381, "2267": 381, "0402931": 381, "855": 381, "0341169": 381, "0275282": 381, "1371": 381, "0211298": 381, "1786": 381, "0150693": 381, "218765": 381, "215": 381, "180921": 381, "834": 381, "592": 381, "142778": 381, "1057": 381, "097692": 381, "1545": 381, "0620034": 381, "2435": 381, "174101": 381, "853": 381, "73": 381, "148369": 381, "1001": 381, "123554": 381, "1203": 381, "0923655": 381, "1609": 381, "0591283": 381, "2513": 381, "0074474": 381, "844": 381, "00657187": 381, "00570175": 381, "00483104": 381, "1302": 381, "00367406": 381, "1712": 381, "0247063": 381, "0207462": 381, "1213": 381, "03": 381, "0169214": 381, "0129936": 381, "1936": 381, "0090376": 381, "2784": 381, "0275881": 381, "912": 381, "0240415": 381, "77": 381, "0207876": 381, "1210": 381, "0177873": 381, "1414": 381, "0140129": 381, "1795": 381, "0994565": 381, "1012": 381, "0819725": 381, "1228": 381, "0660571": 381, "1523": 381, "0497077": 381, "2025": 381, "0341912": 381, "2944": 381, "500698": 381, "804": 381, "184": 381, "420619": 381, "287": 381, "337529": 381, "1192": 381, "94": 381, "251221": 381, "1602": 381, "158668": 381, "2537": 381, "412912": 381, "155": 381, "346369": 381, "1162": 381, "2831": 381, "1422": 381, "220585": 381, "1825": 381, "156168": 381, "2578": 381, "0538395": 381, "1051": 381, "0455066": 381, "1244": 381, "036978": 381, "1531": 381, "028483": 381, "1987": 381, "0200457": 381, "2824": 381, "283445": 381, "799": 381, "069": 381, "236101": 381, "959": 381, "302": 381, "188745": 381, "1199": 381, "135532": 381, "0845544": 381, "2678": 381, "227976": 381, "977": 381, "19463": 381, "1145": 381, "161251": 381, "1382": 381, "65": 381, "123585": 381, "1804": 381, "0840322": 381, "2653": 381, "00940534": 381, "891": 381, "00821985": 381, "1020": 381, "00701343": 381, "1196": 381, "08": 381, "00579899": 381, "1446": 381, "00464705": 381, "1805": 381, "0336342": 381, "997": 381, "629": 381, "0276086": 381, "1215": 381, "0224431": 381, "1495": 381, "09": 381, "0170807": 381, "1964": 381, "0117535": 381, "2854": 381, "0358603": 381, "0310083": 381, "1082": 381, "0260486": 381, "1288": 381, "0215163": 381, "1559": 381, "0170105": 381, "1972": 381, "133295": 381, "1006": 381, "92": 381, "111186": 381, "1207": 381, "0881114": 381, "0665519": 381, "2016": 381, "0454416": 381, "2953": 381, "611718": 381, "645": 381, "533329": 381, "430288": 381, "1247": 381, "307141": 381, "198987": 381, "2698": 381, "02": [381, 386], "556249": 381, "163": 381, "462737": 381, "1160": 381, "37537": 381, "1430": 381, "28321": 381, "1895": 381, "203901": 381, "2633": 381, "0716356": 381, "1053": 381, "0603517": 381, "1250": 381, "0490096": 381, "1540": 381, "0375683": 381, "2009": 381, "0267483": 381, "2822": 381, "3572": 381, "845": 381, "437": 381, "299561": 381, "1008": 381, "228752": 381, "1320": 381, "165648": 381, "1823": 381, "105656": 381, "2858": 381, "298907": 381, "994": 381, "529": 381, "255598": 381, "1163": 381, "20824": 381, "1427": 381, "159911": 381, "1858": 381, "111211": 381, "2673": 381, "0152997": 381, "685": 381, "358": 381, "0131446": 381, "797": 381, "0109669": 381, "956": 381, "132": 381, "00921101": 381, "00755406": 381, "1388": 381, "0553082": 381, "758": 381, "351": 381, "0458481": 381, "826": 381, "0367258": 381, "1142": 381, "06": 381, "027535": 381, "018464": 381, "2271": 381, "0597882": 381, "0510217": 381, "822": 381, "062": 381, "0421644": 381, "0333436": 381, "0296385": 381, "1415": 381, "22241": 381, "337": 381, "18324": 381, "915": 381, "145322": 381, "1154": 381, "1083": 381, "0728843": 381, "2301": 381, "11793": 381, "600": 381, "929398": 381, "722": 381, "720963": 381, "823": 381, "510039": 381, "1315": 381, "336519": 381, "1994": 381, "909941": 381, "737": 381, "508": 381, "753487": 381, "644": 381, "606477": 381, "459915": 381, "1459": 381, "303455": 381, "2211": 381, "123429": 381, "764": 381, "586": 381, "103035": 381, "923": 381, "0825026": 381, "1143": 381, "0625579": 381, "1508": 381, "0426942": 381, "2210": 381, "60813": 381, "734": 381, "483053": 381, "781": 381, "462": 381, "357348": 381, "1056": 381, "256715": 381, "1470": 381, "169119": 381, "2232": 381, "503341": 381, "738": 381, "42134": 381, "881": 381, "342843": 381, "255199": 381, "1456": 381, "174091": 381, "2134": 381, "0142667": 381, "0123966": 381, "1015": 381, "0105865": 381, "1188": 381, "00860835": 381, "1461": 381, "00655363": 381, "1919": 381, "0532543": 381, "0447548": 381, "1124": 381, "0348388": 381, "1444": 381, "0266886": 381, "1885": 381, "0177431": 381, "2836": 381, "69": 381, "0549107": 381, "916": 381, "608": 381, "0475549": 381, "1058": 381, "0401657": 381, "1253": 381, "0326952": 381, "1539": 381, "025032": 381, "220947": 381, "911": 381, "178324": 381, "1128": 381, "137361": 381, "1465": 381, "103126": 381, "1952": 381, "0701429": 381, "2870": 381, "06648": 381, "755": 381, "893959": 381, "900": 381, "831": 381, "718893": 381, "1120": 381, "537405": 381, "1498": 381, "280686": 381, "2869": 381, "902588": 381, "730678": 381, "582871": 381, "1381": 381, "444133": 381, "298489": 381, "2697": 381, "581": 381, "0955952": 381, "1184": 381, "078109": 381, "1449": 381, "0596185": 381, "1899": 381, "0414047": 381, "2735": 381, "596568": 381, "497127": 381, "396634": 381, "286973": 381, "1578": 381, "167473": 381, "2704": 381, "472466": 381, "943": 381, "787": 381, "391055": 381, "1140": 381, "319865": 381, "1394": 381, "247491": 381, "1801": 381, "169874": 381, "2624": 381, "93": 381, "0213786": 381, "686": 381, "67": 381, "018228": 381, "0152068": 381, "0120525": 381, "1218": 381, "0103961": 381, "1412": 381, "0771592": 381, "761": 381, "0642402": 381, "074": 381, "0514668": 381, "0387886": 381, "1513": 381, "0256871": 381, "2285": 381, "0836219": 381, "702": 381, "0712915": 381, "664": 381, "0589148": 381, "697": 381, "0484067": 381, "0411331": 381, "311691": 381, "569": 381, "256635": 381, "204973": 381, "153086": 381, "1534": 381, "101206": 381, "2320": 381, "59625": 381, "588": 381, "583": 381, "33246": 381, "705": 381, "03849": 381, "703": 381, "738939": 381, "1271": 381, "480308": 381, "1956": 381, "26056": 381, "745": 381, "324": 381, "04874": 381, "842936": 381, "1114": 381, "59": 381, "635554": 381, "1478": 381, "42145": 381, "2229": 381, "174215": 381, "375": 381, "145836": 381, "116701": 381, "1132": 381, "0876727": 381, "1506": 381, "0595001": 381, "2220": 381, "883258": 381, "598": 381, "333": 381, "711146": 381, "743": 381, "543634": 381, "129": 381, "402406": 381, "1313": 381, "266945": 381, "1979": 381, "70404": 381, "592043": 381, "878": 381, "695": 381, "475444": 381, "1094": 381, "358932": 381, "240739": 381, "2160": 381, "0184384": 381, "909": 381, "907": 381, "0158714": 381, "013504": 381, "1242": 381, "0109927": 381, "1526": 381, "00826017": 381, "2031": 381, "061272": 381, "1095": 381, "0609618": 381, "1100": 381, "0467291": 381, "1436": 381, "0340362": 381, "1971": 381, "0231282": 381, "2901": 381, "0717247": 381, "0616923": 381, "1087": 381, "0521595": 381, "1286": 381, "0423267": 381, "1585": 381, "0321109": 381, "2089": 381, "286461": 381, "242512": 381, "181783": 381, "1476": 381, "139021": 381, "1930": 381, "0870121": 381, "3085": 381, "36322": 381, "652": 381, "08991": 381, "880185": 381, "1219": 381, "694533": 381, "366328": 381, "2931": 381, "15748": 381, "927": 381, "937824": 381, "1144": 381, "745357": 381, "1440": 381, "558061": 381, "1924": 381, "391387": 381, "2743": 381, "157349": 381, "616": 381, "129806": 381, "103083": 381, "1464": 381, "0784417": 381, "053639": 381, "2815": 381, "767569": 381, "874": 381, "641585": 381, "941": 381, "387": 381, "488558": 381, "1236": 381, "355651": 381, "1698": 381, "230945": 381, "2615": 381, "611059": 381, "514108": 381, "1156": 381, "416571": 381, "318094": 381, "1869": 381, "225023": 381, "2642": 381, "0375093": 381, "564": 381, "0317602": 381, "0261888": 381, "1281": 381, "0211151": 381, "0158951": 381, "2110": 381, "141333": 381, "949": 381, "133647": 381, "1004": 381, "0999998": 381, "0710327": 381, "1889": 381, "52": 381, "0429916": 381, "3121": 381, "147474": 381, "125344": 381, "1070": 381, "104294": 381, "0849766": 381, "1579": 381, "0624729": 381, "2148": 381, "701639": 381, "765": 381, "534615": 381, "359791": 381, "1492": 381, "2612": 381, "2055": 381, "183193": 381, "2930": 381, "92067": 381, "735": 381, "271": 381, "4402": 381, "880": 381, "046": 381, "69186": 381, "1269": 381, "17436": 381, "1828": 381, "880179": 381, "2439": 381, "62123": 381, "264": 381, "14905": 381, "999": 381, "64253": 381, "1307": 381, "1413": 381, "1881": 381, "771439": 381, "2783": 381, "369429": 381, "451": 381, "288236": 381, "1047": 381, "209526": 381, "1441": 381, "148115": 381, "2038": 381, "106089": 381, "2846": 381, "53204": 381, "465": 381, "28593": 381, "939": 381, "368": 381, "0852": 381, "1113": 381, "685382": 381, "1762": 381, "408357": 381, "2958": 381, "4521": 381, "13466": 381, "853916": 381, "1392": 381, "642672": 381, "1850": 381, "446442": 381, "2663": 381, "0574189": 381, "876": 381, "0460811": 381, "1092": 381, "0389357": 381, "1292": 381, "031279": 381, "0234498": 381, "2146": 381, "204966": 381, "17364": 381, "1159": 381, "141097": 381, "1426": 381, "105192": 381, "1913": 381, "0677766": 381, "2970": 381, "21269": 381, "946": 381, "573": 381, "191564": 381, "1050": 381, "156368": 381, "1287": 381, "1565": 381, "0933565": 381, "2156": 381, "84983": 381, "789777": 381, "1019": 381, "598168": 381, "1346": 381, "433492": 381, "1857": 381, "269504": 381, "2988": 381, "74845": 381, "859": 381, "348": 381, "96945": 381, "811": 381, "505": 381, "77082": 381, "76407": 381, "1826": 381, "09719": 381, "2935": 381, "73162": 381, "00241": 381, "1072": 381, "39024": 381, "77317": 381, "1816": 381, "19536": 381, "2694": 381, "517278": 381, "875": 381, "708": 381, "382208": 381, "1185": 381, "317837": 381, "1425": 381, "233231": 381, "1942": 381, "152925": 381, "2962": 381, "44309": 381, "741": 381, "62409": 381, "1115": 381, "64963": 381, "1098": 381, "03923": 381, "1743": 381, "625089": 381, "2898": 381, "07006": 381, "861": 381, "632": 381, "64247": 381, "1085": 381, "33386": 381, "1337": 381, "994935": 381, "1792": 381, "68383": 381, "2608": 381, "0713578": 381, "940": 381, "0612457": 381, "0516788": 381, "1298": 381, "0414834": 381, "1617": 381, "0309886": 381, "2165": 381, "282241": 381, "951": 381, "085": 381, "238855": 381, "1123": 381, "193713": 381, "1385": 381, "146781": 381, "81": 381, "0938959": 381, "286141": 381, "122": 381, "257138": 381, "1043": 381, "214208": 381, "167575": 381, "1601": 381, "124072": 381, "2163": 381, "21431": 381, "884": 381, "237": 381, "955251": 381, "775294": 381, "1384": 381, "63282": 381, "1696": 381, "37333": 381, "2876": 381, "87335": 381, "317": 381, "65059": 381, "1176": 381, "94733": 381, "1457": 381, "62241": 381, "1637": 381, "47752": 381, "2906": 381, "75786": 381, "83024": 381, "889": 381, "87429": 381, "1108": 381, "87685": 381, "75328": 381, "2449": 381, "718776": 381, "289": 381, "561317": 381, "1076": 381, "429166": 381, "1407": 381, "317204": 381, "1904": 381, "208555": 381, "2896": 381, "94057": 381, "30458": 381, "1048": 381, "6702": 381, "25799": 381, "1920": 381, "84121": 381, "2871": 381, "34423": 381, "711": 381, "77444": 381, "857": 381, "10049": 381, "52509": 381, "926038": 381, "2568": 381, "00203027": 381, "1032": 381, "00198061": 381, "00179382": 381, "1169": 381, "00163713": 381, "1280": [381, 383], "00171023": 381, "1226": 381, "00395783": 381, "2119": 381, "00340452": 381, "2463": 381, "00308582": 381, "2718": 381, "00292684": 381, "2866": 381, "00217889": 381, "3849": 381, "00437142": 381, "1918": 381, "00418212": 381, "2005": 381, "00344785": 381, "2433": 381, "00291005": 381, "2882": 381, "00293671": 381, "2856": 381, "0120946": 381, "2774": 381, "0103377": 381, "3245": 381, "00850778": 381, "3943": 381, "00659512": 381, "5087": 381, "00484669": 381, "6923": 381, "0524509": 381, "2558": 381, "0428737": 381, "3130": 381, "0323642": 381, "4147": 381, "0231199": 381, "5805": 381, "0152199": 381, "8818": 381, "0451228": 381, "2974": 381, "0373823": 381, "3590": 381, "0302746": 381, "4433": 381, "023182": 381, "5789": 381, "0161696": 381, "8300": 381, "00731429": 381, "2580": 381, "00633179": 381, "2980": 381, "00535855": 381, "3522": 381, "00449335": 381, "4200": 381, "00341811": 381, "5521": 381, "0270028": 381, "2795": 381, "02197": 381, "3436": 381, "0177477": 381, "4253": 381, "0131335": 381, "5748": 381, "00897444": 381, "8412": 381, "0257188": 381, "2889": 381, "0218969": 381, "3393": 381, "0180933": 381, "4107": 381, "013742": 381, "5408": 381, "00992419": 381, "7488": 381, "00289114": 381, "1450": 381, "00245821": 381, "00252331": 381, "1662": 381, "00226557": 381, "1851": 381, "00180316": 381, "2326": 381, "00578904": 381, "00500361": 381, "3353": 381, "0042401": 381, "3956": 381, "00350486": 381, "4786": 381, "00297233": 381, "5644": 381, "00693265": 381, "2420": 381, "00593063": 381, "2828": 381, "00526697": 381, "3185": 381, "00480098": 381, "3494": 381, "00385131": 381, "4356": 381, "0193516": 381, "3467": 381, "0166254": 381, "4036": 381, "0132869": 381, "5050": 381, "0106293": 381, "6313": 381, "00759056": 381, "8841": 381, "0977256": 381, "2746": 381, "0813271": 381, "0656322": 381, "4090": 381, "0476463": 381, "5633": 381, "0295362": 381, "9088": 381, "0736189": 381, "3646": 381, "0603789": 381, "4445": 381, "0489938": 381, "5478": 381, "036992": 381, "7256": 381, "0258802": 381, "10372": 381, "0116589": 381, "3237": 381, "00979113": 381, "3855": 381, "00811779": 381, "4650": 381, "00667871": 381, "5652": 381, "00493861": 381, "7643": 381, "0537768": 381, "2807": 381, "0459135": 381, "3288": 381, "03588": 381, "4208": 381, "0252901": 381, "5970": 381, "0167419": 381, "9018": 381, "0407051": 381, "3651": 381, "0342908": 381, "4334": 381, "028568": 381, "5202": 381, "0218703": 381, "6796": 381, "016186": 381, "9183": 381, "0031551": 381, "0029515": 381, "00265488": 381, "2369": 381, "00243581": 381, "2582": 381, "00223598": 381, "2813": 381, "00745008": 381, "3377": 381, "00656544": 381, "3833": 381, "00542595": 381, "4638": 381, "00425647": 381, "5912": 381, "0034657": 381, "7261": 381, "00835933": 381, "3010": 381, "00741956": 381, "3391": 381, "0065352": 381, "3850": 381, "00555918": 381, "4526": 381, "00488058": 381, "5156": 381, "0257262": 381, "3912": 381, "0217468": 381, "4628": 381, "0176505": 381, "5703": 381, "0137122": 381, "7341": 381, "00980134": 381, "10270": 381, "124749": 381, "3227": 381, "103385": 381, "3894": 381, "0832193": 381, "4838": 381, "0626013": 381, "6432": 381, "0397992": 381, "10117": 381, "101071": 381, "3983": 381, "0825665": 381, "4876": 381, "0668515": 381, "6023": 381, "0487727": 381, "8255": 381, "0354192": 381, "11368": 381, "0147718": 381, "0127799": 381, "4430": 381, "0105324": 381, "5376": 381, "00869796": 381, "6509": 381, "00643591": 381, "8798": 381, "0698868": 381, "3240": 381, "0588583": 381, "3848": 381, "0473412": 381, "4784": 381, "0346142": 381, "6543": 381, "0222947": 381, "10159": 381, "0538146": 381, "4142": 381, "0454583": 381, "4904": 381, "0373579": 381, "5968": 381, "0291396": 381, "7651": 381, "0208901": 381, "10672": 381, "00393589": 381, "00332212": 381, "2525": 381, "00317296": 381, "2643": 381, "00269113": 381, "3117": 381, "00235812": 381, "3557": 381, "009382": 381, "3576": 381, "00828943": 381, "4047": 381, "00672351": 381, "4990": 381, "00514768": 381, "6518": 381, "0040612": 381, "8262": 381, "0107115": 381, "3132": 381, "00920252": 381, "00794258": 381, "4224": 381, "00698123": 381, "4806": 381, "00561026": 381, "5980": 381, "0345669": 381, "3882": 381, "0289719": 381, "4632": 381, "0232584": 381, "5770": 381, "0179766": 381, "7466": 381, "0128144": 381, "10474": 381, "158162": 381, "3394": 381, "132552": 381, "4050": 381, "101844": 381, "5271": 381, "080936": 381, "6633": 381, "0530097": 381, "10127": 381, "135839": 381, "3952": 381, "11116": 381, "4829": 381, "0899513": 381, "0633017": 381, "8481": 381, "0467462": 381, "11484": 381, "0192628": 381, "3919": 381, "0164591": 381, "4586": 381, "0135348": 381, "5578": 381, "0107712": 381, "7009": 381, "00761117": 381, "9919": 381, "0854876": 381, "3532": 381, "0747271": 381, "4041": 381, "0604759": 381, "4993": 381, "0417964": 381, "7225": 381, "0275467": 381, "10962": 381, "0713821": 381, "4164": 381, "0600772": 381, "4948": 381, "0496581": 381, "5986": 381, "0381385": 381, "7794": 381, "027025": 381, "10999": 381, "00502473": 381, "2086": 381, "00451855": 381, "00396819": 381, "00338962": 381, "3093": 381, "00315343": 381, "3325": 381, "0147951": 381, "2834": 381, "0126225": 381, "3322": 381, "010269": 381, "4084": 381, "00785878": 381, "5337": 381, "00570293": 381, "7354": 381, "0161691": 381, "2594": 381, "0144483": 381, "2902": 381, "011705": 381, "3583": 381, "0101487": 381, "4132": 381, "00879332": 381, "4769": 381, "0560297": 381, "2994": 381, "0467998": 381, "3584": 381, "0374397": 381, "4481": 381, "028166": 381, "5956": 381, "0192593": 381, "8711": 381, "277815": 381, "2415": 381, "229837": 381, "2919": 381, "1787": 381, "3755": 381, "126545": 381, "5303": 381, "0835321": 381, "8033": 381, "224925": 381, "2983": 381, "184256": 381, "3642": 381, "146452": 381, "4582": 381, "108899": 381, "6162": 381, "0740655": 381, "9060": 381, "0319455": 381, "2954": 381, "0268136": 381, "3519": 381, "0217062": 381, "4347": 381, "0166666": 381, "5662": 381, "0116466": 381, "8102": 381, "150549": 381, "2507": 381, "119951": 381, "3147": 381, "0893092": 381, "4226": 381, "0637226": 381, "5923": 381, "0427839": 381, "8823": 381, "122421": 381, "3035": 381, "102244": 381, "0822007": 381, "4520": 381, "0622484": 381, "5969": 381, "0429436": 381, "8652": 381, "00481074": 381, "00443796": 381, "2835": 381, "00389863": 381, "00343822": 381, "3659": 381, "00297784": 381, "4225": 381, "0145757": 381, "3453": 381, "012078": 381, "4167": 381, "00896329": 381, "5615": 381, "00727645": 381, "6917": 381, "00548478": 381, "9176": 381, "0150624": 381, "3341": 381, "0132428": 381, "3800": 381, "011443": 381, "4398": 381, "0092883": 381, "5418": 381, "00744553": 381, "6759": 381, "0543977": 381, "3701": 381, "0445693": 381, "4517": 381, "0363329": 381, "5541": 381, "0270492": 381, "7442": 381, "0187415": 381, "10742": 381, "267367": 381, "3011": 381, "223615": 381, "3601": 381, "1797": 381, "134716": 381, "5977": 381, "0692752": 381, "11624": 381, "222661": 381, "3616": 381, "179525": 381, "4485": 381, "139298": 381, "5781": 381, "0958787": 381, "8399": 381, "176292": 381, "4568": 381, "0700283": 381, "0258341": 381, "4383": 381, "0207504": 381, "5457": 381, "0161277": 381, "7021": 381, "0116008": 381, "9761": 381, "148512": 381, "3050": 381, "124238": 381, "0995304": 381, "4551": 381, "0714324": 381, "6341": 381, "044154": 381, "10259": 381, "113174": 381, "3940": 381, "0961662": 381, "4636": 381, "0765841": 381, "5822": 381, "0592912": 381, "7520": 381, "0416614": 381, "10703": 381, "00655654": 381, "2239": 381, "00584761": 381, "2510": 381, "00502113": 381, "2923": 381, "00466269": 381, "3148": 381, "00393276": 381, "3732": 381, "0203923": 381, "2879": 381, "0171018": 381, "3433": 381, "0137027": 381, "4285": 381, "0109527": 381, "5361": 381, "00749636": 381, "7833": 381, "0221319": 381, "0193761": 381, "3030": 381, "0158773": 381, "3698": 381, "0134367": 381, "4370": 381, "0116365": 381, "5046": 381, "0780751": 381, "3008": 381, "0651551": 381, "3604": 381, "0521945": 381, "4500": 381, "0394101": 381, "5959": 381, "0262706": 381, "8940": 381, "398509": 381, "2357": 381, "332153": 381, "259051": 381, "3626": 381, "184412": 381, "5094": 381, "119678": 381, "7850": 381, "313656": 381, "2995": 381, "257989": 381, "3641": 381, "206049": 381, "4559": 381, "152848": 381, "6146": 381, "103125": 381, "9110": 381, "0444861": 381, "2969": 381, "037334": 381, "3538": 381, "0302293": 381, "0231979": 381, "5695": 381, "0158702": 381, "8325": 381, "219777": 381, "2404": 381, "17764": 381, "2975": 381, "135864": 381, "3889": 381, "100424": 381, "5262": 381, "0677547": 381, "7799": 381, "172356": 381, "3018": 381, "144231": 381, "3606": 381, "116019": 381, "4483": 381, "0873881": 381, "5953": 381, "0596004": 381, "8728": 381, "00609695": 381, "2751": 381, "00517637": 381, "3241": 381, "00448956": 381, "3736": 381, "00394876": 381, "4248": 381, "00317463": 381, "5284": 381, "0204832": 381, "3276": 381, "0137691": 381, "4873": 381, "0114194": 381, "5876": 381, "00893304": 381, "7512": 381, "00653312": 381, "10272": 381, "0192409": 381, "3487": 381, "0168348": 381, "3986": 381, "0142343": 381, "4714": 381, "0119455": 381, "5617": 381, "00910648": 381, "7369": 381, "0781101": 381, "0614806": 381, "4366": 381, "046201": 381, "5810": 381, "0357023": 381, "7518": 381, "0222103": 381, "12086": 381, "326917": 381, "3284": 381, "273363": 381, "3927": 381, "220994": 381, "4858": 381, "166153": 381, "6462": 381, "0854403": 381, "12567": 381, "311348": 381, "3448": 381, "243012": 381, "4418": 381, "187933": 381, "5713": 381, "126819": 381, "8466": 381, "0855686": 381, "12548": 381, "0404778": 381, "3730": 381, "0329699": 381, "4579": 381, "0265272": 381, "5692": 381, "0207815": 381, "7265": 381, "0139037": 381, "10860": 381, "183003": 381, "161443": 381, "3741": 381, "129767": 381, "4654": 381, "0893345": 381, "6760": 381, "0610684": 381, "9890": 381, "15525": 381, "3829": 381, "125772": 381, "4727": 381, "101434": 381, "5861": 381, "0765083": 381, "7770": 381, "0537321": 381, "11064": 381, "0104209": 381, "3219": 381, "00908195": 381, "3694": 381, "00781277": 381, "4294": 381, "00651108": 381, "5153": 381, "0051719": 381, "6487": 381, "0321377": 381, "4176": 381, "0269904": 381, "4972": 381, "0220014": 381, "6100": 381, "016901": 381, "7941": 381, "0120042": 381, "11180": 381, "0373802": 381, "0314895": 381, "4262": 381, "0266731": 381, "5031": 381, "0217822": 381, "6161": 381, "0168219": 381, "7978": 381, "176031": 381, "3049": 381, "134442": 381, "3993": 381, "0843776": 381, "6362": 381, "0640577": 381, "8381": 381, "043787": 381, "12261": 381, "697876": 381, "3077": 381, "615338": 381, "3489": 381, "350147": 381, "6133": 381, "267289": 381, "8034": 381, "179695": 381, "11950": 381, "703207": 381, "3053": 381, "561805": 381, "3822": 381, "423052": 381, "5076": 381, "254835": 381, "171434": 381, "12526": 381, "0933483": 381, "3235": 381, "0725632": 381, "4161": 381, "0539197": 381, "5600": 381, "0376119": 381, "8029": 381, "0263137": 381, "11476": 381, "407388": 381, "340939": 381, "3543": 381, "261028": 381, "4627": 381, "151649": 381, "7965": 381, "103379": 381, "11684": 381, "358769": 381, "3314": 381, "283046": 381, "4201": 381, "212152": 381, "5604": 381, "158502": 381, "7502": 381, "107514": 381, "11059": 381, "0148329": 381, "0129116": 381, "3898": 381, "0110537": 381, "4553": 381, "00925277": 381, "5439": 381, "00716987": 381, "7019": 381, "0526609": 381, "3823": 381, "0447282": 381, "4501": 381, "0365834": 381, "5503": 381, "0274874": 381, "7324": 381, "0183895": 381, "10947": 381, "0556653": 381, "0465882": 381, "4321": 381, "039411": 381, "5108": 381, "0318745": 381, "6316": 381, "024706": 381, "8148": 381, "263316": 381, "3058": 381, "198303": 381, "4061": 381, "141966": 381, "5672": 381, "105849": 381, "7608": 381, "0687866": 381, "11707": 381, "793822": 381, "4057": 381, "996979": 381, "3230": 381, "54288": 381, "5933": 381, "412174": 381, "7815": 381, "274441": 381, "11737": 381, "03474": 381, "3113": 381, "832701": 381, "3868": 381, "564787": 381, "421781": 381, "7637": 381, "271587": 381, "11860": 381, "130834": 381, "3462": 381, "0943305": 381, "4802": 381, "0760123": 381, "0580473": 381, "7803": 381, "0395342": 381, "11458": 381, "635729": 381, "2850": 381, "379899": 381, "307908": 381, "5884": 381, "233057": 381, "7774": 381, "157518": 381, "11503": 381, "518276": 381, "3441": 381, "422517": 381, "4221": 381, "323476": 381, "5513": 381, "247251": 381, "7213": 381, "163369": 381, "10917": 381, "0192313": 381, "0168147": 381, "3991": 381, "0143274": 381, "4683": 381, "011932": 381, "5624": 381, "00914975": 381, "7334": 381, "0723144": 381, "3712": 381, "0613803": 381, "4373": 381, "050021": 381, "5366": 381, "0376949": 381, "7121": 381, "0249397": 381, "10763": 381, "0796627": 381, "3369": 381, "0616695": 381, "4352": 381, "0521326": 381, "5149": 381, "042188": 381, "0325741": 381, "8240": 381, "380582": 381, "2821": 381, "24038": 381, "4466": 381, "195271": 381, "5498": 381, "146935": 381, "7307": 381, "0948318": 381, "11322": 381, "08794": 381, "3947": 381, "913626": 381, "4701": 381, "737943": 381, "5820": 381, "558473": 381, "7690": 381, "369466": 381, "51009": 381, "2844": 381, "26974": 381, "3382": 381, "778244": 381, "5518": 381, "589803": 381, "7282": 381, "375284": 381, "11444": 381, "160705": 381, "3758": 381, "135495": 381, "4457": 381, "108718": 381, "5555": 381, "0811198": 381, "7445": 381, "0533513": 381, "11320": 381, "614109": 381, "3934": 381, "518614": 381, "418491": 381, "5772": 381, "31592": 381, "7647": 381, "211893": 381, "11401": 381, "836616": 381, "2842": 381, "699579": 381, "3399": 381, "544194": 381, "379699": 381, "228043": 381, "10428": 381, "un": 382, "u": 382, "hotmap": 382, "jpg": 382, "x16": 383, "environment_vari": 383, "kernel_typ": [383, 384], "perfom": 383, "introduct": 383, "benchmark_it": 383, "benchmark_no_refresh": 383, "refresh": 383, "kxn": 383, "sparse_ratio": 383, "micro_b": 383, "output_fp32": 383, "has_append_sum": 383, "micro_oc": 383, "sub_func_level": 383, "3d_infer": 383, "automaticlli": 383, "dsparse_lib_use_amx": 383, "amx_bf16_x16": 383, "output_bf16": 383, "lower_bound": 383, "upper_bound": 383, "invalid": 383, "fp32_relu": 383, "src_dt": 383, "dst_dt": 383, "tanspos": 383, "4d": 383, "distinguish": 383, "bs0": 383, "bs1": 383, "scr2": 383, "avx512f_p2031_p2013": 383, "has_binary_add": 383, "tile_n": 383, "coeffici": 383, "vnni_noperm_p2031_p1302": 383, "suuport": 383, "d0xd1x": 383, "d0": 383, "dst_type": 383, "padding_mask": 383, "badd_dim": 383, "blank": 383, "2048": 383, "large_weight_threshold": 383, "add_bia": 383, "channel_num": 383, "quantize_dim_elt_num": 383, "src_data_typ": 383, "newli": 383, "subdir": 383, "benchmark_dir": 383, "bench_": 383, "cpp": 383, "test_": 383, "entranc": 383, "get_true_data_": 383, "check_result_": 383, "gen_case_": 383, "run_bench_": 383, "calc_flop": 383, "get_refresh_data_idx": 383, "benchmark_util": 383, "whitespac": 384, "labl": 384, "run_ci": 384, "overwrit": 384, "it_per_cor": 384, "discard": 384, "new_input_fil": 384, "medium_n": 384, "ci": 384, "apach": 385, "copyright": 385, "parti": 385, "accompani": 385, "research": 385, "wish": 385, "bibtex": 385, "misc": 385, "hanwen": 385, "haihao": 385, "shen": 385, "dong": 385, "hengyu": 385, "meng": 385, "wenxin": 385, "zhang": 385, "howpublish": 385, "url": 385, "year": 385, "logo": 385, "atom": 385, "phi": 385, "pentium": 385, "vtune": 385, "corpor": 385, "subsidiari": 385, "toler": 386, "rel": 386, "conjunct": 386, "proport": [386, 387], "vision": 388, "speech": 388, "multimod": 388, "text_classifi": 388, "great": 388, "9998425245285034": 388, "believ": 388, "beauti": 388, "evoc": 388, "ve": 388, "seen": 388, "9998886585235596": 388, "bear": 389, "brain": 389, "damag": 389, "hypothesi": 389, "yann": 389, "lecun": 389, "salient": 389, "anywher": 389, "filter": 389, "lowest": 389, "freez": 389, "hyper": 389, "didn": 389, "pruning_conf": 389, "littl": 390, "degrad": 390, "ex": 390, "affin": 390, "convers": 390, "math": 390, "zeropoint": 390, "asymmetr": 390, "overflow": 390, "fp16": 390, "unseen": 390, "peopl": 390, "emul": 390, "fake": 390, "backward": 390, "mimic": 390, "made": 390, "ultim": 390, "either": 390, "pain": 390, "lossi": 390, "fx": 390, "qat": 390, "site": 391, "assist": 391, "secur": 395, "legal": 395, "injector": 397}, "objects": {"": [[326, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [326, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [327, 1, 1, "_CPPv42jd", "jd"], [328, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 1, 1, "_CPPv42jd", "jd"], [329, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [329, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [329, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [329, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [329, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [329, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [329, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [327, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [327, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [327, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [327, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [327, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [327, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [327, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [327, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [327, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [329, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [329, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [329, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [329, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [329, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [329, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [329, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [329, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [329, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [329, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [326, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [326, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [326, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [326, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [326, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [326, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [326, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [326, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [327, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [327, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [327, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [327, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [327, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [327, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [327, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [327, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [327, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [327, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [327, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [327, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [327, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [327, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [327, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [327, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [327, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [327, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [327, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [327, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [327, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [327, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [327, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [327, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [327, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [327, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [327, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [326, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [326, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [326, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [326, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [326, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [326, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [326, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [326, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [326, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [326, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [326, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [326, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [326, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [326, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [327, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [327, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [327, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [327, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [327, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [327, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [327, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [327, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [327, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [327, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [327, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [327, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [327, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [327, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [327, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [327, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [327, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [327, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [327, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [327, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [327, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [327, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [327, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [327, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [327, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [327, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [327, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [327, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [327, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [327, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [327, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [327, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [327, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [327, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [327, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [327, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [327, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [327, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [327, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [327, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [327, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [327, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [327, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [327, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [327, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [327, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [327, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [327, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [327, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [327, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [327, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [327, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [327, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [327, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [327, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [327, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [327, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [327, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [327, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [327, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [327, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [327, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [327, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [327, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [327, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [327, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [327, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [327, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [327, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [327, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [327, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [327, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [327, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [327, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [327, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [327, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [328, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [328, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [328, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [328, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [328, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [328, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [328, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [328, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [328, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [328, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [328, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [328, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [328, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [328, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [328, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [328, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [328, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [328, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [328, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [328, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [328, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [328, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [328, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [328, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [328, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [328, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [328, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [328, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [328, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [328, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [328, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [327, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [327, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [327, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [327, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [327, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [327, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [327, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [327, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [327, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [327, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [327, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [327, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [327, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [327, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [327, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [327, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [327, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [327, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [327, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [327, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [327, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [327, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [327, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [327, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [327, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [327, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [327, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [327, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [327, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [327, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [327, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [327, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [327, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [327, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [327, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [327, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [327, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [327, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [327, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [329, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [329, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [329, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [329, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [329, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [329, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [329, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [329, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [329, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [329, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [329, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [329, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [329, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [329, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [329, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [329, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [329, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [329, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [329, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [329, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [329, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [329, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [329, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [329, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [329, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [329, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [329, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [329, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [329, 3, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [329, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [329, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [329, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [329, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [329, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [329, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [329, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [329, 3, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [329, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [329, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_5E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [329, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [329, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [329, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [329, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [329, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [329, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [329, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [329, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [329, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [329, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_7E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E", "jd::ssd::matmul_fp8_param_t::weight_fp8"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [329, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [329, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [329, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [329, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [329, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [329, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [329, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [329, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [329, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [329, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [329, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [329, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [329, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [329, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [329, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [329, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [329, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [329, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [329, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [329, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [329, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [329, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [329, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [329, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [329, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [329, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [329, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [329, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [329, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [329, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [329, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [329, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [329, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [329, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [329, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [329, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [329, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [329, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [329, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [329, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [329, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [329, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [329, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [329, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [329, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [329, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [329, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [329, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [329, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [329, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [329, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [329, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [329, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [329, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [329, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [329, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [329, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [329, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [329, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [329, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [329, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [329, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [329, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [329, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [329, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [329, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [329, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [327, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [327, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [327, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [327, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [327, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [327, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [327, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [327, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [327, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [327, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [327, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [327, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [327, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [327, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [327, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [327, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [327, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [327, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [327, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [201, 9, 0, "-", "intel_extension_for_transformers"], [243, 9, 0, "-", "sparsity_all"], [244, 9, 0, "-", "test_add_cls_token"], [245, 9, 0, "-", "test_add_embeddings"], [246, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [247, 9, 0, "-", "test_attention_reshape"], [248, 9, 0, "-", "test_bert_mini_fp32"], [249, 9, 0, "-", "test_binary_op"], [250, 9, 0, "-", "test_binaryop"], [251, 9, 0, "-", "test_cast_to"], [252, 9, 0, "-", "test_concat"], [253, 9, 0, "-", "test_conv_reshape"], [254, 9, 0, "-", "test_decoder_attn_reshape"], [255, 9, 0, "-", "test_dispatcher_tuning_acc"], [256, 9, 0, "-", "test_dispatcher_tuning_throughput"], [257, 9, 0, "-", "test_dynamic_quantization"], [258, 9, 0, "-", "test_embedding"], [259, 9, 0, "-", "test_embeddingbag"], [260, 9, 0, "-", "test_execution_options"], [261, 9, 0, "-", "test_gelu"], [262, 9, 0, "-", "test_gpt_int8"], [263, 9, 0, "-", "test_graph_dispatch"], [264, 9, 0, "-", "test_graph_optimizer"], [265, 9, 0, "-", "test_insert_input_output_data"], [266, 9, 0, "-", "test_is_supported_onnx_graph"], [267, 9, 0, "-", "test_last_layer_shape"], [268, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [269, 9, 0, "-", "test_layer_norm_with_transpose"], [270, 9, 0, "-", "test_layernorm"], [271, 9, 0, "-", "test_linear"], [272, 9, 0, "-", "test_linear_int8"], [273, 9, 0, "-", "test_llama_pattern"], [274, 9, 0, "-", "test_main"], [275, 9, 0, "-", "test_matmul"], [276, 9, 0, "-", "test_matmul_int8"], [277, 9, 0, "-", "test_matmul_with_bias_relu"], [278, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [279, 9, 0, "-", "test_matmul_with_bias_tanh"], [280, 9, 0, "-", "test_merged_embeddingbag"], [281, 9, 0, "-", "test_model"], [282, 9, 0, "-", "test_onnx_utils"], [283, 9, 0, "-", "test_operator_adaptor"], [284, 9, 0, "-", "test_ops"], [285, 9, 0, "-", "test_padding_seq"], [286, 9, 0, "-", "test_padding_sequence"], [287, 9, 0, "-", "test_pattern_dispatch"], [288, 9, 0, "-", "test_permute"], [289, 9, 0, "-", "test_position_embeddings"], [290, 9, 0, "-", "test_pow"], [291, 9, 0, "-", "test_primitive_cache_acc"], [292, 9, 0, "-", "test_primitive_cache_throughput"], [293, 9, 0, "-", "test_qkv_merge"], [294, 9, 0, "-", "test_qkv_reshape"], [295, 9, 0, "-", "test_quant_onnx_execute"], [296, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [297, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [298, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [299, 9, 0, "-", "test_size"], [300, 9, 0, "-", "test_softmax"], [301, 9, 0, "-", "test_start_end_logits"], [302, 9, 0, "-", "test_tanh"], [303, 9, 0, "-", "test_text_encoder"], [304, 9, 0, "-", "test_text_encoder_bf16"], [305, 9, 0, "-", "test_tf_utils"], [306, 9, 0, "-", "test_token_type_embeddings"], [307, 9, 0, "-", "test_transpose"], [308, 9, 0, "-", "test_transpose_batch_matmul"], [309, 9, 0, "-", "test_unet"], [310, 9, 0, "-", "test_unet_bf16"], [311, 9, 0, "-", "test_unsqueeze"], [312, 9, 0, "-", "test_vae_decoder"], [313, 9, 0, "-", "test_vae_decoder_bf16"], [314, 9, 0, "-", "test_weight_sharing_acc"], [315, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [316, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [317, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [194, 9, 0, "-", "evaluation"], [208, 9, 0, "-", "optimization"], [240, 9, 0, "-", "preprocessing"], [242, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[193, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [79, 9, 0, "-", "optimizer"], [101, 9, 0, "-", "sub_graph"], [191, 9, 0, "-", "tf_utils"], [192, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "del_environ_var"], [10, 13, 1, "", "del_environ_vars"], [10, 13, 1, "", "environ_info_init"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_environ_info"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_environ_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "remove_environ_info_item"], [10, 13, 1, "", "remove_environ_info_items"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "set_environ_var"], [10, 13, 1, "", "set_environ_vars"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Floor_divide"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "ListUnpack"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "Masked_fill"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "Max"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "MultiHeadAttenion"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Silu"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[79, 10, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[79, 12, 1, "", "optimize"], [79, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[80, 9, 0, "-", "InnerproductReshapeFusion"], [81, 9, 0, "-", "add_cls_token"], [82, 9, 0, "-", "add_embeddings"], [83, 9, 0, "-", "arangewithreciprocal"], [84, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [85, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [86, 9, 0, "-", "attentionBlock_QKVPreReshape"], [87, 9, 0, "-", "attentionBlock_QKVReshape"], [88, 9, 0, "-", "attentionBlock_Resize2Gather"], [89, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [90, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [92, 9, 0, "-", "attention_reshape"], [93, 9, 0, "-", "cast_to"], [94, 9, 0, "-", "collect_quant_info"], [95, 9, 0, "-", "conv_reshape"], [96, 9, 0, "-", "decoder_attn_reshape"], [97, 9, 0, "-", "einsumwitharange"], [98, 9, 0, "-", "embeddingbag"], [99, 9, 0, "-", "gelu"], [100, 9, 0, "-", "generate_sequence"], [102, 9, 0, "-", "innerproductwithbiasgelu"], [103, 9, 0, "-", "innerproductwithslice"], [104, 9, 0, "-", "innerproductwithswish"], [105, 9, 0, "-", "input_data"], [106, 9, 0, "-", "input_file"], [107, 9, 0, "-", "insert_bf16_node"], [108, 9, 0, "-", "insert_quant_node"], [109, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [110, 9, 0, "-", "interact_features"], [111, 9, 0, "-", "last_layer_shape"], [112, 9, 0, "-", "layer_norm"], [113, 9, 0, "-", "layer_norm_with_reduce_mean"], [114, 9, 0, "-", "layer_norm_with_transpose"], [115, 9, 0, "-", "llama_embeding"], [116, 9, 0, "-", "llama_matmulwithtranspose"], [117, 9, 0, "-", "llama_postprocess"], [118, 9, 0, "-", "llama_rotary_pos_emb"], [119, 9, 0, "-", "lower_all_tuples"], [120, 9, 0, "-", "matmul_with_bias"], [121, 9, 0, "-", "matmul_with_bias_add"], [122, 9, 0, "-", "matmul_with_bias_gelu"], [123, 9, 0, "-", "matmul_with_bias_relu"], [124, 9, 0, "-", "matmul_with_bias_sigmoid"], [125, 9, 0, "-", "matmul_with_bias_tanh"], [126, 9, 0, "-", "matmul_with_bias_unsqueeze"], [127, 9, 0, "-", "matmul_with_transpose"], [128, 9, 0, "-", "merged_embeddingbag"], [129, 9, 0, "-", "multi_head_attention"], [130, 9, 0, "-", "operator_adaptor"], [131, 9, 0, "-", "output_data"], [132, 9, 0, "-", "padding_sequence"], [133, 9, 0, "-", "pattern"], [134, 9, 0, "-", "position_embeddings"], [135, 9, 0, "-", "position_embeddings_v1"], [136, 9, 0, "-", "qkv_merge"], [137, 9, 0, "-", "qkv_reshape"], [138, 9, 0, "-", "quantize_fusion"], [139, 9, 0, "-", "quantized_graph_dtype_refactor"], [140, 9, 0, "-", "remove_constant_op"], [141, 9, 0, "-", "remove_last_view"], [142, 9, 0, "-", "remove_range"], [143, 9, 0, "-", "removeslice"], [144, 9, 0, "-", "reshape_after_restore_hidden_states"], [145, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [146, 9, 0, "-", "reshape_before_restore_hidden_states"], [147, 9, 0, "-", "reshape_fusion"], [148, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [149, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [150, 9, 0, "-", "restnetBlock_groupNorm"], [151, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [152, 9, 0, "-", "rms_norm"], [153, 9, 0, "-", "rotary_pos_emb"], [154, 9, 0, "-", "slicemask"], [155, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [156, 9, 0, "-", "stableDiffusion_MHA"], [157, 9, 0, "-", "stableDiffusion_MHAReshape"], [158, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [159, 9, 0, "-", "stableDiffusion_bf16Convert"], [160, 9, 0, "-", "start_end_logits"], [161, 9, 0, "-", "subgraph_matcher"], [162, 9, 0, "-", "textEncdoer_word_embedding"], [163, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [164, 9, 0, "-", "textEncoder_AttentionReshape"], [165, 9, 0, "-", "textEncoder_KVReshape"], [166, 9, 0, "-", "textEncoder_MulReshape"], [167, 9, 0, "-", "textEncoder_QReshape"], [168, 9, 0, "-", "textEncoder_SoftmaxReshape"], [169, 9, 0, "-", "textEncoder_causal_attention_mask"], [170, 9, 0, "-", "token_type_embeddings"], [171, 9, 0, "-", "token_type_embeddings_v1"], [172, 9, 0, "-", "torch_embedding"], [173, 9, 0, "-", "torch_ip_insert_bias"], [174, 9, 0, "-", "torchinsertbf16node"], [175, 9, 0, "-", "torchpaddingsquence"], [176, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [177, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [178, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [179, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [180, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [181, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [182, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [183, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [184, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [185, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [186, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [187, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [188, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [189, 9, 0, "-", "transpose_batch_matmul"], [190, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[80, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[81, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[82, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[83, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[84, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[85, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[86, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[87, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[88, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[89, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[91, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[92, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[93, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[94, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[95, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[96, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[97, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[98, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[99, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[100, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[102, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[103, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[104, 10, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[105, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[106, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[107, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[108, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[109, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[110, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[111, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[112, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[113, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[114, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[115, 10, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[116, 10, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[117, 10, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[118, 10, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[119, 10, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[120, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[121, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[122, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[123, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[124, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[125, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[126, 10, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[127, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[128, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[129, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[130, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[131, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[132, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[133, 10, 1, "", "Pattern"], [133, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[134, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[135, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[136, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[137, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[138, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[139, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[140, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[141, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[142, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[143, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[144, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[145, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[146, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[147, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[148, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[149, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[150, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[151, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[152, 10, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[153, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[154, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[155, 10, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[156, 10, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[157, 10, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[158, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[159, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[160, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[161, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[162, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[163, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[164, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[165, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[166, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[167, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[168, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[169, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[170, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[171, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[172, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[173, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[174, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[175, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[176, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[177, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[178, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[179, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[180, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[181, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[182, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[183, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[184, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[185, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[186, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[187, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[188, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, 14, 1, "", "TF_DTYPE_ID"], [191, 13, 1, "", "create_tf_node"], [191, 13, 1, "", "get_tensor_dest_op"], [191, 13, 1, "", "graph_node_names_details"], [191, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[196, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval": [[195, 9, 0, "-", "evaluator"], [198, 9, 0, "-", "models"], [199, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, 13, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[197, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, 10, 1, "", "AutoCausalLM"], [197, 10, 1, "", "AutoSeq2SeqLM"], [197, 10, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[200, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, 10, 1, "", "LambadaOpenAI"], [200, 10, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[202, 9, 0, "-", "benchmark"], [203, 9, 0, "-", "config"], [204, 9, 0, "-", "distillation"], [207, 9, 0, "-", "dynamic"], [210, 9, 0, "-", "mixture"], [211, 9, 0, "-", "model"], [213, 9, 0, "-", "nas"], [215, 9, 0, "-", "optimizer"], [216, 9, 0, "-", "optimizer_tf"], [217, 9, 0, "-", "pipeline"], [218, 9, 0, "-", "pruning"], [220, 9, 0, "-", "pytorch_pruner"], [228, 9, 0, "-", "quantization"], [229, 9, 0, "-", "trainer"], [231, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[202, 13, 1, "", "benchmark"], [202, 13, 1, "", "get_example_inputs"], [202, 13, 1, "", "preprocess_model"], [202, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[203, 10, 1, "", "AutoDistillationConfig"], [203, 10, 1, "", "BenchmarkConfig"], [203, 10, 1, "", "DistillationConfig"], [203, 10, 1, "", "DynamicLengthConfig"], [203, 10, 1, "", "FlashDistillationConfig"], [203, 10, 1, "", "NASConfig"], [203, 10, 1, "", "Provider"], [203, 10, 1, "", "PrunerV2"], [203, 10, 1, "", "PruningConfig"], [203, 10, 1, "", "QuantizationConfig"], [203, 10, 1, "", "TFDistillationConfig"], [203, 10, 1, "", "WeightPruningConfig"], [203, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[203, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[204, 10, 1, "", "Criterion"], [204, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[205, 9, 0, "-", "drop_and_restore_utils"], [206, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, 13, 1, "", "sample_layer_configuration"], [205, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, 10, 1, "", "Evolution"], [206, 13, 1, "", "approx_ratio"], [206, 13, 1, "", "inverse"], [206, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[206, 12, 1, "", "add_gene"], [206, 12, 1, "", "convex_hull"], [206, 12, 1, "", "crossover"], [206, 12, 1, "", "get_store"], [206, 12, 1, "", "load_store"], [206, 12, 1, "", "mutate"], [206, 12, 1, "", "pareto_frontier"], [206, 12, 1, "", "save_population"], [206, 12, 1, "", "save_store"], [206, 12, 1, "", "set_lower_constraint"], [206, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[209, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[209, 12, 1, "", "create_distillers"], [209, 12, 1, "", "estimate"], [209, 12, 1, "", "init_by_cfg"], [209, 12, 1, "", "load_search_results"], [209, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[211, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[211, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[212, 9, 0, "-", "basic_nas"], [214, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[212, 12, 1, "", "estimate"], [212, 12, 1, "", "execute"], [212, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[215, 10, 1, "", "NoTrainerOptimizer"], [215, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[215, 12, 1, "", "distill"], [215, 12, 1, "", "init_distiller"], [215, 12, 1, "", "init_pruner"], [215, 12, 1, "", "init_quantizer"], [215, 12, 1, "", "prune"], [215, 12, 1, "", "quantize"], [215, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[215, 12, 1, "", "fit"], [215, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[216, 12, 1, "", "autodistill"], [216, 12, 1, "", "build_train_func"], [216, 12, 1, "", "builtin_eval_func"], [216, 12, 1, "", "distill"], [216, 12, 1, "", "init_distiller"], [216, 12, 1, "", "init_pruner"], [216, 12, 1, "", "init_quantizer"], [216, 12, 1, "", "model_builder_builtin"], [216, 12, 1, "", "prune"], [216, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[217, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[218, 10, 1, "", "PrunerConfig"], [218, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[219, 9, 0, "-", "criteria"], [221, 9, 0, "-", "logger"], [222, 9, 0, "-", "patterns"], [223, 9, 0, "-", "pruners"], [224, 9, 0, "-", "pruning"], [225, 9, 0, "-", "regs"], [226, 9, 0, "-", "schedulers"], [227, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[219, 10, 1, "", "GradientCriterion"], [219, 10, 1, "", "MagnitudeCriterion"], [219, 10, 1, "", "PruningCriterion"], [219, 10, 1, "", "SnipCriterion"], [219, 10, 1, "", "SnipMomentumCriterion"], [219, 13, 1, "", "get_criterion"], [219, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[219, 12, 1, "", "on_before_optimizer_step"], [219, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[219, 12, 1, "", "on_step_begin"], [219, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[219, 12, 1, "", "on_after_optimizer_step"], [219, 12, 1, "", "on_before_optimizer_step"], [219, 12, 1, "", "on_step_begin"], [219, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[219, 12, 1, "", "on_before_optimizer_step"], [219, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[219, 12, 1, "", "on_before_optimizer_step"], [219, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[222, 10, 1, "", "BasePattern"], [222, 10, 1, "", "PatternNInM"], [222, 10, 1, "", "PatternNxM"], [222, 13, 1, "", "get_pattern"], [222, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[222, 12, 1, "", "adjust_ratio"], [222, 12, 1, "", "check_layer_validity"], [222, 11, 1, "", "config"], [222, 12, 1, "", "get_block_size_dict"], [222, 12, 1, "", "get_masks"], [222, 12, 1, "", "get_masks_global"], [222, 12, 1, "", "get_masks_local"], [222, 12, 1, "", "get_pattern_lock_masks"], [222, 12, 1, "", "get_reduced_masks_from_data"], [222, 12, 1, "", "get_single_mask_per_target_ratio"], [222, 12, 1, "", "get_sparsity_ratio"], [222, 12, 1, "", "get_sparsity_ratio_each_layer"], [222, 11, 1, "", "invalid_layers"], [222, 11, 1, "", "is_global"], [222, 11, 1, "", "keep_mask_layers"], [222, 11, 1, "", "max_sparsity_ratio_per_op"], [222, 11, 1, "", "min_sparsity_ratio_per_op"], [222, 11, 1, "", "modules"], [222, 11, 1, "", "pattern"], [222, 12, 1, "", "reduce_tensor"], [222, 11, 1, "", "target_sparsity"], [222, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[222, 11, 1, "", "M"], [222, 11, 1, "", "N"], [222, 12, 1, "", "check_layer_validity"], [222, 12, 1, "", "get_ele_mask_per_threshold"], [222, 12, 1, "", "get_least_ninm_mask_from_data"], [222, 12, 1, "", "get_masks_global"], [222, 12, 1, "", "get_pattern_lock_masks"], [222, 12, 1, "", "get_reduced_masks_from_data"], [222, 12, 1, "", "get_sparsity_ratio"], [222, 12, 1, "", "reduce_scores"], [222, 12, 1, "", "reshape_orig_to_pattern"], [222, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[222, 11, 1, "", "block_size"], [222, 12, 1, "", "check_layer_validity"], [222, 12, 1, "", "count_new_masked_cnts"], [222, 12, 1, "", "get_block_size_dict"], [222, 12, 1, "", "get_mask_per_threshold"], [222, 12, 1, "", "get_masks_global"], [222, 12, 1, "", "get_pattern_lock_masks"], [222, 12, 1, "", "get_reduced_masks_from_data"], [222, 12, 1, "", "get_sparsity_ratio"], [222, 12, 1, "", "get_sparsity_ratio_progressive"], [222, 12, 1, "", "reduce_scores"], [222, 12, 1, "", "reshape_orig_to_pattern"], [222, 12, 1, "", "reshape_reduced_to_orig"], [222, 12, 1, "", "update_new_added_masks"], [222, 12, 1, "", "update_progressive_masks"], [222, 12, 1, "", "update_progressive_masks_global"], [222, 12, 1, "", "update_progressive_masks_linear"], [222, 12, 1, "", "update_progressive_masks_local"], [222, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[223, 10, 1, "", "BasePruner"], [223, 10, 1, "", "BasicPruner"], [223, 10, 1, "", "PatternLockPruner"], [223, 10, 1, "", "ProgressivePruner"], [223, 13, 1, "", "get_pruner"], [223, 13, 1, "", "parse_valid_pruner_types"], [223, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[223, 12, 1, "", "check_is_pruned_step"], [223, 11, 1, "", "config"], [223, 11, 1, "", "current_sparsity_ratio"], [223, 11, 1, "", "end_step"], [223, 11, 1, "", "global_step"], [223, 12, 1, "", "mask_weights"], [223, 12, 1, "", "mask_weights_general"], [223, 11, 1, "", "masks"], [223, 11, 1, "", "max_sparsity_ratio_per_op"], [223, 11, 1, "", "modules"], [223, 12, 1, "", "on_after_eval"], [223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "on_before_eval"], [223, 12, 1, "", "on_before_optimizer_step"], [223, 12, 1, "", "on_epoch_begin"], [223, 12, 1, "", "on_epoch_end"], [223, 12, 1, "", "on_step_begin"], [223, 12, 1, "", "on_step_end"], [223, 12, 1, "", "on_train_begin"], [223, 12, 1, "", "on_train_end"], [223, 11, 1, "", "pattern"], [223, 11, 1, "", "pruning_frequency"], [223, 11, 1, "", "scheduler"], [223, 11, 1, "", "scores"], [223, 11, 1, "", "start_step"], [223, 11, 1, "", "target_sparsity_ratio"], [223, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[223, 11, 1, "", "criterion"], [223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "on_before_optimizer_step"], [223, 11, 1, "", "pattern"], [223, 11, 1, "", "reg"], [223, 11, 1, "", "scheduler"], [223, 12, 1, "", "set_global_step"], [223, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[223, 12, 1, "", "check_is_pruned_progressive_step"], [223, 12, 1, "", "check_progressive_validity"], [223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "on_before_optimizer_step"], [223, 12, 1, "", "on_step_begin"], [223, 12, 1, "", "print_progressive_sparsity"], [223, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[224, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[224, 11, 1, "", "config_file_path"], [224, 12, 1, "", "get_sparsity_ratio"], [224, 11, 1, "", "model"], [224, 12, 1, "", "on_after_eval"], [224, 12, 1, "", "on_after_optimizer_step"], [224, 12, 1, "", "on_before_eval"], [224, 12, 1, "", "on_before_optimizer_step"], [224, 12, 1, "", "on_epoch_begin"], [224, 12, 1, "", "on_epoch_end"], [224, 12, 1, "", "on_step_begin"], [224, 12, 1, "", "on_step_end"], [224, 12, 1, "", "on_train_begin"], [224, 12, 1, "", "on_train_end"], [224, 11, 1, "", "pruner_info"], [224, 11, 1, "", "pruners"], [224, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[225, 10, 1, "", "BaseReg"], [225, 10, 1, "", "GroupLasso"], [225, 13, 1, "", "get_reg"], [225, 13, 1, "", "get_reg_type"], [225, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[225, 12, 1, "", "on_after_optimizer_step"], [225, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[225, 11, 1, "", "alpha"], [225, 12, 1, "", "on_after_optimizer_step"], [225, 12, 1, "", "on_before_optimizer_step"], [225, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[226, 10, 1, "", "IterativeScheduler"], [226, 10, 1, "", "OneshotScheduler"], [226, 10, 1, "", "PruningScheduler"], [226, 13, 1, "", "get_scheduler"], [226, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[226, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[226, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[226, 11, 1, "", "config"], [226, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[227, 13, 1, "", "check_config"], [227, 13, 1, "", "check_key_validity"], [227, 13, 1, "", "parse_to_prune"], [227, 13, 1, "", "process_and_check_config"], [227, 13, 1, "", "process_config"], [227, 13, 1, "", "process_weight_config"], [227, 13, 1, "", "process_yaml_config"], [227, 13, 1, "", "reset_none_to_default"], [227, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[228, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[229, 10, 1, "", "BaseTrainer"], [229, 10, 1, "", "NLPSeq2SeqTrainer"], [229, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[229, 12, 1, "", "auto_distil_evaluation_loop"], [229, 12, 1, "", "autodistillation"], [229, 12, 1, "", "benchmark"], [229, 12, 1, "", "builtin_eval_func"], [229, 12, 1, "", "builtin_train_func"], [229, 12, 1, "", "compute_loss"], [229, 12, 1, "", "create_optimizer_builtin"], [229, 12, 1, "", "distill"], [229, 12, 1, "", "export_to_bf16_onnx"], [229, 12, 1, "", "export_to_fp32_onnx"], [229, 12, 1, "", "export_to_int8_onnx"], [229, 12, 1, "", "export_to_jit"], [229, 12, 1, "", "export_to_onnx"], [229, 12, 1, "", "init_distiller"], [229, 12, 1, "", "init_pruner"], [229, 12, 1, "", "init_quantizer"], [229, 12, 1, "", "model_builder_builtin"], [229, 12, 1, "", "nas"], [229, 12, 1, "", "orchestrate_optimizations"], [229, 12, 1, "", "prune"], [229, 12, 1, "", "quantize"], [229, 12, 1, "", "run_evolutionary_search"], [229, 12, 1, "", "set_dynamic_config"], [229, 12, 1, "", "train"], [229, 12, 1, "", "training_step"], [229, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[229, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[230, 9, 0, "-", "get_throughput"], [232, 9, 0, "-", "metrics"], [233, 9, 0, "-", "models"], [236, 9, 0, "-", "objectives"], [237, 9, 0, "-", "utility"], [238, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[232, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[234, 9, 0, "-", "modeling_bert_dynamic"], [235, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[234, 10, 1, "", "BertAttention"], [234, 10, 1, "", "BertEmbeddings"], [234, 10, 1, "", "BertEncoder"], [234, 10, 1, "", "BertForMaskedLM"], [234, 10, 1, "", "BertForMultipleChoice"], [234, 10, 1, "", "BertForNextSentencePrediction"], [234, 10, 1, "", "BertForPreTraining"], [234, 10, 1, "", "BertForPreTrainingOutput"], [234, 10, 1, "", "BertForQuestionAnswering"], [234, 10, 1, "", "BertForSequenceClassification"], [234, 10, 1, "", "BertForTokenClassification"], [234, 10, 1, "", "BertIntermediate"], [234, 10, 1, "", "BertLMHeadModel"], [234, 10, 1, "", "BertLMPredictionHead"], [234, 10, 1, "", "BertLayer"], [234, 10, 1, "", "BertModel"], [234, 10, 1, "", "BertOnlyMLMHead"], [234, 10, 1, "", "BertOnlyNSPHead"], [234, 10, 1, "", "BertOutput"], [234, 10, 1, "", "BertPooler"], [234, 10, 1, "", "BertPreTrainedModel"], [234, 10, 1, "", "BertPreTrainingHeads"], [234, 10, 1, "", "BertPredictionHeadTransform"], [234, 10, 1, "", "BertSelfAttention"], [234, 10, 1, "", "BertSelfOutput"], [234, 13, 1, "", "expand_gather"], [234, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "get_output_embeddings"], [234, 12, 1, "", "prepare_inputs_for_generation"], [234, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "get_output_embeddings"], [234, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "get_output_embeddings"], [234, 12, 1, "", "prepare_inputs_for_generation"], [234, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[234, 12, 1, "", "feed_forward_chunk"], [234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "get_input_embeddings"], [234, 12, 1, "", "set_input_embeddings"], [234, 12, 1, "", "set_length_config"], [234, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[234, 12, 1, "", "forward"], [234, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[234, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[235, 10, 1, "", "RobertaAttention"], [235, 10, 1, "", "RobertaClassificationHead"], [235, 10, 1, "", "RobertaEmbeddings"], [235, 10, 1, "", "RobertaEncoder"], [235, 10, 1, "", "RobertaForCausalLM"], [235, 10, 1, "", "RobertaForMaskedLM"], [235, 10, 1, "", "RobertaForMultipleChoice"], [235, 10, 1, "", "RobertaForQuestionAnswering"], [235, 10, 1, "", "RobertaForSequenceClassification"], [235, 10, 1, "", "RobertaForTokenClassification"], [235, 10, 1, "", "RobertaIntermediate"], [235, 10, 1, "", "RobertaLMHead"], [235, 10, 1, "", "RobertaLayer"], [235, 10, 1, "", "RobertaModel"], [235, 10, 1, "", "RobertaOutput"], [235, 10, 1, "", "RobertaPooler"], [235, 10, 1, "", "RobertaPreTrainedModel"], [235, 10, 1, "", "RobertaSelfAttention"], [235, 10, 1, "", "RobertaSelfOutput"], [235, 13, 1, "", "create_position_ids_from_input_ids"], [235, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[235, 12, 1, "", "forward"], [235, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[235, 12, 1, "", "create_position_ids_from_inputs_embeds"], [235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[235, 12, 1, "", "forward"], [235, 12, 1, "", "get_output_embeddings"], [235, 12, 1, "", "prepare_inputs_for_generation"], [235, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[235, 12, 1, "", "forward"], [235, 12, 1, "", "get_output_embeddings"], [235, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[235, 12, 1, "", "feed_forward_chunk"], [235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[235, 12, 1, "", "forward"], [235, 12, 1, "", "get_input_embeddings"], [235, 12, 1, "", "set_input_embeddings"], [235, 12, 1, "", "set_length_config"], [235, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[235, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[235, 12, 1, "", "forward"], [235, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[235, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[236, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[236, 12, 1, "", "modelsize"], [236, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[237, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[238, 10, 1, "", "TFDataloader"], [238, 13, 1, "", "distributed_init"], [238, 13, 1, "", "get_filepath"], [238, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[239, 9, 0, "-", "data_augmentation"], [241, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[239, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[239, 12, 1, "", "data_augment"], [239, 12, 1, "", "mit_data_augmentation"], [239, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[241, 10, 1, "", "AugmenterType"], [241, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[244, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[245, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[246, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[247, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[248, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_binary_op": [[249, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_binaryop": [[250, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_cast_to": [[251, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_concat": [[252, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[253, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[254, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[255, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[256, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[257, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_embedding": [[258, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[259, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_execution_options": [[260, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_gelu": [[261, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[262, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[263, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[264, 10, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[265, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[266, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"], [266, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[267, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[268, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[269, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_layernorm": [[270, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_linear": [[271, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[272, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[273, 10, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_main": [[274, 10, 1, "", "TestMain"]], "test_main.TestMain": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_matmul": [[275, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[276, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[277, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[278, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[279, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[280, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[282, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[283, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_ops": [[284, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[285, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[286, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[287, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_permute": [[288, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[289, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_pow": [[290, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[291, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[292, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[293, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[294, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[295, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[296, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[297, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[298, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_size": [[299, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_softmax": [[300, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[301, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_tanh": [[302, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[303, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[304, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[305, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[306, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_transpose": [[307, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[308, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_unet": [[309, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[310, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[311, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[312, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[313, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[314, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[315, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[316, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[317, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 350, 357], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 394, 399], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 200, 203, 204, 206, 209, 211, 212, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 232, 234, 235, 236, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 328, 338, 386], "function": [0, 2, 10, 14, 15, 36, 48, 101, 133, 191, 192, 195, 202, 203, 205, 206, 217, 219, 222, 223, 225, 226, 227, 234, 235, 237, 238, 241], "attribut": [0, 36, 101, 191, 348, 358], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 354, 359, 388], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 323, 363], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 101, 199, 201, 207, 208, 210, 213, 220, 231, 233, 240], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 324, 359, 361, 362], "graph_util": 10, "subpackag": [11, 193, 208], "loader": [12, 13], "logger": [14, 221], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 358, 361], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 99], "gemm": [35, 373, 374, 376, 379], "packag": [36, 101], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 112], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 375, 376, 377], "mean": [43, 371], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 132], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 373, 377, 378, 379], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 375], "slice": 68, "softmax": [69, 383], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 377, 378], "unpack": 76, "unsqueez": 77, "view": 78, "optim": [79, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 333, 334], "sub_graph": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "innerproductreshapefus": 80, "add_cls_token": 81, "add_embed": 82, "arangewithreciproc": 83, "attentionblock_attentionmaskaddreshap": 84, "attentionblock_constantofshapewithmul": 85, "attentionblock_qkvprereshap": 86, "attentionblock_qkvreshap": 87, "attentionblock_resize2gath": 88, "attentionblock_weightreshapeto4d": 89, "attention_mask_length_adaptive_keep_indic": 90, "attention_output_layer_norm_length_adaptive_keep_indic": 91, "attention_reshap": 92, "cast_to": 93, "collect_quant_info": 94, "conv_reshap": 95, "decoder_attn_reshap": 96, "einsumwitharang": 97, "embeddingbag": 98, "generate_sequ": 100, "innerproductwithbiasgelu": 102, "innerproductwithslic": 103, "innerproductwithswish": 104, "input_data": 105, "input_fil": 106, "insert_bf16_nod": 107, "insert_quant_nod": 108, "int8_bf16_mixed_precision_check": 109, "interact_featur": 110, "last_layer_shap": 111, "layer_norm_with_reduce_mean": 113, "layer_norm_with_transpos": 114, "llama_embed": 115, "llama_matmulwithtranspos": 116, "llama_postprocess": 117, "llama_rotary_pos_emb": 118, "lower_all_tupl": 119, "matmul_with_bia": 120, "matmul_with_bias_add": 121, "matmul_with_bias_gelu": 122, "matmul_with_bias_relu": 123, "matmul_with_bias_sigmoid": 124, "matmul_with_bias_tanh": 125, "matmul_with_bias_unsqueez": 126, "matmul_with_transpos": 127, "merged_embeddingbag": 128, "multi_head_attent": 129, "operator_adaptor": 130, "output_data": 131, "pattern": [133, 222, 358, 361, 362, 366, 373, 374, 379], "position_embed": 134, "position_embeddings_v1": 135, "qkv_merg": 136, "qkv_reshap": 137, "quantize_fus": 138, "quantized_graph_dtype_refactor": 139, "remove_constant_op": 140, "remove_last_view": 141, "remove_rang": 142, "removeslic": 143, "reshape_after_restore_hidden_st": 144, "reshape_before_and_after_attention_out_layer_norm_gather_el": 145, "reshape_before_restore_hidden_st": 146, "reshape_fus": 147, "resnetblock_instancenormreshapefromconv": 148, "resnetblock_instancenormreshapefromdiv": 149, "restnetblock_groupnorm": 150, "restore_hidden_states_in_length_adaptive_update_indic": 151, "rms_norm": 152, "rotary_pos_emb": 153, "slicemask": 154, "stablediffusion_explicitnhwctranspos": 155, "stablediffusion_mha": 156, "stablediffusion_mhareshap": 157, "stablediffusion_reshapefus": 158, "stablediffusion_bf16convert": 159, "start_end_logit": 160, "subgraph_match": 161, "textencdoer_word_embed": 162, "textencoder_attentionmaskaddreshap": 163, "textencoder_attentionreshap": 164, "textencoder_kvreshap": 165, "textencoder_mulreshap": 166, "textencoder_qreshap": 167, "textencoder_softmaxreshap": 168, "textencoder_causal_attention_mask": 169, "token_type_embed": 170, "token_type_embeddings_v1": 171, "torch_embed": 172, "torch_ip_insert_bia": 173, "torchinsertbf16nod": 174, "torchpaddingsqu": 175, "transformer2dmodel_attentionmaskaddreshap": 176, "transformer2dmodel_constantofshapewithmul": 177, "transformer2dmodel_ffnslic": 178, "transformer2dmodel_ffnslice_1": 179, "transformer2dmodel_qkvprereshap": 180, "transformer2dmodel_qkvreshap": 181, "transformer2dmodel_qkvreshape4d": 182, "transformer2dmodel_encoderhiddenstatesreshap": 183, "transformer2dmodel_getsamplebatch": 184, "transformer2dmodel_instancenormreshapefromadd": 185, "transformer2dmodel_instancenormreshapefromconcat": 186, "transformer2dmodel_sampleslic": 187, "transformer2dmodel_upblockres": 188, "transpose_batch_matmul": 189, "word_embed": 190, "tf_util": 191, "torch_util": 192, "evalu": [194, 195, 196, 197, 198, 199, 200], "lm_eval": [195, 196, 197, 198, 199, 200], "model": [197, 198, 211, 233, 234, 235, 319, 332, 339, 351, 354, 359, 360, 363, 364, 382, 388], "huggingfac": 197, "task": [199, 200], "lambada": 200, "benchmark": [202, 339, 364, 383], "config": [203, 331, 338, 358, 361], "distil": [204, 338, 352, 353, 355], "dynam": [205, 206, 207, 375, 390], "drop_and_restore_util": 205, "evolut": 206, "mixtur": [209, 210], "auto_distil": 209, "na": [212, 213, 214, 353], "basic_na": 212, "optimizer_tf": [216, 338], "pipelin": [217, 338, 388], "prune": [218, 224, 353, 355, 389], "pytorch_prun": [219, 220, 221, 222, 223, 224, 225, 226, 227], "criteria": 219, "pruner": 223, "reg": 225, "schedul": 226, "util": [227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241], "quantiz": [228, 353, 355, 364, 390], "trainer": [229, 335, 338, 352, 389, 390], "get_throughput": 230, "metric": [232, 352, 386, 389, 390], "modeling_bert_dynam": 234, "modeling_roberta_dynam": 235, "object": [236, 387, 390], "utility_tf": 238, "preprocess": [239, 240, 241, 375], "data_augment": 239, "version": [242, 357], "sparsity_al": 243, "test_add_cls_token": 244, "test_add_embed": 245, "test_attention_output_layer_norm_length_adaptive_keep_indic": 246, "test_attention_reshap": 247, "test_bert_mini_fp32": 248, "test_binary_op": 249, "test_binaryop": 250, "test_cast_to": 251, "test_concat": 252, "test_conv_reshap": 253, "test_decoder_attn_reshap": 254, "test_dispatcher_tuning_acc": 255, "test_dispatcher_tuning_throughput": 256, "test_dynamic_quant": 257, "test_embed": 258, "test_embeddingbag": 259, "test_execution_opt": 260, "test_gelu": 261, "test_gpt_int8": 262, "test_graph_dispatch": 263, "test_graph_optim": 264, "test_insert_input_output_data": 265, "test_is_supported_onnx_graph": 266, "test_last_layer_shap": 267, "test_layer_norm_with_reduce_mean": 268, "test_layer_norm_with_transpos": 269, "test_layernorm": 270, "test_linear": 271, "test_linear_int8": 272, "test_llama_pattern": 273, "test_main": 274, "test_matmul": 275, "test_matmul_int8": 276, "test_matmul_with_bias_relu": 277, "test_matmul_with_bias_sigmoid": 278, "test_matmul_with_bias_tanh": 279, "test_merged_embeddingbag": 280, "test_model": 281, "test_onnx_util": 282, "test_operator_adaptor": 283, "test_op": 284, "test_padding_seq": 285, "test_padding_sequ": 286, "test_pattern_dispatch": 287, "test_permut": 288, "test_position_embed": 289, "test_pow": 290, "test_primitive_cache_acc": 291, "test_primitive_cache_throughput": 292, "test_qkv_merg": 293, "test_qkv_reshap": 294, "test_quant_onnx_execut": 295, "test_reshape_after_restore_hidden_st": 296, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 297, "test_reshape_before_restore_hidden_st": 298, "test_siz": 299, "test_softmax": 300, "test_start_end_logit": 301, "test_tanh": 302, "test_text_encod": 303, "test_text_encoder_bf16": 304, "test_tf_util": 305, "test_token_type_embed": 306, "test_transpos": 307, "test_transpose_batch_matmul": 308, "test_unet": 309, "test_unet_bf16": 310, "test_unsqueez": 311, "test_vae_decod": 312, "test_vae_decoder_bf16": 313, "test_weight_sharing_acc": 314, "test_weight_sharing_dispatcher_tuning_acc": 315, "test_weight_sharing_dispatcher_tuning_throughtput": 316, "test_weight_sharing_throughput": 317, "secur": 318, "polici": 318, "report": 318, "vulner": 318, "intel": [319, 337, 342, 351, 353, 395], "extens": [319, 337, 342, 351, 353, 395], "transform": [319, 337, 342, 351, 353, 355, 368, 395], "acceler": [319, 355, 368, 372], "base": [319, 353], "platform": [319, 367, 381], "select": 319, "public": 319, "event": 319, "api": [320, 321, 322, 325, 330, 336, 338, 339, 354, 360, 368], "document": [321, 342, 395], "exampl": [321, 338, 339, 340, 353, 354, 360, 363, 383, 387, 388, 393], "python": [322, 360], "engin": [325, 326, 346, 353, 355, 357, 359, 361, 363, 364, 367, 399], "kernel": [327, 330, 343, 361, 368, 372, 375, 383, 396], "operator_desc": [328, 370, 371], "oper": [329, 360, 365], "specif": 329, "type": [329, 358, 389], "pytorch": [333, 338, 339, 352, 353], "tensorflow": [334, 338, 352, 353], "user": [336, 347, 368, 370, 371, 392, 400], "face": 336, "architectur": [337, 359], "autodistil": 338, "design": [338, 364], "framework": [338, 370, 371], "criterion": [338, 352], "knowledgedistillationloss": 338, "intermediatelayersknowledgedistillationloss": 338, "usag": [338, 352, 354, 370, 371, 383, 389], "flash": 338, "regular": 338, "introduct": [339, 350, 352, 354, 358, 360, 361, 362, 363, 366, 368, 370, 371, 372, 373, 377, 382, 386, 387, 388, 389, 390], "get": [339, 350, 351, 355, 360, 364, 386, 390], "start": [339, 350, 351, 355, 386, 390], "stock": [339, 353], "ipex": [339, 353], "output": [339, 351], "featur": [341, 370, 371, 390, 394], "welcom": [342, 395], "section": [342, 395], "implement": [344, 397], "detail": [344, 375, 378, 397], "perform": [345, 367, 368, 380, 381, 398], "neural": [346, 353, 355, 357, 359, 367, 399], "guid": [347, 392, 400], "contributor": [348, 349], "coven": [348, 349], "code": [348, 349], "conduct": [348, 349], "our": 348, "pledg": 348, "standard": 348, "respons": 348, "scope": 348, "enforc": 348, "contribut": 349, "guidelin": 349, "pull": 349, "request": 349, "checklist": 349, "templat": 349, "support": [349, 350, 351, 354, 363, 367, 368, 386, 387, 390], "data": [350, 374, 381], "augment": 350, "instal": [350, 351, 356, 357, 364, 368], "depend": 350, "script": [350, 352, 389, 390], "paramet": 350, "text": 350, "gener": [350, 359], "argument": 350, "overview": 351, "recommend": 351, "hardwar": [351, 356], "valid": [351, 356, 381], "environ": [351, 356, 364], "how": [351, 361, 382], "work": [351, 372], "1": [351, 359, 360, 364, 365, 382], "prerequisit": [351, 356, 357, 364, 375], "2": [351, 359, 364, 365, 382], "from": [351, 356, 357], "pypi": [351, 356], "conda": 351, "3": [351, 359, 382], "sourc": [351, 356], "To": [351, 364], "run": [351, 359, 360, 364, 382], "requir": [351, 356], "prepar": [351, 363, 364, 382], "dataset": [351, 364], "compress": 351, "4": [351, 359, 381], "infer": [351, 359, 369, 388], "expect": 351, "summari": [351, 386], "next": 351, "step": 351, "learn": 351, "more": [351, 361, 372], "knowledg": [352, 353], "intermedi": 352, "layer": [352, 376], "creat": [352, 362, 389, 390], "an": [352, 363, 389, 390], "instanc": [352, 389, 390], "option": [352, 361, 389, 390], "distillationconfig": 352, "length": [353, 355], "adapt": [353, 355], "auto": 353, "orchestr": 353, "refer": [353, 368], "deploy": 353, "dens": [353, 372], "spars": [353, 360, 372, 373, 374, 376, 379, 382], "export": 354, "onnx": [354, 359, 363, 364], "matrix": [354, 367, 368, 375, 387, 390], "fp32": 354, "bf16": 354, "int8": [354, 364, 388], "For": [354, 383], "executor": [354, 365, 388], "linux": 356, "window": 356, "system": 356, "softwar": 356, "stabl": 357, "pip": 357, "binari": [357, 359, 370], "deploi": [357, 359], "bare": 357, "metal": 357, "add": [358, 365], "custom": [358, 359, 365], "regist": [358, 365], "node": [358, 362], "set": [358, 360], "map": [358, 362], "fuse": 358, "new": [358, 362], "after": 358, "fusion": [358, 362], "integr": 359, "tf": 359, "us": [359, 375], "through": 359, "manual": 359, "yaml": 359, "weight": [359, 375, 382], "build": [359, 368, 383], "profil": [360, 380], "profl": 360, "you": 360, "can": 360, "onli": 360, "engine_profil": 360, "befor": 360, "c": 360, "part": 360, "csv": 360, "ratio": 360, "total": 360, "level": 360, "json": 360, "iter": 360, "tune": [361, 364, 390], "dispatch": 361, "best": 361, "relat": 361, "runtim": 361, "turn": 361, "mechan": 361, "dict": 362, "obtain": 362, "necessari": 362, "inform": [362, 385], "construct": 362, "establish": 362, "connect": 362, "remov": [362, 366], "old": 362, "insert": 362, "ir": [363, 364], "format": [363, 374, 384], "low": 364, "precis": 364, "its": 364, "accuraci": [364, 390], "h": 365, "includ": 365, "cpp": 365, "src": 365, "recogn": 366, "represent": 366, "pars": 366, "list": [366, 389], "search": 366, "each": 366, "straight": 366, "chain": 366, "splice": 366, "sub": 366, "main": 366, "duplic": 366, "result": [366, 382], "configur": [367, 381], "librari": 368, "test": 368, "sparse_matmul": [368, 383], "3d": 369, "memori": 369, "layout": 369, "spmm_vnni": [369, 383], "cach": 369, "issu": 369, "injector": [370, 371], "param_typ": [370, 371], "hpp": [370, 371], "jit_binaryop_injector": 370, "develop": [370, 371, 383], "": [370, 371], "perspect": [370, 371], "element": 371, "wise": 371, "alpha": 371, "beta": 371, "scale": 371, "jit_eltwise_injector": 371, "naiv": 372, "tile": 372, "effici": 372, "per": 372, "thread": [372, 381], "prefetch": 372, "amx": 373, "brief": 373, "isa": 373, "avx512f": 374, "kei": 374, "instruct": 374, "loop": 374, "quant": 375, "problem": [375, 376, 377, 378], "descript": [375, 376, 378], "differ": 375, "jit": 375, "path": 375, "small_wei": 375, "large_wei": 375, "normal": 376, "layernorm": 376, "pre": 376, "comput": 376, "spmm": 376, "direct": 376, "layernorm_ba": [376, 383], "statement": 377, "matmul_p2031_2013": 377, "matmul_avx512f_p2031_p2013": [377, 383], "matmul_noperm_p2031_p1302": 377, "matmul_vnni_noperm_p2013_p1302": 377, "beforehand": 377, "mha": [378, 383], "calcul": 378, "vnni": 379, "On": 379, "fly": 379, "activ": 379, "candid": 379, "verbos": 380, "vtune": 380, "sde": 380, "singl": 381, "multi": 381, "visual": 382, "distribut": 382, "setup": 382, "below": 382, "command": 382, "analysi": 382, "spmm_avx512f": 383, "spmm_amx_bf16_x16": 383, "eltwiseop": 383, "transpose_matmul": 383, "matmul_vnni_noperm_p2031_p1302": 383, "attent": 383, "static": [383, 390], "dynamic_quant_matmul": 383, "dynamic_qu": 383, "input": 384, "legal": 385, "licens": 385, "citat": 385, "trademark": 385, "prunerconfig": 389, "pruningconfig": 389, "fundament": 390, "approach": 390, "post": 390, "train": 390, "awar": 390, "quantizationconfig": 390, "releas": 391, "note": 391}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [195, "module-contents"], [197, "module-contents"], [200, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [209, "module-contents"], [211, "module-contents"], [212, "module-contents"], [214, "module-contents"], [215, "module-contents"], [216, "module-contents"], [217, "module-contents"], [218, "module-contents"], [219, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [227, "module-contents"], [228, "module-contents"], [229, "module-contents"], [232, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [241, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [197, "classes"], [200, "classes"], [203, "classes"], [204, "classes"], [206, "classes"], [209, "classes"], [211, "classes"], [212, "classes"], [214, "classes"], [215, "classes"], [216, "classes"], [218, "classes"], [219, "classes"], [222, "classes"], [223, "classes"], [224, "classes"], [225, "classes"], [226, "classes"], [228, "classes"], [229, "classes"], [232, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [238, "classes"], [239, "classes"], [241, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [101, "functions"], [133, "functions"], [191, "functions"], [192, "functions"], [195, "functions"], [202, "functions"], [203, "functions"], [205, "functions"], [206, "functions"], [217, "functions"], [219, "functions"], [222, "functions"], [223, "functions"], [225, "functions"], [226, "functions"], [227, "functions"], [234, "functions"], [235, "functions"], [237, "functions"], [238, "functions"], [241, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [101, "attributes"], [191, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [101, "submodules"], [199, "submodules"], [201, "submodules"], [207, "submodules"], [208, "submodules"], [210, "submodules"], [213, "submodules"], [220, "submodules"], [231, "submodules"], [233, "submodules"], [240, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [193, "subpackages"], [208, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [101, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[193, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[194, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[201, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[202, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[203, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[204, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[207, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[208, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[210, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[211, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[213, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[215, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[217, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[218, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[226, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[227, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[228, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[229, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[230, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[231, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[232, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[233, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[234, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[235, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[236, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[237, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[238, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[239, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[240, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[241, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[242, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[243, "module-sparsity_all"]], "test_add_cls_token": [[244, "module-test_add_cls_token"]], "test_add_embeddings": [[245, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[246, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[247, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[248, "module-test_bert_mini_fp32"]], "test_binary_op": [[249, "module-test_binary_op"]], "test_binaryop": [[250, "module-test_binaryop"]], "test_cast_to": [[251, "module-test_cast_to"]], "test_concat": [[252, "module-test_concat"]], "test_conv_reshape": [[253, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[254, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[255, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[256, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[257, "module-test_dynamic_quantization"]], "test_embedding": [[258, "module-test_embedding"]], "test_embeddingbag": [[259, "module-test_embeddingbag"]], "test_execution_options": [[260, "module-test_execution_options"]], "test_gelu": [[261, "module-test_gelu"]], "test_gpt_int8": [[262, "module-test_gpt_int8"]], "test_graph_dispatch": [[263, "module-test_graph_dispatch"]], "test_graph_optimizer": [[264, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[265, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[266, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[267, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[268, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[269, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[270, "module-test_layernorm"]], "test_linear": [[271, "module-test_linear"]], "test_linear_int8": [[272, "module-test_linear_int8"]], "test_llama_pattern": [[273, "module-test_llama_pattern"]], "test_main": [[274, "module-test_main"]], "test_matmul": [[275, "module-test_matmul"]], "test_matmul_int8": [[276, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[277, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[278, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[279, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[280, "module-test_merged_embeddingbag"]], "test_model": [[281, "module-test_model"]], "test_onnx_utils": [[282, "module-test_onnx_utils"]], "test_operator_adaptor": [[283, "module-test_operator_adaptor"]], "test_ops": [[284, "module-test_ops"]], "test_padding_seq": [[285, "module-test_padding_seq"]], "test_padding_sequence": [[286, "module-test_padding_sequence"]], "test_pattern_dispatch": [[287, "module-test_pattern_dispatch"]], "test_permute": [[288, "module-test_permute"]], "test_position_embeddings": [[289, "module-test_position_embeddings"]], "test_pow": [[290, "module-test_pow"]], "test_primitive_cache_acc": [[291, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[292, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[293, "module-test_qkv_merge"]], "test_qkv_reshape": [[294, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[295, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[296, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[297, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[298, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[299, "module-test_size"]], "test_softmax": [[300, "module-test_softmax"]], "test_start_end_logits": [[301, "module-test_start_end_logits"]], "test_tanh": [[302, "module-test_tanh"]], "test_text_encoder": [[303, "module-test_text_encoder"]], "test_text_encoder_bf16": [[304, "module-test_text_encoder_bf16"]], "test_tf_utils": [[305, "module-test_tf_utils"]], "test_token_type_embeddings": [[306, "module-test_token_type_embeddings"]], "test_transpose": [[307, "module-test_transpose"]], "test_transpose_batch_matmul": [[308, "module-test_transpose_batch_matmul"]], "test_unet": [[309, "module-test_unet"]], "test_unet_bf16": [[310, "module-test_unet_bf16"]], "test_unsqueeze": [[311, "module-test_unsqueeze"]], "test_vae_decoder": [[312, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[313, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[314, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[315, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[316, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[317, "module-test_weight_sharing_throughput"]], "Security Policy": [[318, "security-policy"]], "Report a Vulnerability": [[318, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[319, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[319, "selected-publications-events"]], "API": [[320, "api"]], "API Document Example": [[321, "api-document-example"]], "Python APIs": [[322, "python-apis"]], "Compile": [[323, "compile"]], "Graph": [[324, "graph"]], "Engine API": [[325, "engine-api"]], "Class engine": [[326, "class-engine"]], "Class Kernel": [[327, "class-kernel"]], "Class operator_desc": [[328, "class-operator-desc"]], "Operator Specific Types": [[329, "operator-specific-types"]], "Kernel APIs": [[330, "kernel-apis"]], "Config": [[331, "config"]], "Model": [[332, "model"]], "PyTorch Optimizer": [[333, "pytorch-optimizer"]], "TensorFlow Optimizer": [[334, "tensorflow-optimizer"]], "Trainer": [[335, "trainer"]], "User-facing API": [[336, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[337, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[338, "autodistillation-design"]], "AutoDistillation Pipeline": [[338, "autodistillation-pipeline"]], "Framework Class Design": [[338, "framework-class-design"]], "Criterion Class Design": [[338, "criterion-class-design"]], "KnowledgeDistillationLoss": [[338, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[338, "intermediatelayersknowledgedistillationloss"]], "Usage": [[338, "usage"], [370, "usage"], [371, "usage"], [383, "usage"], [389, "usage"]], "Pytorch": [[338, "pytorch"]], "AutoDistillation API in Trainer": [[338, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[338, "flash-distillation-config-example"]], "Regular distillation config example": [[338, "regular-distillation-config-example"]], "AutoDistillation config example": [[338, "autodistillation-config-example"], [338, "id1"]], "Tensorflow": [[338, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[338, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[338, "distillation-config-example"]], "Benchmark": [[339, "benchmark"]], "Introduction": [[339, "introduction"], [350, "introduction"], [352, "introduction"], [354, "introduction"], [358, "introduction"], [360, "introduction"], [361, "introduction"], [362, "introduction"], [363, "introduction"], [366, "introduction"], [368, "introduction"], [370, "introduction"], [371, "introduction"], [372, "introduction"], [377, "introduction"], [382, "introduction"], [386, "introduction"], [387, "introduction"], [388, "introduction"], [389, "introduction"], [390, "introduction"]], "Get Started with Benchmark API": [[339, "get-started-with-benchmark-api"]], "Examples": [[339, "examples"], [353, "examples"], [354, "examples"], [383, "examples"], [383, "id1"], [383, "id2"], [383, "id3"], [383, "id4"], [383, "id5"], [383, "id6"], [383, "id7"], [383, "id8"], [383, "id9"], [383, "id10"], [383, "id11"], [388, "examples"]], "Stock Pytorch Model": [[339, "stock-pytorch-model"]], "IPEX Model": [[339, "ipex-model"]], "Benchmark Output": [[339, "benchmark-output"]], "Example": [[340, "example"], [393, "example"]], "Features": [[341, "features"], [394, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[342, "welcome-to-intel-extension-for-transformers-documentation"], [395, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[342, "sections"], [395, "sections"]], "Kernels": [[343, "kernels"], [396, "kernels"]], "Implementation Details": [[344, "implementation-details"], [397, "implementation-details"]], "Performance": [[345, "performance"], [367, "performance"], [368, "performance"], [398, "performance"]], "Neural Engine": [[346, "neural-engine"], [399, "neural-engine"]], "User Guide": [[347, "user-guide"], [392, "user-guide"], [400, "user-guide"]], "Contributor Covenant Code of Conduct": [[348, "contributor-covenant-code-of-conduct"], [349, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[348, "our-pledge"]], "Our Standards": [[348, "our-standards"]], "Our Responsibilities": [[348, "our-responsibilities"]], "Scope": [[348, "scope"]], "Enforcement": [[348, "enforcement"]], "Attribution": [[348, "attribution"]], "Contribution Guidelines": [[349, "contribution-guidelines"]], "Pull Request Checklist": [[349, "pull-request-checklist"]], "Pull Request Template": [[349, "pull-request-template"]], "Support": [[349, "support"], [351, "support"]], "Data Augmentation": [[350, "data-augmentation"], [350, "id1"]], "Getting Started": [[350, "getting-started"], [355, "getting-started"]], "Install Dependency": [[350, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[350, "install-intel-extension-for-transformers"]], "Script": [[350, "script"]], "Parameters of Data Augmentation": [[350, "parameters-of-data-augmentation"]], "Supported Augmenter": [[350, "supported-augmenter"]], "Text Generation Augmenter": [[350, "text-generation-augmenter"]], "Augmenter Arguments:": [[350, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[351, "intel-extension-for-transformers"]], "Overview": [[351, "overview"]], "Recommended Hardware": [[351, "recommended-hardware"]], "Validated Hardware Environment": [[351, "validated-hardware-environment"], [356, "validated-hardware-environment"]], "How it Works": [[351, "how-it-works"]], "Get Started": [[351, "get-started"], [390, "get-started"]], "1. Prerequisites": [[351, "prerequisites"]], "2. Installation": [[351, "installation"]], "2.1 Install from PyPi": [[351, "install-from-pypi"]], "2.2 Install from Conda": [[351, "install-from-conda"]], "2.3 Install from Source": [[351, "install-from-source"]], "3. How To Run": [[351, "how-to-run"]], "3.1 Install Requirements": [[351, "install-requirements"]], "3.2 Prepare Datasets": [[351, "prepare-datasets"]], "3.3 Model Compression": [[351, "model-compression"]], "3.4 Model Inference": [[351, "model-inference"]], "Expected Output": [[351, "expected-output"]], "Summary and Next Steps": [[351, "summary-and-next-steps"]], "Learn More": [[351, "learn-more"]], "Distillation": [[352, "distillation"], [352, "id1"], [353, "distillation"], [355, "distillation"]], "Knowledge Distillation": [[352, "knowledge-distillation"], [353, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[352, "intermediate-layer-knowledge-distillation"]], "usage": [[352, "usage"]], "Pytorch Script:": [[352, "pytorch-script"]], "Tensorflow Script:": [[352, "tensorflow-script"]], "Create an Instance of Metric": [[352, "create-an-instance-of-metric"], [390, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[352, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[352, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[352, "distill-with-trainer"]], "Quantization": [[353, "quantization"], [355, "quantization"], [390, "quantization"]], "Stock PyTorch Examples": [[353, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[353, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[353, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[353, "length-adaptive-transformers"]], "Pruning": [[353, "pruning"], [355, "pruning"], [389, "pruning"]], "Auto Distillation (NAS Based)": [[353, "auto-distillation-nas-based"]], "Orchestrate": [[353, "orchestrate"]], "Reference Deployment on Neural Engine": [[353, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[353, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[353, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[354, "export-to-onnx"]], "Supported Model Export Matrix": [[354, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[354, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[354, "export-to-bf16-onnx-model"]], "API usage": [[354, "api-usage"]], "Export to INT8 ONNX Model": [[354, "export-to-int8-onnx-model"]], "For executor backend": [[354, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[355, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[355, "transformers-accelerated-neural-engine"]], "Installation": [[356, "installation"], [357, "installation"], [368, "installation"]], "Linux Installation": [[356, "linux-installation"]], "Prerequisites": [[356, "prerequisites"], [356, "id1"], [357, "prerequisites"]], "Install from Pypi": [[356, "install-from-pypi"], [356, "id2"]], "Install from Source": [[356, "install-from-source"], [356, "id3"]], "Windows Installation": [[356, "windows-installation"]], "System Requirements": [[356, "system-requirements"]], "Validated Software Environment": [[356, "validated-software-environment"]], "Install": [[357, "install"]], "Install stable version intel_extension_for_transformers from pip": [[357, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[357, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[358, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[358, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[358, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[358, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[359, "deploy-and-integration"]], "1. Architecture": [[359, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[359, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[359, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[359, "run-the-inference-by-engine"], [359, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[359, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[359, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[359, "integrate-neural-engine-as-backend"]], "Profiling": [[360, "profiling"]], "Profling API": [[360, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[360, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[360, "profiling-examples"]], "Parts of CSV Profiling": [[360, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[360, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[360, "operator-profiling-part"]], "Total Profiling Part": [[360, "total-profiling-part"]], "Levels of JSON Profiling": [[360, "levels-of-json-profiling"]], "Model Level": [[360, "model-level"]], "Iteration Level": [[360, "iteration-level"]], "Operator Level": [[360, "operator-level"]], "Engine Tuning": [[361, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[361, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[361, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[361, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[361, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[361, "more-tuning-options"]], "Graph Fusion": [[362, "graph-fusion"]], "Pattern Mapping Dict": [[362, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[362, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[362, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[362, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[363, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[363, "supported-onnx-format"]], "Compile Examples": [[363, "compile-examples"]], "Prepare ONNX Model": [[363, "prepare-onnx-model"]], "Compile to IR": [[363, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[364, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[364, "design"]], "Prerequisite": [[364, "prerequisite"]], "Install environment": [[364, "install-environment"]], "Prepare Dataset": [[364, "prepare-dataset"]], "Prepare ONNX model": [[364, "prepare-onnx-model"]], "Run tuning and benchmark": [[364, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[364, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[364, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[365, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[365, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[365, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[366, "pattern-recognize"]], "Pattern Representation": [[366, "pattern-representation"]], "Parse Pattern Representation List": [[366, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[366, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[366, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[367, "neural-engine-support-matrix"]], "platform configuration": [[367, "platform-configuration"]], "Transformers-Accelerated Libraries": [[368, "transformers-accelerated-libraries"]], "Build": [[368, "build"], [383, "build"]], "Test": [[368, "test"]], "API reference for users": [[368, "api-reference-for-users"]], "sparse_matmul kernel:": [[368, "sparse-matmul-kernel"]], "Supported Matrix": [[368, "supported-matrix"]], "3D Inference": [[369, "d-inference"]], "Memory Layout in SPMM_VNNI": [[369, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[369, "cache-issues"]], "SPMM_VNNI 3D Inference": [[369, "spmm-vnni-3d-inference"]], "Binary Injectors": [[370, "binary-injectors"]], "Framework Features": [[370, "framework-features"], [371, "framework-features"]], "param_type.hpp": [[370, "param-type-hpp"]], "operator_desc.hpp": [[370, "operator-desc-hpp"], [371, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[370, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[370, "developer-s-perspective"]], "User\u2019s Perspective": [[370, "user-s-perspective"], [371, "user-s-perspective"]], "Element-wise Injector": [[371, "element-wise-injector"]], "param_types.hpp": [[371, "param-types-hpp"]], "alpha,beta,scale meaning": [[371, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[371, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[371, "developer-s-perspective"]], "Dense and Sparse": [[372, "dense-and-sparse"]], "Naive": [[372, "naive"]], "Tile": [[372, "tile"]], "Efficient kernel": [[372, "efficient-kernel"]], "More work per thread": [[372, "more-work-per-thread"]], "Prefetch": [[372, "prefetch"]], "Sparse acceleration": [[372, "sparse-acceleration"]], "Sparse GEMM AMX": [[373, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[373, "brief-introduction-for-isas"]], "Pattern": [[373, "pattern"]], "Reorder": [[373, "reorder"]], "Sparse GEMM AVX512F": [[374, "sparse-gemm-avx512f"]], "Key Instruction": [[374, "key-instruction"]], "Sparse Pattern & Data Format": [[374, "sparse-pattern-data-format"]], "Loops": [[374, "loops"]], "Dynamic Quant Matmul": [[375, "dynamic-quant-matmul"]], "problem description": [[375, "problem-description"]], "Kernel details": [[375, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[375, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[375, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[375, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[375, "small-wei-jit-path"]], "large_wei jit-path": [[375, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[376, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[376, "problem-description"]], "layernormalized sparse matmul": [[376, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[376, "pre-compute-spmm"]], "Direct Layernorm_ba": [[376, "direct-layernorm-ba"]], "Transposed MatMul": [[377, "transposed-matmul"]], "Problem Statements": [[377, "problem-statements"]], "Matmul_p2031_2013": [[377, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[377, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[377, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[377, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[377, "reorder-beforehand"]], "Transposed MHA": [[378, "transposed-mha"]], "Problem description": [[378, "problem-description"]], "Details": [[378, "details"]], "Reordering": [[378, "reordering"]], "Calculation": [[378, "calculation"]], "Sparse GEMM VNNI": [[379, "sparse-gemm-vnni"]], "On the fly activation reordering": [[379, "on-the-fly-activation-reordering"]], "Candidate patterns": [[379, "candidate-patterns"]], "Performance and Profiling": [[380, "performance-and-profiling"]], "Verbose": [[380, "verbose"]], "VTune": [[380, "vtune"]], "SDE": [[380, "sde"]], "Validated Performance Data": [[381, "validated-performance-data"]], "Single Thread": [[381, "single-thread"]], "Multi Thread (Thread = 4)": [[381, "multi-thread-thread-4"]], "Platform Configuration": [[381, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[382, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[382, "setups"]], "1. Prepare the sparse model": [[382, "prepare-the-sparse-model"]], "2. Run below commands": [[382, "run-below-commands"]], "3. Analysis results": [[382, "analysis-results"]], "Benchmark for Kernels": [[383, "benchmark-for-kernels"]], "sparse_matmul": [[383, "sparse-matmul"]], "spmm_avx512f": [[383, "spmm-avx512f"]], "spmm_vnni": [[383, "spmm-vnni"]], "spmm_amx_bf16_x16": [[383, "spmm-amx-bf16-x16"]], "eltwiseop": [[383, "eltwiseop"]], "layernorm_ba": [[383, "layernorm-ba"]], "transpose_matmul": [[383, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[383, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[383, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[383, "softmax"]], "attention": [[383, "attention"]], "Static MHA": [[383, "static-mha"]], "dynamic_quant_matmul": [[383, "dynamic-quant-matmul"]], "dynamic_quant": [[383, "dynamic-quant"]], "For developers": [[383, "for-developers"]], "Inputs format": [[384, "inputs-format"]], "Legal Information": [[385, "legal-information"]], "License": [[385, "license"]], "Citation": [[385, "citation"]], "Trademarks": [[385, "trademarks"]], "Metrics": [[386, "metrics"]], "Supported Metric": [[386, "supported-metric"]], "Metric Class Summary": [[386, "metric-class-summary"]], "Get Start with Metrics": [[386, "get-start-with-metrics"]], "Objective": [[387, "objective"]], "Supported Objectives Matrix:": [[387, "supported-objectives-matrix"]], "Examples:": [[387, "examples"]], "Pipeline": [[388, "pipeline"]], "Pipeline Inference for INT8 Model": [[388, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[388, "pipeline-inference-for-executor-backend"]], "Pruning types": [[389, "pruning-types"]], "Script:": [[389, "script"], [390, "script"]], "Create an instance of Metric": [[389, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[389, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[389, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[389, "prune-with-trainer"]], "Quantization Fundamentals": [[390, "quantization-fundamentals"]], "Quantization Approach": [[390, "quantization-approach"]], "Post Training Dynamic Quantization": [[390, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[390, "post-training-static-quantization"]], "Quantization Aware Training": [[390, "quantization-aware-training"]], "Accuracy Aware Tuning": [[390, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[390, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[390, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[390, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[390, "quantization-with-trainer"]], "Release": [[391, "release"]], "Release Notes": [[391, "release-notes"]], "Contents:": [[394, null], [399, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [193, "module-intel_extension_for_transformers.backends.neural_engine"], [194, "module-intel_extension_for_transformers.evaluation"], [195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [196, "module-intel_extension_for_transformers.evaluation.lm_eval"], [197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [201, "module-intel_extension_for_transformers"], [202, "module-intel_extension_for_transformers.optimization.benchmark"], [203, "module-intel_extension_for_transformers.optimization.config"], [204, "module-intel_extension_for_transformers.optimization.distillation"], [205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [207, "module-intel_extension_for_transformers.optimization.dynamic"], [208, "module-intel_extension_for_transformers.optimization"], [209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [210, "module-intel_extension_for_transformers.optimization.mixture"], [211, "module-intel_extension_for_transformers.optimization.model"], [212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [213, "module-intel_extension_for_transformers.optimization.nas"], [214, "module-intel_extension_for_transformers.optimization.nas.nas"], [215, "module-intel_extension_for_transformers.optimization.optimizer"], [216, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [217, "module-intel_extension_for_transformers.optimization.pipeline"], [218, "module-intel_extension_for_transformers.optimization.pruning"], [219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [220, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [226, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [227, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [228, "module-intel_extension_for_transformers.optimization.quantization"], [229, "module-intel_extension_for_transformers.optimization.trainer"], [230, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [231, "module-intel_extension_for_transformers.optimization.utils"], [232, "module-intel_extension_for_transformers.optimization.utils.metrics"], [233, "module-intel_extension_for_transformers.optimization.utils.models"], [234, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [235, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [236, "module-intel_extension_for_transformers.optimization.utils.objectives"], [237, "module-intel_extension_for_transformers.optimization.utils.utility"], [238, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [239, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [240, "module-intel_extension_for_transformers.preprocessing"], [241, "module-intel_extension_for_transformers.preprocessing.utils"], [242, "module-intel_extension_for_transformers.version"], [243, "module-sparsity_all"], [244, "module-test_add_cls_token"], [245, "module-test_add_embeddings"], [246, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [247, "module-test_attention_reshape"], [248, "module-test_bert_mini_fp32"], [249, "module-test_binary_op"], [250, "module-test_binaryop"], [251, "module-test_cast_to"], [252, "module-test_concat"], [253, "module-test_conv_reshape"], [254, "module-test_decoder_attn_reshape"], [255, "module-test_dispatcher_tuning_acc"], [256, "module-test_dispatcher_tuning_throughput"], [257, "module-test_dynamic_quantization"], [258, "module-test_embedding"], [259, "module-test_embeddingbag"], [260, "module-test_execution_options"], [261, "module-test_gelu"], [262, "module-test_gpt_int8"], [263, "module-test_graph_dispatch"], [264, "module-test_graph_optimizer"], [265, "module-test_insert_input_output_data"], [266, "module-test_is_supported_onnx_graph"], [267, "module-test_last_layer_shape"], [268, "module-test_layer_norm_with_reduce_mean"], [269, "module-test_layer_norm_with_transpose"], [270, "module-test_layernorm"], [271, "module-test_linear"], [272, "module-test_linear_int8"], [273, "module-test_llama_pattern"], [274, "module-test_main"], [275, "module-test_matmul"], [276, "module-test_matmul_int8"], [277, "module-test_matmul_with_bias_relu"], [278, "module-test_matmul_with_bias_sigmoid"], [279, "module-test_matmul_with_bias_tanh"], [280, "module-test_merged_embeddingbag"], [281, "module-test_model"], [282, "module-test_onnx_utils"], [283, "module-test_operator_adaptor"], [284, "module-test_ops"], [285, "module-test_padding_seq"], [286, "module-test_padding_sequence"], [287, "module-test_pattern_dispatch"], [288, "module-test_permute"], [289, "module-test_position_embeddings"], [290, "module-test_pow"], [291, "module-test_primitive_cache_acc"], [292, "module-test_primitive_cache_throughput"], [293, "module-test_qkv_merge"], [294, "module-test_qkv_reshape"], [295, "module-test_quant_onnx_execute"], [296, "module-test_reshape_after_restore_hidden_states"], [297, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [298, "module-test_reshape_before_restore_hidden_states"], [299, "module-test_size"], [300, "module-test_softmax"], [301, "module-test_start_end_logits"], [302, "module-test_tanh"], [303, "module-test_text_encoder"], [304, "module-test_text_encoder_bf16"], [305, "module-test_tf_utils"], [306, "module-test_token_type_embeddings"], [307, "module-test_transpose"], [308, "module-test_transpose_batch_matmul"], [309, "module-test_unet"], [310, "module-test_unet_bf16"], [311, "module-test_unsqueeze"], [312, "module-test_vae_decoder"], [313, "module-test_vae_decoder_bf16"], [314, "module-test_weight_sharing_acc"], [315, "module-test_weight_sharing_dispatcher_tuning_acc"], [316, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [317, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[193, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[194, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[195, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[200, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[200, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[201, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[202, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[203, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[203, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[204, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[204, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[204, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[205, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[205, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[207, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[208, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[210, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[211, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[211, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[211, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[213, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[214, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[215, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[217, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[217, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[218, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[218, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[218, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[226, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[226, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[227, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[227, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[228, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[228, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[229, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[229, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[229, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[229, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[230, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[231, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[232, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[232, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[233, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[234, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[234, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[235, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[235, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[236, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[236, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[236, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[236, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[237, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[237, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[238, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[238, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[238, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[238, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[238, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[239, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[239, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[239, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[239, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[239, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[240, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[241, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[241, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[241, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[242, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[243, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[244, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[244, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[244, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[244, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[245, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[245, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[245, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[245, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[246, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[246, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[246, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[246, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[247, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[247, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[247, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[247, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[248, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[248, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[248, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[248, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[249, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[249, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[249, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[249, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[250, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[250, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[250, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[250, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[251, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[251, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[251, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[251, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[252, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[252, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[252, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[252, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[253, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[253, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[253, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[253, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[254, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[254, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[254, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[254, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[255, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[255, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[255, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[255, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[256, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[256, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[256, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[256, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[257, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[257, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[257, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[257, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[258, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[258, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[258, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[258, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[259, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[259, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[259, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[259, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[260, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[260, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[260, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[260, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[261, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[261, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[261, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[261, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[262, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[262, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[262, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[262, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[263, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[263, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[263, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[263, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[264, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[264, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[264, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[264, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[265, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[265, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[265, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[265, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[266, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[266, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[266, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[266, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[266, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[267, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[267, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[267, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[267, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[268, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[268, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[268, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[268, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[269, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[269, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[269, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[269, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[270, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[270, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[270, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[270, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[271, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[271, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[271, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[271, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[272, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[272, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[272, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[272, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[273, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[273, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[273, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[273, "module-test_llama_pattern"]], "testmain (class in test_main)": [[274, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[274, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[274, "test_main.TestMain.tearDownClass"]], "test_main": [[274, "module-test_main"]], "testtorchop (class in test_matmul)": [[275, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[275, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[275, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[275, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[276, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[276, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[276, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[276, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[277, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[277, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[277, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[277, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[278, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[278, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[278, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[278, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[279, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[279, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[279, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[279, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[280, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[280, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[280, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[280, "module-test_merged_embeddingbag"]], "test_model": [[281, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[282, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[282, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[282, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[282, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[283, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[283, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[283, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[283, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[284, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[284, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[284, "test_ops.TestOps.tearDownClass"]], "test_ops": [[284, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[285, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[285, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[285, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[285, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[286, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[286, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[286, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[286, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[287, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[287, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[287, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[287, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[288, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[288, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[288, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[288, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[289, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[289, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[289, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[289, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[290, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[290, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[290, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[290, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[291, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[291, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[291, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[291, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[292, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[292, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[292, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[292, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[293, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[293, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[293, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[293, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[294, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[294, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[294, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[294, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[295, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[295, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[295, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[295, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[296, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[296, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[296, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[296, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[297, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[297, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[297, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[297, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[298, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[298, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[298, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[298, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[299, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[299, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[299, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[299, "module-test_size"]], "testtorchop (class in test_softmax)": [[300, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[300, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[300, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[300, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[301, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[301, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[301, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[301, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[302, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[302, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[302, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[302, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[303, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[303, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[303, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[303, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[304, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[304, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[304, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[304, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[305, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[305, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[305, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[305, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[306, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[306, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[306, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[306, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[307, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[307, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[307, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[307, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[308, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[308, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[308, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[308, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[309, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[309, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[309, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[309, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[310, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[310, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[310, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[310, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[311, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[311, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[311, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[311, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[312, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[312, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[312, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[312, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[313, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[313, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[313, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[313, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[314, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[314, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[314, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[314, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[315, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[315, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[315, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[315, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[316, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[316, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[316, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[316, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[317, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[317, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[317, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[317, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[326, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[326, "c.NULL_INSTANCE"]], "jd (c++ type)": [[326, "_CPPv42jd"], [327, "_CPPv42jd"], [328, "_CPPv42jd"], [329, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[326, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[326, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[326, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[326, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[326, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[326, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[326, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[326, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[326, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[326, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[326, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[326, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[326, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[326, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[326, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[326, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[326, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[327, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[327, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [327, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[327, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[327, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[327, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [327, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[327, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[327, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[327, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [327, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[327, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[327, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[327, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [327, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[327, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[327, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[327, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [327, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[327, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[327, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[327, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [327, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[327, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[327, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[327, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [327, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[327, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[327, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[327, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [327, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[327, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[327, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[327, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [327, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[327, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[327, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[327, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [327, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[327, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[327, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[327, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [327, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[327, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[327, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[327, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [327, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[327, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[327, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[327, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[327, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[327, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [327, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[327, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[327, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[327, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[327, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[327, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[327, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[327, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[327, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [327, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[327, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[327, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[327, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [327, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[327, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[327, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[327, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [327, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[327, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[327, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[327, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [327, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[327, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[327, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[327, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [327, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[327, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[327, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[327, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [327, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[327, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[327, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[327, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [327, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[327, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[327, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[327, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [327, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[327, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[327, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[327, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [327, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[327, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[327, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[327, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[327, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[327, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[327, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[327, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[327, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[327, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[327, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [327, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[327, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[327, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[327, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [327, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[327, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[327, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[327, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [327, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[327, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[327, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[327, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [327, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[327, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[327, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[327, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [327, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[327, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[327, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[327, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [327, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[327, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[327, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[327, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [327, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[327, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[327, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[327, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [327, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[327, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[327, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[327, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [327, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[327, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[327, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[327, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [327, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[327, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[328, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[328, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[328, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[328, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[328, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[328, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[328, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[328, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[328, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[328, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [328, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [328, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[328, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[328, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[328, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[328, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[328, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[328, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[328, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[328, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[329, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[329, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[329, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[329, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[329, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[329, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[329, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[329, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[329, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[329, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[329, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[329, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[329, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[329, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[329, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[329, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[329, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[329, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[329, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[329, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[329, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[329, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[329, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[329, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[329, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[329, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[329, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[329, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[329, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[329, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_5E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[329, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[329, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[329, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[329, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[329, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[329, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_7E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_fp8 (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[329, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_io (c++ type)": [[329, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[329, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[329, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[329, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[329, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[329, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[329, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[329, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[329, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[329, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[329, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[329, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[329, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[329, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[329, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[329, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[329, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[329, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[329, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[329, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[329, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[329, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[329, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[329, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[329, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[329, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[329, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[329, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[329, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[329, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[329, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[329, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[329, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[329, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[329, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[329, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[329, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[329, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[329, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})