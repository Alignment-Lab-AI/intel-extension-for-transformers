Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 148, 164, 183, 184, 193, 220, 221, 222, 223, 224, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 326, 335, 345, 346, 347, 348, 349, 351, 355, 356, 357, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 387], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 201, 207, 214, 217, 220, 221, 222, 223, 225, 227, 232, 233, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 322, 327, 333, 335, 336, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393], "onli": [0, 10, 193, 198, 201, 220, 221, 227, 232, 233, 237, 316, 336, 353, 356, 358, 359, 360, 362, 365, 367, 368, 369, 372, 374, 375, 376, 380, 383, 385], "us": [0, 2, 10, 15, 48, 132, 148, 164, 183, 184, 189, 193, 198, 200, 201, 203, 207, 209, 210, 213, 214, 217, 220, 221, 224, 227, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 345, 346, 347, 348, 349, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387], "refer": [0, 3, 5, 6, 198, 217, 220, 222, 237, 239, 335, 347, 348, 349, 352, 359, 362, 370, 372, 375, 380, 382, 386, 387], "convert": [0, 2, 5, 6, 10, 15, 189, 200, 201, 351, 361, 375, 380, 387], "python": [0, 5, 6, 10, 232, 233, 322, 333, 346, 347, 348, 353, 354, 355, 356, 358, 360, 361, 379], "docstr": [0, 232, 233], "api": [0, 5, 6, 8, 237, 316, 346, 348, 356, 358, 359, 360, 362, 363, 367, 368, 385, 392], "document": [0, 195, 227, 316, 317, 346, 347, 348, 349, 352, 372, 374, 375, 376, 386, 387], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 201, 203, 204, 207, 209, 210, 212, 214, 217, 220, 221, 222, 223, 224, 225, 227, 230, 232, 233, 234, 236, 237, 239, 240, 316, 319, 322, 324, 325, 327, 333, 335, 336, 345, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 380, 383, 385, 386, 387], "creat": [0, 189, 198, 201, 207, 212, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 345, 355, 361, 362, 371, 380, 383], "doc": [0, 149, 195, 220, 237, 355, 359, 367, 376], "usag": [0, 348, 383, 384], "py": [0, 3, 221, 347, 348, 353, 355, 357, 361, 379], "exampl": [0, 8, 10, 129, 193, 201, 222, 232, 233, 237, 316, 317, 339, 345, 347, 348, 349, 352, 355, 356, 358, 359, 361, 362, 363, 365, 367, 369, 383, 386, 387, 392], "def": [0, 201, 335, 336, 348, 355], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 132, 189, 190, 193, 200, 203, 207, 209, 210, 212, 214, 215, 220, 221, 222, 223, 224, 225, 227, 232, 233, 335, 336, 347, 348, 355, 359, 363, 367, 368, 383], "1": [0, 10, 195, 200, 201, 202, 216, 220, 221, 227, 232, 233, 235, 237, 326, 335, 336, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 363, 364, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 383, 385, 386, 387], "x": [0, 149, 204, 232, 233, 358, 368, 371, 372, 374, 375, 380, 387], "2": [0, 10, 198, 201, 203, 220, 221, 232, 326, 335, 336, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 363, 364, 369, 370, 371, 376, 377, 378, 380, 382, 383, 385], "print": [0, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 363], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 198, 200, 201, 202, 203, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 356, 367, 374, 380, 382], "level": [0, 14, 233, 316, 345, 348, 356, 358, 368, 371, 379], "pleas": [0, 3, 5, 6, 217, 220, 222, 237, 239, 315, 335, 336, 347, 349, 350, 352, 355, 359, 362, 365, 366, 367, 368, 372, 375, 380, 386, 387], "set": [0, 10, 48, 193, 195, 202, 203, 213, 214, 220, 221, 225, 227, 232, 233, 236, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 345, 347, 348, 356, 358, 359, 360, 362, 363, 366, 367, 368, 371, 380], "100": [0, 201, 227, 232, 233, 348, 380, 387], "integ": [0, 220, 221, 224, 347, 351, 358, 359, 376, 380, 386, 387], "type": [0, 5, 6, 7, 10, 15, 48, 132, 189, 190, 193, 200, 201, 203, 209, 214, 215, 220, 221, 223, 224, 225, 227, 232, 236, 237, 239, 327, 335, 346, 347, 348, 349, 350, 351, 356, 357, 358, 360, 363, 365, 367, 368, 373, 379, 380, 383, 384, 387], "int": [0, 10, 193, 195, 200, 201, 216, 220, 227, 232, 326, 336, 355, 367, 368, 369, 372], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 132, 189, 190, 193, 200, 201, 203, 207, 209, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 232, 233, 236, 237, 316, 326, 335, 336, 348, 349, 357, 363, 383, 386], "str": [0, 10, 48, 132, 193, 195, 200, 201, 202, 209, 213, 215, 216, 220, 227, 230, 232, 233, 234, 237, 239, 336, 347], "parameter1": 0, "float": [0, 201, 202, 214, 216, 220, 221, 222, 223, 224, 227, 230, 234, 326, 347, 349, 351, 355, 361, 367, 368, 369, 383, 384, 386, 387], "parameter2": 0, "import": [0, 8, 10, 215, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 347, 348, 349, 352, 355, 356, 358, 360, 363, 367, 368, 372, 383, 384, 385, 386, 387], "o": [0, 10, 237, 335, 347, 348, 353, 364, 368, 373, 378], "rang": [0, 26, 201, 227, 335, 348, 355, 358, 380, 386, 387], "3": [0, 10, 326, 335, 336, 347, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 368, 370, 371, 376, 378, 380, 381, 383], "0": [0, 8, 10, 189, 193, 201, 202, 204, 216, 220, 224, 230, 232, 233, 235, 236, 237, 323, 324, 326, 335, 336, 347, 348, 349, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387], "valu": [0, 10, 15, 189, 190, 200, 201, 213, 217, 220, 222, 225, 227, 232, 233, 326, 347, 348, 349, 355, 356, 357, 358, 359, 367, 368, 369, 370, 372, 374, 375, 380, 383, 384, 386, 387], "true": [0, 8, 193, 201, 220, 227, 230, 232, 233, 234, 335, 348, 351, 352, 354, 355, 357, 358, 367, 368, 374, 377, 380, 383, 384, 387], "fals": [0, 193, 195, 201, 202, 204, 209, 220, 227, 232, 233, 326, 335, 336, 349, 352, 355, 358, 367, 368, 380, 383], "bool": [0, 193, 195, 201, 202, 209, 220, 227, 230, 232, 233, 234, 323, 324, 325, 326, 336, 349, 355, 367, 368, 383, 384], "function2": 0, "pep": 0, "484": [0, 364], "annot": 0, "style": [0, 346], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 189, 190, 200, 204, 207, 209, 217, 220, 221, 222, 223, 224, 225, 227, 232, 233, 237, 335, 336, 345, 347, 349, 350, 352, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387], "neural_compressor": [0, 201, 213, 227], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 200, 203, 206, 207, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 227, 232, 233, 333, 336, 347, 348, 349, 350, 352, 356, 357, 359, 362, 367, 380, 385, 386], "mixedprecisionconfig": 0, "eval_func": [0, 213, 214, 227, 335], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 168, 169, 170, 172, 173, 187, 188, 190, 193, 198, 200, 201, 204, 206, 207, 210, 213, 214, 215, 220, 221, 222, 224, 225, 227, 236, 237, 333, 335, 347, 349, 350, 352, 354, 355, 358, 359, 363, 364, 367, 372, 373, 374, 375, 378, 382, 383, 384, 386, 387, 396], "accuraci": [0, 201, 207, 227, 335, 349, 350, 352, 372, 380, 383, 384, 386], "conf": [0, 8, 201, 356, 357, 358, 362, 379], "output_model": 0, "mix_precis": 0, "fit": [0, 213, 220, 369], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 189, 190, 193, 195, 200, 201, 202, 203, 204, 207, 210, 213, 214, 215, 216, 225, 227, 230, 232, 233, 234, 235, 236, 326, 335, 347, 349, 350, 351, 357, 383, 384, 386, 387], "arg": [0, 14, 209, 214, 222, 227, 237, 324, 335, 357, 362], "kwarg": [0, 14, 201, 209, 222, 227, 232, 233], "an": [0, 3, 15, 189, 212, 220, 221, 224, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 345, 347, 348, 350, 351, 352, 355, 356, 357, 358, 359, 362, 363, 366, 367, 368, 372, 373, 376, 381, 383, 385, 396], "If": [0, 10, 203, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 346, 349, 351, 355, 356, 357, 358, 359, 360, 363, 367, 373, 380, 382, 383, 386, 387], "ar": [0, 10, 149, 198, 203, 204, 220, 221, 222, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 335, 345, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 386, 387], "accept": [0, 227, 345, 385], "thei": [0, 10, 198, 209, 220, 345, 349, 354, 363, 366, 367, 368, 370, 374, 380], "should": [0, 10, 209, 220, 221, 227, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 356, 358, 359, 362, 363, 366, 367, 368, 373, 380, 381, 383, 384, 387], "list": [0, 5, 6, 7, 8, 10, 15, 48, 189, 190, 193, 201, 202, 213, 216, 220, 222, 227, 232, 233, 348, 349, 354, 355, 356, 359, 367, 368, 381, 387], "option": [0, 10, 193, 200, 201, 209, 213, 215, 220, 227, 232, 233, 335, 336, 357, 363, 367, 376, 380], "argument": [0, 193, 201, 222, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 349, 357, 381, 383, 384, 386, 387], "kei": [0, 8, 10, 15, 189, 220, 222, 225, 227, 232, 233, 316, 348, 357, 358, 359, 367, 368, 370], "dict": [0, 10, 15, 189, 190, 193, 201, 210, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 232, 233, 237, 347, 355, 356, 386], "section": [0, 348, 365, 376, 377], "support": [0, 10, 15, 132, 195, 201, 204, 215, 216, 220, 221, 226, 237, 326, 352, 353, 354, 355, 356, 357, 358, 362, 363, 368, 372, 373, 375, 377, 379, 380, 385, 386, 390], "ani": [0, 10, 209, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 346, 355, 363, 385], "restructuredtext": 0, "format": [0, 14, 227, 335, 357, 374, 375, 378, 379, 387], "includ": [0, 217, 220, 223, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 325, 326, 345, 346, 348, 350, 356, 357, 358, 365, 368, 376, 380, 382, 387], "liter": 0, "block": [0, 220, 222, 232, 233, 350, 366, 369, 370, 371, 372, 373, 375, 376, 386], "rais": [0, 220, 221, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "attributeerror": 0, "except": [0, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 358, 367], "valueerror": 0, "equal": [0, 10, 227, 359, 366, 367], "generator1": 0, "n": [0, 10, 204, 220, 232, 233, 326, 347, 349, 358, 359, 361, 364, 366, 369, 370, 371, 372, 375, 376, 378, 380], "gener": [0, 10, 149, 200, 201, 220, 222, 227, 232, 233, 237, 336, 348, 349, 355, 359, 363, 367, 368, 371, 372, 375, 377, 379, 380, 383, 384, 387], "have": [0, 2, 10, 189, 193, 220, 221, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 346, 348, 355, 356, 357, 358, 359, 360, 363, 368, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387], "yield": [0, 387], "next": [0, 2, 8, 224, 232, 233, 335, 359, 360, 367, 369, 371, 373, 374, 375, 376], "number": [0, 15, 193, 201, 203, 204, 220, 221, 224, 233, 237, 336, 347, 358, 359, 363, 366, 369, 372, 375, 376, 380, 381, 387], "example_gener": 0, "4": [0, 10, 201, 216, 220, 227, 232, 233, 326, 335, 336, 345, 347, 349, 350, 353, 355, 357, 358, 359, 362, 363, 364, 370, 371, 372, 373, 376, 377, 380, 386], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 220, 221, 237, 335, 346, 347, 348, 355, 358, 359, 361, 362, 363, 366, 368, 372, 380, 387], "public": [0, 323, 324, 325, 326, 345, 362, 367, 368], "mai": [0, 2, 10, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 346, 348, 355, 358, 363, 369, 370, 371, 373, 374, 375, 376, 380, 382, 387], "here": [0, 10, 210, 227, 342, 348, 354, 355, 358, 359, 360, 362, 363, 368, 376, 387, 388, 395], "attr1": 0, "descript": [0, 193, 227, 346, 347, 349, 357, 376, 383, 384, 386, 387], "attr2": 0, "attr5": 0, "after": [0, 10, 129, 148, 164, 183, 184, 217, 220, 221, 222, 223, 224, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 351, 354, 357, 358, 359, 360, 362, 363, 366, 368, 373, 375, 376, 379, 380, 381, 387], "specifi": [0, 10, 195, 201, 203, 210, 212, 214, 216, 226, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 359, 360, 368, 372, 374, 380, 386, 387], "method1": 0, "execut": [0, 210, 221, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 335, 348, 358, 362, 365, 367, 368, 372, 373, 375, 377, 380, 381, 387], "It": [0, 10, 209, 220, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 349, 355, 357, 358, 359, 362, 363, 371, 372, 374, 375, 380], "": [0, 10, 15, 48, 189, 201, 220, 221, 227, 233, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 324, 335, 345, 348, 349, 355, 356, 357, 359, 360, 362, 364, 369, 373, 375, 378, 380, 381, 385, 387], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 129, 159, 189, 190, 209, 214, 220, 222, 240, 316, 335, 336, 344, 348, 349, 355, 357, 358, 359, 360, 371, 379, 384, 387, 390, 397], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 129, 159, 189, 190, 207, 227, 240, 317, 327, 335, 344, 348, 355, 357, 359, 362, 367, 372, 375, 379, 390, 397], "start_pipelin": 2, "pipelin": [2, 206, 207, 210, 391], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 319, 348, 349, 355, 360, 363, 371, 374, 376, 396], "interfac": [2, 201, 232, 233, 324, 351, 354, 365], "firstli": 2, "loader": [2, 11, 191, 358, 360, 363], "get": [2, 8, 10, 14, 15, 189, 190, 203, 204, 217, 220, 221, 223, 224, 227, 234, 236, 239, 351, 355, 358, 359, 360, 362, 363, 367, 374, 376, 381, 385, 392], "comput": [2, 10, 189, 198, 227, 232, 233, 340, 348, 352, 363, 365, 366, 367, 368, 369, 372, 374, 375, 379, 385, 387, 393], "correspond": [2, 5, 6, 10, 221, 335, 355, 359, 363, 365, 372, 376, 379, 387], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 129, 201, 207, 215, 227, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 340, 349, 350, 353, 355, 356, 360, 365, 385, 386, 387, 393], "contain": [2, 10, 15, 149, 189, 190, 220, 221, 222, 224, 225, 227, 232, 233, 237, 335, 340, 347, 349, 355, 356, 358, 359, 363, 365, 367, 379, 380, 381, 386, 387, 393], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 148, 164, 183, 184, 189, 190, 236, 351, 363, 364, 378], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 108, 129, 139, 189, 190, 191, 201, 227, 326, 357, 362, 363, 367, 368, 380, 381, 387], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 129, 189, 190, 191, 200, 217, 220, 221, 223, 224, 227, 232, 233, 326, 355, 356, 357, 359, 360, 362, 374, 379, 380, 386, 387], "Then": [2, 10, 349, 359, 360, 375, 376, 380, 386, 387], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 355, 358, 360], "pack": [2, 11, 36, 191, 376], "them": [2, 5, 6, 10, 355, 356, 359, 367, 370, 372, 375, 376, 387], "our": [2, 347, 351, 363, 367, 369, 370, 372, 374, 375, 376, 385], "form": [2, 10, 193, 227, 349, 357, 363, 366, 371, 375, 380], "exploit": [2, 363], "abov": [2, 10, 232, 233, 354, 355, 358, 359, 363, 369, 370, 372, 373, 374, 379], "consist": [2, 346], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 355, 358, 359, 367, 374, 375], "which": [2, 5, 6, 7, 10, 189, 201, 203, 207, 209, 217, 220, 221, 224, 227, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 347, 349, 354, 355, 356, 358, 359, 363, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 379, 380, 383, 386, 387], "can": [2, 10, 108, 129, 149, 195, 209, 220, 221, 222, 224, 227, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 347, 348, 349, 351, 355, 356, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 384, 385, 386, 387], "see": [2, 10, 149, 193, 198, 232, 233, 315, 345, 348, 355, 357, 358, 359, 360, 363, 364, 366, 371, 375, 377, 378, 379, 380, 382], "new": [2, 5, 6, 7, 10, 15, 220, 224, 227, 346, 363, 367, 368, 381, 388], "big": [2, 358, 359], "like": [2, 5, 6, 7, 10, 149, 189, 220, 237, 347, 348, 349, 352, 355, 356, 357, 358, 359, 360, 363, 367, 368, 370, 377, 383, 384, 386, 387], "layernorm": [2, 10, 39, 111, 355, 359, 363, 365, 380], "There": [2, 349, 355, 356, 357, 373, 377, 380, 384, 386], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 168, 169, 170, 172, 173, 187, 188, 203, 212, 220, 335, 345, 347, 348, 349, 352, 355, 356, 358, 359, 360, 363, 366, 373, 376, 383, 384, 386, 387], "flow": [2, 10, 355, 359], "one": [2, 5, 6, 10, 220, 222, 224, 232, 326, 335, 348, 349, 352, 354, 355, 357, 358, 359, 363, 367, 369, 370, 375, 379, 380, 385], "subgraph": [2, 10, 159, 358, 360], "final": [2, 220, 221, 358, 359, 360, 362, 363, 369, 372, 373, 375, 383], "yaml": [2, 8, 10, 210, 212, 225, 227, 357, 358, 360, 379], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 132, 159, 201, 204, 207, 209, 210, 212, 222, 225, 227, 228, 237, 240, 347, 348, 355, 356, 357, 358, 360, 362, 367, 368, 379, 380, 381, 382], "bin": [2, 8, 213, 356, 357, 358, 360, 377, 379], "configur": [2, 89, 201, 203, 209, 210, 212, 214, 216, 220, 222, 225, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 326, 335, 347, 350, 351, 358, 366, 367, 371, 388], "infer": [2, 8, 13, 200, 214, 227, 233, 316, 350, 352, 354, 355, 357, 358, 359, 360, 370, 372, 373, 375, 384, 387, 394], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 209, 215, 217, 220, 227, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 335, 347, 348, 351, 352, 353, 360, 362, 364, 369, 371, 372, 373, 374, 375, 377, 378, 385], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 189, 201, 207, 214, 236, 333, 352, 353, 356, 363, 387], "onnx": [3, 5, 15, 190, 201, 227, 348, 352, 355, 357, 358, 374, 385, 391, 396], "onnx_extractor": [3, 4, 11, 191], "tf_extractor": [3, 4, 11, 191], "more": [3, 5, 6, 10, 149, 220, 315, 349, 352, 354, 355, 357, 359, 360, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 376, 378, 379, 380], "detail": [3, 10, 335, 340, 342, 345, 346, 348, 349, 350, 352, 354, 355, 357, 358, 359, 362, 363, 364, 365, 370, 377, 378, 380, 386, 387, 393, 395], "A": [3, 10, 203, 210, 215, 217, 220, 221, 222, 223, 224, 225, 227, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 356, 363, 364, 366, 369, 370, 376, 378, 379, 380], "super": [3, 355, 358], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 129, 189, 190, 220, 325, 327, 340, 350, 354, 355, 356, 358, 360, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 380, 387, 393, 396], "do": [3, 201, 204, 213, 214, 222, 227, 345, 351, 355, 356, 358, 359, 363, 367, 369, 386, 387], "addit": [3, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 348, 350, 357, 369, 373, 381, 388], "attribut": [3, 5, 6, 7, 10, 48, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324, 335, 357, 359, 362, 368], "without": [3, 213, 221, 227, 345, 349, 355, 356, 373, 376, 377, 380], "modifi": [3, 8, 10, 108, 129, 198, 222, 233, 356, 357, 360], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 211, 219, 335, 360, 361], "torch_extractor": [4, 11, 191], "all": [5, 6, 7, 8, 10, 11, 36, 48, 129, 132, 191, 220, 221, 222, 227, 232, 233, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 335, 345, 348, 349, 354, 355, 356, 357, 359, 363, 364, 367, 368, 369, 370, 372, 375, 378, 379, 383, 386, 387], "input": [5, 6, 8, 10, 15, 26, 129, 149, 189, 190, 200, 214, 215, 220, 221, 227, 232, 233, 326, 335, 336, 347, 348, 349, 351, 352, 356, 357, 358, 359, 362, 371, 373, 374, 376, 380, 385], "compos": [5, 6, 7, 207, 227, 335, 355, 360, 375], "order": [5, 6, 8, 10, 207, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 347, 355, 357, 363, 366, 372, 373, 375, 376], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 200, 220, 221, 222, 225, 237, 347, 349, 355, 360, 373, 374, 387], "calcul": [5, 6, 149, 204, 217, 220, 222, 223, 335, 357, 363, 366, 368, 369, 372, 373, 376, 380, 387], "notic": [5, 6, 360, 367, 374, 375, 382], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 220, 223, 227, 335, 348, 349, 366, 387], "between": [5, 6, 221, 232, 233, 326, 335, 349, 373, 376, 380, 387], "For": [5, 6, 10, 15, 129, 220, 222, 315, 335, 345, 348, 352, 355, 358, 359, 363, 364, 365, 367, 370, 374, 375, 376, 377, 378, 385], "relat": [5, 6, 223, 227, 342, 349, 355, 359, 363, 370, 375, 386, 387, 395], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 132, 189, 190, 220, 221, 224], "graph_def": [5, 6, 7, 189], "input_tensor": [5, 6, 7, 10, 15, 48, 189, 190, 232, 233, 355, 359], "output_tensor": [5, 6, 7, 10, 15, 48, 189, 190, 355, 359], "record": [5, 6, 7, 198, 335, 357, 358], "dest": [5, 6, 7, 10, 15, 189], "name": [5, 6, 7, 8, 10, 15, 48, 73, 132, 189, 193, 201, 202, 209, 215, 216, 217, 220, 221, 223, 224, 230, 234, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 361, 363, 364, 368, 378, 379, 382, 383, 384, 385, 386, 387], "object": [5, 6, 7, 189, 193, 201, 206, 210, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 227, 229, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 348, 349, 352, 355, 362, 386, 391], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 189], "torch": [7, 149, 190, 195, 200, 201, 220, 227, 232, 233, 336, 348, 385], "torchextractor": 7, "torchscript": [7, 67, 190, 200, 201, 227, 336], "defint": 8, "add_config_item": 8, "val": [8, 225], "add": [8, 10, 26, 201, 204, 222, 225, 349, 356, 357, 358, 359, 363, 365, 367, 368, 375, 380, 381, 396], "pair": [8, 201, 232, 356, 368, 376], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 232, 233, 236, 326, 359, 362, 363], "insert": [8, 10, 360, 362, 363, 367, 368, 387], "ir": [8, 355, 356, 357, 358, 377, 379, 396], "remove_nod": 8, "node_nam": [8, 10, 15, 189, 355, 359], "remov": [8, 139, 233, 345, 346, 368, 386], "get_node_id": [8, 355], "id": [8, 10, 209, 233, 236, 368, 369], "accord": [8, 220, 224, 355, 358, 376], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 200, 202, 216, 221, 226, 335, 357, 361, 373, 375, 380, 381, 387], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 189, 190, 201, 213, 220, 221, 227, 232, 233, 335, 347, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 371, 372, 373, 374, 376, 380, 385], "get_pre_node_nam": 8, "previou": [8, 207, 220, 227, 348, 356, 388], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 189], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 387], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 232, 326, 355, 363, 366, 369, 370, 371, 375, 376, 379, 380], "pybind": 8, "executor": [8, 355, 356, 357], "input_data": [8, 10, 11, 100, 191, 356], "graph_init": [8, 356, 358], "initi": [8, 10, 15, 21, 48, 68, 201, 210, 221, 227, 232, 233, 326, 335, 367, 368, 372, 385, 386], "newgraph": 8, "out": [8, 10, 220, 227, 346, 348, 355, 356, 359, 365, 374, 387], "input_0": [8, 356, 358], "input_1": [8, 356, 358], "input_2": [8, 356, 358], "save": [8, 193, 204, 213, 227, 347, 348, 355, 356, 357, 360, 370, 374, 376, 387], "output_dir": [8, 193, 213, 227, 335, 347, 360, 361], "ymal": 8, "graph_dispatch": [8, 358], "tune": [8, 201, 227, 316, 347, 348, 349, 382, 383, 384, 386, 396], "inputs_shap": [8, 358], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 220, 380], "7": [8, 10, 326, 335, 348, 350, 353, 354, 355, 359, 361, 363, 364, 370, 378, 380, 383, 387], "sparsiti": [8, 201, 220, 221, 222, 224, 364, 379, 380, 386], "spars": [8, 221, 316, 326, 348, 358, 365, 366, 375, 380, 394], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 191, 220, 232, 233, 357, 358, 365, 366, 370, 372, 373, 376, 380, 394], "innerproduct": [8, 26, 108, 357, 358, 365], "reorder": [8, 11, 36, 191, 372, 373], "util": [10, 15, 189, 190, 201, 203, 206, 218, 238, 347, 355, 363, 366, 372, 373, 376, 380], "names_from_input": 10, "static": [10, 234, 323, 326, 357, 360, 367, 370, 372, 385], "method": [10, 204, 212, 216, 223, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 347, 350, 367, 370, 372, 375, 377, 386, 387], "valid": [10, 201, 214, 220, 221, 225, 227, 336, 346, 347, 349, 352, 363, 382, 388, 395], "string": [10, 15, 189, 190, 193, 204, 210, 212, 220, 221, 222, 223, 224, 225, 236, 237, 325, 347, 349, 355, 358, 359, 362, 368, 383, 384, 386, 387], "defin": [10, 193, 201, 210, 212, 213, 220, 221, 222, 223, 224, 227, 323, 335, 345, 348, 349, 355, 356, 362, 363, 376, 381, 383, 386, 387], "field": [10, 201, 347, 367, 368, 387], "tupl": [10, 203, 215, 220, 232, 233], "In": [10, 207, 220, 221, 223, 227, 232, 335, 345, 348, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 384, 387], "nodedef": [10, 189], "end": [10, 221, 222, 232, 233, 237, 316, 348, 357, 360, 362, 363, 368, 377], "also": [10, 220, 346, 348, 355, 356, 357, 359, 360, 362, 363, 366, 367, 368, 369, 372, 375, 376, 377, 384, 387], "get_data_dtyp": 10, "data": [10, 73, 200, 220, 237, 239, 326, 335, 348, 350, 355, 356, 358, 360, 361, 362, 366, 367, 368, 369, 372, 373, 376, 380, 387, 391, 395], "const": [10, 15, 189, 323, 324, 325, 326, 362, 365, 367, 368, 369, 370], "dtype": [10, 15, 73, 189, 190, 195, 227, 348, 351, 356, 357, 358, 362], "numpi": [10, 15, 348, 356], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 108, 201, 365, 380, 387, 394], "info": [10, 14, 15, 149, 189, 190, 220, 225, 335, 348, 355, 356, 377], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 363], "input_pattern": [10, 363], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 201, 204, 207, 210, 227, 335, 350, 359], "user": [10, 193, 221, 222, 225, 232, 233, 237, 316, 317, 335, 336, 339, 342, 348, 351, 355, 357, 359, 361, 372, 374, 377, 380, 384, 385, 392, 395], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 201, 206, 218, 221, 223, 324, 360, 366, 369, 379, 386, 396], "intern": [10, 359, 372], "grpah": [10, 15, 189], "structur": [10, 221, 350, 355, 356, 358, 371, 375, 379, 386], "attent": [10, 232, 233, 324, 335, 345, 357, 363, 374], "chain": [10, 367, 368], "call": [10, 221, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 351, 355, 358, 359, 366, 367, 368, 372, 375, 376, 387], "must": [10, 198, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 353, 359, 363, 366, 367, 369, 376], "straight": 10, "sequenc": [10, 195, 203, 220, 232, 233, 348, 352, 355, 359, 363, 371, 380], "mean": [10, 11, 36, 191, 198, 201, 220, 232, 233, 237, 326, 347, 355, 356, 357, 358, 359, 363, 366, 367, 369, 373, 376, 380, 383, 386, 387], "otherwis": [10, 193, 345, 355, 358, 372, 380], "op_typ": [10, 15, 48, 189, 190, 355, 358, 359, 368], "element": [10, 220, 222, 227, 355, 363, 365, 369, 371, 374, 376, 380, 394], "could": [10, 220, 222, 324, 345, 355, 356, 357, 359, 360, 363, 370, 379, 380, 386, 387], "mandatori": 10, "while": [10, 221, 356, 359, 363, 369, 372, 375, 380, 387], "stand": [10, 355], "mybe": 10, "mul": [10, 355, 359, 363, 367], "addv2": [10, 26, 363], "below": [10, 201, 316, 335, 346, 347, 348, 349, 355, 356, 358, 360, 363, 366, 371, 373, 374, 375, 376, 384], "extractor": [10, 11, 191, 358, 360, 363], "length": [10, 201, 203, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 348, 359, 363, 367, 380, 387], "match": [10, 335, 349, 358, 359, 363, 371, 374], "result": [10, 193, 207, 214, 227, 316, 335, 336, 345, 348, 350, 355, 358, 359, 364, 367, 368, 369, 372, 373, 374, 375, 376, 378, 382, 386, 387], "24": [10, 335, 363, 364, 370, 378], "layer": [10, 201, 203, 220, 222, 225, 232, 233, 335, 357, 363, 367, 371, 374, 386, 394], "each": [10, 149, 193, 201, 207, 220, 221, 227, 232, 233, 237, 335, 347, 357, 358, 359, 366, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 386], "still": [10, 222, 316, 363, 369, 387], "last": [10, 198, 201, 217, 220, 227, 232, 233, 359, 363, 366, 371, 372, 374, 387], "former": [10, 363], "search_pattern": [10, 363], "pattern_list": 10, "complet": [10, 355, 364, 369, 372, 375, 378], "represent": [10, 345, 352, 355, 359, 360], "its": [10, 129, 207, 220, 221, 227, 335, 345, 349, 355, 359, 360, 363, 371, 372, 373, 376, 379, 380, 382], "op_idx": 10, "howev": [10, 222, 358, 359, 363, 366, 370, 373, 376], "due": [10, 232, 359, 363, 366, 387], "few": [10, 193, 371], "complic": [10, 355, 363], "therefor": [10, 351, 366, 371, 374, 376, 387], "fist": 10, "repres": [10, 220, 221, 222, 223, 224, 225, 345, 357, 359, 363, 366, 368, 369, 372, 387], "main": [10, 195, 222, 227, 232, 233, 237, 359, 373, 380], "top": [10, 316, 347, 348, 371], "down": 10, "head": [10, 232, 233, 363, 368, 374, 375], "tail": [10, 363, 377], "left": [10, 220, 232, 233, 370, 374, 376], "bert_large_squad": 10, "pb": [10, 352], "squareddiffer": [10, 26, 363], "rsqrt": [10, 26, 363], "5": [10, 83, 84, 85, 86, 87, 160, 161, 162, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 201, 202, 326, 335, 336, 347, 349, 355, 356, 357, 359, 362, 363, 364, 370, 378, 380], "8": [10, 326, 335, 348, 350, 351, 353, 355, 357, 359, 361, 363, 364, 368, 369, 370, 376, 377, 378, 380, 387], "9": [10, 201, 237, 335, 347, 348, 352, 353, 355, 363, 364, 370, 378, 380, 386], "6": [10, 326, 335, 349, 350, 354, 355, 359, 363, 364, 368, 370, 377, 378, 387], "same": [10, 220, 233, 349, 351, 355, 356, 357, 359, 360, 363, 366, 369, 372, 373, 376, 379, 380, 381], "func": [10, 335, 358], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 195, 232, 233, 319, 322, 327, 333, 336, 345, 346, 347, 348, 349, 353, 355, 357, 358, 359, 360, 362, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 387], "frozen": [10, 356, 360], "you": [10, 195, 201, 213, 232, 233, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 346, 347, 348, 349, 351, 355, 356, 358, 359, 360, 363, 367, 368, 370, 377, 379, 380, 382, 383, 385, 386, 387, 388], "had": [10, 355], "better": [10, 207, 214, 227, 335, 355, 356, 357, 358, 366, 372, 373, 374, 375, 379, 383, 384, 387], "identifi": [10, 209, 369], "your": [10, 227, 237, 239, 316, 346, 347, 348, 352, 355, 356, 357, 358, 359, 367, 368, 380, 382, 385], "own": [10, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 355, 359, 360, 367, 373, 384], "casual": 10, "tf": [10, 214, 232, 335], "control": [10, 200, 201, 335, 355], "start": [10, 221, 232, 233, 357, 363, 381, 392], "mostli": [10, 363], "longest": [10, 363], "path": [10, 193, 201, 207, 209, 210, 212, 213, 222, 225, 227, 236, 237, 347, 348, 352, 356, 357, 358, 360, 377, 379, 380], "sometim": [10, 359, 387], "connect": [10, 217, 386], "But": [10, 356, 366, 385], "don": [10, 201, 220, 232, 233, 362, 367], "t": [10, 201, 220, 232, 233, 324, 326, 335, 347, 349, 362, 366, 367, 369, 374, 375, 376, 380, 386], "need": [10, 108, 201, 220, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 347, 348, 349, 355, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 380, 386, 387, 388], "least": [10, 220, 222, 373], "doesn": [10, 335, 367, 376, 380], "exist": [10, 209, 237, 335, 352, 355, 385], "relationship": 10, "sever": [10, 224, 347, 355, 360, 363, 366, 380, 387], "split": [10, 11, 36, 191, 336, 347, 358, 366, 370, 373], "representtaion": 10, "two": [10, 220, 221, 224, 227, 349, 355, 358, 359, 361, 362, 367, 368, 370, 372, 373, 374, 375, 376, 384, 385, 386, 387], "idx": [10, 326, 368], "some": [10, 129, 233, 348, 355, 356, 357, 358, 359, 362, 363, 367, 368, 372, 376, 387], "outsid": [10, 232, 233, 359, 363], "give": [10, 355, 359, 366], "just": [10, 233, 348, 355, 356, 357, 358, 359, 360, 363, 368, 376, 379, 383], "empti": [10, 26, 359, 363, 368, 381], "algorithm": [10, 48, 132, 201, 210, 326, 335, 347, 358, 359, 362, 363, 366, 367, 373, 380, 386, 387], "kind": [10, 89, 325, 362, 373, 380], "beaus": 10, "make": [10, 48, 129, 220, 221, 224, 227, 336, 345, 346, 354, 355, 356, 365, 366, 367, 368, 369, 371, 372, 373, 374, 377, 380], "sure": [10, 129, 220, 221, 224, 336, 355, 369, 380], "whole": [10, 198, 207, 335, 350, 357, 358, 371, 372, 373, 375, 377], "so": [10, 209, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 349, 354, 355, 358, 359, 362, 363, 367, 369, 370, 371, 372, 373, 375, 376, 377, 380, 383, 384, 386, 387], "check": [10, 15, 108, 201, 220, 221, 225, 227, 342, 346, 348, 355, 358, 359, 363, 368, 395], "symmetr": [10, 363, 372, 380, 387], "consecut": [10, 370, 376], "y": [10, 149, 368], "shape": [10, 11, 36, 73, 191, 220, 232, 233, 326, 335, 348, 356, 357, 358, 362, 366, 372, 374, 380], "df": [10, 363], "duplic": 10, "would": [10, 220, 355, 359, 360, 363, 377], "perform": [10, 201, 207, 210, 221, 223, 227, 232, 233, 234, 335, 336, 340, 348, 349, 351, 352, 356, 357, 358, 361, 366, 369, 370, 371, 372, 373, 374, 375, 376, 380, 383, 384, 386, 387, 393], "befor": [10, 201, 217, 220, 221, 222, 223, 224, 227, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 346, 349, 351, 355, 356, 358, 359, 360, 363, 367, 368, 369, 370, 372, 373, 375, 380, 387], "splice": 10, "de": 10, "total": [10, 201, 203, 220, 221, 224, 232, 335, 336, 347, 359, 363, 369, 376, 377], "step": [10, 201, 217, 220, 221, 222, 223, 224, 227, 354, 355, 357, 359, 360, 361, 362, 363, 367, 372, 374, 375, 380], "c": [10, 326, 327, 348, 353, 354, 355, 356, 358, 363, 364, 369, 371, 378, 380], "d": [10, 335, 347, 349, 366, 374], "e": [10, 149, 193, 201, 207, 220, 227, 335, 345, 348, 349, 358, 367, 368, 372, 373, 374, 380, 381], "f": [10, 326, 349, 362, 377, 387], "c1": 10, "d1": [10, 380], "c2": 10, "d2": 10, "c3": [10, 377], "d3": [10, 377], "now": [10, 237, 354, 355, 356, 358, 359, 360, 367, 368, 375, 380, 385], "part": [10, 193, 221, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 359, 362, 363, 375, 376], "As": [10, 349, 355, 357, 359, 360, 370, 374, 376], "appli": [10, 201, 220, 221, 345, 350, 352, 367, 368, 372, 373, 374, 376, 380, 386, 387], "everi": [10, 220, 221, 222, 355, 366, 380], "right": [10, 232, 233, 345, 370, 374, 376, 385], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 325, 355, 356, 367, 368], "ordereddict": [10, 48, 355], "construct": [10, 48, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 367, 368], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 233, 348, 349, 352, 355, 359, 386, 387], "specif": [10, 209, 210, 225, 325, 327, 335, 345, 349, 353, 355, 358, 359, 366, 371, 372, 373, 379, 380, 383, 384, 385, 387], "ccontain": 10, "insid": [10, 359, 362, 371, 373], "been": [10, 220, 221, 232, 233, 346, 349, 368, 372, 385], "pattern_map": [10, 355, 359], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 214, 227, 237, 316, 335, 348, 357, 359, 396], "mapping_config": 10, "first": [10, 201, 227, 347, 354, 355, 358, 359, 361, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 387], "second": [10, 201, 232, 233, 336, 354, 359, 361, 362, 363, 370, 371, 374, 376, 377, 380, 387], "third": [10, 359, 371, 376, 382], "requir": [10, 129, 198, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 352, 359, 361, 363, 364, 366, 369, 370, 372, 380, 387], "old": 10, "reshap": [10, 11, 36, 53, 148, 164, 183, 184, 191, 220, 355, 356, 357, 362], "paddingsequ": [10, 51, 131, 356], "search_mod": [10, 355, 359], "embed": [10, 232, 233, 356, 359, 363, 367], "m": [10, 220, 326, 348, 349, 350, 357, 358, 364, 366, 369, 370, 371, 372, 373, 375, 376, 378, 380], "fusion": [10, 89, 129, 362, 363, 367, 368, 373, 396], "about": [10, 217, 345, 348, 355, 359, 362, 364, 368, 376, 378], "in_pattern": 10, "input_id": [10, 232, 233, 352, 356], "segment_id": [10, 352, 356], "input_mask": [10, 221, 352, 356], "out_pattern": 10, "th": [10, 359], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 359], "where": [10, 26, 220, 232, 233, 335, 349, 359, 366, 368, 371, 372, 374, 376, 380, 381], "go": [10, 369], "mayb": [10, 358, 376], "happen": [10, 357, 376], "sepcial": 10, "biasadd": [10, 20, 359, 363], "bia": [10, 15, 201, 326, 357, 380], "unfix": 10, "locat": [10, 73, 355, 356, 359, 363, 376, 380, 388], "other": [10, 63, 108, 209, 326, 345, 346, 347, 348, 355, 356, 357, 358, 359, 363, 364, 372, 375, 376, 378, 380, 382, 387], "write": [10, 347, 355, 363, 372, 373, 375], "note": [10, 220, 222, 336, 350, 353, 355, 356, 357, 358, 359, 361, 362, 363, 367, 368, 374, 375, 376, 380, 387], "That": [10, 375, 376], "too": [10, 355, 366, 367, 372], "decompos": [10, 355], "list2str": [10, 355], "src_perm": 10, "emit": [10, 359], "ret": [10, 363, 377], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 217, 221, 223, 224], "lazi": 10, "till": 10, "later": [10, 355, 363], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 355, 387], "avail": [10, 319, 322, 327, 333, 348, 371], "fwk": 10, "na": [10, 201, 206, 227, 347, 365], "assert": [11, 36, 191, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335], "batch_matmul": [11, 36, 191], "batch_matmul_v2": [11, 36, 191], "bias_add": [11, 15, 36, 191], "cast": [11, 36, 191], "concat": [11, 36, 191, 355], "conv": [11, 36, 191, 201, 220, 357, 358, 368], "co": [11, 36, 191, 195, 209, 348], "empty_op": [11, 36, 191, 355], "expand_dim": [11, 36, 191], "fused_batch_matmul_v2": [11, 36, 191], "fused_batch_norm_v3": [11, 36, 191], "fused_gemm": [11, 36, 191], "fused_matmul": [11, 36, 191], "gather": [11, 36, 191, 220, 227, 232, 233, 324, 355, 367], "gather_el": [11, 36, 191, 355], "gelu": [11, 36, 100, 191, 355, 362, 365, 368, 380], "gemm": [11, 36, 191, 201, 351, 366, 369, 375, 380, 394], "iterator_get_next": [11, 36, 191], "iterator_v2": [11, 36, 191, 355], "layer_norm": [11, 36, 100, 191, 355], "log_softmax": [11, 36, 191], "map_and_batch_dataset": [11, 36, 191, 355], "matmul": [11, 15, 26, 36, 108, 191, 201, 220, 351, 357, 359, 360, 363, 365, 375, 380, 394], "mkl_layer_norm": [11, 36, 191], "model_dataset": [11, 36, 191], "one_hot": [11, 36, 191], "onnx_input": [11, 36, 191], "optimize_dataset": [11, 36, 191, 355], "padding_sequ": [11, 36, 100, 191, 356], "placehold": [11, 36, 191], "pos_emb": [11, 36, 191], "pow": [11, 36, 191, 355, 359], "quantize_linear": [11, 36, 191, 355], "quantize_v2": [11, 36, 191], "quantized_fused_matmul_and_dequant": [11, 36, 191], "quantized_matmul_with_bias_and_dequant": [11, 36, 191], "reduce_mean": [11, 36, 191, 355], "reduce_sum": [11, 36, 191], "rsub": [11, 36, 191], "scatter_el": [11, 36, 191], "sin": [11, 36, 191], "size": [11, 36, 191, 193, 200, 201, 220, 227, 232, 233, 335, 345, 348, 352, 356, 358, 366, 369, 371, 373, 374, 375, 380, 387], "softmax": [11, 36, 191, 232, 324, 335, 349, 365, 374, 375], "squeez": [11, 36, 191], "strided_slic": [11, 36, 191], "top_k": [11, 36, 191, 237], "unpack": [11, 36, 191, 227, 355], "unsqueez": [11, 36, 191, 355], "view": [11, 36, 191, 346, 357, 366, 388], "sub_graph": [11, 191, 355, 358], "innerproductreshapefus": [11, 96, 100, 191], "add_cls_token": [11, 100, 191], "add_embed": [11, 100, 191], "arangewithreciproc": [11, 100, 191], "attentionblock_attentionmaskaddreshap": [11, 100, 191], "attentionblock_constantofshapewithmul": [11, 100, 191], "attentionblock_qkvprereshap": [11, 100, 191], "attentionblock_qkvreshap": [11, 100, 191], "attentionblock_resize2gath": [11, 100, 191], "attentionblock_weightreshapeto4d": [11, 100, 191], "attention_mask_length_adaptive_keep_indic": [11, 100, 191], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 191], "attention_reshap": [11, 100, 191], "cast_to": [11, 100, 191], "collect_quant_info": [11, 100, 191], "conv_reshap": [11, 100, 191], "decoder_attn_reshap": [11, 100, 191], "einsumwitharang": [11, 100, 191], "embeddingbag": [11, 26, 100, 191], "generate_sequ": [11, 100, 191], "innerproductwithbiasgelu": [11, 100, 191], "innerproductwithslic": [11, 100, 191], "innerproductwithswish": [11, 100, 191], "input_fil": [11, 100, 191], "insert_bf16_nod": [11, 100, 191], "insert_quant_nod": [11, 100, 191], "int8_bf16_mixed_precision_check": [11, 100, 191], "interact_featur": [11, 100, 191], "last_layer_shap": [11, 100, 191], "layer_norm_with_reduce_mean": [11, 100, 191, 355], "layer_norm_with_transpos": [11, 100, 191], "llama_embed": [11, 100, 191], "llama_matmulwithtranspos": [11, 100, 191], "llama_postprocess": [11, 100, 191], "llama_rotary_pos_emb": [11, 100, 191], "lower_all_tupl": [11, 100, 191], "matmul_with_bia": [11, 100, 191], "matmul_with_bias_add": [11, 100, 191], "matmul_with_bias_gelu": [11, 100, 191], "matmul_with_bias_relu": [11, 100, 191], "matmul_with_bias_sigmoid": [11, 100, 191], "matmul_with_bias_tanh": [11, 100, 191], "matmul_with_bias_unsqueez": [11, 100, 191], "matmul_with_transpos": [11, 100, 191], "merged_embeddingbag": [11, 100, 191], "operator_adaptor": [11, 100, 191], "output_data": [11, 100, 191, 356], "position_embed": [11, 100, 191], "position_embeddings_v1": [11, 100, 191], "qkv_merg": [11, 100, 191], "qkv_reshap": [11, 100, 191], "quantize_fus": [11, 100, 191], "quantized_graph_dtype_refactor": [11, 100, 191], "remove_constant_op": [11, 100, 191], "remove_last_view": [11, 100, 191], "remove_rang": [11, 100, 191], "removeslic": [11, 100, 191], "reshape_after_restore_hidden_st": [11, 100, 191], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 191], "reshape_before_restore_hidden_st": [11, 100, 191], "reshape_fus": [11, 100, 191], "resnetblock_instancenormreshapefromconv": [11, 100, 191], "resnetblock_instancenormreshapefromdiv": [11, 100, 191], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 191], "rms_norm": [11, 100, 191], "rotary_pos_emb": [11, 100, 191], "slicemask": [11, 100, 191], "stablediffusion_mhareshap": [11, 100, 191], "stablediffusion_reshapefus": [11, 100, 191], "stablediffusion_bf16convert": [11, 100, 191], "start_end_logit": [11, 100, 191], "subgraph_match": [11, 100, 191, 358], "textencdoer_word_embed": [11, 100, 191], "textencoder_attentionmaskaddreshap": [11, 100, 191], "textencoder_attentionreshap": [11, 100, 191], "textencoder_kvreshap": [11, 100, 191], "textencoder_mulreshap": [11, 100, 191], "textencoder_qreshap": [11, 100, 191], "textencoder_softmaxreshap": [11, 100, 191], "textencoder_causal_attention_mask": [11, 100, 191], "token_type_embed": [11, 100, 191, 355], "token_type_embeddings_v1": [11, 100, 191, 355], "torch_embed": [11, 100, 191], "torch_ip_insert_bia": [11, 100, 191], "torchinsertbf16nod": [11, 100, 191], "torchpaddingsqu": [11, 100, 191], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 191], "transformer2dmodel_constantofshapewithmul": [11, 100, 191], "transformer2dmodel_ffnslic": [11, 100, 191], "transformer2dmodel_ffnslice_1": [11, 100, 191], "transformer2dmodel_qkvprereshap": [11, 100, 191], "transformer2dmodel_qkvreshap": [11, 100, 191], "transformer2dmodel_qkvreshape4d": [11, 100, 191], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 191], "transformer2dmodel_getsamplebatch": [11, 100, 191], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 191], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 191], "transformer2dmodel_sampleslic": [11, 100, 191], "transformer2dmodel_upblockres": [11, 100, 191], "transpose_batch_matmul": [11, 100, 191, 355], "word_embed": [11, 100, 191, 356], "graph_util": [11, 191, 355, 359, 363], "logger": [11, 191, 206, 218, 377], "onnx_util": [11, 191], "tf_util": [11, 191], "torch_util": [11, 191], "load": [13, 204, 207, 214, 215, 227, 232, 233, 348, 355, 356, 357, 358, 360, 366, 368, 369, 370, 371, 376], "frontend": [13, 371], "get_logg": 14, "log": [14, 348, 356, 362], "msg": 14, "error": [14, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 356, 362, 377], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 190], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 189, 190], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 189, 356, 362], "graph_nodes_dict": [15, 189], "Be": [15, 189], "class": [15, 189, 193, 215, 326, 327, 336, 347, 349, 355, 362, 367, 368], "cerat": 15, "output_nam": [15, 356], "ouput": 15, "param": [15, 189, 227, 367, 368], "node_names_detail": [15, 189], "is_supported_onnx_graph": [15, 263], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 201, 215, 227, 348, 350, 357, 358, 360, 365, 368, 373, 374, 380, 387, 396], "int32": [15, 348, 356], "matric": [15, 369, 374, 375], "scale": [15, 227, 326, 367, 372, 375, 387], "arrai": [15, 356], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 189], "nodes_dict": [15, 47, 48, 189, 190], "engine_graph": [15, 47, 48, 189, 190], "tf_dtype": [15, 189, 190], "set_attr": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 355], "batchmatmul": 18, "batchmatmulv2": 19, "binaryop": [21, 367], "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 348, 351, 353, 355, 361], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 132, 217, 220, 221, 223, 224, 366, 367, 368, 369, 371, 372, 373, 374, 376, 396], "multiheadattenion": 26, "binaryadd": [26, 367], "constantofshap": 26, "dequantizelinear": [26, 360], "dequant": [26, 367, 368, 372, 380], "erf": [26, 362], "expand": [26, 232, 233], "fill": [26, 359, 374], "flatmapdataset": 26, "ident": [26, 220, 345, 349], "makeiter": 26, "matmulwithbiasadd": [26, 120], "matmulwithbiasgelu": [26, 121], "matmulwithbiastanh": [26, 124], "matmulwithbia": [26, 119], "qlinearmatmul": [26, 360], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 355, 359, 374], "squar": [26, 232, 233], "stopgradi": 26, "tanh": [26, 362, 368, 380], "tensorslicedataset": 26, "transposebatchmatmul": [26, 187, 355], "relu": [26, 368, 380], "matmulwithbiasrelu": [26, 122], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 227, 326, 335, 355, 367, 369, 374], "sigmoid": 26, "matmulwithbiassigmoid": [26, 123], "flatten": 26, "mergedembeddingbag": [26, 127], "convolut": [26, 349, 358], "expandindic": 26, "tile": [26, 63, 366, 370, 372, 374, 375, 376, 380], "opani": 26, "sequencelength": [26, 364], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 369, 381], "stack": [26, 375], "constant": [26, 139, 227], "listconstruct": 26, "latrang": 26, "masked_fil": 26, "floor_divid": 26, "max": [26, 201, 203, 227, 348, 364, 367, 369, 371, 376, 378, 387], "listunpack": 26, "silu": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 355], "gatherel": [33, 355], "iteratorgetnext": 37, "iteratorv2": [38, 355], "logsoftmax": [40, 324], "mapandbatchdataset": [41, 355], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 355], "operator_typ": [48, 355], "subclass": [48, 132, 220, 221, 224, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324], "cl": [48, 132, 220, 221, 223, 224, 335], "registr": [48, 132, 355], "optimizedataset": [49, 355], "packagepositionembed": 53, "quantizelinear": [55, 355, 360], "quantiz": [55, 201, 206, 209, 213, 214, 227, 316, 348, 351, 367, 368, 372, 373, 375, 380, 383, 391, 396], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 355, 359], "reducesum": 60, "aten": 63, "self": [63, 201, 232, 233, 237, 335, 347, 355, 357], "scalar": [63, 367], "alpha": [63, 217, 223, 326, 373, 380], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 368], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 360, 367, 368], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 340, 348, 350, 351, 360, 367, 368, 372, 374, 387, 393], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 214, 369], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 149, 160, 161, 162, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 316, 348, 353, 372], "diffusionv1": [83, 84, 85, 86, 87, 161, 162, 165, 166, 167, 174, 175, 178, 179, 180, 186], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [104, 355], "inputfil": 105, "insertbf16nod": 106, "insertquantnod": 107, "quantizedgraphdtyperefactor": [108, 138], "int8bf16mixedprecisioncheck": 108, "inferenc": 108, "under": [108, 227, 348, 355, 356, 357, 360, 372, 373, 380, 382], "in8": 108, "bf16": [108, 201, 227, 348, 350, 360, 365, 368, 370, 372, 375, 380], "mix": [108, 358], "precis": [108, 227, 351, 360, 384, 387, 396], "And": [108, 357, 358, 359, 360, 363, 367], "u8": [108, 360, 362, 368, 375, 380], "s8": [108, 360, 367, 368, 372, 380], "fp32": [108, 201, 227, 348, 350, 356, 357, 358, 360, 362, 367, 368, 370, 371, 373, 375, 380, 385, 387], "interactfeatur": 109, "lastlayershap": 110, "layernormwithreducemean": [112, 355], "layernormwithtranspos": 113, "llamaembed": 114, "llamamatmulwithtranspos": 115, "llamapostprocess": 116, "roraryposemb": [117, 152], "llamaroraryposemb": 117, "loweralltupl": 118, "matmulwithbiasunsqueez": 125, "matmulwithtranspos": 126, "operatoradaptor": 129, "sweep": 129, "receiv": [129, 209, 359, 363], "outputdata": [130, 355], "pattern_registri": [132, 355], "pattern_typ": [132, 355], "bass": 132, "positionembed": 133, "positionembeddingsv1": 134, "qkvmerg": 135, "qkvreshap": 136, "qunatizefus": 137, "quantizedgraphdtypecheck": 138, "removeconstantop": 139, "removelastview": 140, "removerang": 141, "reshapeafterrestorehiddenst": 143, "reshapebeforeandafterattentionoutlayernormgatherel": 144, "reshapebeforerestorehiddenst": 145, "reshapefus": 146, "qkv": [148, 164, 183, 184, 358, 360], "groupnorm": [149, 324], "channel": [149, 220, 367, 371, 372, 376, 380, 386], "separ": [149, 345, 363, 376, 382], "num_group": 149, "group": [149, 223, 350, 355, 363, 369, 374, 376, 386], "num_channel": 149, "var": [149, 326], "epsilon": [149, 355], "gamma": 149, "beta": [149, 217, 326, 373, 380], "http": [149, 195, 198, 217, 220, 222, 232, 237, 239, 347, 348, 353, 354, 356, 362, 382, 388], "pytorch": [149, 193, 201, 204, 207, 209, 213, 220, 222, 227, 232, 233, 235, 333, 347, 348, 351, 353, 361, 379, 385, 386, 387], "org": [149, 198, 217, 232, 353], "nn": [149, 200, 227, 371], "html": [149, 362], "restorehiddenstatesinlengthadapt": 150, "rmsnorm": 151, "startendlogit": 158, "matcher": [159, 335, 360], "subgraphmatch": [159, 358], "textencoder_wordembed": 160, "textencoderv1": [160, 176, 177, 181, 182, 185], "textencoder_casualattentionmask": 167, "tokentypeembed": [168, 355], "tokentypeembeddingsv1": [169, 355], "torchembed": 170, "torchinnerproductinsertbia": 171, "torchpaddingsequ": 173, "transformer2dmodel_ffninputslic": 176, "transformer2dmodel_ffninputslice_1": 177, "transformer2dmodel_qkvreshapeto4d": 180, "wordembed": 188, "create_tf_nod": 189, "when": [189, 201, 220, 221, 225, 227, 232, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 345, 350, 355, 356, 358, 359, 362, 363, 366, 368, 369, 371, 372, 373, 375, 376, 380, 383, 384, 387], "tendorflow": 189, "get_tensor_dest_op": 189, "someth": 189, "store": [189, 201, 204, 207, 209, 217, 220, 221, 223, 224, 335, 355, 359, 360, 363, 366, 367, 368, 369, 370, 373, 374, 376], "dest_op_nam": 189, "tf_extract_oper": 189, "tf_dtype_id": 189, "deal": [189, 335, 357], "multipl": [189, 221, 228, 232, 233, 237, 336, 350, 355, 357, 368, 369, 371, 372, 373, 374, 375, 376, 380, 383, 384], "indetermin": 189, "torch_extract_oper": 190, "compil": [191, 319, 352, 354, 355, 356, 358, 359, 361, 363, 396], "model_arg": 193, "task": [193, 215, 233, 236, 335, 347, 348, 349, 350, 361, 368, 374, 377, 385], "new_fewshot": 193, "batch_siz": [193, 195, 200, 201, 232, 233, 236, 336, 348, 356, 357, 361, 374, 380], "devic": [193, 195, 204, 347, 349, 356, 358, 385], "cpu": [193, 201, 316, 325, 336, 347, 348, 352, 353, 356, 362, 364, 366, 368, 377, 378, 385], "no_cach": 193, "limit": [193, 201, 349, 371, 375], "bootstrap_it": 193, "100000": 193, "description_dict": 193, "check_integr": 193, "decontamination_ngrams_path": 193, "seed": [193, 201, 335], "1234": 193, "user_model": 193, "instanti": [193, 209, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "union": [193, 227, 326], "lm": 193, "get_model": 193, "create_from_arg_str": 193, "ignor": [193, 227, 232, 233, 355], "taken": [193, 232, 233], "eval_harness_nam": 193, "__name__": 193, "num_fewshot": 193, "shot": [193, 217, 224], "context": [193, 198], "batch": [193, 200, 227, 326, 348, 356, 371, 372, 374, 381], "g": [193, 201, 207, 220, 227, 335, 349, 367, 368, 372, 373, 381], "cuda": [193, 195, 347], "run": [193, 213, 221, 225, 227, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 347, 380, 381, 387], "whether": [193, 201, 209, 220, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 342, 355, 357, 363, 380, 395], "cach": [193, 209, 324, 362, 369, 372, 373, 374, 380], "per": [193, 220, 357, 364, 367, 370, 372, 378, 380, 381, 386], "test": [193, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 346, 348, 350, 353, 364, 378, 380, 381], "iter": [193, 201, 207, 221, 224, 227, 335, 336, 348, 356, 358, 362, 367, 371, 374, 375, 380, 381], "bootstrap": 193, "statist": 193, "dictionari": [193, 210, 227], "task_nam": [193, 360, 361], "relev": [193, 348], "suit": 193, "provid": [193, 200, 201, 204, 209, 213, 214, 227, 232, 233, 237, 239, 316, 335, 336, 348, 350, 351, 352, 355, 365, 368, 372, 373, 375, 383, 387], "autocausallm": 195, "pretrain": [195, 232, 233, 355], "token": [195, 213, 232, 233, 237, 336, 347, 348, 350, 352, 360, 385], "subfold": 195, "revis": [195, 209], "max_gen_tok": 195, "256": [195, 335, 357, 378, 380], "max_length": [195, 201, 336, 348], "add_special_token": 195, "use_acceler": 195, "device_map_opt": 195, "auto": [195, 201, 207, 214, 347, 357, 362, 368], "max_memory_per_gpu": 195, "max_cpu_memori": 195, "offload_fold": 195, "offload": 195, "causal": [195, 233, 347], "languag": [195, 232, 233, 316, 345, 347, 348, 350, 385], "find": [195, 335, 355, 358, 362, 363, 371, 386], "hf": 195, "transform": [195, 201, 214, 215, 227, 232, 233, 237, 335, 336, 340, 346, 347, 349, 353, 354, 355, 356, 367, 368, 373, 374, 375, 376, 382, 384, 385, 386, 387, 388, 393], "model_doc": 195, "automodelforcausallm": 195, "autoseq2seqlm": 195, "seq2seq": [195, 227, 232, 233], "automodelforseq2seqlm": 195, "multitokeneoscriteria": 195, "pretrainedtoken": 195, "initial_decoder_input_length": 195, "criteria": [195, 206, 218, 384], "stop": [195, 201, 237, 347, 387], "multi": [195, 356, 357, 358], "lambada": [197, 336], "dataset": [198, 214, 227, 236, 237, 336, 347, 350, 383, 387], "word": [198, 232, 233, 350, 376], "predict": [198, 207, 227, 232, 233, 335, 347, 348, 349], "broad": 198, "discours": 198, "arxiv": [198, 217, 232], "pdf": 198, "1606": 198, "06031": 198, "capabl": [198, 336, 373, 376], "text": [198, 222, 237, 316, 336, 348, 350, 361, 368, 377, 382, 385], "understand": [198, 369, 372], "collect": [198, 201, 336, 355, 357, 387], "narr": 198, "passag": 198, "share": [198, 227, 369], "characterist": [198, 345], "human": 198, "subject": [198, 382], "abl": [198, 374, 387], "guess": 198, "expos": [198, 367, 368], "sentenc": [198, 232, 233, 237, 336, 347, 348], "preced": 198, "target": [198, 200, 201, 220, 224, 225, 227, 335, 357, 376, 386], "To": [198, 220, 224, 232, 233, 335, 346, 355, 369, 372, 374, 376, 380, 381], "succe": 198, "cannot": [198, 233, 366, 372, 376, 381], "simpli": 198, "reli": 198, "local": [198, 209, 220, 221, 227, 355, 366, 369, 372], "keep": [198, 225, 359], "track": 198, "inform": [198, 214, 217, 220, 221, 222, 223, 224, 315, 319, 322, 327, 333, 345, 346, 348, 349, 356, 357, 364, 368, 371, 378, 379, 380, 386, 387, 388, 392], "broader": 198, "homepag": 198, "zenodo": 198, "2630551": 198, "x4xzn5nkjui": 198, "lambadastandard": 198, "standard": [198, 209], "lambadaopenai": 198, "openai": 198, "version": [198, 199, 209, 227, 345, 348, 353, 358, 364, 378, 382], "gpt": [198, 316, 347, 348, 350], "github": [198, 220, 222, 237, 239, 346, 347, 348, 353, 354, 356, 362, 382, 388], "com": [198, 220, 222, 237, 239, 347, 348, 353, 354, 356, 364, 378, 382, 388], "issu": [198, 315, 335, 342, 345, 346, 348, 373, 387, 395], "131": [198, 364], "issuecom": 198, "497136199": 198, "api_doc_exampl": 199, "pytorchbenchmark": 200, "executorbenchmark": 200, "refactor_batch_s": 200, "old_batch_s": 200, "default": [200, 201, 209, 213, 215, 225, 227, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 347, 348, 349, 355, 358, 364, 368, 372, 376, 377, 378, 380, 383, 384, 386, 387], "batched_valu": 200, "get_example_input": [200, 336], "dataload": [200, 213, 227, 236, 336, 348], "batched_data": 200, "preprocess_model": 200, "example_input": [200, 336], "additional_cmd": 200, "jit": [200, 201, 227, 336, 340, 365, 367, 368, 371, 375, 380, 393], "trace": [200, 201, 336, 357], "benchmarkconfig": [200, 201, 336], "process": [200, 201, 207, 210, 220, 221, 222, 224, 225, 227, 237, 335, 348, 350, 355, 356, 358, 359, 363, 366, 367, 369, 372, 373, 376, 386, 387], "raw_cmd": 200, "preprocess": [200, 201, 347, 348, 375], "scriptmodul": 200, "model_name_or_path": [200, 209, 227, 237, 336, 347], "build": [200, 210, 214, 227, 335, 348, 354, 366, 372, 373, 377, 384], "inc": [201, 209, 213, 214, 227, 361], "nncf": 201, "check_valu": 201, "src": [201, 326, 356, 368, 376, 380], "supported_typ": 201, "supported_valu": 201, "given": [201, 209, 220, 221, 232, 233, 347, 363, 368, 371, 374, 376, 386], "datatyp": [201, 350, 351], "uint8": [201, 374, 387], "_datatyp": 201, "dynamiclengthconfig": [201, 227, 352], "length_config": [201, 232, 233, 352], "const_rat": 201, "num_sandwich": 201, "length_drop_ratio_bound": [201, 203], "layer_dropout_prob": [201, 203], "layer_dropout_bound": [201, 203], "dynamic_train": 201, "load_store_fil": 201, "evo_it": 201, "30": [201, 370], "population_s": 201, "20": [201, 336, 348, 353, 356, 361, 364, 370, 377, 378], "mutation_s": 201, "mutation_prob": [201, 204], "crossover_s": 201, "num_cpu": 201, "48": [201, 364, 378], "distributed_world_s": 201, "latency_constraint": 201, "evo_eval_metr": 201, "eval_f1": [201, 204, 352, 383, 387], "dynam": [201, 206, 227, 362, 365, 367, 371, 373, 380, 394], "adapt": [201, 316, 345, 348], "maximum": [201, 220, 221, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 364, 378, 387], "drop": [201, 203, 350, 373, 376, 383], "ratio": [201, 203, 204, 220, 221, 222, 224, 349, 378, 380, 383, 384, 386], "sandwich": 201, "num": [201, 335, 347, 357, 366, 368, 374], "train": [201, 207, 210, 213, 214, 221, 222, 227, 316, 335, 347, 348, 349, 352, 379, 386], "dropout": [201, 203], "probabl": [201, 203, 335, 373], "evolut": [201, 205, 206, 350], "popul": [201, 204], "mutat": [201, 204], "crossov": [201, 204], "distribut": [201, 236, 335, 349, 373, 387, 388], "world": 201, "latenc": [201, 335, 336, 348, 350, 357, 364, 369, 387], "constraint": [201, 204, 387], "metric": [201, 206, 207, 210, 214, 227, 229, 335, 348, 352, 391], "quantizationconfig": [201, 213, 214, 227, 348, 352], "approach": [201, 210, 212, 347, 349, 350, 352, 368, 369], "posttrainingstat": [201, 350, 351, 352, 387], "timeout": [201, 387], "max_trial": [201, 335, 387], "config_fil": 201, "sampling_s": 201, "use_bf16": 201, "recip": [201, 227, 347, 358, 384], "earli": [201, 387], "combin": [201, 227, 335, 358, 363, 367, 368, 387], "decid": [201, 371, 387], "exit": [201, 387], "time": [201, 357, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 387], "evalu": [201, 204, 207, 210, 213, 214, 220, 221, 222, 227, 335, 349, 357, 374, 383, 384, 386, 387], "notraineroptim": [201, 213, 349, 386, 387], "guarante": [201, 387], "how": [201, 203, 217, 220, 221, 227, 315, 346, 355, 356, 357, 360, 361, 363, 368, 369, 370, 380, 383, 386], "mani": [201, 203, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 357, 359, 367, 369, 370, 373, 375, 380], "sampl": [201, 203, 227, 237, 335, 336, 347, 348, 352, 364, 374, 387], "smooth_quant": 201, "smooth": 201, "smooth_quant_arg": 201, "fast_bias_correct": 201, "fast": [201, 316, 348, 352], "correct": [201, 225, 345, 359, 363, 374], "weight_correct": 201, "weight": [201, 217, 220, 221, 223, 224, 232, 233, 326, 335, 349, 351, 357, 358, 360, 366, 369, 370, 371, 375, 376, 380, 383, 384, 386, 387], "gemm_to_matmul": 201, "graph_optimization_level": 201, "disable_al": 201, "enable_bas": 201, "enable_extend": 201, "enable_al": 201, "first_conv_or_matmul_quant": 201, "last_conv_or_matmul_quant": 201, "pre_post_process_quant": 201, "postprocess": 201, "add_qdq_pair_to_weight": 201, "qdq": [201, 227, 351, 360], "vaild": 201, "onnxrt_trt_ep": 201, "optypes_to_exclude_output_qu": 201, "optyp": 201, "dedicated_qdq_pair": 201, "dedic": 201, "pruningconfig": [201, 352], "epoch": [201, 221, 222, 386], "epoch_rang": [201, 216], "initial_sparsity_ratio": [201, 216], "target_sparsity_ratio": [201, 216, 220, 221, 352, 386], "97": [201, 216, 378, 386], "pruner_config": [201, 352, 386], "pruner": [201, 206, 216, 217, 218, 222, 227, 349, 386], "prune": [201, 206, 213, 214, 217, 218, 220, 221, 223, 224, 225, 227, 232, 233, 316, 348, 391], "goal": [201, 227, 386], "behavior": [201, 227, 345, 346, 349, 366, 367, 372, 386, 387], "nlp": [201, 222, 227, 237, 239, 316, 347, 348, 350, 352, 356, 386, 387], "wil": 201, "basicmagnitud": [201, 216, 350, 352, 386], "typel": 201, "init_prune_config": 201, "init": [201, 207, 213, 214, 218, 235, 236, 335, 347, 348, 353, 354, 356, 368], "distillationconfig": [201, 227, 352], "criterion": [201, 202, 214, 217, 220, 221, 230, 352, 383, 387], "distil": [201, 206, 207, 213, 214, 227, 347, 348, 361, 391], "inc_config": 201, "knowledgeloss": [201, 202, 349], "tfdistillationconfig": [201, 335], "loss_typ": [201, 202, 335, 349], "loss_weight": [201, 335], "train_step": [201, 335], "temperatur": [201, 202, 237, 335, 347, 349], "loss": [201, 227, 232, 233, 335, 347, 349, 387], "knowledgedistillationloss": [201, 349], "flashdistillationconfig": 201, "block_nam": [201, 335], "layer_mappings_for_knowledge_transf": [201, 335], "add_origin_loss": [201, 202, 335, 349], "flash": [201, 207, 227], "autodistillationconfig": [201, 335], "search_spac": [201, 210, 335], "search_algorithm": [201, 335], "bo": [201, 335, 382], "knowledge_transf": [201, 335], "regular_distil": [201, 335], "disil": 201, "space": [201, 207, 210, 221, 227, 335, 345, 346, 358, 366, 369], "bayesian": [201, 335], "architectur": [201, 207, 210, 214, 227, 232, 233, 335, 348, 353, 366, 373, 375], "candid": 201, "trial": [201, 227], "random": [201, 232, 335, 373], "knowledg": [201, 227, 316, 335, 347, 348], "transfer": [201, 227, 236, 349], "stage": [201, 207, 227, 335], "autodistil": [201, 207, 214, 227, 391], "regular": [201, 207, 223, 386], "nasconfig": [201, 210, 212], "basic": [201, 210, 220, 233, 236, 348, 353, 362, 372], "parser": 201, "procedur": [201, 220, 380], "backend": [201, 227, 235, 336, 348, 350, 352, 353, 354, 355, 358, 360, 363, 365, 380, 387], "warmup": [201, 336, 358], "cores_per_inst": [201, 227, 336], "num_of_inst": [201, 227, 336], "benchmark": [201, 206, 227, 228, 348, 358, 364, 365, 378, 381, 391], "skip": [201, 336, 369, 381], "core": [201, 336, 356, 364, 366, 372, 373, 378, 381, 382], "instanc": [201, 207, 210, 227, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 336, 345, 356, 357, 364, 378, 381, 383, 384, 385], "enabl": [201, 221, 336, 351, 352, 364, 366, 372, 373, 377, 378], "want": [201, 213, 336, 342, 355, 356, 357, 358, 360, 363, 366, 367, 368, 380, 383, 395], "prunerv2": 201, "target_spars": [201, 220], "pruning_typ": 201, "op_nam": 201, "excluded_op_nam": 201, "start_step": [201, 221], "end_step": [201, 221], "pruning_scop": 201, "pruning_frequ": [201, 221], "min_sparsity_ratio_per_op": [201, 220], "max_sparsity_ratio_per_op": [201, 220, 221], "sparsity_decay_typ": 201, "pruning_op_typ": 201, "reg_typ": [201, 368], "criterion_reduce_typ": 201, "resume_from_pruned_checkpoint": 201, "similiar": 201, "weightpruningconfig": 201, "pruning_config": [201, 213, 214, 227, 352, 386], "snip_momentum": [201, 217], "4x1": [201, 220, 357, 366, 376], "global": [201, 220, 221], "98": [201, 378], "exp": [201, 368, 375, 380], "linear": [201, 220, 335, 349, 368, 371, 374], "ce": [202, 335, 349], "loss_weight_ratio": [202, 349], "layer_map": [202, 349], "distillationcriterionmod": 202, "restor": [203, 350], "sample_length_configur": 203, "max_seq_length": [203, 204], "num_hidden_lay": 203, "layer_config": [203, 232, 233], "length_drop_prob": 203, "length_drop_ratio": 203, "min_length": 203, "hidden": [203, 220, 232, 233, 335, 369], "truncat": [203, 348], "less": [203, 336, 349, 358, 372, 376, 386], "than": [203, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 357, 358, 359, 367, 372, 374, 379, 380, 387], "min": [203, 227, 387], "sample_layer_configur": 203, "layer_dropout": 203, "depend": [203, 210, 346, 348, 353, 354], "paramat": 203, "bound": 203, "kept": [203, 220], "evolust": 204, "evolustionari": 204, "approx_ratio": 204, "12": [204, 347, 353, 354, 357, 364, 370, 374, 377, 378, 380], "l": [204, 335, 349], "384": [204, 335, 358, 364, 378], "approxim": [204, 375], "invers": [204, 375], "store2str": 204, "gene": 204, "mac": 204, "score": [204, 217, 220, 221, 223, 232, 233, 385], "parent": [204, 221, 224], "parmat": 204, "lower_constraint": 204, "upper_constraint": 204, "eval_metr": 204, "evolutionari": [204, 227], "load_stor": 204, "store_fil": 204, "save_stor": 204, "get_stor": 204, "set_lower_constraint": 204, "setter": [204, 232, 233], "lower": [204, 237, 376, 384, 387], "set_upper_constraint": 204, "upper": [204, 368], "save_popul": 204, "population_fil": 204, "convex_hul": 204, "pareto_fronti": 204, "add_gen": 204, "rai": 204, "packag": [205, 208, 316, 347, 348], "drop_and_restore_util": [205, 206], "mixtur": 206, "auto_distil": [206, 208, 335], "basic_na": [206, 211], "pytorch_prun": 206, "reg": [206, 218, 221, 367, 368], "schedul": [206, 213, 218, 221, 223, 227, 335, 340, 365, 393], "get_throughput": [206, 229], "utility_tf": [206, 229], "optimizer_tf": 206, "trainer": [206, 213, 333, 348, 350, 351, 352], "handl": [207, 227, 232, 233, 315, 324, 335, 362, 370, 371], "both": [207, 227, 232, 233, 345, 347, 352, 372, 374, 379, 380, 381, 383, 387], "model_build": [207, 210, 214, 227, 335], "conf_fname_or_obj": [207, 210, 212], "design": [207, 227, 355, 367, 368, 379, 391], "three": [207, 216, 222, 226, 227, 335, 348, 355, 359, 363, 374, 375, 386, 387], "major": [207, 227, 335, 366, 372, 373, 375, 376, 387], "explor": [207, 227, 335, 352], "compress": [207, 227, 316, 335, 349, 352, 366, 370, 372, 376, 379, 387], "discov": [207, 227, 335], "potenti": [207, 227, 326, 335, 346, 373], "measur": [207, 227, 335, 336, 349, 365, 383, 384, 386, 387], "hardwar": [207, 227, 335, 346, 349, 377, 379], "etc": [207, 227, 335, 349, 357], "select": [207, 223, 227, 232, 233, 335, 368, 380], "best": [207, 210, 227, 335, 345, 350], "res_save_path": [207, 210], "model_cl": [207, 214, 227, 335], "found": [207, 210, 348, 354, 355, 376], "estim": [207, 210, 357, 376], "load_search_result": 207, "init_by_cfg": [207, 210], "create_distil": 207, "optimizedmodel": 209, "from_pretrain": [209, 232, 233, 336, 348, 352, 385], "function": [209, 210, 213, 214, 222, 227, 323, 324, 325, 326, 335, 349, 355, 358, 359, 362, 363, 367, 368, 380, 383, 386, 387], "classmethod": [209, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "intel": [209, 220, 222, 237, 315, 336, 346, 347, 352, 353, 354, 355, 356, 364, 366, 377, 378, 382, 384, 385, 386, 387, 388], "compressor": [209, 214, 220, 222, 316, 336, 348, 384, 387], "repositori": [209, 348], "hug": [209, 316, 348, 360], "face": [209, 316, 317, 345, 348, 360], "hub": [209, 385], "directori": [209, 213, 360, 379], "host": 209, "cache_dir": 209, "download": [209, 232, 233, 388], "force_download": 209, "forc": 209, "re": [209, 370], "overrid": [209, 227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324, 362], "resume_download": 209, "delet": [209, 386], "incomplet": 209, "attempt": 209, "resum": [209, 227], "branch": [209, 380], "tag": 209, "commit": [209, 345, 381], "sinc": [209, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 349, 372, 373, 375], "we": [209, 210, 233, 342, 345, 347, 348, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 387, 395], "git": [209, 347, 348, 353, 354, 356], "system": [209, 348, 354], "artifact": 209, "huggingfac": [209, 237, 348, 361, 383, 385], "allow": [209, 336], "q_model": 209, "basicna": 210, "conf_fnam": 210, "obj": [210, 212, 225], "common": [212, 220, 345, 348, 387], "nasbas": 212, "orchestr": [213, 227], "orchestrate_optim": [213, 227], "compon": [213, 227, 367, 382], "experiment": [213, 227, 368], "callabl": [213, 214, 227, 335], "train_func": [213, 214, 227, 335], "saved_result": [213, 348], "aggreg": 213, "save_model": [213, 236, 348], "json": [213, 237, 347], "pytorch_model": 213, "init_quant": [213, 214, 227, 367], "quant_config": [213, 214, 227, 348, 352, 387], "calib_func": 213, "calib_dataload": [213, 227], "prepar": [213, 214, 232, 233, 347, 357, 359, 362, 367, 368, 376, 387], "invok": [213, 214], "_inc_quant": 213, "calibr": [213, 227, 387], "init_prun": [213, 214, 227], "init_distil": [213, 214, 227], "distillation_config": [213, 214, 227, 349, 352], "teacher_model": [213, 214, 227, 335, 349, 352], "teacher": [213, 214, 335, 349, 350], "tfoptim": [214, 335, 349], "pretrainedmodel": [214, 227, 335], "training_args_tf": 214, "tftrainingargu": 214, "train_dataset": [214, 335, 348, 352], "eval_dataset": [214, 335, 348, 352], "compute_metr": [214, 335, 348], "task_typ": [214, 236], "task_id": [214, 236], "entri": [214, 227, 232, 233, 382], "techniqu": [214, 348, 350, 352, 387], "builtin_eval_func": [214, 227], "saved_model": 214, "quantized_model_path": 214, "larger": [214, 220, 227], "model_builder_builtin": [214, 227, 335], "arch_para": [214, 227], "built": [214, 335, 384], "builder": [214, 335], "autodistillation_config": [214, 227, 335], "build_train_func": 214, "infer_framework_load_model": 215, "autoconfig": [215, 348, 352, 385], "model_class": 215, "model_kwarg": [215, 232, 233, 385], "pruningmod": 216, "current": [216, 217, 220, 221, 222, 224, 226, 357, 367, 368, 369, 371, 372, 374, 379, 380], "prunerconfig": [216, 352], "update_frequ": 216, "prune_typ": [216, 352, 386], "per_tensor": 216, "register_criterion": 217, "registri": [217, 220, 221, 223, 224], "get_criterion": 217, "pruningcriterion": 217, "on_step_begin": [217, 221, 222], "begin": [217, 221, 222, 233, 335, 367, 368], "on_before_optimizer_step": [217, 221, 222, 223], "on_after_optimizer_step": [217, 221, 222, 223], "magnitudecriterion": 217, "magnitud": [217, 386], "criterion_class": 217, "deriv": [217, 220, 221, 223, 224, 324, 373, 374], "determin": [217, 220, 221, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 358, 377], "magtinud": 217, "gradientcriterion": 217, "gradient": 217, "absolut": [217, 383, 386, 387], "snipcriterion": 217, "snip": 217, "product": [217, 348, 364, 374, 378, 384, 387], "singl": [217, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 369, 374], "network": [217, 220, 335, 349, 355, 356, 357, 359, 371, 386, 387], "sensit": 217, "ab": [217, 232, 387], "1810": 217, "02340": 217, "snipmomentumcriterion": 217, "momentum": 217, "mechan": 217, "much": [217, 360, 369], "preserv": 217, "updat": [217, 220, 221, 224, 225, 347, 348, 353, 354, 356, 373, 386], "register_pattern": 220, "get_pattern": 220, "assertionerror": [220, 221, 225], "basepattern": [220, 223], "unit": [220, 365, 372], "dure": [220, 224, 227, 356, 372, 376, 381, 384, 386, 387], "is_glob": 220, "take": [220, 345, 349, 357, 359, 362, 367, 375, 376], "contrast": 220, "individu": [220, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345], "keep_mask_lay": 220, "whose": [220, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 363], "mask": [220, 221, 224, 232, 233, 326, 350, 367, 368, 370, 372, 375], "invalid_lay": 220, "reach": [220, 224, 346, 348], "minimum": 220, "reduce_tensor": 220, "dim": [220, 232, 233, 356, 362, 366, 372, 376, 380], "reduc": [220, 348, 362, 366, 367, 369, 371, 372, 373, 375, 376, 387], "along": [220, 358, 371, 374, 376], "dimens": [220, 232, 233, 335, 349, 358, 371, 372, 374, 376, 380], "axi": [220, 348, 355, 357, 374, 375], "get_mask": 220, "pre_mask": 220, "layer_nam": 220, "unprun": 220, "abstract": [220, 224, 232, 233], "get_masks_glob": 220, "get_masks_loc": 220, "get_single_mask_per_target_ratio": 220, "exact_sparsity_ratio": 220, "get_block_size_dict": 220, "mainli": [220, 224, 358, 372, 373], "implement": [220, 221, 222, 223, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 340, 348, 355, 358, 359, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 393], "get_sparsity_ratio": [220, 222], "return_dict": [220, 232, 233], "zero": [220, 221, 222, 368, 369, 371, 372, 376, 386], "zero_cnt": 220, "total_cnt": 220, "get_pattern_lock_mask": 220, "obtain": [220, 223, 224, 225, 348, 350, 357, 375], "posit": [220, 232, 233, 345, 348, 352, 358, 363, 380, 385], "lock": [220, 386], "check_layer_valid": 220, "block_siz": 220, "get_reduced_masks_from_data": 220, "update_residual_cnt": 220, "yet": 220, "get_sparsity_ratio_each_lay": 220, "sparsity_ratio": 220, "zero_point": 220, "cnt": 220, "sparsityinfo": 220, "adjust_ratio": 220, "key_new_spars": 220, "max_sparsity_ratio": 220, "min_sparsity_ratio": 220, "final_target_sparsity_ratio": 220, "adjust": [220, 336, 362, 387], "examin": 220, "propos": [220, 335, 349, 366], "indic": [220, 232, 233, 326, 363, 367, 368, 374, 376, 380, 383], "adjust_sparsity_ratio": 220, "patternnxm": 220, "nxm": [220, 221, 366], "height": 220, "width": [220, 366, 367, 371, 373, 387], "vertic": 220, "direct": [220, 326], "becaus": [220, 355, 367, 370, 375, 387], "calul": 220, "ration": 220, "block_size_1": 220, "block_size_2": 220, "wise": [220, 365, 380, 394], "block_wis": 220, "get_sparsity_ratio_progress": 220, "reshape_orig_to_pattern": 220, "s1": 220, "s2": 220, "reshape_reduced_to_orig": 220, "orig_shap": 220, "permut": [220, 357, 370, 374, 380], "reduce_scor": 220, "recalcul": 220, "get_mask_per_threshold": 220, "cur_target_sparsity_ratio": 220, "keep_exact_sparsity_ratio": 220, "togeth": [220, 348], "keep_pre_mask": 220, "remain": [220, 326], "unchang": 220, "count_new_masked_cnt": 220, "new_added_mask": 220, "count": [220, 357, 362], "ad": [220, 221, 232, 233, 355, 359, 363, 367, 376, 380, 385], "update_new_added_mask": 220, "cur_mask": 220, "bacaus": 220, "update_progressive_mask": 220, "progressive_step": 220, "progressive_config": 220, "progress": [220, 221, 224], "update_progressive_masks_linear": 220, "update_progressive_masks_scor": 220, "update_progressive_masks_loc": 220, "domain": [220, 316, 340, 348, 365, 393], "update_progressive_masks_glob": 220, "patternninm": 220, "continu": [220, 232, 366, 369, 373, 374], "blob": [220, 237], "master": [220, 222], "md": [220, 237, 357, 360], "get_least_ninm_mask_from_data": 220, "elementwis": 220, "sparisti": 220, "get_ele_mask_per_threshold": 220, "least_ninm_mask": 220, "least_m_in_m_mask": 220, "register_prun": 221, "parse_valid_pruner_typ": 221, "get_prun": 221, "cuurent": 221, "baseprun": 221, "what": [221, 345, 367, 368, 374, 386], "current_sparsity_ratio": 221, "global_step": 221, "trigger": [221, 228, 346], "frequenc": [221, 364, 378, 386], "show": [221, 345, 348, 355, 356, 359, 360, 363, 370, 372, 374], "on_epoch_begin": [221, 222], "mask_weight": 221, "formal": [221, 232], "mask_weights_gener": 221, "local_step": [221, 222], "update_mask": 221, "on_epoch_end": [221, 222], "on_step_end": [221, 222], "on_train_begin": [221, 222], "phase": [221, 222, 349, 386], "on_train_end": [221, 222], "on_before_ev": [221, 222], "on_after_ev": [221, 222], "check_is_pruned_step": 221, "boolean": 221, "basicprun": 221, "arrang": 221, "within": [221, 335, 345, 371], "chang": [221, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 346, 355, 366, 367, 376, 381, 382], "proce": 221, "regul": 221, "term": [221, 223, 335, 349, 371, 374, 376, 382, 383, 384, 387], "set_global_step": 221, "patternlockprun": 221, "fix": [221, 346, 358, 370], "inherit": [221, 224, 336, 349, 355, 362, 385, 386, 387], "progressiveprun": 221, "interpol": 221, "fine": [221, 316, 347, 348, 386, 387], "grain": 221, "improv": [221, 346, 348, 357, 367, 369, 371, 372, 376, 387], "interv": [221, 380], "check_progressive_valid": 221, "check_is_pruned_progressive_step": 221, "update_masks_progress": 221, "print_progressive_spars": 221, "templat": [222, 324, 326], "tree": 222, "huggingface_model": 222, "classif": [222, 232, 233, 316, 335, 348, 349, 350, 361, 385], "eager": [222, 387], "config_file_path": 222, "pruner_info": 222, "update_config": 222, "read": [222, 348, 356], "pass": [222, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 326, 367, 368, 385, 387], "elementwise_over_matmul_gemm_conv": 222, "elementwise_over_al": 222, "blockwise_over_matmul_gemm_conv": 222, "ensur": [222, 372], "register_reg": 223, "regulariz": 223, "get_reg_typ": 223, "get_reg": 223, "basereg": 223, "grouplasso": [223, 386], "coeff": 223, "lasso": [223, 350, 386], "variabl": [223, 326, 359, 362, 380, 381], "reg_term": 223, "coeffient": 223, "register_schedul": 224, "get_schedul": 224, "pruningschedul": 224, "dens": [224, 326, 357, 358, 363, 365, 376, 380, 386], "gradual": 224, "update_sparsity_ratio": 224, "target_ratio": 224, "current_prune_step": 224, "total_prune_step": 224, "init_ratio": 224, "oneshotschedul": 224, "onc": [224, 316, 348, 357, 375], "iterativeschedul": 224, "init_sparsity_ratio": 224, "check_config": 225, "prune_config": 225, "everyth": 225, "reset_none_to_default": 225, "undefin": 225, "item": [225, 336, 348, 352], "update_param": 225, "process_weight_config": 225, "global_config": 225, "local_config": 225, "default_config": 225, "pruners_info": 225, "process_yaml_config": 225, "check_key_valid": 225, "template_config": 225, "user_config": 225, "process_and_check_config": 225, "process_config": 225, "parse_to_prun": 225, "quantizationmod": 226, "easili": [227, 366, 367], "finetun": [227, 348, 350, 352, 385], "basetrain": 227, "builtin_train_func": 227, "automativ": 227, "low": [227, 348, 352, 366, 373, 375, 384, 387, 396], "achiev": [227, 348, 369, 384], "point": [227, 232, 233, 335, 359, 367, 368, 372, 375, 387], "automat": [227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 347, 357, 358, 359, 367, 380], "pruningconf": 227, "smaller": [227, 349, 372, 386], "config_list": 227, "optimizt": 227, "create_optimizer_builtin": 227, "resume_from_checkpoint": 227, "optuna": 227, "ignore_keys_for_ev": 227, "tor": 227, "checkpoint": [227, 232], "present": [227, 232, 375], "state": [227, 232, 233, 348, 364, 378], "hyperparamet": [227, 335], "keyword": 227, "hide": [227, 232, 233], "deprec": [227, 232, 233], "training_step": 227, "inject": [227, 368], "being": [227, 372], "fed": 227, "most": [227, 348, 359, 363, 367, 368, 369, 374, 385], "expect": [227, 232, 233, 345, 346, 376, 384], "label": [227, 232, 233, 237, 347, 381, 385], "training_step_length_adapt": 227, "compute_loss": 227, "return_output": 227, "By": [227, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 356], "nas_config": 227, "baseic": 227, "callabel": 227, "auto_distil_evaluation_loop": 227, "prediction_loss_onli": 227, "ignore_kei": 227, "metric_key_prefix": 227, "eval": [227, 335, 383], "trainer_util": 227, "evalloopoutput": 227, "work": [227, 315, 368, 385], "doe": [227, 355, 367, 368, 369, 370, 371, 374, 380], "avoid": [227, 232, 233, 363, 366, 368, 372, 374, 375, 380], "memori": [227, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 387], "huge": 227, "prefix": [227, 380], "export_to_onnx": [227, 348, 351], "tranfer": 227, "paramert": 227, "export_to_fp32_onnx": 227, "save_path": [227, 351], "opset_vers": [227, 351], "14": [227, 351, 364, 370, 377, 378], "do_constant_fold": [227, 351], "verbos": [227, 351], "export": [227, 348, 356, 357, 360, 385, 391], "fold": [227, 380], "export_to_bf16_onnx": 227, "export_to_int8_onnx": 227, "quant_format": [227, 351], "s8s8": [227, 351, 372], "sample_s": 227, "calibrate_method": 227, "minmax": 227, "scale_map": [227, 348], "export_to_jit": 227, "set_dynamic_config": [227, 352], "dynamic_config": [227, 352], "run_evolutionary_search": 227, "nlptrainer": [227, 348, 349, 352, 386, 387], "nlpseq2seqtrain": 227, "special": [228, 368, 374], "greater_is_bett": [230, 234, 335, 352, 383, 384, 387], "is_rel": [230, 352, 383, 387], "01": [230, 352, 378, 383, 387], "weight_ratio": [230, 234, 383, 384, 387], "modeling_bert_dynam": 231, "modeling_roberta_dynam": 231, "bert": [232, 335, 348, 349, 350, 356, 357, 358, 361, 363, 364, 367, 372, 373, 374, 375], "load_tf_weights_in_bert": 232, "tf_checkpoint_path": 232, "bertembed": [232, 233], "token_typ": 232, "forward": [232, 233, 335, 357, 362, 387], "longtensor": [232, 233], "token_type_id": [232, 233], "position_id": [232, 233], "inputs_emb": [232, 233], "floattensor": [232, 233], "past_key_values_length": [232, 233], "bertselfattent": 232, "position_embedding_typ": [232, 233], "transpose_for_scor": [232, 233], "hidden_st": [232, 233], "attention_mask": [232, 233], "head_mask": [232, 233], "encoder_hidden_st": [232, 233], "encoder_attention_mask": [232, 233], "past_key_valu": [232, 233], "output_attent": [232, 233], "bertselfoutput": 232, "bertattent": 232, "prune_head": [232, 233], "bertintermedi": 232, "intermedi": [232, 335, 355, 360, 363, 376, 387], "bertoutput": 232, "bertlay": 232, "output_length": [232, 233], "always_keep_cls_token": [232, 233], "feed_forward_chunk": [232, 233], "attention_output": [232, 233], "feed": [232, 233, 349, 356], "chunk": 232, "bertencod": 232, "encod": [232, 233, 335, 357, 363], "use_cach": [232, 233], "output_hidden_st": [232, 233], "modeling_output": [232, 233], "basemodeloutputwithpastandcrossattent": [232, 233], "bertpool": 232, "pooler": [232, 233], "bertpredictionheadtransform": 232, "bertlmpredictionhead": 232, "bertonlymlmhead": 232, "sequence_output": 232, "bertonlynsphead": 232, "pooled_output": 232, "bertpretraininghead": 232, "bertpretrainedmodel": 232, "simpl": [232, 233, 348, 353, 356, 367, 375, 385], "bertforpretrainingoutput": 232, "bertforpretrain": 232, "sum": [232, 336, 349, 357, 373, 375, 376, 380], "prediction_logit": [232, 233], "sequence_length": [232, 233], "vocab_s": [232, 233], "vocabulari": 232, "seq_relationship_logit": 232, "hidden_s": [232, 233, 335], "plu": 232, "num_head": [232, 233], "averag": [232, 336, 348, 357], "bertmodel": 232, "add_pooling_lay": [232, 233], "behav": [232, 233], "well": [232, 233, 351, 387, 388], "decod": [232, 233, 377], "case": [232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 335, 349, 350, 357, 358, 366, 368, 369, 370, 380, 381], "cross": [232, 233], "describ": [232, 233, 325, 347, 369, 371, 374, 380, 383, 384], "1706": [232, 364, 378], "03762": 232, "ashish": [232, 233], "vaswani": [232, 233], "noam": [232, 233], "shazeer": [232, 233], "niki": [232, 233], "parmar": [232, 233], "jakob": [232, 233], "uszkoreit": [232, 233], "llion": [232, 233], "jone": [232, 233], "aidan": [232, 233], "gomez": [232, 233], "lukasz": [232, 233], "kaiser": [232, 233], "illia": [232, 233], "polosukhin": [232, 233], "is_decod": [232, 233], "add_cross_attent": [232, 233], "get_input_embed": [232, 233], "getter": [232, 233], "set_input_embed": [232, 233], "set_length_config": [232, 233], "set_output_attent": [232, 233], "basemodeloutputwithpoolingandcrossattent": [232, 233], "pad": [232, 233, 336, 348, 357, 372, 376, 380], "n_layer": [232, 233], "embed_size_per_head": [232, 233], "precomput": [232, 233], "speed": [232, 233, 355, 359], "up": [232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 357, 359, 368, 380], "decoder_input_id": [232, 233], "those": [232, 233, 374, 386, 387], "past": [232, 233], "instead": [232, 233, 369], "get_output_embed": [232, 233], "set_output_embed": [232, 233], "new_embed": [232, 233], "next_sentence_label": 232, "legaci": [232, 233], "berttoken": 232, "uncas": [232, 335, 348, 350, 352, 360, 385], "hello": [232, 233], "my": [232, 233], "dog": [232, 233], "cute": [232, 233], "return_tensor": [232, 233, 336, 348, 352], "pt": [232, 233, 336, 348, 352, 385], "bertlmheadmodel": 232, "causallmoutputwithcrossattent": [232, 233], "prepare_inputs_for_gener": [232, 233], "bertformaskedlm": 232, "maskedlmoutput": [232, 233], "bertfornextsentencepredict": 232, "nextsentencepredictoroutput": 232, "prompt": 232, "itali": 232, "pizza": 232, "serv": 232, "restaur": 232, "unslic": 232, "next_sent": 232, "sky": 232, "blue": 232, "shorter": 232, "wavelength": 232, "light": 232, "logit": [232, 233, 335, 348, 349, 352, 356], "wa": 232, "bertforsequenceclassif": 232, "sequenceclassifieroutput": [232, 233], "regress": [232, 233, 347], "num_label": [232, 233, 348, 352], "entropi": [232, 233, 335], "bertformultiplechoic": 232, "choic": [232, 233, 350], "multiplechoicemodeloutput": [232, 233], "num_choic": [232, 233], "bertfortokenclassif": 232, "tokenclassifieroutput": [232, 233], "bertforquestionansw": 232, "question": [232, 345, 346, 348, 350, 370], "answer": [232, 233, 345, 350], "start_posit": [232, 233], "end_posit": [232, 233], "questionansweringmodeloutput": [232, 233], "span": [232, 233], "clamp": [232, 233], "account": [232, 233, 345], "expand_gath": [232, 233], "roberta": [233, 350], "robertaembed": 233, "tini": [233, 350], "tweak": 233, "create_position_ids_from_inputs_emb": 233, "directli": [233, 367, 370, 372, 373], "sequenti": [233, 359, 367, 368, 371], "robertaselfattent": 233, "robertaselfoutput": 233, "robertaattent": 233, "attenion": 233, "robertaintermedi": 233, "intermidi": 233, "robertaoutput": 233, "robertalay": 233, "robertaencod": 233, "roberata": 233, "robertapool": 233, "robertapretrainedmodel": 233, "update_keys_to_ignor": 233, "del_keys_to_ignor": 233, "robertamodel": 233, "_": [233, 335, 347, 349, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 372, 373, 374, 375, 379, 380, 383, 384, 385, 386, 387], "robertaforcausallm": 233, "robertatoken": 233, "robertaconfig": 233, "robertaformaskedlm": 233, "robertalmhead": 233, "featur": [233, 316, 335, 344, 346, 348, 349, 360, 363, 366, 373, 377, 385, 388, 397], "robertaforsequenceclassif": 233, "robertaformultiplechoic": 233, "robertafortokenclassif": 233, "robertaclassificationhead": 233, "robertaforquestionansw": 233, "quanstion": 233, "create_position_ids_from_input_id": 233, "padding_idx": 233, "non": [233, 371, 374, 376, 380, 381], "symbol": 233, "fairseq": 233, "make_posit": 233, "models": [234, 350, 384], "distributed_init": [235, 236], "gloo": 235, "world_siz": 235, "rank": 235, "init_method": 235, "master_addr": 235, "127": [235, 357, 377, 378, 387], "master_port": 235, "12345": 235, "distibut": 235, "environ": [235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 380, 381], "tfdataload": 236, "worker_address": 236, "worker": 236, "address": [236, 316, 345, 367, 373], "treat": [236, 355], "chief": 236, "get_filepath": 236, "base_dirpath": 236, "folder": [236, 354, 355, 356, 357, 358, 360], "keras2savedmodel": 236, "kera": 236, "augment": [237, 239, 391], "extens": [237, 346, 347, 352, 353, 354, 355, 356, 382, 384, 385, 386, 388], "dataaugment": [237, 347], "augmenter_typ": [237, 347], "wai": [237, 348, 357, 358, 359, 363, 366, 368, 372, 374, 377], "enhanc": [237, 352, 371], "textgenerationaug": [237, 347], "keyboardaug": [237, 347], "aug": [237, 316, 347], "input_dataset": [237, 347], "origin_data": 237, "output_path": [237, 347], "join": [237, 347], "result_path": [237, 347], "test1": [237, 347], "cv": [237, 347], "augmenter_argu": [237, 347], "gpt2": [237, 347], "medium": [237, 316, 347, 348, 381], "data_aug": [237, 347], "text_generation_augment": 237, "raw_dataset": [237, 347, 348, 352], "No": [237, 350], "glue": [237, 347, 348], "sst2": [237, 336, 347, 348, 350, 357, 361], "eo": [237, 347], "k": [237, 326, 347, 358, 367, 369, 370, 371, 372, 374, 375, 376, 378, 380], "p": [237, 347, 348], "top_p": 237, "effect": [237, 316, 347, 348, 355, 380], "tend": 237, "toward": [237, 345], "greedi": 237, "repetition_penalti": 237, "primarili": 237, "ctrl": [237, 347, 350], "num_return_sent": 237, "entir": [237, 357, 366, 372, 373, 386], "num_sampl": 237, "condit": [237, 347, 358, 359, 382], "stop_token": 237, "mit_data_augment": 237, "nlpaug": [237, 239, 347], "librari": [237, 239, 340, 346, 367, 368, 372, 393], "help": [237, 239, 347, 348, 363, 367, 379], "machin": [237, 239, 347, 380], "learn": [237, 239, 316, 347, 360, 368, 384, 387], "project": [237, 239, 345, 346, 347], "makcedward": [237, 239], "suffix": 237, "csv": [237, 347], "column_nam": 237, "sentence1": 237, "sentence2": 237, "data_augment": [238, 347], "augmentertyp": 239, "enumer": [239, 326], "get_augmenter_from_typ": 239, "aug_typ": 239, "augment_typ": 239, "testaddclstoken": 242, "methodnam": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "runtest": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "code": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 348, 352, 353, 355, 358, 368, 369, 370, 371, 372, 377, 380, 382], "itself": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 377], "place": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 368, 373, 386], "fixtur": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "testcas": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "constructor": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 362], "author": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 382], "deconstruct": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "setup": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 347, 348, 353, 355], "teardown": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "respect": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 359, 360], "necessari": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345, 362, 376, 380], "__init__": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355], "alwai": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 363, 372, 381], "signatur": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "failureexcept": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "fail": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "deem": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 345], "rather": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 359, 367], "longmessag": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "long": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 363], "messag": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "repr": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "failur": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "explicit": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 345, 362, 368], "maxdiff": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "diff": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "difflib": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "look": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 355, 357, 368, 369], "setupclass": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "hook": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "teardownclass": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "testaddembed": 243, "testattentionreshap": [244, 245, 291, 294], "testtorchmodel": [246, 260], "testbinaryop": 247, "testtorchop": [248, 250, 256, 259, 267, 268, 270, 272, 273, 282, 285, 287, 296, 297, 299, 304, 308], "testcastto": 249, "testconvreshap": 251, "testdecoderattnreshap": 252, "testdispatchertuningacc": 253, "testdispatchertuningthroughput": 254, "testdynamicquant": 255, "testembeddingbag": 257, "testexecutionopt": 258, "testgraphdispatch": 261, "testinsertinputouputdata": 262, "testissupportedonnxgraph": 263, "testlastlayershap": 264, "testlayernormwithreducemean": [265, 293, 295], "testlayernormwithtranspos": 266, "testtorchlinear": 269, "testmain": 271, "testmatmulwithbiasrelu": 274, "testmatmulwithbiassigmoid": 275, "testmatmulwithbiastanh": 276, "testmergedembeddingbag": 277, "testonnxutil": 279, "testoperatoradaptor": 280, "testop": 281, "testpaddingsequ": 283, "testpatterndispatch": 284, "testpositionembed": 286, "testprimitivecacheacc": 288, "testprimitivecachethroughput": 289, "testqkvmerg": 290, "testquantonnxexecut": 292, "teststartendlogit": 298, "testtextencod": 300, "testtextencoderbf16": 301, "testtfutil": 302, "testtokentypeembed": 303, "testtransposebatchmatmul": 305, "testunet": 306, "testunetbf16": 307, "testvaedecod": 309, "testvaedecoderbf16": 310, "testweightsharingacc": 311, "testweightsharingdispatchertuningacc": 312, "testweightsharingdispatchertuningthroughput": 313, "testweightsharingthroughput": 314, "center": 315, "resolv": 315, "guidelin": 315, "innov": [316, 348], "toolkit": [316, 348, 350], "particular": 316, "4th": [316, 348], "xeon": [316, 348, 350, 353, 366, 375, 378, 382, 387], "scalabl": [316, 348, 350, 353, 367], "processor": [316, 348, 350, 353, 364, 378], "sapphir": [316, 348, 353], "rapid": [316, 348, 353], "codenam": 316, "seamless": [316, 348], "experi": [316, 345, 348, 370, 375, 376], "extend": [316, 348, 369], "leverag": [316, 335, 348, 349, 352], "advanc": [316, 335, 345, 348, 365, 377], "softwar": [316, 348, 382], "optim": [316, 333, 335, 336, 348, 349, 350, 351, 352, 353, 356, 359, 360, 361, 367, 368, 369, 371, 383, 384, 385, 386, 387], "uniqu": [316, 348], "awar": [316, 348], "runtim": [316, 326, 348, 377, 380, 387], "releas": [316, 348, 392], "neurip": [316, 348], "2022": [316, 348, 364, 378], "paper": [316, 348, 352], "distilbert": [316, 335, 348, 350, 352, 360, 385], "quala": [316, 348, 350, 352], "minilm": [316, 348, 350, 352], "2021": [316, 348], "pre": [316, 348, 359, 369, 379], "diffus": [316, 348, 350, 372], "j": [316, 348, 350, 354, 355, 356, 365, 371, 376, 377, 380], "6b": [316, 348, 350], "neox": [316, 348], "bloom": [316, 348], "176b": [316, 348], "t5": [316, 348, 350], "flan": [316, 348], "workflow": [316, 348, 349, 358, 360, 374], "setfit": [316, 348], "sentiment": [316, 348], "analysi": [316, 348], "dlsa": [316, 348], "neuralchat": [316, 348], "chatbot": [316, 348], "through": [316, 336, 348, 355, 367, 370, 371, 372, 377], "effici": [316, 348, 352], "peft": [316, 348], "blog": [316, 348], "publish": [316, 345, 348, 382], "april": 316, "2023": [316, 382], "tech": 316, "artifici": 316, "intellig": 316, "ai": [316, 348], "With": [316, 375, 387], "mlperf": 316, "bar": 316, "5x": 316, "commun": [316, 345], "mleffici": [316, 348], "dec": [316, 348], "nov": [316, 348], "coher": [316, 373], "novemb": 316, "alibaba": 316, "deep": [316, 347, 348, 360, 368, 384, 387], "purif": 316, "kernel": [317, 326, 344, 356, 357, 362, 364, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 397], "namespac": [323, 324, 325, 326], "jd": [323, 324, 325, 326, 368], "engine_t": 323, "cpu_engine_t": 323, "gpu_ocl_engine_t": 323, "inlin": [323, 324, 325, 326, 367], "engine_kind": [323, 325, 368], "runtime_kind": [323, 325], "virtual": [323, 324, 325, 362, 367, 368], "get_engine_kind": 323, "get_runtime_kind": 323, "std": [323, 324, 325, 326, 365, 367, 368], "vector": [323, 324, 325, 326, 362, 365, 367, 368, 369, 371, 374, 376], "impl_list_item_t": [323, 324], "get_implementation_list": 323, "operator_desc": [323, 324, 327, 365], "op_desc": [323, 324, 365, 368], "create_kernel": 323, "shared_ptr": [323, 324, 362], "kernel_t": [323, 324], "stream_t": 323, "create_stream": 323, "create_memory_storag": 323, "memory_storage_t": 323, "protect": [323, 324], "engine_kind_": [323, 325], "runtime_kind_": [323, 325], "cpu_inst": 323, "null_inst": 323, "storag": 323, "empty_list": 323, "typenam": [324, 326], "arg_t": 324, "void": [324, 325, 326, 362, 365, 367, 368, 369], "proxy_bas": 324, "hpp": [324, 325, 326, 358, 365, 380], "proxi": [324, 340, 365, 372, 393], "anyth": 324, "similar": [324, 359, 367, 370, 371, 373, 374, 386], "onednn": [324, 362], "struct": [324, 326, 367, 368], "oneapi": [324, 362, 377], "dnnl": [324, 358, 362], "136": 324, "reset_sp": 324, "sp": 324, "get_sp": 324, "create_proxy_object": 324, "result_ref": 324, "privat": [324, 325, 345, 356, 362, 366, 367, 368, 373], "member": [324, 325, 326, 345, 362, 367, 368], "data_handle_": 324, "kernel_desc_proxi": 324, "kernel_desc_t": 324, "real": [324, 358, 373, 374, 377], "attention_desc": 324, "dynamic_quant_desc": 324, "dynamic_quant_matmul_desc": 324, "eltwiseop_desc": 324, "gather_desc": 324, "groupnorm_desc": 324, "layernorm_ba_desc": [324, 367], "layernormalized_spmm_desc": 324, "logsoftmax_desc": 324, "mha_dense_desc": 324, "slice_desc": 324, "softmax_desc": 324, "sparse_matmul_desc": [324, 365], "transpose_matmul_desc": 324, "transpose_mha_desc": 324, "kernel_kind": [324, 325, 368], "impl_list_": 324, "nullptr": [324, 326, 367], "kernel_proxi": 324, "dynamic_qu": 324, "dynamic_quant_matmul": 324, "eltwiseop": [324, 367, 368], "layernorm_ba": 324, "layernormalized_spmm": 324, "mha_dens": [324, 380], "slice": [324, 372], "sparse_matmul": [324, 377], "transpose_matmul": 324, "transpose_mha": 324, "kdp": 324, "rt_data": [324, 365], "size_t": [324, 326, 358, 368], "get_workspace_s": 324, "kd": [324, 335, 349], "sparse_matmul_desc_t": 324, "sparse_matmul_t": 324, "descriptor": [325, 362, 380], "ker_kind": [325, 365, 368], "kernel_prop": [325, 368], "ker_prop": [325, 365, 368], "eng_kind": [325, 365, 368], "tensor_desc": [325, 368], "ts_desc": [325, 365, 368], "unordered_map": [325, 368], "postop_attr": [325, 326, 368], "apply_postops_list": [325, 368], "rh": [325, 374], "set_binaryop_list": [325, 367], "binaryop_attr": [325, 326, 367], "binaryop_list": [325, 367], "uint64_t": 325, "impl_nthr": 325, "get_binaryop_list": [325, 367], "ker_kind_": [325, 368], "ker_prop_": [325, 368], "forward_infer": [325, 362, 368], "undef": [325, 326, 367, 368], "impl_nthr_": [325, 368], "ts_descs_": [325, 368], "attrs_": [325, 368], "apply_postops_list_": [325, 368], "binaryop_list_": [325, 367], "enum": [326, 367, 368], "attention_io": 326, "merge_src": 326, "merge_dst": 326, "q_weight": 326, "k_weight": 326, "v_weight": 326, "q_bia": 326, "k_bia": 326, "v_bia": 326, "q_scale": 326, "k_scale": 326, "v_scale": 326, "reshape_input": 326, "q_k_src2": 326, "q_k_scale": 326, "qk_v_output_zero_point": 326, "qk_v_output_scal": 326, "ssd": [326, 368, 380], "eltwiseop_param_t": [326, 368], "element_num": [326, 368], "data_typ": [326, 362, 367, 368, 380], "in_dt": 326, "out_dt": 326, "element_num_each_th": 326, "remain_el": 326, "eltwiseop_data_t": 326, "dst": [326, 362, 367, 368, 370, 371, 372, 375, 376, 380], "gather_param_t": 326, "dt": [326, 367, 368], "dt_size": 326, "int64_t": 326, "extend_mask": 326, "src_axis_s": 326, "dst_axis_s": 326, "src_size": 326, "idx_siz": 326, "outer_s": 326, "inner_s": 326, "binary_ts_s": 326, "gather_data_t": 326, "binaryop_addr": [326, 367], "16": [326, 336, 350, 351, 356, 364, 370, 371, 372, 373, 376, 377, 378, 380, 387], "spec_translnorm_typ": 326, "normal": [326, 367, 375, 394], "layernorm_ba_param_t": 326, "input_dt": [326, 367, 380], "output_dt": [326, 380], "output2_dt": 326, "spec_typ": [326, 380], "row_num": 326, "col_num": 326, "process_col": [326, 367], "direct_process_row": 326, "process_batch_per_k": 326, "ker_per_batch": 326, "batch_num": 326, "thread_elt_offset": [326, 367], "split_output": 326, "layernorm_ba_data_t": 326, "dst2": 326, "process_row": 326, "anonym": 326, "ep": 326, "1e": 326, "matmul_param_t": 326, "dim_t": 326, "m_tile": 326, "n_tile": 326, "matmul_fp8_param_t": 326, "bfloat16_t": 326, "weight_bf16": 326, "int8_t": 326, "weight_int8": 326, "float8_t": 326, "weight_fp8": 326, "weight_typ": 326, "has_gelu": 326, "thread_num": 326, "matmul_data_t": 326, "src0": [326, 380], "src1": [326, 357, 367, 380], "src2": [326, 367, 380], "matmul_u8_data_t": 326, "uint8_t": [326, 367, 368], "zp": [326, 367], "matmul_fp8_data_t": 326, "mata": 326, "matb": 326, "matc": 326, "matd": 326, "astep": 326, "bstep": 326, "cstep": 326, "dstep": 326, "kpo": 326, "matmul_io": 326, "io": [326, 362], "dst0": 326, "scale0": 326, "zp0": 326, "matmul_io_max": 326, "mean_var_reduce_param_t": 326, "bm": 326, "bn": 326, "mean_var_reduce_data_t": 326, "mean_in": 326, "var_in": 326, "mean_out": 326, "var_out": 326, "spec_softmax_typ": 326, "lut": [326, 365, 367, 368, 380], "softmax_param_t": 326, "sepc_typ": 326, "scalar_num": 326, "vec_align_len": 326, "vec_tail_len": 326, "vec_num_per_thr": 326, "vec_num_tail_thr": 326, "get_lut_exp_attr": 326, "softmax_data_t": 326, "tmp": [326, 368, 370, 372, 375], "process_vec_num": 326, "typedef": 326, "amx_params_t": 326, "amx_bf16_params_t": 326, "amx_int8_params_t": 326, "amx_inputs_t": 326, "amx_bf16f32_inputs_t": 326, "amx_bf16bf16_inputs_t": 326, "sparse_schem": 326, "scenario": [326, 347, 372], "spmm_vnni": 326, "sparse_x_dens": 326, "dense_x_spars": 326, "sparse_x_spars": 326, "subfunc_level": [326, 380], "non_kdim": 326, "kdim": 326, "subfunc_level_max": [326, 380], "constexpr": 326, "wei": [326, 372, 380], "todo": [326, 389], "yi": 326, "conflict": 326, "dst_m1": 326, "dst_m2": 326, "work_spac": 326, "vnni_param_t": 326, "spmm_type": 326, "primit": [326, 362], "jit_domain": 326, "has_bia": 326, "append_sum": 326, "output_typ": [326, 357], "tile_w": 326, "sub_func": 326, "im_start": 326, "blocksiz": 326, "indptr": 326, "welford": [326, 373], "dst_t": 326, "vnni_data_t": 326, "ptr_dens": 326, "int32_t": 326, "ptr_bia": 326, "ptr_dst": 326, "ptr_scale": 326, "ptr_dst_m1": 326, "ptr_dst_m2": 326, "num_tilem": 326, "tilem": 326, "tilen": 326, "blocks_per_group": 326, "64": [326, 335, 353, 357, 364, 372, 374, 375, 377, 378, 380], "sizeof": 326, "nnz_group": 326, "nrowptr": 326, "colidx": 326, "group_rowptr": 326, "same_src_dtyp": 326, "src_t": 326, "wgt_t": 326, "bia_t": 326, "avx512_fp32_params_t": 326, "bsc_data_t": 326, "sparse_ptr": 326, "im_end": 326, "in_start": 326, "in_end": 326, "avx512_data_t": 326, "transpose_copy_param": 326, "srcptr": 326, "dstptr": 326, "srcstride": 326, "dststride": 326, "seq_vnni_copy_param": 326, "transpose_mha_step1_param": 326, "expsum": 326, "cfg": 326, "batchk": [326, 375], "sumstep": 326, "cbatchstep": 326, "scaleab": 326, "transpose_mha_step2_param": 326, "sumptr": 326, "transpose_mha_step3_param": 326, "scalec": 326, "zeropointc": 326, "transpose_mha_io": 326, "src_k": 326, "src_q": 326, "src_v": 326, "tmp2m": 326, "sl_pad": 326, "head_num": [326, 374, 380], "head_siz": [326, 374, 380], "seq_len": [326, 348, 356, 357, 361, 374, 380], "scale_q": 326, "scale_k": 326, "scale_v": 326, "scale_dst": 326, "zp_dst": 326, "transpose_mha_io_max": 326, "arch": 335, "proposit": 335, "promis": [335, 371], "assess": 335, "128": [335, 348, 356, 357, 361, 364, 378, 380, 387], "advisor": 335, "ever": 335, "student": [335, 349, 350], "minim": [335, 349, 376], "done": [335, 349, 358, 372, 380, 387], "z": [335, 349], "distanc": [335, 349], "euclidean": [335, 349], "kullback": [335, 349], "leibler": [335, 349], "diverg": [335, 349], "assign": 335, "cal": 335, "sloss": 335, "mismatch": 335, "512": [335, 357, 371, 373, 376, 378, 380], "desir": [335, 357], "unmatch": 335, "agent": 335, "train_func_builtin": 335, "flash_distil": 335, "eval_func_builtin": 335, "els": [335, 336, 355, 362], "search_loop": 335, "model_arch_para": 335, "oob": 335, "246": 335, "intra_bottleneck_s": 335, "96": [335, 364, 378], "160": [335, 364, 377], "num_attention_head": 335, "intermediate_s": 335, "640": 335, "num_feedforward_network": 335, "mobilebert": [335, 349, 350], "kl": 335, "mse": 335, "best_model_arch": 335, "automodelforpretrain": 335, "higher_is_bett": 335, "10": [335, 347, 348, 353, 356, 357, 364, 370, 378, 380], "42": [335, 364, 378], "500": 335, "25000": 335, "mobilebert_distil": 335, "sgd": 335, "learning_r": 335, "001": 335, "mobilebert_na": 335, "5000": 335, "partial": 335, "pylint": [335, 346], "disabl": [335, 345, 364, 378, 380], "e1101": 335, "makedir": 335, "exist_ok": 335, "120": [335, 377], "240": 335, "eval_loss": [335, 352], "tfautomodelforsequenceclassif": 335, "physic": [336, 345, 374], "model_nam": [336, 385], "dataset_nam": 336, "autotoken": [336, 348, 385], "load_dataset": [336, 347, 348], "195": 336, "intel_extension_for_transform": [336, 348, 349, 352, 353, 355, 356, 358, 360, 363, 365, 380, 383, 384, 385, 386, 387], "summari": 336, "003": 336, "throughput": [336, 348, 364, 372], "5071": 336, "933": [336, 364], "guid": [339, 348, 349, 355, 368, 370, 392], "formerli": [340, 348, 353, 365, 393], "known": [340, 348, 365, 393], "sparselib": [340, 358, 365, 393], "high": [340, 348, 356, 365, 372, 373, 376, 393], "assembli": [340, 365, 369, 371, 376, 377, 393], "introduc": [342, 346, 366, 367, 368, 369, 370, 372, 374, 375, 376, 387, 395], "who": [342, 345, 368, 395], "might": [342, 359, 395], "profil": [342, 395, 396], "intruct": [342, 395], "met": [342, 395], "request": [342, 348, 395], "interest": 345, "foster": 345, "open": [345, 347, 356, 360], "welcom": [345, 346], "maintain": [345, 346, 348, 359, 388], "particip": [345, 369], "harass": 345, "free": [345, 367, 380], "everyon": 345, "regardless": 345, "ag": 345, "bodi": [345, 374], "ethnic": 345, "sex": 345, "gender": 345, "express": 345, "educ": 345, "socio": 345, "econom": 345, "statu": [345, 384, 387], "nation": 345, "person": 345, "appear": 345, "race": 345, "religion": 345, "sexual": 345, "orient": 345, "contribut": 345, "inclus": 345, "Being": 345, "viewpoint": 345, "gracefulli": 345, "critic": 345, "focus": 345, "empathi": 345, "unaccept": 345, "imageri": 345, "unwelcom": 345, "troll": 345, "insult": 345, "derogatori": 345, "comment": 345, "polit": 345, "attack": 345, "electron": 345, "permiss": 345, "reason": [345, 359, 362, 373], "consid": [345, 358, 366, 368, 370, 381], "inappropri": 345, "profession": 345, "clarifi": 345, "appropri": [345, 355, 367, 375], "fair": 345, "action": 345, "edit": 345, "reject": 345, "wiki": 345, "align": [345, 366, 368, 376], "ban": 345, "temporarili": 345, "perman": 345, "threaten": 345, "offens": 345, "harm": [345, 376], "offici": 345, "mail": 345, "post": [345, 357, 380], "via": [345, 367, 370, 377], "social": 345, "media": 345, "act": [345, 371], "appoint": 345, "onlin": [345, 348, 373], "offlin": [345, 370, 376, 387], "event": 345, "further": [345, 352, 358, 371], "abus": 345, "report": [345, 346, 348], "contact": [345, 388], "complaint": 345, "review": [345, 346], "investig": [345, 376], "circumst": 345, "team": 345, "oblig": 345, "confidenti": 345, "regard": 345, "incid": 345, "polici": [345, 392], "good": [345, 369, 370], "faith": 345, "temporari": [345, 374], "repercuss": 345, "leadership": 345, "faq": 345, "page": [345, 346, 348, 352], "send": 346, "flake8": 346, "autopep8": 346, "clean": 346, "bug": [346, 348], "jira": 346, "ticket": 346, "xxx": [346, 348], "risk": 346, "pr": [346, 380], "reproduc": 346, "submit": [346, 348], "intend": 346, "safe": 346, "collabor": 346, "adher": 346, "tool": [347, 348, 350, 357, 365, 380], "integr": [347, 396], "lab": 347, "pip": [347, 348, 353, 361], "clone": [347, 348, 353, 354, 355], "cd": [347, 348, 353, 354, 355, 356, 361, 365, 377, 380], "submodul": [347, 348, 353, 354, 356], "recurs": [347, 348, 353, 354, 356, 363], "dev": 347, "data_fil": 347, "delimit": [347, 380], "asserttru": 347, "len": [347, 355, 356, 363, 374], "column": [347, 366, 371, 373, 376, 386], "conduct": 347, "deploy": [347, 348, 352, 358, 361], "ocraug": 347, "spellingaug": 347, "contextualwordembsforsentenceaug": 347, "xl": 347, "xlnet": [347, 350], "Not": [347, 371], "enough": [347, 372, 387], "rescu": 347, "natur": [347, 348, 350, 373], "sst": [347, 348, 350, 352, 385], "txt": [347, 348, 353, 356, 358, 361, 377], "w": [347, 356, 357, 358, 366, 369, 375], "fw": 347, "clm": [347, 350], "train_fil": 347, "validation_fil": 347, "model_dir": 347, "python3": [347, 354], "run_clm": 347, "do_train": 347, "do_ev": 347, "overwrite_output_dir": 347, "secondli": 347, "training_set": 347, "line": [347, 355, 358, 366, 373, 374, 376, 381], "repetit": 347, "penalti": 347, "platform": [348, 379, 387], "particularli": 348, "gen": [348, 368], "imag": [348, 350, 360, 363, 370, 376], "becom": [348, 359, 376], "wide": [348, 349, 368, 369, 387], "art": 348, "popular": 348, "visit": [348, 364, 378], "skylak": 348, "cascad": [348, 353], "lake": [348, 353], "ic": 348, "cooper": [348, 372], "seri": [348, 367, 370, 380], "hbm": 348, "develop": [348, 362], "easi": [348, 358, 360], "rich": 348, "demonstr": [348, 350, 352, 374, 376], "extrem": [348, 352], "significantli": [348, 373, 375], "cento": [348, 353], "ubuntu": [348, 353, 364, 378], "04": [348, 350, 353, 364, 378], "window": [348, 354], "r": [348, 353, 361, 364, 378, 387], "succeed": 348, "grep": 348, "matrix": [348, 352, 366, 369, 370, 371, 373, 374, 375, 376, 380, 386, 390], "23": [348, 370, 378], "load_metr": 348, "np": 348, "automodelforsequenceclassif": [348, 352], "evalpredict": 348, "english": [348, 350, 352, 385], "lambda": 348, "label2id": [348, 352], "id2label": [348, 352], "neg": [348, 352, 380], "pred": 348, "argmax": [348, 352], "label_id": 348, "q_config": [348, 352, 387], "eval_accuraci": [348, 349, 352, 386], "tmp_trainer": 348, "enable_executor": [348, 351], "neural_engin": [348, 352, 354, 355, 356, 357, 358, 360, 363, 365, 380], "set_log_fil": 348, "load_graph": 348, "dummydataload": 348, "compute_perform": 348, "glog_minloglevel": [348, 356, 361], "input_model": [348, 357, 360, 361], "warm_up": 348, "p50": 348, "50": [348, 377], "p90": 348, "90": [348, 350, 357, 364], "p99": 348, "99": [348, 350, 378], "sec": [348, 364], "tutori": [348, 356], "resourc": [348, 349, 369], "catalog": 348, "brand": [348, 382], "claim": [348, 382], "properti": [348, 356, 382], "trademark": 348, "larg": [349, 350, 363, 364, 366, 369, 372, 373, 374, 380], "signific": 349, "expens": 349, "deploi": [349, 396], "power": [349, 350], "mobil": 349, "shown": [349, 358, 371, 375, 376], "produc": [349, 376], "instruct": [349, 359, 367, 370, 372, 375, 376, 377, 380, 387], "besid": [349, 368], "often": 349, "patient": 349, "compact": 349, "agnost": 349, "summar": [349, 350], "usual": [349, 359, 366, 376, 387], "1x1": [349, 358], "d_conf": [349, 352], "tune_metr": [349, 386], "metric_": 349, "classifi": 349, "distillation_conf": 349, "distilled_model": 349, "intermediatelayersloss": 349, "meanwhil": [350, 366], "posttrainingdynam": [350, 351, 387], "wikitext": 350, "10004": [350, 351], "xsum": 350, "cnn": 350, "cnn_dailymail": 350, "dm": 350, "lambdalab": 350, "sd": 350, "pokemon": 350, "mlm": 350, "plm": 350, "eleutherai": 350, "neo": 350, "125m": 350, "sshleifer": 350, "wip": [350, 370], "star": 350, "ehdwns1516": 350, "uncased_swag": 350, "swag": 350, "squad": 350, "valhalla": 350, "longform": 350, "4096": [350, 378], "squadv1": 350, "lvwerra": 350, "pegasu": 350, "samsum": 350, "textattack": [350, 360], "mrpc": [350, 360, 361], "echarlaix": 350, "acc91": 350, "d37": 350, "hybrid": 350, "elast": 350, "conll03": 350, "conll2003": 350, "small": [350, 358, 372, 374], "translat": 350, "wmt16": 350, "helsinki": 350, "opu": 350, "mt": [350, 379], "en": 350, "ro": 350, "quantizationawaretrain": [350, 351], "maskinun": 350, "distilgpt2": 350, "rocketknight1": 350, "dslim": 350, "ner": 350, "mb": 350, "f1": [350, 383], "gflop": [350, 378, 381], "speedup": 350, "compar": [350, 366, 369, 380, 387], "415": [350, 364], "47": [350, 364, 378], "88": [350, 364, 377, 378], "58": [350, 378], "56": [350, 377, 378], "35": [350, 364, 378], "1x": 350, "la": [350, 369], "minilmv2": 350, "115": 350, "89": [350, 378], "28": [350, 364, 370, 378], "76": [350, 377, 378], "33x": 350, "269": 350, "253": 350, "252": [350, 377], "202": 350, "104": 350, "34": [350, 378], "87": [350, 378], "11": [350, 353, 361, 370, 378], "44": [350, 357, 364, 377, 378], "49": [350, 363, 364, 378], "94x": 350, "84": [350, 378], "85": [350, 364, 378], "21x": 350, "315": 350, "251": [350, 378], "242": [350, 364, 378], "159": [350, 377], "142": [350, 378], "33": [350, 378], "86": [350, 378], "68": [350, 377, 378], "41": [350, 364, 378], "55": [350, 377, 378], "82x": 350, "amount": [350, 369], "torchprofil": 350, "platinum": [350, 364, 378], "8280": 350, "unstructur": [350, 386], "nbsp": [350, 364, 378], "qnli": 350, "qqp": 350, "mnli": 350, "v1": 350, "tinybert_general_4l_312d": 350, "distilroberta": 350, "cola": 350, "krishna2020": 350, "googl": 350, "wikipedia": 350, "prajjwal1": 350, "approch": 350, "pruneofa": 350, "patternlock": [350, 386], "bhadresh": 350, "savani": 350, "emot": 350, "fac": 350, "mini": [350, 357, 361, 364], "gchhablani": 350, "philschmid": 350, "l6": 350, "h384": 350, "moshew": [350, 361], "80": [350, 357, 364, 378], "1x4": [350, 376], "desigh": 351, "32": [351, 356, 364, 370, 371, 373, 374, 375, 376, 377, 378, 380], "bit": [351, 352, 366, 367, 373, 376, 387], "bfloat": 351, "fetch": [351, 366, 369], "flag": 351, "enable_bf16": 351, "bfloat16": 351, "qlinear": [351, 360], "u8s8": 351, "u8u8": 351, "highli": 351, "suggest": [351, 367], "quick": [352, 355], "p_conf": [352, 386], "reduct": [352, 371, 374], "accommod": 352, "budget": 352, "tradeoff": [352, 370], "dynamic_length_config": 352, "aim": [352, 355, 357, 359], "opportun": 352, "hw": 352, "sw": 352, "satisfi": [353, 363, 372], "success": 353, "recommend": [353, 355, 358, 361, 363, 373, 377], "protobuf": [353, 361], "nightli": 353, "conda": [353, 361], "visual": 353, "studio": 353, "compat": 353, "icelak": 353, "futur": [353, 360, 367, 368, 377], "ipex": [353, 387], "13": [353, 364, 370, 378], "linux": 354, "gcc": 354, "cmake": [354, 356, 365, 377, 380], "repo_path": 354, "mkdir": [354, 356, 365, 377, 380], "dpython_execut": 354, "dne_with_sparselib": [354, 380], "neural_engine_bin": 354, "neural_engine_pi": [354, 358], "cpython": 354, "37m": 354, "x86_64": 354, "gnu": 354, "libkernellib": 354, "libneural_engin": 354, "pure": [354, 368], "certain": [355, 363], "simplifi": [355, 359], "attach": [355, 363], "distilbert_bas": 355, "assum": [355, 363, 369], "command": [355, 356, 360, 381], "repo": [355, 380], "instal": [355, 392], "These": [355, 359, 363, 369, 375], "roughli": [355, 372], "divid": [355, 363, 366, 371, 372, 375, 381], "categori": [355, 357], "dst_shape": [355, 356, 362], "father": 355, "keep_dim": 355, "ax": [355, 374], "come": 355, "rewrit": 355, "_attr": 355, "successfulli": [355, 363], "forget": [355, 359, 362], "reinstal": 355, "enter": 355, "you_work_dir": 355, "noth": [355, 363], "wrong": [355, 363], "anoth": [355, 359, 377], "correctli": 355, "distil_bert_bas": 355, "pattern_mapping_config": 355, "div": [355, 359], "even": [355, 366], "delv": 355, "recogn": [355, 396], "put": [355, 356, 359], "namedtupl": 355, "__call__": 355, "retriev": 355, "actual": [355, 356, 373], "equival": [355, 376], "supported_pattern": 355, "influenc": [355, 359], "arbitrari": 355, "pattern_dict": 355, "new_node_nam": 355, "ret_old_nod": 355, "talk": 355, "denomin": 355, "numer": [355, 387], "stabil": 355, "_set_attr": 355, "ln_node_idx": 355, "meet": [355, 370, 372, 376], "finish": [355, 359, 361], "yourself": [355, 363], "seq": [356, 374], "bert_model": 356, "30522": 356, "1024": [356, 357, 358, 378, 380], "125018112": 356, "slightli": 356, "activ": [356, 360, 361, 366, 370, 371, 372, 375, 380, 387], "throught": 356, "numactl": 356, "bind": 356, "omp_num_thread": 356, "session": 356, "close": 356, "again": [356, 373], "nerual": 356, "cc": 356, "cmakelist": 356, "reus": [356, 372], "engine_integr": 356, "itrex": 356, "cp": 356, "nlp_executor": 356, "neural_engine_exampl": 356, "ne": 356, "root": 356, "ne_root": 356, "project_source_dir": 356, "link": [356, 362, 386], "lib": 356, "runtime_output_directori": 356, "add_execut": 356, "target_include_directori": 356, "boost_inc_dir": 356, "target_link_librari": 356, "cmake_thread_libs_init": 356, "gflag": 356, "dir": 356, "set_target_properti": 356, "analyz": 357, "let": [357, 362, 369, 370], "readm": [357, 360], "run_executor": [357, 361], "model_and_token": [357, 360, 361], "Of": [357, 363, 369], "cours": [357, 363, 369], "proflil": 357, "latanc": 357, "perf": [357, 376, 380, 381], "perfrom": 357, "chrome": 357, "tell": [357, 359, 367, 368], "inst": 357, "pref": 357, "semi": 357, "70": [357, 364], "256x256": [357, 380], "settabl": 357, "256x1024": 357, "1024x256": 357, "gelu_tanh": [357, 362], "add_37": 357, "116": [357, 378], "641": 357, "00": 357, "075": 357, "0375": 357, "comparison": [357, 376], "185": 357, "801": 357, "693": 357, "366": 357, "content": 357, "part1": [357, 362], "modif": 357, "xlsx": 357, "titl": [357, 382], "model_infer": 357, "friendli": [357, 372, 373], "000": 357, "wall": 357, "durat": 357, "17": [357, 364, 370, 378], "138": 357, "iteration4": 357, "726": 357, "phrase": 357, "0m": 357, "perm": [357, 374], "add_284": 357, "028": [357, 378], "044": 357, "reshape_tim": 357, "004m": 357, "forward_tim": 357, "044m": 357, "input_tensor_nam": 357, "matmul_357": 357, "matmul_358": 357, "matmul_346": 357, "input_typ": 357, "f32": [357, 362], "input_shap": [357, 358, 380], "output_tensor_nam": 357, "output_shap": 357, "append_op": 357, "src1_perm": 357, "try": [358, 387], "pictur": [358, 366, 379], "bring": [358, 371, 375, 376], "merg": [358, 363], "off": 358, "model_path": 358, "isa": [358, 365, 367, 372, 375, 376, 377], "int8_model_path": 358, "shape_0": 358, "shape_1": 358, "shape_2": 358, "enlarg": 358, "subsequ": [358, 372, 375], "remark": 358, "micro": [358, 366, 371, 376], "oc": [358, 380], "mk": 358, "kn": 358, "nhwc": 358, "nxhxw": 358, "h": 358, "nk": 358, "km": 358, "mmkmb": 358, "mmxmb": 358, "fulfil": 358, "omp": 358, "higher": [358, 374, 376, 380, 387], "unrol": [358, 369, 371], "know": [358, 370], "disk": [358, 360], "dp": 358, "executionopt": 358, "enable_op_tun": 358, "execution_opt": 358, "engine_dispatch_t": 358, "workspac": 358, "tabl": [358, 368, 376], "row": [358, 369, 370, 372, 376, 386], "rest": [358, 359, 363, 374, 376], "hash": [358, 367], "kernel_config": [358, 380], "kernel_nam": [358, 380], "3025159985633461085": 358, "40": [358, 364], "14124194128933833351": 358, "thing": 358, "affect": [358, 372, 375, 381], "simul": [358, 376, 377], "warmup_it": 358, "num_iter": 358, "dispatch_table_file_root": 358, "file_root": 358, "script": [358, 360, 379], "prevent": 358, "imprecis": 358, "purpos": [359, 363, 367, 372], "realiz": 359, "suppli": [359, 363], "recognit": [359, 363], "embeddings_reshap": 359, "said": 359, "thought": 359, "st": 359, "nd": 359, "copi": [359, 374], "greater": [359, 383, 384], "sent": 359, "written": 359, "phenomenon": 359, "Its": 359, "situat": [359, 373], "nod": 359, "leav": [359, 374, 376, 380], "old_node_index": 359, "_get_pattern_info": 359, "_create_out_pattern": 359, "_replace_pattern": 359, "emitt": 360, "netron": 360, "bash": [360, 361], "prepare_model": [360, 361], "sh": [360, 361, 381], "ptq": 360, "ir_path": 360, "focu": [361, 374, 383], "home": 361, "distilbert_base_uncas": 361, "env": 361, "prepare_dataset": 361, "shell": 361, "tokenizer_dir": 361, "data_dir": 361, "geluoper": 362, "destructor": 362, "operatorconfig": 362, "algorithm_": 362, "eng_": 362, "eltwise_forward": 362, "gelu_p_": 362, "src_m_": 362, "dst_m_": 362, "attrs_map": 362, "operator_conf_": 362, "becuas": 362, "src_shape": 362, "dst_tensor_ptr": 362, "set_shap": 362, "stride": [362, 366], "src_stride": 362, "getstrid": 362, "dst_stride": 362, "desc": [362, 367, 368], "src_md": 362, "dst_md": 362, "part2": 362, "gelu_algorithm": 362, "gelu_erf": 362, "eltwise_gelu_erf": 362, "eltwise_gelu_tanh": 362, "gelu_d": 362, "prop_kind": 362, "primitive_desc": 362, "gelu_pd": 362, "unrefernc": 362, "manag": 362, "strictli": 362, "alia": 362, "src_data": 362, "dst_data": 362, "mutable_data": 362, "data_ptr": 362, "stream": 362, "set_data_handl": 362, "const_cast": 362, "reinterpret_cast": 362, "memory_args_": 362, "dnnl_arg_src": 362, "dnnl_arg_dst": 362, "unref": 362, "unref_tensor": 362, "especi": [362, 376], "int8_lut_optim": 362, "int8_lut_acc_test": 362, "set_dtyp": 362, "register_operator_class": 362, "rule": 363, "recruit": 363, "ln_pattern": 363, "grow": 363, "concis": 363, "intuit": [363, 372], "choos": 363, "prefer": [363, 374], "longer": 363, "ones": 363, "op_type1": 363, "op_type2": 363, "type1": 363, "type2": 363, "elig": 363, "a_node_name_1": 363, "b_node_name_1": 363, "c_node_name_1": 363, "a_node_name_2": 363, "b_node_name_2": 363, "c_node_name_2": 363, "a_node_name_n": 363, "b_node_name_n": 363, "c_node_name_n": 363, "bert_large_model_path": 363, "layer_0": 363, "layer_1": 363, "layer_2": 363, "afterward": 363, "volatil": 363, "incorrect": 363, "outcom": 363, "Or": 363, "exactli": 363, "screen": 363, "occur": [363, 366, 373], "alreadi": 363, "moment": 363, "varianc": [363, 373], "batchnorm": 363, "mul_1": 363, "mul_2": 363, "add_1": 363, "07": [364, 378], "8375c": [364, 378], "aw": [364, 378], "c6i": [364, 378], "12xlarg": [364, 378], "vari": [364, 378], "factor": [364, 378], "www": [364, 378], "batchsiz": 364, "2652": 364, "36": [364, 378], "513": 364, "lt": [364, 378], "50m": 364, "2181": 364, "43": [364, 378], "628": 364, "1719": 364, "91": [364, 378], "75": [364, 378], "1487": [364, 378], "255": [364, 375, 387], "1220": 364, "39": [364, 378], "143": 364, "1304": 364, "46": [364, 378], "066": 364, "1102": [364, 378], "870": 364, "487": 364, "750": 364, "82": [364, 377, 378], "690": [364, 378], "188": 364, "910": [364, 378], "921": [364, 378], "729": 364, "71": [364, 377, 378], "619": 364, "38": [364, 377, 378], "821": [364, 378], "499": 364, "429": [364, 377], "936": [364, 378], "680": 364, "318": [364, 378], "557": 364, "262": 364, "467": 364, "589": 364, "405": 364, "339": 364, "473": 364, "119": [364, 378], "389": 364, "945": [364, 378], "360": 364, "274": 364, "843": 364, "259": [364, 377, 378], "442": 364, "241": 364, "364": 364, "016": [364, 378], "303": 364, "266": 364, "45": [364, 378], "05": [364, 378], "221": 364, "973": 364, "112": [364, 378], "349": 364, "938": [364, 378], "275": [364, 377], "614": 364, "217": 364, "37": [364, 378], "039": 364, "301": 364, "166": 364, "033": 364, "320": 364, "769": 364, "263": 364, "724": [364, 378], "207": 364, "819": [364, 378], "181": 364, "021": 364, "979": [364, 378], "74": [364, 378], "235": 364, "63": [364, 378], "091": 364, "51": [364, 378], "914": [364, 378], "698": [364, 378], "905": [364, 378], "8972": 364, "076": [364, 378], "20m": 364, "7192": 364, "19": [364, 370, 378], "906": 364, "5482": 364, "509": 364, "4808": 364, "952": 364, "3678": 364, "409": 364, "4750": 364, "975": [364, 378], "3647": 364, "867": 364, "2921": 364, "587": [364, 378], "2576": 364, "18": [364, 370, 378], "768": [364, 378], "2131": [364, 378], "913": [364, 378], "2804": 364, "096": 364, "2263": 364, "037": 364, "1938": 364, "756": [364, 378], "1581": 364, "15": [364, 370, 371, 376, 378], "1409": 364, "015": 364, "2116": 364, "113": 364, "1777": 364, "972": [364, 378], "1474": 364, "392": 364, "1278": 364, "1137": 364, "752": 364, "1594": 364, "124": 364, "1347": [364, 378], "1126": 364, "993": [364, 378], "258": 364, "890": [364, 378], "877": [364, 378], "1319": 364, "1086": 364, "931": [364, 378], "545": 364, "833": 364, "332": [364, 378], "747": [364, 378], "141": 364, "1106": [364, 378], "31": [364, 370, 371, 378], "924": 364, "446": 364, "719": 364, "633": 364, "501": 364, "816": 364, "961": 364, "549": 364, "807": 364, "868": [364, 378], "701": [364, 378], "117": 364, "613": 364, "618": 364, "515": 364, "75384": 364, "989": 364, "1m": 364, "55628": 364, "917": 364, "49120": 364, "957": [364, 378], "41598": 364, "39218": 364, "31211": 364, "788": [364, 378], "28399": 364, "848": 364, "24910": 364, "966": 364, "20505": 364, "18575": 364, "865": 364, "25485": 364, "987": 364, "17468": 364, "16771": 364, "971": [364, 378], "16004": 364, "996": [364, 378], "13381": 364, "894": [364, 378], "13990": 364, "863": [364, 378], "13154": 364, "12535": 364, "12102": 364, "998": 364, "8426": [364, 378], "8736": 364, "8282": 364, "967": 364, "6659": 364, "898": [364, 378], "6477": 364, "6290": 364, "974": [364, 378], "8598": 364, "6449": 364, "935": [364, 378], "6263": [364, 378], "965": [364, 378], "6080": 364, "988": 364, "3684": 364, "817": [364, 378], "6246": 364, "978": 364, "6374": 364, "947": [364, 378], "6026": 364, "3300": [364, 378], "926": 364, "3226": 364, "6221": 364, "958": 364, "6322": 364, "6081": 364, "985": [364, 378], "3368": 364, "3264": 364, "distillbert": 364, "15460": 364, "296": 364, "10m": 364, "13129": 364, "363": 364, "11323": 364, "578": [364, 378], "10072": 364, "599": 364, "8689": 364, "7901": 364, "205": [364, 378], "6737": 364, "562": 364, "5440": 364, "904": [364, 378], "4920": 364, "786": [364, 378], "4460": 364, "053": 364, "5280": 364, "179": 364, "4339": 364, "244": [364, 377], "3634": [364, 378], "928": 364, "3255": 364, "211": [364, 378], "2928": 364, "197": [364, 378], "3681": 364, "527": [364, 378], "2965": [364, 378], "106": [364, 378], "2741": 364, "862": [364, 378], "2351": 364, "2150": 364, "282": 364, "2918": 364, "316": 364, "2505": [364, 378], "602": 364, "2010": [364, 378], "995": 364, "1872": 364, "609": [364, 378], "2409": 364, "983": 364, "1993": 364, "013": 364, "1671": [364, 378], "627": 364, "1484": 364, "1342": [364, 378], "1910": 364, "456": [364, 378], "1659": 364, "687": 364, "1293": 364, "245": [364, 378], "1230": 364, "798": 364, "1091": 364, "261": 364, "1627": 364, "908": 364, "1397": 364, "684": 364, "1130": 364, "1081": 364, "353": 364, "982": [364, 378], "187": [364, 377], "manufactur": [364, 378], "amazon": [364, 378], "ec2": [364, 378], "bio": [364, 378], "1021": [364, 378], "microcod": [364, 378], "0xd000331": [364, 378], "irq": [364, 378], "balanc": [364, 378], "xeonplatinum": 364, "90ghz": [364, 378], "9ghz": [364, 378], "5ghz": [364, 378], "thread": 364, "socket": [364, 378], "numa": [364, 378], "turbo": [364, 378], "frequencygovern": [364, 378], "workdir": 365, "dne_with_test": 365, "ON": [365, 380], "ut": [365, 368], "dne_with_sparselib_onli": [365, 380], "dne_with_sparselib_benchmark": [365, 380], "test_spmm_vnni_kernel": 365, "box": 365, "profl": [365, 377], "op_attr": [365, 367, 368, 374], "spmm_desc": 365, "spmm_kern": 365, "data0": 365, "data1": 365, "data2": 365, "data3": 365, "data4": 365, "vnni": [365, 366, 370, 374, 375, 378, 380, 387, 394], "amx": [365, 372, 375, 380, 394], "residu": 365, "avx512": [365, 366, 370, 387], "mha": [365, 394], "avx512f": [365, 374, 380, 394], "spmm": [366, 374, 380], "deeplearn": 366, "multipli": [366, 372, 376, 387], "adopt": [366, 371, 376], "modern": 366, "spatial": [366, 372], "program": [366, 382], "64byte": 366, "organ": 366, "associ": 366, "access": [366, 371, 372], "b1": 366, "b2": 366, "simd": [366, 367, 371], "evenli": 366, "discontinu": 366, "fulli": [366, 375, 376], "worst": 366, "veri": [366, 368, 369, 372], "miss": [366, 376], "frequent": 366, "destin": [366, 371, 374, 380], "l1": 366, "l2": [366, 372, 380], "perhap": 366, "mxk": [366, 380], "bxm": 366, "xk": 366, "bxkxm": 366, "2d": [366, 380], "respons": [366, 372, 373, 375], "frac": [366, 374], "dl": 367, "changeabl": 367, "operand": [367, 371], "horizont": 367, "overhead": [367, 373, 374, 375, 376], "move": 367, "binaryop_injector": 367, "postop": [367, 368, 380], "quit": 367, "eltwise_injector": [367, 368], "escap": [367, 368], "compute_vector": 367, "arithmet": 367, "brows": 367, "vpaddb": 367, "vaddp": 367, "unlik": 367, "ptr": [367, 368, 377], "static_addr": 367, "addr": 367, "binaryop_alg": 367, "per_channel_qu": 367, "per_channel_dequ": 367, "op_alg": [367, 368], "op_dt": 367, "alg": 367, "set_scal": 367, "set_zp": 367, "binary_injector_init": 367, "set_mask": 367, "reg64": [367, 368], "zmm": [367, 368, 371, 373, 376], "get_addr": 367, "broadcast": [367, 371, 376, 377, 380], "enable_mask": 367, "vector_comput": [367, 368], "bianryop": 367, "comput_vector": 367, "wrapper": 367, "jit_binary_injector": 367, "addr_typ": 367, "jit_gener": [367, 368], "opmask": [367, 368], "mov": [367, 377], "addr_ptr": 367, "zmm_src1": 367, "regexp": 367, "step1": [367, 368, 375], "binary_injector": 367, "step2": [367, 368, 375], "data_param": 367, "param_": [367, 368], "front": 367, "append_loop_len": 367, "zmm_byte_s": 367, "get_data_s": 367, "offset_exp": 367, "bianryop_attr_list": 367, "append_vec": 367, "binary_add": 367, "eltwis": 368, "tradit": 368, "obvious": [368, 369, 373], "useless": 368, "idea": [368, 376, 386], "xbyak": 368, "binari": [368, 375, 380, 394], "algo": 368, "aplha": 368, "sacl": 368, "postop_alg": 368, "int8_lut": 368, "postop_typ": 368, "mathemat": 368, "satur": 368, "round": [368, 387], "unus": 368, "\u03b1x": 368, "\u03b2": 368, "le": 368, "gt": 368, "eng_kind_": 368, "omp_get_max_thread": 368, "omp_get_num_proc": 368, "eltwise_injector_init": 368, "chian": 368, "escape_reg": 368, "escape_eras": 368, "eras": 368, "prepare_t": 368, "zmm_src": 368, "postop_idx": 368, "reg_idx": 368, "step0": 368, "jit_eltwiseop_t": 368, "assign_reg": 368, "eltwiseop_kd_t": 368, "op_desc_": 368, "params_": 368, "remain_task_mask": 368, "scratch_": 368, "r10": 368, "reg_src": 368, "addr_src": 368, "r15": [368, 377], "addr_dst": 368, "r14": [368, 377], "reg_param": 368, "rdi": [368, 377], "remain_element_num": 368, "rsi": 368, "getidx": 368, "alloc": [368, 369, 372], "rcx": 368, "rdx": 368, "rsp": 368, "step3": [368, 375], "preambl": 368, "load_param": 368, "vmovup": [368, 377], "postambl": 368, "fp32_gelu_attr": 368, "bf16_gelu_attr": 368, "push_back": 368, "gen_cas": 368, "data0_desc": 368, "postop_list": 368, "fp32_gelu": [368, 380], "fp32_exp": 368, "mask_mock1": 368, "reg64_mock1": 368, "zmm_mock1": 368, "fp32_exp_attr": 368, "data1_desc": 368, "bf16_gelu": 368, "bf16_exp": [368, 380], "bf16_exp_attr": 368, "dt1op1": 368, "dt2op2": 368, "hase": 368, "get_true_data": 368, "rf_data": 368, "your_kernel_log": 368, "apply_postop_list": 368, "unit_test_util": 368, "articl": [369, 387], "gpu": 369, "opencl": 369, "snippet": 369, "unintellig": 369, "__kernel": 369, "naive_gemm": 369, "__global": 369, "globalrow": 369, "get_global_id": 369, "globalcol": 369, "col": [369, 370, 373, 375], "over": [369, 371, 374], "acc": [369, 380, 381], "0f": 369, "mxn": [369, 375, 380], "2xk": 369, "redund": [369, 386], "asub": 369, "bsub": 369, "tile_gemm": 369, "get_local_id": 369, "get_group_id": 369, "__local": 369, "initialis": 369, "accumul": [369, 374, 376], "numtil": 369, "tiledrow": 369, "tiledcol": 369, "synchronis": 369, "barrier": 369, "clk_local_mem_f": 369, "full": [369, 382, 387], "white": 369, "figur": [369, 372, 373, 374, 376, 379], "half": [369, 375], "correspondingli": 369, "increas": 369, "workload": [369, 374], "localmemori": 369, "tight": 369, "ll": 369, "twice": [369, 375], "ping": 369, "pong": 369, "tidm": 369, "tidn": 369, "offsetm": 369, "offset": [369, 373, 374], "offsetn": 369, "areg": 369, "breg": 369, "wm": 369, "wn": 369, "lpta": 369, "tid": 369, "mod2": 369, "div2": 369, "tiledindex": 369, "indexa": 369, "indexb": 369, "veca": 369, "vecb": 369, "tt": 369, "pragma": 369, "tdpbf16p": 370, "16x32": 370, "32x16": 370, "FOR": [370, 371, 376], "TO": 370, "colsb": 370, "byte": [370, 376], "endfor": [370, 371, 376], "write_row_and_zero": 370, "zero_upper_row": 370, "zero_tileconfig_start": 370, "layout": [370, 373, 374, 375], "successor": 370, "1x16": [370, 376], "concaten": [370, 376, 380], "intrins": 370, "tileloadd": 370, "nonzero": 370, "vmovdqu32": 370, "consum": 370, "altern": [370, 376], "lot": 370, "disast": 370, "16x1": [370, 374], "greatli": [370, 375], "impact": 370, "fly": 370, "__m512i": 370, "_mm512_set_epi16": 370, "29": [370, 378], "27": [370, 378], "26": [370, 377, 378], "25": [370, 378, 380], "22": [370, 378], "21": [370, 378], "__m256i": 370, "lo": 370, "_mm256_loadu_epi": 370, "li": 370, "vec": 370, "_mm512_inserti32x8": 370, "_mm512_castsi256_si512": 370, "_mm512_permutexvar_epi16": 370, "_mm512_storeu_epi32": 370, "vfmadd": 371, "vfmadd231p": [371, 377], "degre": 371, "parallel": [371, 372, 373, 376, 380], "conting": 371, "bsc": 371, "variant": 371, "bsr": 371, "openmp": 371, "thu": [371, 387], "relief": 371, "bottleneck": [371, 373], "microkernel": 371, "peripher": 371, "implicit": 371, "technologi": 372, "among": [372, 375], "satisfactori": 372, "inevit": 372, "solv": [372, 373, 387], "facilit": [372, 375], "At": [372, 373, 375], "flexibl": 372, "divis": 372, "tdpbssd": 372, "tile_k": 372, "formula": 372, "max_tile_k": 372, "back": [372, 373, 374, 375], "extra": 372, "hope": 372, "large_wei_threshold": 372, "16xpad_n": 372, "buffer": [372, 373, 375], "tilestor": 372, "pseudo": 372, "tile_m": [372, 380], "16xn": 372, "dp_tile_n": 372, "k_dim_dp": 372, "write_tile_to_tmp_buf": 372, "dequantize_tile_on_tmp_buf": 372, "calculate_scale_on_tmp_buf": 372, "write_back_scal": 372, "quant_tile_n": 372, "quantize_on_tmp_buf": 372, "write_tile_to_dst": 372, "per_channel_dynamic_quant": 372, "desid": 372, "du": 372, "principl": 372, "possibl": 372, "premis": 372, "rate": [372, 373], "therebi": 372, "feel": [372, 380], "benefit": [372, 376, 387], "suitabl": 372, "chart": 372, "naiv": 373, "solut": [373, 376], "gap": 373, "layernrom": 373, "3d": [373, 394], "poor": 373, "fewer": 373, "wast": 373, "inconsist": 373, "scene": 373, "quarter": 373, "depict": 373, "protocol": 373, "bandwidth": [373, 375, 387], "gain": [373, 387], "brought": [373, 387], "majotr": 373, "layternorm": 373, "encapsul": 373, "ba": [373, 377, 380], "discret": 373, "append": [373, 380, 381], "overal": 373, "p2031": [374, 380], "2013": 374, "noperm": [374, 380], "p1302": [374, 380], "p2013": [374, 380], "equat": [374, 387], "dot": [374, 387], "rm": 374, "q": [374, 375], "v": [374, 375], "qk": 374, "textunderscor": 374, "nativ": 374, "sparelib": 374, "axis": 374, "conceptu": 374, "head_nun": 374, "perm2031": 374, "perm2013": 374, "perm1302": 374, "concept": [374, 376], "lh": 374, "float32": [374, 387], "illustr": 374, "inner": 374, "16x16": 374, "drawn": 374, "lighter": 374, "cell": [374, 376], "respectfulli": 374, "vnni_noperm_p2013_p1302": 374, "transpose_4b_8x8": 374, "legend": 374, "explan": 374, "contigu": 374, "ellipsi": 374, "thinner": 374, "border": 374, "bolder": 374, "color": [374, 376], "16x32x16": 374, "lead": [374, 376], "suboptim": 374, "piec": 374, "turn": 374, "boost": 374, "twofold": 374, "unifi": 374, "roll": 374, "logic": [375, 377], "worth": 375, "clear": 375, "fact": [375, 387], "spr": 375, "latter": 375, "2nd": 375, "clx": 375, "4x16": [375, 376], "launch": 375, "prior": 375, "iteraion": 375, "polynomi": 375, "essenti": 375, "incom": 375, "far": 375, "four": 376, "adjac": 376, "unsign": [376, 380], "sign": [376, 387], "tmp1": 376, "zeroextend16": 376, "signextend16": 376, "tmp2": 376, "tmp3": 376, "tmp4": 376, "dword": [376, 377], "transposit": 376, "discuss": 376, "typic": 376, "sai": 376, "4x4": 376, "pick": 376, "mxkxn": 376, "problem": [376, 380], "densiti": 376, "fma": 376, "bubbl": 376, "16x4": 376, "highlight": 376, "4x": 376, "talent": 376, "smart": 376, "gui": [376, 377], "swizzl": 376, "workaround": 376, "unfortun": 376, "difficulti": 376, "bad": 376, "cost": 376, "2x1": 376, "conclus": 376, "against": 376, "brief": 377, "sparse_lib_verbos": 377, "sparselib_verbos": 377, "nthr": 377, "224": [377, 378], "exec": 377, "shape_256_256_128": 377, "4658": [377, 378], "56982": 377, "itt": 377, "dne_with_sparselib_vtun": 377, "opt": 377, "latest": [377, 388], "manual": 377, "dcmake_vtune_hom": 377, "sparse_lib_vtun": 377, "ssh": 377, "analys": 377, "verifi": 377, "sparse_lib_dump": 377, "xed64": 377, "click": 377, "xdi": 377, "push": 377, "53": [377, 378], "rbx": 377, "rbp": 377, "4154": 377, "r12": 377, "4155": 377, "r13": 377, "4156": 377, "4157": 377, "dataxf": 377, "bd00040000": 377, "ebp": 377, "0x400": 377, "4c8b3f": 377, "qword": 377, "4c8b7708": 377, "0x8": 377, "4c8b6f10": 377, "0x10": 377, "1a": 377, "avx512evex": 377, "62f17d48efc0": 377, "vpxord": 377, "zmm0": 377, "62f15d48efe4": 377, "zmm4": 377, "62513d48efc0": 377, "zmm8": 377, "2c": 377, "62511d48efe4": 377, "zmm12": 377, "62f17548efc9": 377, "zmm1": 377, "62f15548efe": 377, "zmm5": 377, "3e": 377, "62513548efc9": 377, "zmm9": 377, "62511548efe": 377, "zmm13": 377, "4a": 377, "62f16d48efd2": 377, "zmm2": 377, "62f14d48eff6": 377, "zmm6": 377, "62512d48efd2": 377, "zmm10": 377, "5c": 377, "62510d48eff6": 377, "zmm14": 377, "62": [377, 378], "62c17c481006": 377, "zmm16": 377, "zmmword": 377, "62c17c48104e01": 377, "zmm17": 377, "0x40": 377, "6f": 377, "62c17c48105602": 377, "zmm18": 377, "0x80": 377, "62427d48183f": 377, "vbroadcastss": 377, "zmm31": 377, "7c": 377, "vfma": 377, "62927d40b8c7": 377, "62927540b8cf": 377, "62926d40b8d7": 377, "8e": 377, "62427d48187f04": 377, "95": [377, 378], "62927d40b8e7": 377, "9b": 377, "62927540b8ef": 377, "a1": 377, "62926d40b8f7": 377, "a7": 377, "62427d48187f08": 377, "0x20": 377, "ae": 377, "62127d40b8c7": 377, "b4": 377, "62127540b8cf": 377, "62126d40b8d7": 377, "c0": 377, "62427d48187f0c": 377, "0x30": 377, "c7": 377, "62127d40b8e7": 377, "62127540b8ef": 377, "62126d40b8f7": 377, "d9": 377, "62c17c48104603": 377, "0xc0": 377, "e0": 377, "62c17c48104e04": 377, "0x100": 377, "e7": 377, "62c17c48105605": 377, "0x140": 377, "ee": 377, "62427d48187f01": 377, "0x4": 377, "f5": 377, "fb": 377, "101": 377, "107": 377, "62427d48187f05": 377, "0x14": 377, "10e": 377, "114": 377, "11a": 377, "62427d48187f09": 377, "0x24": 377, "12d": 377, "133": 377, "139": 377, "62427d48187f0d": 377, "0x34": 377, "140": 377, "146": 377, "14c": 377, "152": 377, "62c17c48104606": 377, "0x180": 377, "62c17c48104e07": 377, "0x1c0": 377, "62c17c48105608": 377, "0x200": 377, "167": [377, 378], "62427d48187f02": 377, "16e": 377, "174": 377, "17a": 377, "180": 377, "62427d48187f06": 377, "0x18": 377, "18d": 377, "193": 377, "199": 377, "62427d48187f0a": 377, "0x28": 377, "1a0": 377, "1a6": 377, "1ac": 377, "1b2": 377, "62427d48187f0e": 377, "0x38": 377, "1b9": 377, "1bf": 377, "1c5": 377, "1cb": 377, "62c17c48104609": 377, "0x240": 377, "1d2": 377, "62c17c48104e0a": 377, "0x280": 377, "1d9": 377, "62c17c4810560b": 377, "0x2c0": 377, "1e0": 377, "62427d48187f03": 377, "0xc": 377, "1e7": 377, "1ed": 377, "1f3": 377, "1f9": 377, "62427d48187f07": 377, "0x1c": 377, "200": 377, "206": 377, "20c": 377, "212": 377, "62427d48187f0b": 377, "0x2c": 377, "219": [377, 378], "21f": 377, "225": 377, "22b": 377, "62427d48187f0f": 377, "0x3c": 377, "232": [377, 378], "238": 377, "23e": 377, "62d17c48114500": 377, "24b": 377, "62d17c48116503": 377, "62517c48114506": 377, "62517c48116509": 377, "260": 377, "62d17c48114d01": 377, "267": 377, "62d17c48116d04": 377, "26e": 377, "62517c48114d07": 377, "62517c48116d0a": 377, "27c": 377, "62d17c48115502": 377, "283": 377, "62d17c48117505": 377, "28a": 377, "62517c48115508": 377, "291": 377, "62517c4811750b": 377, "298": [377, 378], "pop": 377, "415f": 377, "29a": 377, "415e": 377, "29c": 377, "415d": 377, "29e": 377, "415c": 377, "2a0": 377, "5d": 377, "2a1": 377, "5b": 377, "2a2": 377, "avx": 377, "c5f877": 377, "vzeroupp": 377, "2a5": 377, "xed3": 377, "stat": 377, "cycl": 377, "29220": 377, "236418": 377, "118": 377, "2003": 377, "54": [377, 378], "00348609": 378, "601": 378, "00310676": 378, "675": 378, "00261406": 378, "802": 378, "00216633": 378, "968": 378, "068": 378, "00164658": 378, "1273": 378, "0112255": 378, "284": 378, "00947462": 378, "885": 378, "377": 378, "00764146": 378, "1097": 378, "78": 378, "0058452": 378, "1435": 378, "00407149": 378, "2060": 378, "0127448": 378, "658": 378, "198": 378, "0111132": 378, "754": 378, "835": 378, "00940157": 378, "892": 378, "00760217": 378, "1103": 378, "0054935": 378, "1527": 378, "044202": 378, "759": 378, "0364227": 378, "0292454": 378, "1147": 378, "0223472": 378, "1501": 378, "0149058": 378, "2251": 378, "216338": 378, "620": 378, "408": 378, "179593": 378, "345": 378, "135054": 378, "806": 378, "0946983": 378, "1417": 378, "0609701": 378, "2201": 378, "190508": 378, "704": 378, "526": 378, "159566": 378, "841": 378, "130863": 378, "1025": 378, "103927": 378, "1291": 378, "0739962": 378, "1813": 378, "0250395": 378, "753": 378, "784": 378, "0210726": 378, "895": 378, "682": 378, "0170987": 378, "0130778": 378, "1443": 378, "00923343": 378, "2044": 378, "3072": 378, "112882": 378, "668": 378, "818": 378, "0879386": 378, "858": 378, "525": 378, "068835": 378, "1096": 378, "79": 378, "0487342": 378, "1549": 378, "0317559": 378, "2377": 378, "109308": 378, "679": 378, "0922471": 378, "805": 378, "638": 378, "0759107": 378, "0558945": 378, "1329": 378, "61": 378, "0358752": 378, "2071": 378, "57": 378, "00565044": 378, "742": 378, "297": 378, "00503604": 378, "832": 378, "00447544": 378, "937": 378, "182": 378, "00368479": 378, "1138": 378, "00270954": 378, "1547": 378, "0183481": 378, "386": 378, "0154121": 378, "1088": 378, "0125696": 378, "1334": 378, "00959948": 378, "1747": 378, "72": 378, "00677631": 378, "2475": 378, "0206321": 378, "813": 378, "162": 378, "0184267": 378, "483": 378, "0164699": 378, "1018": 378, "66": 378, "0135801": 378, "1235": 378, "010552": 378, "1589": 378, "0721208": 378, "930": 378, "506": 378, "059613": 378, "1125": 378, "0483781": 378, "1387": 378, "0366748": 378, "1829": 378, "83": 378, "0248571": 378, "2699": 378, "376539": 378, "712": 378, "902": 378, "31929": 378, "840": 378, "727": 378, "261265": 378, "1027": 378, "193579": 378, "1386": 378, "118429": 378, "2266": 378, "309195": 378, "177": 378, "256619": 378, "1046": 378, "213454": 378, "1257": 378, "165192": 378, "1624": 378, "118402": 378, "2267": 378, "0402931": 378, "855": 378, "0341169": 378, "0275282": 378, "1371": 378, "0211298": 378, "1786": 378, "0150693": 378, "218765": 378, "215": 378, "180921": 378, "834": 378, "592": 378, "142778": 378, "1057": 378, "097692": 378, "1545": 378, "0620034": 378, "2435": 378, "174101": 378, "853": 378, "73": 378, "148369": 378, "1001": 378, "123554": 378, "1203": 378, "0923655": 378, "1609": 378, "0591283": 378, "2513": 378, "0074474": 378, "844": 378, "00657187": 378, "00570175": 378, "00483104": 378, "1302": 378, "00367406": 378, "1712": 378, "0247063": 378, "0207462": 378, "1213": 378, "03": 378, "0169214": 378, "0129936": 378, "1936": 378, "0090376": 378, "2784": 378, "0275881": 378, "912": 378, "0240415": 378, "77": 378, "0207876": 378, "1210": 378, "0177873": 378, "1414": 378, "0140129": 378, "1795": 378, "0994565": 378, "1012": 378, "0819725": 378, "1228": 378, "0660571": 378, "1523": 378, "0497077": 378, "2025": 378, "0341912": 378, "2944": 378, "500698": 378, "804": 378, "184": 378, "420619": 378, "287": 378, "337529": 378, "1192": 378, "94": 378, "251221": 378, "1602": 378, "158668": 378, "2537": 378, "412912": 378, "155": 378, "346369": 378, "1162": 378, "2831": 378, "1422": 378, "220585": 378, "1825": 378, "156168": 378, "2578": 378, "0538395": 378, "1051": 378, "0455066": 378, "1244": 378, "036978": 378, "1531": 378, "028483": 378, "1987": 378, "0200457": 378, "2824": 378, "283445": 378, "799": 378, "069": 378, "236101": 378, "959": 378, "302": 378, "188745": 378, "1199": 378, "135532": 378, "0845544": 378, "2678": 378, "227976": 378, "977": 378, "19463": 378, "1145": 378, "161251": 378, "1382": 378, "65": 378, "123585": 378, "1804": 378, "0840322": 378, "2653": 378, "00940534": 378, "891": 378, "00821985": 378, "1020": 378, "00701343": 378, "1196": 378, "08": 378, "00579899": 378, "1446": 378, "00464705": 378, "1805": 378, "0336342": 378, "997": 378, "629": 378, "0276086": 378, "1215": 378, "0224431": 378, "1495": 378, "09": 378, "0170807": 378, "1964": 378, "0117535": 378, "2854": 378, "0358603": 378, "0310083": 378, "1082": 378, "0260486": 378, "1288": 378, "0215163": 378, "1559": 378, "0170105": 378, "1972": 378, "133295": 378, "1006": 378, "92": 378, "111186": 378, "1207": 378, "0881114": 378, "0665519": 378, "2016": 378, "0454416": 378, "2953": 378, "611718": 378, "645": 378, "533329": 378, "430288": 378, "1247": 378, "307141": 378, "198987": 378, "2698": 378, "02": [378, 383], "556249": 378, "163": 378, "462737": 378, "1160": 378, "37537": 378, "1430": 378, "28321": 378, "1895": 378, "203901": 378, "2633": 378, "0716356": 378, "1053": 378, "0603517": 378, "1250": 378, "0490096": 378, "1540": 378, "0375683": 378, "2009": 378, "0267483": 378, "2822": 378, "3572": 378, "845": 378, "437": 378, "299561": 378, "1008": 378, "228752": 378, "1320": 378, "165648": 378, "1823": 378, "105656": 378, "2858": 378, "298907": 378, "994": 378, "529": 378, "255598": 378, "1163": 378, "20824": 378, "1427": 378, "159911": 378, "1858": 378, "111211": 378, "2673": 378, "0152997": 378, "685": 378, "358": 378, "0131446": 378, "797": 378, "0109669": 378, "956": 378, "132": 378, "00921101": 378, "00755406": 378, "1388": 378, "0553082": 378, "758": 378, "351": 378, "0458481": 378, "826": 378, "0367258": 378, "1142": 378, "06": 378, "027535": 378, "018464": 378, "2271": 378, "0597882": 378, "0510217": 378, "822": 378, "062": 378, "0421644": 378, "0333436": 378, "0296385": 378, "1415": 378, "22241": 378, "337": 378, "18324": 378, "915": 378, "145322": 378, "1154": 378, "1083": 378, "0728843": 378, "2301": 378, "11793": 378, "600": 378, "929398": 378, "722": 378, "720963": 378, "823": 378, "510039": 378, "1315": 378, "336519": 378, "1994": 378, "909941": 378, "737": 378, "508": 378, "753487": 378, "644": 378, "606477": 378, "459915": 378, "1459": 378, "303455": 378, "2211": 378, "123429": 378, "764": 378, "586": 378, "103035": 378, "923": 378, "0825026": 378, "1143": 378, "0625579": 378, "1508": 378, "0426942": 378, "2210": 378, "60813": 378, "734": 378, "483053": 378, "781": 378, "462": 378, "357348": 378, "1056": 378, "256715": 378, "1470": 378, "169119": 378, "2232": 378, "503341": 378, "738": 378, "42134": 378, "881": 378, "342843": 378, "255199": 378, "1456": 378, "174091": 378, "2134": 378, "0142667": 378, "0123966": 378, "1015": 378, "0105865": 378, "1188": 378, "00860835": 378, "1461": 378, "00655363": 378, "1919": 378, "0532543": 378, "0447548": 378, "1124": 378, "0348388": 378, "1444": 378, "0266886": 378, "1885": 378, "0177431": 378, "2836": 378, "69": 378, "0549107": 378, "916": 378, "608": 378, "0475549": 378, "1058": 378, "0401657": 378, "1253": 378, "0326952": 378, "1539": 378, "025032": 378, "220947": 378, "911": 378, "178324": 378, "1128": 378, "137361": 378, "1465": 378, "103126": 378, "1952": 378, "0701429": 378, "2870": 378, "06648": 378, "755": 378, "893959": 378, "900": 378, "831": 378, "718893": 378, "1120": 378, "537405": 378, "1498": 378, "280686": 378, "2869": 378, "902588": 378, "730678": 378, "582871": 378, "1381": 378, "444133": 378, "298489": 378, "2697": 378, "581": 378, "0955952": 378, "1184": 378, "078109": 378, "1449": 378, "0596185": 378, "1899": 378, "0414047": 378, "2735": 378, "596568": 378, "497127": 378, "396634": 378, "286973": 378, "1578": 378, "167473": 378, "2704": 378, "472466": 378, "943": 378, "787": 378, "391055": 378, "1140": 378, "319865": 378, "1394": 378, "247491": 378, "1801": 378, "169874": 378, "2624": 378, "93": 378, "0213786": 378, "686": 378, "67": 378, "018228": 378, "0152068": 378, "0120525": 378, "1218": 378, "0103961": 378, "1412": 378, "0771592": 378, "761": 378, "0642402": 378, "074": 378, "0514668": 378, "0387886": 378, "1513": 378, "0256871": 378, "2285": 378, "0836219": 378, "702": 378, "0712915": 378, "664": 378, "0589148": 378, "697": 378, "0484067": 378, "0411331": 378, "311691": 378, "569": 378, "256635": 378, "204973": 378, "153086": 378, "1534": 378, "101206": 378, "2320": 378, "59625": 378, "588": 378, "583": 378, "33246": 378, "705": 378, "03849": 378, "703": 378, "738939": 378, "1271": 378, "480308": 378, "1956": 378, "26056": 378, "745": 378, "324": 378, "04874": 378, "842936": 378, "1114": 378, "59": 378, "635554": 378, "1478": 378, "42145": 378, "2229": 378, "174215": 378, "375": 378, "145836": 378, "116701": 378, "1132": 378, "0876727": 378, "1506": 378, "0595001": 378, "2220": 378, "883258": 378, "598": 378, "333": 378, "711146": 378, "743": 378, "543634": 378, "129": 378, "402406": 378, "1313": 378, "266945": 378, "1979": 378, "70404": 378, "592043": 378, "878": 378, "695": 378, "475444": 378, "1094": 378, "358932": 378, "240739": 378, "2160": 378, "0184384": 378, "909": 378, "907": 378, "0158714": 378, "013504": 378, "1242": 378, "0109927": 378, "1526": 378, "00826017": 378, "2031": 378, "061272": 378, "1095": 378, "0609618": 378, "1100": 378, "0467291": 378, "1436": 378, "0340362": 378, "1971": 378, "0231282": 378, "2901": 378, "0717247": 378, "0616923": 378, "1087": 378, "0521595": 378, "1286": 378, "0423267": 378, "1585": 378, "0321109": 378, "2089": 378, "286461": 378, "242512": 378, "181783": 378, "1476": 378, "139021": 378, "1930": 378, "0870121": 378, "3085": 378, "36322": 378, "652": 378, "08991": 378, "880185": 378, "1219": 378, "694533": 378, "366328": 378, "2931": 378, "15748": 378, "927": 378, "937824": 378, "1144": 378, "745357": 378, "1440": 378, "558061": 378, "1924": 378, "391387": 378, "2743": 378, "157349": 378, "616": 378, "129806": 378, "103083": 378, "1464": 378, "0784417": 378, "053639": 378, "2815": 378, "767569": 378, "874": 378, "641585": 378, "941": 378, "387": 378, "488558": 378, "1236": 378, "355651": 378, "1698": 378, "230945": 378, "2615": 378, "611059": 378, "514108": 378, "1156": 378, "416571": 378, "318094": 378, "1869": 378, "225023": 378, "2642": 378, "0375093": 378, "564": 378, "0317602": 378, "0261888": 378, "1281": 378, "0211151": 378, "0158951": 378, "2110": 378, "141333": 378, "949": 378, "133647": 378, "1004": 378, "0999998": 378, "0710327": 378, "1889": 378, "52": 378, "0429916": 378, "3121": 378, "147474": 378, "125344": 378, "1070": 378, "104294": 378, "0849766": 378, "1579": 378, "0624729": 378, "2148": 378, "701639": 378, "765": 378, "534615": 378, "359791": 378, "1492": 378, "2612": 378, "2055": 378, "183193": 378, "2930": 378, "92067": 378, "735": 378, "271": 378, "4402": 378, "880": 378, "046": 378, "69186": 378, "1269": 378, "17436": 378, "1828": 378, "880179": 378, "2439": 378, "62123": 378, "264": 378, "14905": 378, "999": 378, "64253": 378, "1307": 378, "1413": 378, "1881": 378, "771439": 378, "2783": 378, "369429": 378, "451": 378, "288236": 378, "1047": 378, "209526": 378, "1441": 378, "148115": 378, "2038": 378, "106089": 378, "2846": 378, "53204": 378, "465": 378, "28593": 378, "939": 378, "368": 378, "0852": 378, "1113": 378, "685382": 378, "1762": 378, "408357": 378, "2958": 378, "4521": 378, "13466": 378, "853916": 378, "1392": 378, "642672": 378, "1850": 378, "446442": 378, "2663": 378, "0574189": 378, "876": 378, "0460811": 378, "1092": 378, "0389357": 378, "1292": 378, "031279": 378, "0234498": 378, "2146": 378, "204966": 378, "17364": 378, "1159": 378, "141097": 378, "1426": 378, "105192": 378, "1913": 378, "0677766": 378, "2970": 378, "21269": 378, "946": 378, "573": 378, "191564": 378, "1050": 378, "156368": 378, "1287": 378, "1565": 378, "0933565": 378, "2156": 378, "84983": 378, "789777": 378, "1019": 378, "598168": 378, "1346": 378, "433492": 378, "1857": 378, "269504": 378, "2988": 378, "74845": 378, "859": 378, "348": 378, "96945": 378, "811": 378, "505": 378, "77082": 378, "76407": 378, "1826": 378, "09719": 378, "2935": 378, "73162": 378, "00241": 378, "1072": 378, "39024": 378, "77317": 378, "1816": 378, "19536": 378, "2694": 378, "517278": 378, "875": 378, "708": 378, "382208": 378, "1185": 378, "317837": 378, "1425": 378, "233231": 378, "1942": 378, "152925": 378, "2962": 378, "44309": 378, "741": 378, "62409": 378, "1115": 378, "64963": 378, "1098": 378, "03923": 378, "1743": 378, "625089": 378, "2898": 378, "07006": 378, "861": 378, "632": 378, "64247": 378, "1085": 378, "33386": 378, "1337": 378, "994935": 378, "1792": 378, "68383": 378, "2608": 378, "0713578": 378, "940": 378, "0612457": 378, "0516788": 378, "1298": 378, "0414834": 378, "1617": 378, "0309886": 378, "2165": 378, "282241": 378, "951": 378, "085": 378, "238855": 378, "1123": 378, "193713": 378, "1385": 378, "146781": 378, "81": 378, "0938959": 378, "286141": 378, "122": 378, "257138": 378, "1043": 378, "214208": 378, "167575": 378, "1601": 378, "124072": 378, "2163": 378, "21431": 378, "884": 378, "237": 378, "955251": 378, "775294": 378, "1384": 378, "63282": 378, "1696": 378, "37333": 378, "2876": 378, "87335": 378, "317": 378, "65059": 378, "1176": 378, "94733": 378, "1457": 378, "62241": 378, "1637": 378, "47752": 378, "2906": 378, "75786": 378, "83024": 378, "889": 378, "87429": 378, "1108": 378, "87685": 378, "75328": 378, "2449": 378, "718776": 378, "289": 378, "561317": 378, "1076": 378, "429166": 378, "1407": 378, "317204": 378, "1904": 378, "208555": 378, "2896": 378, "94057": 378, "30458": 378, "1048": 378, "6702": 378, "25799": 378, "1920": 378, "84121": 378, "2871": 378, "34423": 378, "711": 378, "77444": 378, "857": 378, "10049": 378, "52509": 378, "926038": 378, "2568": 378, "00203027": 378, "1032": 378, "00198061": 378, "00179382": 378, "1169": 378, "00163713": 378, "1280": [378, 380], "00171023": 378, "1226": 378, "00395783": 378, "2119": 378, "00340452": 378, "2463": 378, "00308582": 378, "2718": 378, "00292684": 378, "2866": 378, "00217889": 378, "3849": 378, "00437142": 378, "1918": 378, "00418212": 378, "2005": 378, "00344785": 378, "2433": 378, "00291005": 378, "2882": 378, "00293671": 378, "2856": 378, "0120946": 378, "2774": 378, "0103377": 378, "3245": 378, "00850778": 378, "3943": 378, "00659512": 378, "5087": 378, "00484669": 378, "6923": 378, "0524509": 378, "2558": 378, "0428737": 378, "3130": 378, "0323642": 378, "4147": 378, "0231199": 378, "5805": 378, "0152199": 378, "8818": 378, "0451228": 378, "2974": 378, "0373823": 378, "3590": 378, "0302746": 378, "4433": 378, "023182": 378, "5789": 378, "0161696": 378, "8300": 378, "00731429": 378, "2580": 378, "00633179": 378, "2980": 378, "00535855": 378, "3522": 378, "00449335": 378, "4200": 378, "00341811": 378, "5521": 378, "0270028": 378, "2795": 378, "02197": 378, "3436": 378, "0177477": 378, "4253": 378, "0131335": 378, "5748": 378, "00897444": 378, "8412": 378, "0257188": 378, "2889": 378, "0218969": 378, "3393": 378, "0180933": 378, "4107": 378, "013742": 378, "5408": 378, "00992419": 378, "7488": 378, "00289114": 378, "1450": 378, "00245821": 378, "00252331": 378, "1662": 378, "00226557": 378, "1851": 378, "00180316": 378, "2326": 378, "00578904": 378, "00500361": 378, "3353": 378, "0042401": 378, "3956": 378, "00350486": 378, "4786": 378, "00297233": 378, "5644": 378, "00693265": 378, "2420": 378, "00593063": 378, "2828": 378, "00526697": 378, "3185": 378, "00480098": 378, "3494": 378, "00385131": 378, "4356": 378, "0193516": 378, "3467": 378, "0166254": 378, "4036": 378, "0132869": 378, "5050": 378, "0106293": 378, "6313": 378, "00759056": 378, "8841": 378, "0977256": 378, "2746": 378, "0813271": 378, "0656322": 378, "4090": 378, "0476463": 378, "5633": 378, "0295362": 378, "9088": 378, "0736189": 378, "3646": 378, "0603789": 378, "4445": 378, "0489938": 378, "5478": 378, "036992": 378, "7256": 378, "0258802": 378, "10372": 378, "0116589": 378, "3237": 378, "00979113": 378, "3855": 378, "00811779": 378, "4650": 378, "00667871": 378, "5652": 378, "00493861": 378, "7643": 378, "0537768": 378, "2807": 378, "0459135": 378, "3288": 378, "03588": 378, "4208": 378, "0252901": 378, "5970": 378, "0167419": 378, "9018": 378, "0407051": 378, "3651": 378, "0342908": 378, "4334": 378, "028568": 378, "5202": 378, "0218703": 378, "6796": 378, "016186": 378, "9183": 378, "0031551": 378, "0029515": 378, "00265488": 378, "2369": 378, "00243581": 378, "2582": 378, "00223598": 378, "2813": 378, "00745008": 378, "3377": 378, "00656544": 378, "3833": 378, "00542595": 378, "4638": 378, "00425647": 378, "5912": 378, "0034657": 378, "7261": 378, "00835933": 378, "3010": 378, "00741956": 378, "3391": 378, "0065352": 378, "3850": 378, "00555918": 378, "4526": 378, "00488058": 378, "5156": 378, "0257262": 378, "3912": 378, "0217468": 378, "4628": 378, "0176505": 378, "5703": 378, "0137122": 378, "7341": 378, "00980134": 378, "10270": 378, "124749": 378, "3227": 378, "103385": 378, "3894": 378, "0832193": 378, "4838": 378, "0626013": 378, "6432": 378, "0397992": 378, "10117": 378, "101071": 378, "3983": 378, "0825665": 378, "4876": 378, "0668515": 378, "6023": 378, "0487727": 378, "8255": 378, "0354192": 378, "11368": 378, "0147718": 378, "0127799": 378, "4430": 378, "0105324": 378, "5376": 378, "00869796": 378, "6509": 378, "00643591": 378, "8798": 378, "0698868": 378, "3240": 378, "0588583": 378, "3848": 378, "0473412": 378, "4784": 378, "0346142": 378, "6543": 378, "0222947": 378, "10159": 378, "0538146": 378, "4142": 378, "0454583": 378, "4904": 378, "0373579": 378, "5968": 378, "0291396": 378, "7651": 378, "0208901": 378, "10672": 378, "00393589": 378, "00332212": 378, "2525": 378, "00317296": 378, "2643": 378, "00269113": 378, "3117": 378, "00235812": 378, "3557": 378, "009382": 378, "3576": 378, "00828943": 378, "4047": 378, "00672351": 378, "4990": 378, "00514768": 378, "6518": 378, "0040612": 378, "8262": 378, "0107115": 378, "3132": 378, "00920252": 378, "00794258": 378, "4224": 378, "00698123": 378, "4806": 378, "00561026": 378, "5980": 378, "0345669": 378, "3882": 378, "0289719": 378, "4632": 378, "0232584": 378, "5770": 378, "0179766": 378, "7466": 378, "0128144": 378, "10474": 378, "158162": 378, "3394": 378, "132552": 378, "4050": 378, "101844": 378, "5271": 378, "080936": 378, "6633": 378, "0530097": 378, "10127": 378, "135839": 378, "3952": 378, "11116": 378, "4829": 378, "0899513": 378, "0633017": 378, "8481": 378, "0467462": 378, "11484": 378, "0192628": 378, "3919": 378, "0164591": 378, "4586": 378, "0135348": 378, "5578": 378, "0107712": 378, "7009": 378, "00761117": 378, "9919": 378, "0854876": 378, "3532": 378, "0747271": 378, "4041": 378, "0604759": 378, "4993": 378, "0417964": 378, "7225": 378, "0275467": 378, "10962": 378, "0713821": 378, "4164": 378, "0600772": 378, "4948": 378, "0496581": 378, "5986": 378, "0381385": 378, "7794": 378, "027025": 378, "10999": 378, "00502473": 378, "2086": 378, "00451855": 378, "00396819": 378, "00338962": 378, "3093": 378, "00315343": 378, "3325": 378, "0147951": 378, "2834": 378, "0126225": 378, "3322": 378, "010269": 378, "4084": 378, "00785878": 378, "5337": 378, "00570293": 378, "7354": 378, "0161691": 378, "2594": 378, "0144483": 378, "2902": 378, "011705": 378, "3583": 378, "0101487": 378, "4132": 378, "00879332": 378, "4769": 378, "0560297": 378, "2994": 378, "0467998": 378, "3584": 378, "0374397": 378, "4481": 378, "028166": 378, "5956": 378, "0192593": 378, "8711": 378, "277815": 378, "2415": 378, "229837": 378, "2919": 378, "1787": 378, "3755": 378, "126545": 378, "5303": 378, "0835321": 378, "8033": 378, "224925": 378, "2983": 378, "184256": 378, "3642": 378, "146452": 378, "4582": 378, "108899": 378, "6162": 378, "0740655": 378, "9060": 378, "0319455": 378, "2954": 378, "0268136": 378, "3519": 378, "0217062": 378, "4347": 378, "0166666": 378, "5662": 378, "0116466": 378, "8102": 378, "150549": 378, "2507": 378, "119951": 378, "3147": 378, "0893092": 378, "4226": 378, "0637226": 378, "5923": 378, "0427839": 378, "8823": 378, "122421": 378, "3035": 378, "102244": 378, "0822007": 378, "4520": 378, "0622484": 378, "5969": 378, "0429436": 378, "8652": 378, "00481074": 378, "00443796": 378, "2835": 378, "00389863": 378, "00343822": 378, "3659": 378, "00297784": 378, "4225": 378, "0145757": 378, "3453": 378, "012078": 378, "4167": 378, "00896329": 378, "5615": 378, "00727645": 378, "6917": 378, "00548478": 378, "9176": 378, "0150624": 378, "3341": 378, "0132428": 378, "3800": 378, "011443": 378, "4398": 378, "0092883": 378, "5418": 378, "00744553": 378, "6759": 378, "0543977": 378, "3701": 378, "0445693": 378, "4517": 378, "0363329": 378, "5541": 378, "0270492": 378, "7442": 378, "0187415": 378, "10742": 378, "267367": 378, "3011": 378, "223615": 378, "3601": 378, "1797": 378, "134716": 378, "5977": 378, "0692752": 378, "11624": 378, "222661": 378, "3616": 378, "179525": 378, "4485": 378, "139298": 378, "5781": 378, "0958787": 378, "8399": 378, "176292": 378, "4568": 378, "0700283": 378, "0258341": 378, "4383": 378, "0207504": 378, "5457": 378, "0161277": 378, "7021": 378, "0116008": 378, "9761": 378, "148512": 378, "3050": 378, "124238": 378, "0995304": 378, "4551": 378, "0714324": 378, "6341": 378, "044154": 378, "10259": 378, "113174": 378, "3940": 378, "0961662": 378, "4636": 378, "0765841": 378, "5822": 378, "0592912": 378, "7520": 378, "0416614": 378, "10703": 378, "00655654": 378, "2239": 378, "00584761": 378, "2510": 378, "00502113": 378, "2923": 378, "00466269": 378, "3148": 378, "00393276": 378, "3732": 378, "0203923": 378, "2879": 378, "0171018": 378, "3433": 378, "0137027": 378, "4285": 378, "0109527": 378, "5361": 378, "00749636": 378, "7833": 378, "0221319": 378, "0193761": 378, "3030": 378, "0158773": 378, "3698": 378, "0134367": 378, "4370": 378, "0116365": 378, "5046": 378, "0780751": 378, "3008": 378, "0651551": 378, "3604": 378, "0521945": 378, "4500": 378, "0394101": 378, "5959": 378, "0262706": 378, "8940": 378, "398509": 378, "2357": 378, "332153": 378, "259051": 378, "3626": 378, "184412": 378, "5094": 378, "119678": 378, "7850": 378, "313656": 378, "2995": 378, "257989": 378, "3641": 378, "206049": 378, "4559": 378, "152848": 378, "6146": 378, "103125": 378, "9110": 378, "0444861": 378, "2969": 378, "037334": 378, "3538": 378, "0302293": 378, "0231979": 378, "5695": 378, "0158702": 378, "8325": 378, "219777": 378, "2404": 378, "17764": 378, "2975": 378, "135864": 378, "3889": 378, "100424": 378, "5262": 378, "0677547": 378, "7799": 378, "172356": 378, "3018": 378, "144231": 378, "3606": 378, "116019": 378, "4483": 378, "0873881": 378, "5953": 378, "0596004": 378, "8728": 378, "00609695": 378, "2751": 378, "00517637": 378, "3241": 378, "00448956": 378, "3736": 378, "00394876": 378, "4248": 378, "00317463": 378, "5284": 378, "0204832": 378, "3276": 378, "0137691": 378, "4873": 378, "0114194": 378, "5876": 378, "00893304": 378, "7512": 378, "00653312": 378, "10272": 378, "0192409": 378, "3487": 378, "0168348": 378, "3986": 378, "0142343": 378, "4714": 378, "0119455": 378, "5617": 378, "00910648": 378, "7369": 378, "0781101": 378, "0614806": 378, "4366": 378, "046201": 378, "5810": 378, "0357023": 378, "7518": 378, "0222103": 378, "12086": 378, "326917": 378, "3284": 378, "273363": 378, "3927": 378, "220994": 378, "4858": 378, "166153": 378, "6462": 378, "0854403": 378, "12567": 378, "311348": 378, "3448": 378, "243012": 378, "4418": 378, "187933": 378, "5713": 378, "126819": 378, "8466": 378, "0855686": 378, "12548": 378, "0404778": 378, "3730": 378, "0329699": 378, "4579": 378, "0265272": 378, "5692": 378, "0207815": 378, "7265": 378, "0139037": 378, "10860": 378, "183003": 378, "161443": 378, "3741": 378, "129767": 378, "4654": 378, "0893345": 378, "6760": 378, "0610684": 378, "9890": 378, "15525": 378, "3829": 378, "125772": 378, "4727": 378, "101434": 378, "5861": 378, "0765083": 378, "7770": 378, "0537321": 378, "11064": 378, "0104209": 378, "3219": 378, "00908195": 378, "3694": 378, "00781277": 378, "4294": 378, "00651108": 378, "5153": 378, "0051719": 378, "6487": 378, "0321377": 378, "4176": 378, "0269904": 378, "4972": 378, "0220014": 378, "6100": 378, "016901": 378, "7941": 378, "0120042": 378, "11180": 378, "0373802": 378, "0314895": 378, "4262": 378, "0266731": 378, "5031": 378, "0217822": 378, "6161": 378, "0168219": 378, "7978": 378, "176031": 378, "3049": 378, "134442": 378, "3993": 378, "0843776": 378, "6362": 378, "0640577": 378, "8381": 378, "043787": 378, "12261": 378, "697876": 378, "3077": 378, "615338": 378, "3489": 378, "350147": 378, "6133": 378, "267289": 378, "8034": 378, "179695": 378, "11950": 378, "703207": 378, "3053": 378, "561805": 378, "3822": 378, "423052": 378, "5076": 378, "254835": 378, "171434": 378, "12526": 378, "0933483": 378, "3235": 378, "0725632": 378, "4161": 378, "0539197": 378, "5600": 378, "0376119": 378, "8029": 378, "0263137": 378, "11476": 378, "407388": 378, "340939": 378, "3543": 378, "261028": 378, "4627": 378, "151649": 378, "7965": 378, "103379": 378, "11684": 378, "358769": 378, "3314": 378, "283046": 378, "4201": 378, "212152": 378, "5604": 378, "158502": 378, "7502": 378, "107514": 378, "11059": 378, "0148329": 378, "0129116": 378, "3898": 378, "0110537": 378, "4553": 378, "00925277": 378, "5439": 378, "00716987": 378, "7019": 378, "0526609": 378, "3823": 378, "0447282": 378, "4501": 378, "0365834": 378, "5503": 378, "0274874": 378, "7324": 378, "0183895": 378, "10947": 378, "0556653": 378, "0465882": 378, "4321": 378, "039411": 378, "5108": 378, "0318745": 378, "6316": 378, "024706": 378, "8148": 378, "263316": 378, "3058": 378, "198303": 378, "4061": 378, "141966": 378, "5672": 378, "105849": 378, "7608": 378, "0687866": 378, "11707": 378, "793822": 378, "4057": 378, "996979": 378, "3230": 378, "54288": 378, "5933": 378, "412174": 378, "7815": 378, "274441": 378, "11737": 378, "03474": 378, "3113": 378, "832701": 378, "3868": 378, "564787": 378, "421781": 378, "7637": 378, "271587": 378, "11860": 378, "130834": 378, "3462": 378, "0943305": 378, "4802": 378, "0760123": 378, "0580473": 378, "7803": 378, "0395342": 378, "11458": 378, "635729": 378, "2850": 378, "379899": 378, "307908": 378, "5884": 378, "233057": 378, "7774": 378, "157518": 378, "11503": 378, "518276": 378, "3441": 378, "422517": 378, "4221": 378, "323476": 378, "5513": 378, "247251": 378, "7213": 378, "163369": 378, "10917": 378, "0192313": 378, "0168147": 378, "3991": 378, "0143274": 378, "4683": 378, "011932": 378, "5624": 378, "00914975": 378, "7334": 378, "0723144": 378, "3712": 378, "0613803": 378, "4373": 378, "050021": 378, "5366": 378, "0376949": 378, "7121": 378, "0249397": 378, "10763": 378, "0796627": 378, "3369": 378, "0616695": 378, "4352": 378, "0521326": 378, "5149": 378, "042188": 378, "0325741": 378, "8240": 378, "380582": 378, "2821": 378, "24038": 378, "4466": 378, "195271": 378, "5498": 378, "146935": 378, "7307": 378, "0948318": 378, "11322": 378, "08794": 378, "3947": 378, "913626": 378, "4701": 378, "737943": 378, "5820": 378, "558473": 378, "7690": 378, "369466": 378, "51009": 378, "2844": 378, "26974": 378, "3382": 378, "778244": 378, "5518": 378, "589803": 378, "7282": 378, "375284": 378, "11444": 378, "160705": 378, "3758": 378, "135495": 378, "4457": 378, "108718": 378, "5555": 378, "0811198": 378, "7445": 378, "0533513": 378, "11320": 378, "614109": 378, "3934": 378, "518614": 378, "418491": 378, "5772": 378, "31592": 378, "7647": 378, "211893": 378, "11401": 378, "836616": 378, "2842": 378, "699579": 378, "3399": 378, "544194": 378, "379699": 378, "228043": 378, "10428": 378, "un": 379, "u": 379, "hotmap": 379, "jpg": 379, "x16": 380, "environment_vari": 380, "kernel_typ": [380, 381], "perfom": 380, "introduct": 380, "benchmark_it": 380, "benchmark_no_refresh": 380, "refresh": 380, "kxn": 380, "sparse_ratio": 380, "micro_b": 380, "output_fp32": 380, "has_append_sum": 380, "micro_oc": 380, "sub_func_level": 380, "3d_infer": 380, "automaticlli": 380, "dsparse_lib_use_amx": 380, "amx_bf16_x16": 380, "output_bf16": 380, "lower_bound": 380, "upper_bound": 380, "invalid": 380, "fp32_relu": 380, "src_dt": 380, "dst_dt": 380, "tanspos": 380, "4d": 380, "distinguish": 380, "bs0": 380, "bs1": 380, "scr2": 380, "avx512f_p2031_p2013": 380, "has_binary_add": 380, "tile_n": 380, "coeffici": 380, "vnni_noperm_p2031_p1302": 380, "suuport": 380, "d0xd1x": 380, "d0": 380, "dst_type": 380, "padding_mask": 380, "badd_dim": 380, "blank": 380, "2048": 380, "large_weight_threshold": 380, "add_bia": 380, "channel_num": 380, "quantize_dim_elt_num": 380, "src_data_typ": 380, "newli": 380, "subdir": 380, "benchmark_dir": 380, "bench_": 380, "cpp": 380, "test_": 380, "entranc": 380, "get_true_data_": 380, "check_result_": 380, "gen_case_": 380, "run_bench_": 380, "calc_flop": 380, "get_refresh_data_idx": 380, "benchmark_util": 380, "whitespac": 381, "labl": 381, "run_ci": 381, "overwrit": 381, "it_per_cor": 381, "discard": 381, "new_input_fil": 381, "medium_n": 381, "ci": 381, "apach": 382, "copyright": 382, "parti": 382, "accompani": 382, "research": 382, "wish": 382, "bibtex": 382, "misc": 382, "hanwen": 382, "haihao": 382, "shen": 382, "dong": 382, "hengyu": 382, "meng": 382, "wenxin": 382, "zhang": 382, "howpublish": 382, "url": 382, "year": 382, "logo": 382, "atom": 382, "phi": 382, "pentium": 382, "vtune": 382, "corpor": 382, "subsidiari": 382, "toler": 383, "rel": 383, "conjunct": 383, "proport": [383, 384], "vision": 385, "speech": 385, "multimod": 385, "text_classifi": 385, "great": 385, "9998425245285034": 385, "believ": 385, "beauti": 385, "evoc": 385, "ve": 385, "seen": 385, "9998886585235596": 385, "bear": 386, "brain": 386, "damag": 386, "hypothesi": 386, "yann": 386, "lecun": 386, "salient": 386, "anywher": 386, "filter": 386, "lowest": 386, "freez": 386, "hyper": 386, "didn": 386, "pruning_conf": 386, "littl": 387, "degrad": 387, "ex": 387, "affin": 387, "convers": 387, "math": 387, "zeropoint": 387, "asymmetr": 387, "overflow": 387, "fp16": 387, "unseen": 387, "peopl": 387, "emul": 387, "fake": 387, "backward": 387, "mimic": 387, "made": 387, "ultim": 387, "either": 387, "pain": 387, "lossi": 387, "fx": 387, "qat": 387, "site": 388, "assist": 388, "secur": 392, "legal": 392, "injector": 394}, "objects": {"": [[323, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [323, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [323, 1, 1, "_CPPv42jd", "jd"], [323, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [325, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 1, 1, "_CPPv42jd", "jd"], [326, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [326, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [326, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [326, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [326, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [326, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [326, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [324, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [324, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [324, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [324, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [324, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [324, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [324, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [324, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [324, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [326, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [326, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [326, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [326, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [326, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [326, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [326, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [326, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [326, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [326, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [323, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [323, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [323, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [323, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [323, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [323, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [323, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [323, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [324, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [324, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [324, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [324, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [324, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [324, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [324, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [324, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [324, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [324, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [324, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [324, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [324, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [324, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [324, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [324, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [324, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [324, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [324, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [324, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [324, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [324, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [324, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [324, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [324, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [324, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [324, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [323, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [323, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [323, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [323, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [323, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [323, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [323, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [323, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [323, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [323, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [323, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [323, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [323, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [323, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [324, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [324, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [324, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [324, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [324, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [324, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [324, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [324, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [324, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [324, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [324, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [324, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [324, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [324, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [324, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [324, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [324, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [324, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [324, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [324, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [324, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [324, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [324, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [324, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [324, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [324, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [324, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [324, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [324, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [324, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [324, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [324, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [324, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [324, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [324, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [324, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [324, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [324, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [324, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [324, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [324, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [324, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [324, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [324, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [324, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [324, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [324, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [324, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [324, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [324, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [324, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [324, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [324, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [324, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [324, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [324, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [324, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [324, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [324, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [324, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [324, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [324, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [324, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [324, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [324, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [324, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [324, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [324, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [324, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [324, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [324, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [324, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [324, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [324, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [324, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [324, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [325, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [325, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [325, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [325, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [325, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [325, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [325, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [325, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [325, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [325, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [325, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [325, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [325, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [325, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [325, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [325, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [325, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [325, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [325, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [325, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [325, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [325, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [325, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [325, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [325, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [325, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [325, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [325, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [324, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [324, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [324, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [324, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [324, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [324, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [324, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [324, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [324, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [324, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [324, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [324, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [324, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [324, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [324, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [324, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [324, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [324, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [324, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [324, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [324, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [324, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [324, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [324, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [324, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [324, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [324, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [324, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [324, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [324, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [324, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [324, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [324, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [324, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [324, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [324, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [324, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [324, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [324, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [326, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [326, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [326, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [326, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [326, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [326, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [326, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [326, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [326, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [326, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [326, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [326, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [326, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [326, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [326, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [326, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [326, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [326, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [326, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [326, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [326, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [326, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [326, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [326, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [326, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [326, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [326, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [326, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [326, 3, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [326, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [326, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [326, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [326, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [326, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [326, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [326, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [326, 3, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [326, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [326, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [326, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [326, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [326, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [326, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [326, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [326, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [326, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [326, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [326, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [326, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_8E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t8has_geluE", "jd::ssd::matmul_fp8_param_t::has_gelu"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E", "jd::ssd::matmul_fp8_param_t::weight_fp8"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [326, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [326, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [326, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [326, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [326, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [326, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [326, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [326, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [326, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [326, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [326, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [326, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [326, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [326, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [326, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [326, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [326, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [326, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [326, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [326, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [326, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [326, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [326, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [326, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [326, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [326, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [326, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [326, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [326, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [326, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [326, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [326, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [326, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [326, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [326, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [326, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [326, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [326, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [326, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [326, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [326, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [326, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [326, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [326, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [326, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [326, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [326, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [326, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [326, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [326, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [326, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [326, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [326, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [326, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [326, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [326, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [326, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [326, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [326, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [326, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [326, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [326, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [326, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [326, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [326, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [326, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [326, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [324, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [324, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [324, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [324, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [324, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [324, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [324, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [324, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [324, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [324, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [324, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [324, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [324, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [324, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [324, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [324, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [324, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [324, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [324, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [199, 9, 0, "-", "intel_extension_for_transformers"], [241, 9, 0, "-", "sparsity_all"], [242, 9, 0, "-", "test_add_cls_token"], [243, 9, 0, "-", "test_add_embeddings"], [244, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [245, 9, 0, "-", "test_attention_reshape"], [246, 9, 0, "-", "test_bert_mini_fp32"], [247, 9, 0, "-", "test_binary_op"], [248, 9, 0, "-", "test_binaryop"], [249, 9, 0, "-", "test_cast_to"], [250, 9, 0, "-", "test_concat"], [251, 9, 0, "-", "test_conv_reshape"], [252, 9, 0, "-", "test_decoder_attn_reshape"], [253, 9, 0, "-", "test_dispatcher_tuning_acc"], [254, 9, 0, "-", "test_dispatcher_tuning_throughput"], [255, 9, 0, "-", "test_dynamic_quantization"], [256, 9, 0, "-", "test_embedding"], [257, 9, 0, "-", "test_embeddingbag"], [258, 9, 0, "-", "test_execution_options"], [259, 9, 0, "-", "test_gelu"], [260, 9, 0, "-", "test_gpt_int8"], [261, 9, 0, "-", "test_graph_dispatch"], [262, 9, 0, "-", "test_insert_input_output_data"], [263, 9, 0, "-", "test_is_supported_onnx_graph"], [264, 9, 0, "-", "test_last_layer_shape"], [265, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [266, 9, 0, "-", "test_layer_norm_with_transpose"], [267, 9, 0, "-", "test_layernorm"], [268, 9, 0, "-", "test_linear"], [269, 9, 0, "-", "test_linear_int8"], [270, 9, 0, "-", "test_llama_pattern"], [271, 9, 0, "-", "test_main"], [272, 9, 0, "-", "test_matmul"], [273, 9, 0, "-", "test_matmul_int8"], [274, 9, 0, "-", "test_matmul_with_bias_relu"], [275, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [276, 9, 0, "-", "test_matmul_with_bias_tanh"], [277, 9, 0, "-", "test_merged_embeddingbag"], [278, 9, 0, "-", "test_model"], [279, 9, 0, "-", "test_onnx_utils"], [280, 9, 0, "-", "test_operator_adaptor"], [281, 9, 0, "-", "test_ops"], [282, 9, 0, "-", "test_padding_seq"], [283, 9, 0, "-", "test_padding_sequence"], [284, 9, 0, "-", "test_pattern_dispatch"], [285, 9, 0, "-", "test_permute"], [286, 9, 0, "-", "test_position_embeddings"], [287, 9, 0, "-", "test_pow"], [288, 9, 0, "-", "test_primitive_cache_acc"], [289, 9, 0, "-", "test_primitive_cache_throughput"], [290, 9, 0, "-", "test_qkv_merge"], [291, 9, 0, "-", "test_qkv_reshape"], [292, 9, 0, "-", "test_quant_onnx_execute"], [293, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [294, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [295, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [296, 9, 0, "-", "test_size"], [297, 9, 0, "-", "test_softmax"], [298, 9, 0, "-", "test_start_end_logits"], [299, 9, 0, "-", "test_tanh"], [300, 9, 0, "-", "test_text_encoder"], [301, 9, 0, "-", "test_text_encoder_bf16"], [302, 9, 0, "-", "test_tf_utils"], [303, 9, 0, "-", "test_token_type_embeddings"], [304, 9, 0, "-", "test_transpose"], [305, 9, 0, "-", "test_transpose_batch_matmul"], [306, 9, 0, "-", "test_unet"], [307, 9, 0, "-", "test_unet_bf16"], [308, 9, 0, "-", "test_unsqueeze"], [309, 9, 0, "-", "test_vae_decoder"], [310, 9, 0, "-", "test_vae_decoder_bf16"], [311, 9, 0, "-", "test_weight_sharing_acc"], [312, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [313, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [314, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [192, 9, 0, "-", "evaluation"], [206, 9, 0, "-", "optimization"], [238, 9, 0, "-", "preprocessing"], [240, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[191, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [189, 9, 0, "-", "tf_utils"], [190, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, 10, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[21, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Floor_divide"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "ListUnpack"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "Masked_fill"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "Max"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "MultiHeadAttenion"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Silu"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, 10, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "innerproductwithswish"], [104, 9, 0, "-", "input_data"], [105, 9, 0, "-", "input_file"], [106, 9, 0, "-", "insert_bf16_node"], [107, 9, 0, "-", "insert_quant_node"], [108, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [109, 9, 0, "-", "interact_features"], [110, 9, 0, "-", "last_layer_shape"], [111, 9, 0, "-", "layer_norm"], [112, 9, 0, "-", "layer_norm_with_reduce_mean"], [113, 9, 0, "-", "layer_norm_with_transpose"], [114, 9, 0, "-", "llama_embeding"], [115, 9, 0, "-", "llama_matmulwithtranspose"], [116, 9, 0, "-", "llama_postprocess"], [117, 9, 0, "-", "llama_rotary_pos_emb"], [118, 9, 0, "-", "lower_all_tuples"], [119, 9, 0, "-", "matmul_with_bias"], [120, 9, 0, "-", "matmul_with_bias_add"], [121, 9, 0, "-", "matmul_with_bias_gelu"], [122, 9, 0, "-", "matmul_with_bias_relu"], [123, 9, 0, "-", "matmul_with_bias_sigmoid"], [124, 9, 0, "-", "matmul_with_bias_tanh"], [125, 9, 0, "-", "matmul_with_bias_unsqueeze"], [126, 9, 0, "-", "matmul_with_transpose"], [127, 9, 0, "-", "merged_embeddingbag"], [128, 9, 0, "-", "multi_head_attention"], [129, 9, 0, "-", "operator_adaptor"], [130, 9, 0, "-", "output_data"], [131, 9, 0, "-", "padding_sequence"], [132, 9, 0, "-", "pattern"], [133, 9, 0, "-", "position_embeddings"], [134, 9, 0, "-", "position_embeddings_v1"], [135, 9, 0, "-", "qkv_merge"], [136, 9, 0, "-", "qkv_reshape"], [137, 9, 0, "-", "quantize_fusion"], [138, 9, 0, "-", "quantized_graph_dtype_refactor"], [139, 9, 0, "-", "remove_constant_op"], [140, 9, 0, "-", "remove_last_view"], [141, 9, 0, "-", "remove_range"], [142, 9, 0, "-", "removeslice"], [143, 9, 0, "-", "reshape_after_restore_hidden_states"], [144, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [145, 9, 0, "-", "reshape_before_restore_hidden_states"], [146, 9, 0, "-", "reshape_fusion"], [147, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [148, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [149, 9, 0, "-", "restnetBlock_groupNorm"], [150, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [151, 9, 0, "-", "rms_norm"], [152, 9, 0, "-", "rotary_pos_emb"], [153, 9, 0, "-", "slicemask"], [154, 9, 0, "-", "stableDiffusion_MHA"], [155, 9, 0, "-", "stableDiffusion_MHAReshape"], [156, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [157, 9, 0, "-", "stableDiffusion_bf16Convert"], [158, 9, 0, "-", "start_end_logits"], [159, 9, 0, "-", "subgraph_matcher"], [160, 9, 0, "-", "textEncdoer_word_embedding"], [161, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [162, 9, 0, "-", "textEncoder_AttentionReshape"], [163, 9, 0, "-", "textEncoder_KVReshape"], [164, 9, 0, "-", "textEncoder_MulReshape"], [165, 9, 0, "-", "textEncoder_QReshape"], [166, 9, 0, "-", "textEncoder_SoftmaxReshape"], [167, 9, 0, "-", "textEncoder_causal_attention_mask"], [168, 9, 0, "-", "token_type_embeddings"], [169, 9, 0, "-", "token_type_embeddings_v1"], [170, 9, 0, "-", "torch_embedding"], [171, 9, 0, "-", "torch_ip_insert_bias"], [172, 9, 0, "-", "torchinsertbf16node"], [173, 9, 0, "-", "torchpaddingsquence"], [174, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [175, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [176, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [177, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [178, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [179, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [180, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [181, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [182, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [183, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [184, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [185, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [186, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [187, 9, 0, "-", "transpose_batch_matmul"], [188, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, 10, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, 10, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, 10, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, 10, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, 10, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, 10, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[125, 10, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[126, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[127, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[129, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[130, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[131, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[132, 10, 1, "", "Pattern"], [132, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[133, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[134, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[135, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[136, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[137, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[138, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[139, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[140, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[141, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[142, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[143, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[144, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[145, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[146, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[147, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[148, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[149, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[150, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[151, 10, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[152, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[153, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[155, 10, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[156, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[157, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[158, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[159, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[160, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[161, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[162, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[163, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[164, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[165, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[166, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[167, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[168, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[169, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[170, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[171, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[172, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[173, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[174, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[175, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[176, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[177, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[178, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[179, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[180, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[181, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[182, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[183, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[184, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[185, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[186, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[187, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[188, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[189, 14, 1, "", "TF_DTYPE_ID"], [189, 13, 1, "", "create_tf_node"], [189, 13, 1, "", "get_tensor_dest_op"], [189, 13, 1, "", "graph_node_names_details"], [189, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[190, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[194, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval": [[193, 9, 0, "-", "evaluator"], [196, 9, 0, "-", "models"], [197, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[193, 13, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[195, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[195, 10, 1, "", "AutoCausalLM"], [195, 10, 1, "", "AutoSeq2SeqLM"], [195, 10, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[198, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[198, 10, 1, "", "LambadaOpenAI"], [198, 10, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[200, 9, 0, "-", "benchmark"], [201, 9, 0, "-", "config"], [202, 9, 0, "-", "distillation"], [205, 9, 0, "-", "dynamic"], [208, 9, 0, "-", "mixture"], [209, 9, 0, "-", "model"], [211, 9, 0, "-", "nas"], [213, 9, 0, "-", "optimizer"], [214, 9, 0, "-", "optimizer_tf"], [215, 9, 0, "-", "pipeline"], [216, 9, 0, "-", "pruning"], [218, 9, 0, "-", "pytorch_pruner"], [226, 9, 0, "-", "quantization"], [227, 9, 0, "-", "trainer"], [229, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[200, 13, 1, "", "benchmark"], [200, 13, 1, "", "get_example_inputs"], [200, 13, 1, "", "preprocess_model"], [200, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[201, 10, 1, "", "AutoDistillationConfig"], [201, 10, 1, "", "BenchmarkConfig"], [201, 10, 1, "", "DistillationConfig"], [201, 10, 1, "", "DynamicLengthConfig"], [201, 10, 1, "", "FlashDistillationConfig"], [201, 10, 1, "", "NASConfig"], [201, 10, 1, "", "Provider"], [201, 10, 1, "", "PrunerV2"], [201, 10, 1, "", "PruningConfig"], [201, 10, 1, "", "QuantizationConfig"], [201, 10, 1, "", "TFDistillationConfig"], [201, 10, 1, "", "WeightPruningConfig"], [201, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[201, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[202, 10, 1, "", "Criterion"], [202, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[203, 9, 0, "-", "drop_and_restore_utils"], [204, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[203, 13, 1, "", "sample_layer_configuration"], [203, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[204, 10, 1, "", "Evolution"], [204, 13, 1, "", "approx_ratio"], [204, 13, 1, "", "inverse"], [204, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[204, 12, 1, "", "add_gene"], [204, 12, 1, "", "convex_hull"], [204, 12, 1, "", "crossover"], [204, 12, 1, "", "get_store"], [204, 12, 1, "", "load_store"], [204, 12, 1, "", "mutate"], [204, 12, 1, "", "pareto_frontier"], [204, 12, 1, "", "save_population"], [204, 12, 1, "", "save_store"], [204, 12, 1, "", "set_lower_constraint"], [204, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[207, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[207, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[207, 12, 1, "", "create_distillers"], [207, 12, 1, "", "estimate"], [207, 12, 1, "", "init_by_cfg"], [207, 12, 1, "", "load_search_results"], [207, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[209, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[209, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[210, 9, 0, "-", "basic_nas"], [212, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[210, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[210, 12, 1, "", "estimate"], [210, 12, 1, "", "execute"], [210, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[212, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[213, 10, 1, "", "NoTrainerOptimizer"], [213, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[213, 12, 1, "", "distill"], [213, 12, 1, "", "init_distiller"], [213, 12, 1, "", "init_pruner"], [213, 12, 1, "", "init_quantizer"], [213, 12, 1, "", "prune"], [213, 12, 1, "", "quantize"], [213, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[213, 12, 1, "", "fit"], [213, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[214, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[214, 12, 1, "", "autodistill"], [214, 12, 1, "", "build_train_func"], [214, 12, 1, "", "builtin_eval_func"], [214, 12, 1, "", "distill"], [214, 12, 1, "", "init_distiller"], [214, 12, 1, "", "init_pruner"], [214, 12, 1, "", "init_quantizer"], [214, 12, 1, "", "model_builder_builtin"], [214, 12, 1, "", "prune"], [214, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[215, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[216, 10, 1, "", "PrunerConfig"], [216, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[217, 9, 0, "-", "criteria"], [219, 9, 0, "-", "logger"], [220, 9, 0, "-", "patterns"], [221, 9, 0, "-", "pruners"], [222, 9, 0, "-", "pruning"], [223, 9, 0, "-", "regs"], [224, 9, 0, "-", "schedulers"], [225, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[217, 10, 1, "", "GradientCriterion"], [217, 10, 1, "", "MagnitudeCriterion"], [217, 10, 1, "", "PruningCriterion"], [217, 10, 1, "", "SnipCriterion"], [217, 10, 1, "", "SnipMomentumCriterion"], [217, 13, 1, "", "get_criterion"], [217, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[217, 12, 1, "", "on_before_optimizer_step"], [217, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[217, 12, 1, "", "on_step_begin"], [217, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[217, 12, 1, "", "on_after_optimizer_step"], [217, 12, 1, "", "on_before_optimizer_step"], [217, 12, 1, "", "on_step_begin"], [217, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[217, 12, 1, "", "on_before_optimizer_step"], [217, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[217, 12, 1, "", "on_before_optimizer_step"], [217, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[220, 10, 1, "", "BasePattern"], [220, 10, 1, "", "PatternNInM"], [220, 10, 1, "", "PatternNxM"], [220, 13, 1, "", "get_pattern"], [220, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[220, 12, 1, "", "adjust_ratio"], [220, 12, 1, "", "check_layer_validity"], [220, 11, 1, "", "config"], [220, 12, 1, "", "get_block_size_dict"], [220, 12, 1, "", "get_masks"], [220, 12, 1, "", "get_masks_global"], [220, 12, 1, "", "get_masks_local"], [220, 12, 1, "", "get_pattern_lock_masks"], [220, 12, 1, "", "get_reduced_masks_from_data"], [220, 12, 1, "", "get_single_mask_per_target_ratio"], [220, 12, 1, "", "get_sparsity_ratio"], [220, 12, 1, "", "get_sparsity_ratio_each_layer"], [220, 11, 1, "", "invalid_layers"], [220, 11, 1, "", "is_global"], [220, 11, 1, "", "keep_mask_layers"], [220, 11, 1, "", "max_sparsity_ratio_per_op"], [220, 11, 1, "", "min_sparsity_ratio_per_op"], [220, 11, 1, "", "modules"], [220, 11, 1, "", "pattern"], [220, 12, 1, "", "reduce_tensor"], [220, 11, 1, "", "target_sparsity"], [220, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[220, 11, 1, "", "M"], [220, 11, 1, "", "N"], [220, 12, 1, "", "check_layer_validity"], [220, 12, 1, "", "get_ele_mask_per_threshold"], [220, 12, 1, "", "get_least_ninm_mask_from_data"], [220, 12, 1, "", "get_masks_global"], [220, 12, 1, "", "get_pattern_lock_masks"], [220, 12, 1, "", "get_reduced_masks_from_data"], [220, 12, 1, "", "get_sparsity_ratio"], [220, 12, 1, "", "reduce_scores"], [220, 12, 1, "", "reshape_orig_to_pattern"], [220, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[220, 11, 1, "", "block_size"], [220, 12, 1, "", "check_layer_validity"], [220, 12, 1, "", "count_new_masked_cnts"], [220, 12, 1, "", "get_block_size_dict"], [220, 12, 1, "", "get_mask_per_threshold"], [220, 12, 1, "", "get_masks_global"], [220, 12, 1, "", "get_pattern_lock_masks"], [220, 12, 1, "", "get_reduced_masks_from_data"], [220, 12, 1, "", "get_sparsity_ratio"], [220, 12, 1, "", "get_sparsity_ratio_progressive"], [220, 12, 1, "", "reduce_scores"], [220, 12, 1, "", "reshape_orig_to_pattern"], [220, 12, 1, "", "reshape_reduced_to_orig"], [220, 12, 1, "", "update_new_added_masks"], [220, 12, 1, "", "update_progressive_masks"], [220, 12, 1, "", "update_progressive_masks_global"], [220, 12, 1, "", "update_progressive_masks_linear"], [220, 12, 1, "", "update_progressive_masks_local"], [220, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[221, 10, 1, "", "BasePruner"], [221, 10, 1, "", "BasicPruner"], [221, 10, 1, "", "PatternLockPruner"], [221, 10, 1, "", "ProgressivePruner"], [221, 13, 1, "", "get_pruner"], [221, 13, 1, "", "parse_valid_pruner_types"], [221, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[221, 12, 1, "", "check_is_pruned_step"], [221, 11, 1, "", "config"], [221, 11, 1, "", "current_sparsity_ratio"], [221, 11, 1, "", "end_step"], [221, 11, 1, "", "global_step"], [221, 12, 1, "", "mask_weights"], [221, 12, 1, "", "mask_weights_general"], [221, 11, 1, "", "masks"], [221, 11, 1, "", "max_sparsity_ratio_per_op"], [221, 11, 1, "", "modules"], [221, 12, 1, "", "on_after_eval"], [221, 12, 1, "", "on_after_optimizer_step"], [221, 12, 1, "", "on_before_eval"], [221, 12, 1, "", "on_before_optimizer_step"], [221, 12, 1, "", "on_epoch_begin"], [221, 12, 1, "", "on_epoch_end"], [221, 12, 1, "", "on_step_begin"], [221, 12, 1, "", "on_step_end"], [221, 12, 1, "", "on_train_begin"], [221, 12, 1, "", "on_train_end"], [221, 11, 1, "", "pattern"], [221, 11, 1, "", "pruning_frequency"], [221, 11, 1, "", "scheduler"], [221, 11, 1, "", "scores"], [221, 11, 1, "", "start_step"], [221, 11, 1, "", "target_sparsity_ratio"], [221, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[221, 11, 1, "", "criterion"], [221, 12, 1, "", "on_after_optimizer_step"], [221, 12, 1, "", "on_before_optimizer_step"], [221, 11, 1, "", "pattern"], [221, 11, 1, "", "reg"], [221, 11, 1, "", "scheduler"], [221, 12, 1, "", "set_global_step"], [221, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[221, 12, 1, "", "on_after_optimizer_step"], [221, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[221, 12, 1, "", "check_is_pruned_progressive_step"], [221, 12, 1, "", "check_progressive_validity"], [221, 12, 1, "", "on_after_optimizer_step"], [221, 12, 1, "", "on_before_optimizer_step"], [221, 12, 1, "", "on_step_begin"], [221, 12, 1, "", "print_progressive_sparsity"], [221, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[222, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[222, 11, 1, "", "config_file_path"], [222, 12, 1, "", "get_sparsity_ratio"], [222, 11, 1, "", "model"], [222, 12, 1, "", "on_after_eval"], [222, 12, 1, "", "on_after_optimizer_step"], [222, 12, 1, "", "on_before_eval"], [222, 12, 1, "", "on_before_optimizer_step"], [222, 12, 1, "", "on_epoch_begin"], [222, 12, 1, "", "on_epoch_end"], [222, 12, 1, "", "on_step_begin"], [222, 12, 1, "", "on_step_end"], [222, 12, 1, "", "on_train_begin"], [222, 12, 1, "", "on_train_end"], [222, 11, 1, "", "pruner_info"], [222, 11, 1, "", "pruners"], [222, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[223, 10, 1, "", "BaseReg"], [223, 10, 1, "", "GroupLasso"], [223, 13, 1, "", "get_reg"], [223, 13, 1, "", "get_reg_type"], [223, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[223, 11, 1, "", "alpha"], [223, 12, 1, "", "on_after_optimizer_step"], [223, 12, 1, "", "on_before_optimizer_step"], [223, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[224, 10, 1, "", "IterativeScheduler"], [224, 10, 1, "", "OneshotScheduler"], [224, 10, 1, "", "PruningScheduler"], [224, 13, 1, "", "get_scheduler"], [224, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[224, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[224, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[224, 11, 1, "", "config"], [224, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[225, 13, 1, "", "check_config"], [225, 13, 1, "", "check_key_validity"], [225, 13, 1, "", "parse_to_prune"], [225, 13, 1, "", "process_and_check_config"], [225, 13, 1, "", "process_config"], [225, 13, 1, "", "process_weight_config"], [225, 13, 1, "", "process_yaml_config"], [225, 13, 1, "", "reset_none_to_default"], [225, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[226, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[227, 10, 1, "", "BaseTrainer"], [227, 10, 1, "", "NLPSeq2SeqTrainer"], [227, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[227, 12, 1, "", "auto_distil_evaluation_loop"], [227, 12, 1, "", "autodistillation"], [227, 12, 1, "", "benchmark"], [227, 12, 1, "", "builtin_eval_func"], [227, 12, 1, "", "builtin_train_func"], [227, 12, 1, "", "compute_loss"], [227, 12, 1, "", "create_optimizer_builtin"], [227, 12, 1, "", "distill"], [227, 12, 1, "", "export_to_bf16_onnx"], [227, 12, 1, "", "export_to_fp32_onnx"], [227, 12, 1, "", "export_to_int8_onnx"], [227, 12, 1, "", "export_to_jit"], [227, 12, 1, "", "export_to_onnx"], [227, 12, 1, "", "init_distiller"], [227, 12, 1, "", "init_pruner"], [227, 12, 1, "", "init_quantizer"], [227, 12, 1, "", "model_builder_builtin"], [227, 12, 1, "", "nas"], [227, 12, 1, "", "orchestrate_optimizations"], [227, 12, 1, "", "prune"], [227, 12, 1, "", "quantize"], [227, 12, 1, "", "run_evolutionary_search"], [227, 12, 1, "", "set_dynamic_config"], [227, 12, 1, "", "train"], [227, 12, 1, "", "training_step"], [227, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[227, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[228, 9, 0, "-", "get_throughput"], [230, 9, 0, "-", "metrics"], [231, 9, 0, "-", "models"], [234, 9, 0, "-", "objectives"], [235, 9, 0, "-", "utility"], [236, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[230, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[232, 9, 0, "-", "modeling_bert_dynamic"], [233, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[232, 10, 1, "", "BertAttention"], [232, 10, 1, "", "BertEmbeddings"], [232, 10, 1, "", "BertEncoder"], [232, 10, 1, "", "BertForMaskedLM"], [232, 10, 1, "", "BertForMultipleChoice"], [232, 10, 1, "", "BertForNextSentencePrediction"], [232, 10, 1, "", "BertForPreTraining"], [232, 10, 1, "", "BertForPreTrainingOutput"], [232, 10, 1, "", "BertForQuestionAnswering"], [232, 10, 1, "", "BertForSequenceClassification"], [232, 10, 1, "", "BertForTokenClassification"], [232, 10, 1, "", "BertIntermediate"], [232, 10, 1, "", "BertLMHeadModel"], [232, 10, 1, "", "BertLMPredictionHead"], [232, 10, 1, "", "BertLayer"], [232, 10, 1, "", "BertModel"], [232, 10, 1, "", "BertOnlyMLMHead"], [232, 10, 1, "", "BertOnlyNSPHead"], [232, 10, 1, "", "BertOutput"], [232, 10, 1, "", "BertPooler"], [232, 10, 1, "", "BertPreTrainedModel"], [232, 10, 1, "", "BertPreTrainingHeads"], [232, 10, 1, "", "BertPredictionHeadTransform"], [232, 10, 1, "", "BertSelfAttention"], [232, 10, 1, "", "BertSelfOutput"], [232, 13, 1, "", "expand_gather"], [232, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "get_output_embeddings"], [232, 12, 1, "", "prepare_inputs_for_generation"], [232, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "get_output_embeddings"], [232, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "get_output_embeddings"], [232, 12, 1, "", "prepare_inputs_for_generation"], [232, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[232, 12, 1, "", "feed_forward_chunk"], [232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "get_input_embeddings"], [232, 12, 1, "", "set_input_embeddings"], [232, 12, 1, "", "set_length_config"], [232, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[232, 12, 1, "", "forward"], [232, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[232, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[233, 10, 1, "", "RobertaAttention"], [233, 10, 1, "", "RobertaClassificationHead"], [233, 10, 1, "", "RobertaEmbeddings"], [233, 10, 1, "", "RobertaEncoder"], [233, 10, 1, "", "RobertaForCausalLM"], [233, 10, 1, "", "RobertaForMaskedLM"], [233, 10, 1, "", "RobertaForMultipleChoice"], [233, 10, 1, "", "RobertaForQuestionAnswering"], [233, 10, 1, "", "RobertaForSequenceClassification"], [233, 10, 1, "", "RobertaForTokenClassification"], [233, 10, 1, "", "RobertaIntermediate"], [233, 10, 1, "", "RobertaLMHead"], [233, 10, 1, "", "RobertaLayer"], [233, 10, 1, "", "RobertaModel"], [233, 10, 1, "", "RobertaOutput"], [233, 10, 1, "", "RobertaPooler"], [233, 10, 1, "", "RobertaPreTrainedModel"], [233, 10, 1, "", "RobertaSelfAttention"], [233, 10, 1, "", "RobertaSelfOutput"], [233, 13, 1, "", "create_position_ids_from_input_ids"], [233, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[233, 12, 1, "", "forward"], [233, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[233, 12, 1, "", "create_position_ids_from_inputs_embeds"], [233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[233, 12, 1, "", "forward"], [233, 12, 1, "", "get_output_embeddings"], [233, 12, 1, "", "prepare_inputs_for_generation"], [233, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[233, 12, 1, "", "forward"], [233, 12, 1, "", "get_output_embeddings"], [233, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[233, 12, 1, "", "feed_forward_chunk"], [233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[233, 12, 1, "", "forward"], [233, 12, 1, "", "get_input_embeddings"], [233, 12, 1, "", "set_input_embeddings"], [233, 12, 1, "", "set_length_config"], [233, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[233, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[233, 12, 1, "", "forward"], [233, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[233, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[234, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[234, 12, 1, "", "modelsize"], [234, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[235, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[236, 10, 1, "", "TFDataloader"], [236, 13, 1, "", "distributed_init"], [236, 13, 1, "", "get_filepath"], [236, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[237, 9, 0, "-", "data_augmentation"], [239, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[237, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[237, 12, 1, "", "data_augment"], [237, 12, 1, "", "mit_data_augmentation"], [237, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[239, 10, 1, "", "AugmenterType"], [239, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[242, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[243, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[244, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[245, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[246, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_binary_op": [[247, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_binaryop": [[248, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_cast_to": [[249, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_concat": [[250, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[251, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[252, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[253, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[254, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[255, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_embedding": [[256, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[257, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_execution_options": [[258, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_gelu": [[259, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[260, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[261, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[262, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[263, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"], [263, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[264, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[265, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[266, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_layernorm": [[267, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_linear": [[268, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[269, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[270, 10, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_main": [[271, 10, 1, "", "TestMain"]], "test_main.TestMain": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_matmul": [[272, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[273, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[274, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[275, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[276, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[277, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[279, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[280, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_ops": [[281, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[282, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[283, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[284, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_permute": [[285, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[286, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_pow": [[287, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[288, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[289, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[290, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[291, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[292, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[293, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[294, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[295, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_size": [[296, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_softmax": [[297, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[298, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_tanh": [[299, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[300, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[301, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[302, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[303, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_transpose": [[304, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[305, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_unet": [[306, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[307, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[308, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[309, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[310, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[311, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[312, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[313, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[314, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 347, 354], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 198, 200, 201, 202, 203, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 198, 200, 201, 202, 203, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 391, 396], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 198, 201, 202, 204, 207, 209, 210, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 226, 227, 230, 232, 233, 234, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324, 325, 335, 383], "function": [0, 2, 10, 14, 15, 36, 48, 100, 132, 189, 190, 193, 200, 201, 203, 204, 215, 217, 220, 221, 223, 224, 225, 232, 233, 235, 236, 239], "attribut": [0, 36, 100, 189, 345, 355], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 351, 356, 385], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 320, 360], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 197, 199, 205, 206, 208, 211, 218, 229, 231, 238], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 321, 356, 358, 359], "graph_util": 10, "subpackag": [11, 191, 206], "loader": [12, 13], "logger": [14, 219], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 355, 358], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 370, 371, 373, 376], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 111], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 372, 373, 374], "mean": [43, 368], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 131], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 370, 374, 375, 376], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 372], "slice": 68, "softmax": [69, 380], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 374, 375], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "innerproductwithswish": 103, "input_data": 104, "input_fil": 105, "insert_bf16_nod": 106, "insert_quant_nod": 107, "int8_bf16_mixed_precision_check": 108, "interact_featur": 109, "last_layer_shap": 110, "layer_norm_with_reduce_mean": 112, "layer_norm_with_transpos": 113, "llama_embed": 114, "llama_matmulwithtranspos": 115, "llama_postprocess": 116, "llama_rotary_pos_emb": 117, "lower_all_tupl": 118, "matmul_with_bia": 119, "matmul_with_bias_add": 120, "matmul_with_bias_gelu": 121, "matmul_with_bias_relu": 122, "matmul_with_bias_sigmoid": 123, "matmul_with_bias_tanh": 124, "matmul_with_bias_unsqueez": 125, "matmul_with_transpos": 126, "merged_embeddingbag": 127, "multi_head_attent": 128, "operator_adaptor": 129, "output_data": 130, "pattern": [132, 220, 355, 358, 359, 363, 370, 371, 376], "position_embed": 133, "position_embeddings_v1": 134, "qkv_merg": 135, "qkv_reshap": 136, "quantize_fus": 137, "quantized_graph_dtype_refactor": 138, "remove_constant_op": 139, "remove_last_view": 140, "remove_rang": 141, "removeslic": 142, "reshape_after_restore_hidden_st": 143, "reshape_before_and_after_attention_out_layer_norm_gather_el": 144, "reshape_before_restore_hidden_st": 145, "reshape_fus": 146, "resnetblock_instancenormreshapefromconv": 147, "resnetblock_instancenormreshapefromdiv": 148, "restnetblock_groupnorm": 149, "restore_hidden_states_in_length_adaptive_update_indic": 150, "rms_norm": 151, "rotary_pos_emb": 152, "slicemask": 153, "stablediffusion_mha": 154, "stablediffusion_mhareshap": 155, "stablediffusion_reshapefus": 156, "stablediffusion_bf16convert": 157, "start_end_logit": 158, "subgraph_match": 159, "textencdoer_word_embed": 160, "textencoder_attentionmaskaddreshap": 161, "textencoder_attentionreshap": 162, "textencoder_kvreshap": 163, "textencoder_mulreshap": 164, "textencoder_qreshap": 165, "textencoder_softmaxreshap": 166, "textencoder_causal_attention_mask": 167, "token_type_embed": 168, "token_type_embeddings_v1": 169, "torch_embed": 170, "torch_ip_insert_bia": 171, "torchinsertbf16nod": 172, "torchpaddingsqu": 173, "transformer2dmodel_attentionmaskaddreshap": 174, "transformer2dmodel_constantofshapewithmul": 175, "transformer2dmodel_ffnslic": 176, "transformer2dmodel_ffnslice_1": 177, "transformer2dmodel_qkvprereshap": 178, "transformer2dmodel_qkvreshap": 179, "transformer2dmodel_qkvreshape4d": 180, "transformer2dmodel_encoderhiddenstatesreshap": 181, "transformer2dmodel_getsamplebatch": 182, "transformer2dmodel_instancenormreshapefromadd": 183, "transformer2dmodel_instancenormreshapefromconcat": 184, "transformer2dmodel_sampleslic": 185, "transformer2dmodel_upblockres": 186, "transpose_batch_matmul": 187, "word_embed": 188, "tf_util": 189, "torch_util": 190, "evalu": [192, 193, 194, 195, 196, 197, 198], "lm_eval": [193, 194, 195, 196, 197, 198], "model": [195, 196, 209, 231, 232, 233, 316, 329, 336, 348, 351, 356, 357, 360, 361, 379, 385], "huggingfac": 195, "task": [197, 198], "lambada": 198, "optim": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 330, 331], "benchmark": [200, 336, 361, 380], "config": [201, 328, 335, 355, 358], "distil": [202, 335, 349, 350, 352], "dynam": [203, 204, 205, 372, 387], "drop_and_restore_util": 203, "evolut": 204, "mixtur": [207, 208], "auto_distil": 207, "na": [210, 211, 212, 350], "basic_na": 210, "optimizer_tf": [214, 335], "pipelin": [215, 335, 385], "prune": [216, 222, 350, 352, 386], "pytorch_prun": [217, 218, 219, 220, 221, 222, 223, 224, 225], "criteria": 217, "pruner": 221, "reg": 223, "schedul": 224, "util": [225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239], "quantiz": [226, 350, 352, 361, 387], "trainer": [227, 332, 335, 349, 386, 387], "get_throughput": 228, "metric": [230, 349, 383, 386, 387], "modeling_bert_dynam": 232, "modeling_roberta_dynam": 233, "object": [234, 384, 387], "utility_tf": 236, "preprocess": [237, 238, 239, 372], "data_augment": 237, "version": [240, 354], "sparsity_al": 241, "test_add_cls_token": 242, "test_add_embed": 243, "test_attention_output_layer_norm_length_adaptive_keep_indic": 244, "test_attention_reshap": 245, "test_bert_mini_fp32": 246, "test_binary_op": 247, "test_binaryop": 248, "test_cast_to": 249, "test_concat": 250, "test_conv_reshap": 251, "test_decoder_attn_reshap": 252, "test_dispatcher_tuning_acc": 253, "test_dispatcher_tuning_throughput": 254, "test_dynamic_quant": 255, "test_embed": 256, "test_embeddingbag": 257, "test_execution_opt": 258, "test_gelu": 259, "test_gpt_int8": 260, "test_graph_dispatch": 261, "test_insert_input_output_data": 262, "test_is_supported_onnx_graph": 263, "test_last_layer_shap": 264, "test_layer_norm_with_reduce_mean": 265, "test_layer_norm_with_transpos": 266, "test_layernorm": 267, "test_linear": 268, "test_linear_int8": 269, "test_llama_pattern": 270, "test_main": 271, "test_matmul": 272, "test_matmul_int8": 273, "test_matmul_with_bias_relu": 274, "test_matmul_with_bias_sigmoid": 275, "test_matmul_with_bias_tanh": 276, "test_merged_embeddingbag": 277, "test_model": 278, "test_onnx_util": 279, "test_operator_adaptor": 280, "test_op": 281, "test_padding_seq": 282, "test_padding_sequ": 283, "test_pattern_dispatch": 284, "test_permut": 285, "test_position_embed": 286, "test_pow": 287, "test_primitive_cache_acc": 288, "test_primitive_cache_throughput": 289, "test_qkv_merg": 290, "test_qkv_reshap": 291, "test_quant_onnx_execut": 292, "test_reshape_after_restore_hidden_st": 293, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 294, "test_reshape_before_restore_hidden_st": 295, "test_siz": 296, "test_softmax": 297, "test_start_end_logit": 298, "test_tanh": 299, "test_text_encod": 300, "test_text_encoder_bf16": 301, "test_tf_util": 302, "test_token_type_embed": 303, "test_transpos": 304, "test_transpose_batch_matmul": 305, "test_unet": 306, "test_unet_bf16": 307, "test_unsqueez": 308, "test_vae_decod": 309, "test_vae_decoder_bf16": 310, "test_weight_sharing_acc": 311, "test_weight_sharing_dispatcher_tuning_acc": 312, "test_weight_sharing_dispatcher_tuning_throughtput": 313, "test_weight_sharing_throughput": 314, "secur": 315, "polici": 315, "report": 315, "vulner": 315, "intel": [316, 334, 339, 348, 350, 392], "extens": [316, 334, 339, 348, 350, 392], "transform": [316, 334, 339, 348, 350, 352, 365, 392], "acceler": [316, 352, 365, 369], "base": [316, 350], "platform": [316, 364, 378], "select": 316, "public": 316, "event": 316, "api": [317, 318, 319, 322, 327, 333, 335, 336, 351, 357, 365], "document": [318, 339, 392], "exampl": [318, 335, 336, 337, 350, 351, 357, 360, 380, 384, 385, 390], "python": [319, 357], "engin": [322, 323, 343, 350, 352, 354, 356, 358, 360, 361, 364, 396], "kernel": [324, 327, 340, 358, 365, 369, 372, 380, 393], "operator_desc": [325, 367, 368], "oper": [326, 357, 362], "specif": 326, "type": [326, 355, 386], "pytorch": [330, 335, 336, 349, 350], "tensorflow": [331, 335, 349, 350], "user": [333, 344, 365, 367, 368, 389, 397], "face": 333, "architectur": [334, 356], "autodistil": 335, "design": [335, 361], "framework": [335, 367, 368], "criterion": [335, 349], "knowledgedistillationloss": 335, "intermediatelayersknowledgedistillationloss": 335, "usag": [335, 349, 351, 367, 368, 380, 386], "flash": 335, "regular": 335, "introduct": [336, 347, 349, 351, 355, 357, 358, 359, 360, 363, 365, 367, 368, 369, 370, 374, 379, 383, 384, 385, 386, 387], "get": [336, 347, 348, 352, 357, 361, 383, 387], "start": [336, 347, 348, 352, 383, 387], "stock": [336, 350], "ipex": [336, 350], "output": [336, 348], "featur": [338, 367, 368, 387, 391], "welcom": [339, 392], "section": [339, 392], "implement": [341, 394], "detail": [341, 372, 375, 394], "perform": [342, 364, 365, 377, 378, 395], "neural": [343, 350, 352, 354, 356, 364, 396], "guid": [344, 389, 397], "contributor": [345, 346], "coven": [345, 346], "code": [345, 346], "conduct": [345, 346], "our": 345, "pledg": 345, "standard": 345, "respons": 345, "scope": 345, "enforc": 345, "contribut": 346, "guidelin": 346, "pull": 346, "request": 346, "checklist": 346, "templat": 346, "support": [346, 347, 348, 351, 360, 364, 365, 383, 384, 387], "data": [347, 371, 378], "augment": 347, "instal": [347, 348, 353, 354, 361, 365], "depend": 347, "script": [347, 349, 386, 387], "paramet": 347, "text": 347, "gener": [347, 356], "argument": 347, "overview": 348, "recommend": 348, "hardwar": [348, 353], "valid": [348, 353, 378], "environ": [348, 353, 361], "how": [348, 358, 379], "work": [348, 369], "1": [348, 356, 357, 361, 362, 379], "prerequisit": [348, 353, 354, 361, 372], "2": [348, 356, 361, 362, 379], "from": [348, 353, 354], "pypi": [348, 353], "conda": 348, "3": [348, 356, 379], "sourc": [348, 353], "To": [348, 361], "run": [348, 356, 357, 361, 379], "requir": [348, 353], "prepar": [348, 360, 361, 379], "dataset": [348, 361], "compress": 348, "4": [348, 356, 378], "infer": [348, 356, 366, 385], "expect": 348, "summari": [348, 383], "next": 348, "step": 348, "learn": 348, "more": [348, 358, 369], "knowledg": [349, 350], "intermedi": 349, "layer": [349, 373], "creat": [349, 359, 386, 387], "an": [349, 360, 386, 387], "instanc": [349, 386, 387], "option": [349, 358, 386, 387], "distillationconfig": 349, "length": [350, 352], "adapt": [350, 352], "auto": 350, "orchestr": 350, "refer": [350, 365], "deploy": 350, "dens": [350, 369], "spars": [350, 357, 369, 370, 371, 373, 376, 379], "export": 351, "onnx": [351, 356, 360, 361], "matrix": [351, 364, 365, 372, 384, 387], "fp32": 351, "bf16": 351, "int8": [351, 361, 385], "For": [351, 380], "executor": [351, 362, 385], "linux": 353, "window": 353, "system": 353, "softwar": 353, "stabl": 354, "pip": 354, "binari": [354, 356, 367], "deploi": [354, 356], "bare": 354, "metal": 354, "add": [355, 362], "custom": [355, 356, 362], "regist": [355, 362], "node": [355, 359], "set": [355, 357], "map": [355, 359], "fuse": 355, "new": [355, 359], "after": 355, "fusion": [355, 359], "integr": 356, "tf": 356, "us": [356, 372], "through": 356, "manual": 356, "yaml": 356, "weight": [356, 372, 379], "build": [356, 365, 380], "profil": [357, 377], "profl": 357, "you": 357, "can": 357, "onli": 357, "engine_profil": 357, "befor": 357, "c": 357, "part": 357, "csv": 357, "ratio": 357, "total": 357, "level": 357, "json": 357, "iter": 357, "tune": [358, 361, 387], "dispatch": 358, "best": 358, "relat": 358, "runtim": 358, "turn": 358, "mechan": 358, "dict": 359, "obtain": 359, "necessari": 359, "inform": [359, 382], "construct": 359, "establish": 359, "connect": 359, "remov": [359, 363], "old": 359, "insert": 359, "ir": [360, 361], "format": [360, 371, 381], "low": 361, "precis": 361, "its": 361, "accuraci": [361, 387], "h": 362, "includ": 362, "cpp": 362, "src": 362, "recogn": 363, "represent": 363, "pars": 363, "list": [363, 386], "search": 363, "each": 363, "straight": 363, "chain": 363, "splice": 363, "sub": 363, "main": 363, "duplic": 363, "result": [363, 379], "configur": [364, 378], "librari": 365, "test": 365, "sparse_matmul": [365, 380], "3d": 366, "memori": 366, "layout": 366, "spmm_vnni": [366, 380], "cach": 366, "issu": 366, "injector": [367, 368], "param_typ": [367, 368], "hpp": [367, 368], "jit_binaryop_injector": 367, "develop": [367, 368, 380], "": [367, 368], "perspect": [367, 368], "element": 368, "wise": 368, "alpha": 368, "beta": 368, "scale": 368, "jit_eltwise_injector": 368, "naiv": 369, "tile": 369, "effici": 369, "per": 369, "thread": [369, 378], "prefetch": 369, "amx": 370, "brief": 370, "isa": 370, "avx512f": 371, "kei": 371, "instruct": 371, "loop": 371, "quant": 372, "problem": [372, 373, 374, 375], "descript": [372, 373, 375], "differ": 372, "jit": 372, "path": 372, "small_wei": 372, "large_wei": 372, "normal": 373, "layernorm": 373, "pre": 373, "comput": 373, "spmm": 373, "direct": 373, "layernorm_ba": [373, 380], "statement": 374, "matmul_p2031_2013": 374, "matmul_avx512f_p2031_p2013": [374, 380], "matmul_noperm_p2031_p1302": 374, "matmul_vnni_noperm_p2013_p1302": 374, "beforehand": 374, "mha": [375, 380], "calcul": 375, "vnni": 376, "On": 376, "fly": 376, "activ": 376, "candid": 376, "verbos": 377, "vtune": 377, "sde": 377, "singl": 378, "multi": 378, "visual": 379, "distribut": 379, "setup": 379, "below": 379, "command": 379, "analysi": 379, "spmm_avx512f": 380, "spmm_amx_bf16_x16": 380, "eltwiseop": 380, "transpose_matmul": 380, "matmul_vnni_noperm_p2031_p1302": 380, "attent": 380, "static": [380, 387], "dynamic_quant_matmul": 380, "dynamic_qu": 380, "input": 381, "legal": 382, "licens": 382, "citat": 382, "trademark": 382, "prunerconfig": 386, "pruningconfig": 386, "fundament": 387, "approach": 387, "post": 387, "train": 387, "awar": 387, "quantizationconfig": 387, "releas": 388, "note": 388}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [193, "module-contents"], [195, "module-contents"], [198, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [207, "module-contents"], [209, "module-contents"], [210, "module-contents"], [212, "module-contents"], [213, "module-contents"], [214, "module-contents"], [215, "module-contents"], [216, "module-contents"], [217, "module-contents"], [220, "module-contents"], [221, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [227, "module-contents"], [230, "module-contents"], [232, "module-contents"], [233, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [239, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [195, "classes"], [198, "classes"], [201, "classes"], [202, "classes"], [204, "classes"], [207, "classes"], [209, "classes"], [210, "classes"], [212, "classes"], [213, "classes"], [214, "classes"], [216, "classes"], [217, "classes"], [220, "classes"], [221, "classes"], [222, "classes"], [223, "classes"], [224, "classes"], [226, "classes"], [227, "classes"], [230, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [236, "classes"], [237, "classes"], [239, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [132, "functions"], [189, "functions"], [190, "functions"], [193, "functions"], [200, "functions"], [201, "functions"], [203, "functions"], [204, "functions"], [215, "functions"], [217, "functions"], [220, "functions"], [221, "functions"], [223, "functions"], [224, "functions"], [225, "functions"], [232, "functions"], [233, "functions"], [235, "functions"], [236, "functions"], [239, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [189, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [197, "submodules"], [199, "submodules"], [205, "submodules"], [206, "submodules"], [208, "submodules"], [211, "submodules"], [218, "submodules"], [229, "submodules"], [231, "submodules"], [238, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [191, "subpackages"], [206, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[191, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[192, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[193, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[194, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[199, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[200, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[201, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[202, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[203, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[204, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[205, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[206, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[207, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[208, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[209, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[210, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[211, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[212, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[213, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[214, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[215, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[216, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[218, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[226, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[227, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[228, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[229, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[230, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[231, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[232, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[233, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[234, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[235, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[236, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[237, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[238, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[239, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[240, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[241, "module-sparsity_all"]], "test_add_cls_token": [[242, "module-test_add_cls_token"]], "test_add_embeddings": [[243, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[244, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[245, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[246, "module-test_bert_mini_fp32"]], "test_binary_op": [[247, "module-test_binary_op"]], "test_binaryop": [[248, "module-test_binaryop"]], "test_cast_to": [[249, "module-test_cast_to"]], "test_concat": [[250, "module-test_concat"]], "test_conv_reshape": [[251, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[252, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[253, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[254, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[255, "module-test_dynamic_quantization"]], "test_embedding": [[256, "module-test_embedding"]], "test_embeddingbag": [[257, "module-test_embeddingbag"]], "test_execution_options": [[258, "module-test_execution_options"]], "test_gelu": [[259, "module-test_gelu"]], "test_gpt_int8": [[260, "module-test_gpt_int8"]], "test_graph_dispatch": [[261, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[262, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[263, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[264, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[265, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[266, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[267, "module-test_layernorm"]], "test_linear": [[268, "module-test_linear"]], "test_linear_int8": [[269, "module-test_linear_int8"]], "test_llama_pattern": [[270, "module-test_llama_pattern"]], "test_main": [[271, "module-test_main"]], "test_matmul": [[272, "module-test_matmul"]], "test_matmul_int8": [[273, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[274, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[275, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[276, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[277, "module-test_merged_embeddingbag"]], "test_model": [[278, "module-test_model"]], "test_onnx_utils": [[279, "module-test_onnx_utils"]], "test_operator_adaptor": [[280, "module-test_operator_adaptor"]], "test_ops": [[281, "module-test_ops"]], "test_padding_seq": [[282, "module-test_padding_seq"]], "test_padding_sequence": [[283, "module-test_padding_sequence"]], "test_pattern_dispatch": [[284, "module-test_pattern_dispatch"]], "test_permute": [[285, "module-test_permute"]], "test_position_embeddings": [[286, "module-test_position_embeddings"]], "test_pow": [[287, "module-test_pow"]], "test_primitive_cache_acc": [[288, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[289, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[290, "module-test_qkv_merge"]], "test_qkv_reshape": [[291, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[292, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[293, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[294, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[295, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[296, "module-test_size"]], "test_softmax": [[297, "module-test_softmax"]], "test_start_end_logits": [[298, "module-test_start_end_logits"]], "test_tanh": [[299, "module-test_tanh"]], "test_text_encoder": [[300, "module-test_text_encoder"]], "test_text_encoder_bf16": [[301, "module-test_text_encoder_bf16"]], "test_tf_utils": [[302, "module-test_tf_utils"]], "test_token_type_embeddings": [[303, "module-test_token_type_embeddings"]], "test_transpose": [[304, "module-test_transpose"]], "test_transpose_batch_matmul": [[305, "module-test_transpose_batch_matmul"]], "test_unet": [[306, "module-test_unet"]], "test_unet_bf16": [[307, "module-test_unet_bf16"]], "test_unsqueeze": [[308, "module-test_unsqueeze"]], "test_vae_decoder": [[309, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[310, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[311, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[312, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[313, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[314, "module-test_weight_sharing_throughput"]], "Security Policy": [[315, "security-policy"]], "Report a Vulnerability": [[315, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[316, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[316, "selected-publications-events"]], "API": [[317, "api"]], "API Document Example": [[318, "api-document-example"]], "Python APIs": [[319, "python-apis"]], "Compile": [[320, "compile"]], "Graph": [[321, "graph"]], "Engine API": [[322, "engine-api"]], "Class engine": [[323, "class-engine"]], "Class Kernel": [[324, "class-kernel"]], "Class operator_desc": [[325, "class-operator-desc"]], "Operator Specific Types": [[326, "operator-specific-types"]], "Kernel APIs": [[327, "kernel-apis"]], "Config": [[328, "config"]], "Model": [[329, "model"]], "PyTorch Optimizer": [[330, "pytorch-optimizer"]], "TensorFlow Optimizer": [[331, "tensorflow-optimizer"]], "Trainer": [[332, "trainer"]], "User-facing API": [[333, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[334, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[335, "autodistillation-design"]], "AutoDistillation Pipeline": [[335, "autodistillation-pipeline"]], "Framework Class Design": [[335, "framework-class-design"]], "Criterion Class Design": [[335, "criterion-class-design"]], "KnowledgeDistillationLoss": [[335, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[335, "intermediatelayersknowledgedistillationloss"]], "Usage": [[335, "usage"], [367, "usage"], [368, "usage"], [380, "usage"], [386, "usage"]], "Pytorch": [[335, "pytorch"]], "AutoDistillation API in Trainer": [[335, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[335, "flash-distillation-config-example"]], "Regular distillation config example": [[335, "regular-distillation-config-example"]], "AutoDistillation config example": [[335, "autodistillation-config-example"], [335, "id1"]], "Tensorflow": [[335, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[335, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[335, "distillation-config-example"]], "Benchmark": [[336, "benchmark"]], "Introduction": [[336, "introduction"], [347, "introduction"], [349, "introduction"], [351, "introduction"], [355, "introduction"], [357, "introduction"], [358, "introduction"], [359, "introduction"], [360, "introduction"], [363, "introduction"], [365, "introduction"], [367, "introduction"], [368, "introduction"], [369, "introduction"], [374, "introduction"], [379, "introduction"], [383, "introduction"], [384, "introduction"], [385, "introduction"], [386, "introduction"], [387, "introduction"]], "Get Started with Benchmark API": [[336, "get-started-with-benchmark-api"]], "Examples": [[336, "examples"], [350, "examples"], [351, "examples"], [380, "examples"], [380, "id1"], [380, "id2"], [380, "id3"], [380, "id4"], [380, "id5"], [380, "id6"], [380, "id7"], [380, "id8"], [380, "id9"], [380, "id10"], [380, "id11"], [385, "examples"]], "Stock Pytorch Model": [[336, "stock-pytorch-model"]], "IPEX Model": [[336, "ipex-model"]], "Benchmark Output": [[336, "benchmark-output"]], "Example": [[337, "example"], [390, "example"]], "Features": [[338, "features"], [391, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[339, "welcome-to-intel-extension-for-transformers-documentation"], [392, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[339, "sections"], [392, "sections"]], "Kernels": [[340, "kernels"], [393, "kernels"]], "Implementation Details": [[341, "implementation-details"], [394, "implementation-details"]], "Performance": [[342, "performance"], [364, "performance"], [365, "performance"], [395, "performance"]], "Neural Engine": [[343, "neural-engine"], [396, "neural-engine"]], "User Guide": [[344, "user-guide"], [389, "user-guide"], [397, "user-guide"]], "Contributor Covenant Code of Conduct": [[345, "contributor-covenant-code-of-conduct"], [346, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[345, "our-pledge"]], "Our Standards": [[345, "our-standards"]], "Our Responsibilities": [[345, "our-responsibilities"]], "Scope": [[345, "scope"]], "Enforcement": [[345, "enforcement"]], "Attribution": [[345, "attribution"]], "Contribution Guidelines": [[346, "contribution-guidelines"]], "Pull Request Checklist": [[346, "pull-request-checklist"]], "Pull Request Template": [[346, "pull-request-template"]], "Support": [[346, "support"], [348, "support"]], "Data Augmentation": [[347, "data-augmentation"], [347, "id1"]], "Getting Started": [[347, "getting-started"], [352, "getting-started"]], "Install Dependency": [[347, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[347, "install-intel-extension-for-transformers"]], "Script": [[347, "script"]], "Parameters of Data Augmentation": [[347, "parameters-of-data-augmentation"]], "Supported Augmenter": [[347, "supported-augmenter"]], "Text Generation Augmenter": [[347, "text-generation-augmenter"]], "Augmenter Arguments:": [[347, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[348, "intel-extension-for-transformers"]], "Overview": [[348, "overview"]], "Recommended Hardware": [[348, "recommended-hardware"]], "Validated Hardware Environment": [[348, "validated-hardware-environment"], [353, "validated-hardware-environment"]], "How it Works": [[348, "how-it-works"]], "Get Started": [[348, "get-started"], [387, "get-started"]], "1. Prerequisites": [[348, "prerequisites"]], "2. Installation": [[348, "installation"]], "2.1 Install from PyPi": [[348, "install-from-pypi"]], "2.2 Install from Conda": [[348, "install-from-conda"]], "2.3 Install from Source": [[348, "install-from-source"]], "3. How To Run": [[348, "how-to-run"]], "3.1 Install Requirements": [[348, "install-requirements"]], "3.2 Prepare Datasets": [[348, "prepare-datasets"]], "3.3 Model Compression": [[348, "model-compression"]], "3.4 Model Inference": [[348, "model-inference"]], "Expected Output": [[348, "expected-output"]], "Summary and Next Steps": [[348, "summary-and-next-steps"]], "Learn More": [[348, "learn-more"]], "Distillation": [[349, "distillation"], [349, "id1"], [350, "distillation"], [352, "distillation"]], "Knowledge Distillation": [[349, "knowledge-distillation"], [350, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[349, "intermediate-layer-knowledge-distillation"]], "usage": [[349, "usage"]], "Pytorch Script:": [[349, "pytorch-script"]], "Tensorflow Script:": [[349, "tensorflow-script"]], "Create an Instance of Metric": [[349, "create-an-instance-of-metric"], [387, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[349, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[349, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[349, "distill-with-trainer"]], "Quantization": [[350, "quantization"], [352, "quantization"], [387, "quantization"]], "Stock PyTorch Examples": [[350, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[350, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[350, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[350, "length-adaptive-transformers"]], "Pruning": [[350, "pruning"], [352, "pruning"], [386, "pruning"]], "Auto Distillation (NAS Based)": [[350, "auto-distillation-nas-based"]], "Orchestrate": [[350, "orchestrate"]], "Reference Deployment on Neural Engine": [[350, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[350, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[350, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[351, "export-to-onnx"]], "Supported Model Export Matrix": [[351, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[351, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[351, "export-to-bf16-onnx-model"]], "API usage": [[351, "api-usage"]], "Export to INT8 ONNX Model": [[351, "export-to-int8-onnx-model"]], "For executor backend": [[351, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[352, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[352, "transformers-accelerated-neural-engine"]], "Installation": [[353, "installation"], [354, "installation"], [365, "installation"]], "Linux Installation": [[353, "linux-installation"]], "Prerequisites": [[353, "prerequisites"], [353, "id1"], [354, "prerequisites"]], "Install from Pypi": [[353, "install-from-pypi"], [353, "id2"]], "Install from Source": [[353, "install-from-source"], [353, "id3"]], "Windows Installation": [[353, "windows-installation"]], "System Requirements": [[353, "system-requirements"]], "Validated Software Environment": [[353, "validated-software-environment"]], "Install": [[354, "install"]], "Install stable version intel_extension_for_transformers from pip": [[354, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[354, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[355, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[355, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[355, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[355, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[356, "deploy-and-integration"]], "1. Architecture": [[356, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[356, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[356, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[356, "run-the-inference-by-engine"], [356, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[356, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[356, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[356, "integrate-neural-engine-as-backend"]], "Profiling": [[357, "profiling"]], "Profling API": [[357, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[357, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[357, "profiling-examples"]], "Parts of CSV Profiling": [[357, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[357, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[357, "operator-profiling-part"]], "Total Profiling Part": [[357, "total-profiling-part"]], "Levels of JSON Profiling": [[357, "levels-of-json-profiling"]], "Model Level": [[357, "model-level"]], "Iteration Level": [[357, "iteration-level"]], "Operator Level": [[357, "operator-level"]], "Engine Tuning": [[358, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[358, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[358, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[358, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[358, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[358, "more-tuning-options"]], "Graph Fusion": [[359, "graph-fusion"]], "Pattern Mapping Dict": [[359, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[359, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[359, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[359, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[360, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[360, "supported-onnx-format"]], "Compile Examples": [[360, "compile-examples"]], "Prepare ONNX Model": [[360, "prepare-onnx-model"]], "Compile to IR": [[360, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[361, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[361, "design"]], "Prerequisite": [[361, "prerequisite"]], "Install environment": [[361, "install-environment"]], "Prepare Dataset": [[361, "prepare-dataset"]], "Prepare ONNX model": [[361, "prepare-onnx-model"]], "Run tuning and benchmark": [[361, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[361, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[361, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[362, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[362, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[362, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[363, "pattern-recognize"]], "Pattern Representation": [[363, "pattern-representation"]], "Parse Pattern Representation List": [[363, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[363, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[363, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[364, "neural-engine-support-matrix"]], "platform configuration": [[364, "platform-configuration"]], "Transformers-Accelerated Libraries": [[365, "transformers-accelerated-libraries"]], "Build": [[365, "build"], [380, "build"]], "Test": [[365, "test"]], "API reference for users": [[365, "api-reference-for-users"]], "sparse_matmul kernel:": [[365, "sparse-matmul-kernel"]], "Supported Matrix": [[365, "supported-matrix"]], "3D Inference": [[366, "d-inference"]], "Memory Layout in SPMM_VNNI": [[366, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[366, "cache-issues"]], "SPMM_VNNI 3D Inference": [[366, "spmm-vnni-3d-inference"]], "Binary Injectors": [[367, "binary-injectors"]], "Framework Features": [[367, "framework-features"], [368, "framework-features"]], "param_type.hpp": [[367, "param-type-hpp"]], "operator_desc.hpp": [[367, "operator-desc-hpp"], [368, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[367, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[367, "developer-s-perspective"]], "User\u2019s Perspective": [[367, "user-s-perspective"], [368, "user-s-perspective"]], "Element-wise Injector": [[368, "element-wise-injector"]], "param_types.hpp": [[368, "param-types-hpp"]], "alpha,beta,scale meaning": [[368, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[368, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[368, "developer-s-perspective"]], "Dense and Sparse": [[369, "dense-and-sparse"]], "Naive": [[369, "naive"]], "Tile": [[369, "tile"]], "Efficient kernel": [[369, "efficient-kernel"]], "More work per thread": [[369, "more-work-per-thread"]], "Prefetch": [[369, "prefetch"]], "Sparse acceleration": [[369, "sparse-acceleration"]], "Sparse GEMM AMX": [[370, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[370, "brief-introduction-for-isas"]], "Pattern": [[370, "pattern"]], "Reorder": [[370, "reorder"]], "Sparse GEMM AVX512F": [[371, "sparse-gemm-avx512f"]], "Key Instruction": [[371, "key-instruction"]], "Sparse Pattern & Data Format": [[371, "sparse-pattern-data-format"]], "Loops": [[371, "loops"]], "Dynamic Quant Matmul": [[372, "dynamic-quant-matmul"]], "problem description": [[372, "problem-description"]], "Kernel details": [[372, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[372, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[372, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[372, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[372, "small-wei-jit-path"]], "large_wei jit-path": [[372, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[373, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[373, "problem-description"]], "layernormalized sparse matmul": [[373, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[373, "pre-compute-spmm"]], "Direct Layernorm_ba": [[373, "direct-layernorm-ba"]], "Transposed MatMul": [[374, "transposed-matmul"]], "Problem Statements": [[374, "problem-statements"]], "Matmul_p2031_2013": [[374, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[374, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[374, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[374, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[374, "reorder-beforehand"]], "Transposed MHA": [[375, "transposed-mha"]], "Problem description": [[375, "problem-description"]], "Details": [[375, "details"]], "Reordering": [[375, "reordering"]], "Calculation": [[375, "calculation"]], "Sparse GEMM VNNI": [[376, "sparse-gemm-vnni"]], "On the fly activation reordering": [[376, "on-the-fly-activation-reordering"]], "Candidate patterns": [[376, "candidate-patterns"]], "Performance and Profiling": [[377, "performance-and-profiling"]], "Verbose": [[377, "verbose"]], "VTune": [[377, "vtune"]], "SDE": [[377, "sde"]], "Validated Performance Data": [[378, "validated-performance-data"]], "Single Thread": [[378, "single-thread"]], "Multi Thread (Thread = 4)": [[378, "multi-thread-thread-4"]], "Platform Configuration": [[378, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[379, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[379, "setups"]], "1. Prepare the sparse model": [[379, "prepare-the-sparse-model"]], "2. Run below commands": [[379, "run-below-commands"]], "3. Analysis results": [[379, "analysis-results"]], "Benchmark for Kernels": [[380, "benchmark-for-kernels"]], "sparse_matmul": [[380, "sparse-matmul"]], "spmm_avx512f": [[380, "spmm-avx512f"]], "spmm_vnni": [[380, "spmm-vnni"]], "spmm_amx_bf16_x16": [[380, "spmm-amx-bf16-x16"]], "eltwiseop": [[380, "eltwiseop"]], "layernorm_ba": [[380, "layernorm-ba"]], "transpose_matmul": [[380, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[380, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[380, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[380, "softmax"]], "attention": [[380, "attention"]], "Static MHA": [[380, "static-mha"]], "dynamic_quant_matmul": [[380, "dynamic-quant-matmul"]], "dynamic_quant": [[380, "dynamic-quant"]], "For developers": [[380, "for-developers"]], "Inputs format": [[381, "inputs-format"]], "Legal Information": [[382, "legal-information"]], "License": [[382, "license"]], "Citation": [[382, "citation"]], "Trademarks": [[382, "trademarks"]], "Metrics": [[383, "metrics"]], "Supported Metric": [[383, "supported-metric"]], "Metric Class Summary": [[383, "metric-class-summary"]], "Get Start with Metrics": [[383, "get-start-with-metrics"]], "Objective": [[384, "objective"]], "Supported Objectives Matrix:": [[384, "supported-objectives-matrix"]], "Examples:": [[384, "examples"]], "Pipeline": [[385, "pipeline"]], "Pipeline Inference for INT8 Model": [[385, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[385, "pipeline-inference-for-executor-backend"]], "Pruning types": [[386, "pruning-types"]], "Script:": [[386, "script"], [387, "script"]], "Create an instance of Metric": [[386, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[386, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[386, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[386, "prune-with-trainer"]], "Quantization Fundamentals": [[387, "quantization-fundamentals"]], "Quantization Approach": [[387, "quantization-approach"]], "Post Training Dynamic Quantization": [[387, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[387, "post-training-static-quantization"]], "Quantization Aware Training": [[387, "quantization-aware-training"]], "Accuracy Aware Tuning": [[387, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[387, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[387, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[387, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[387, "quantization-with-trainer"]], "Release": [[388, "release"]], "Release Notes": [[388, "release-notes"]], "Contents:": [[391, null], [396, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [191, "module-intel_extension_for_transformers.backends.neural_engine"], [192, "module-intel_extension_for_transformers.evaluation"], [193, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [194, "module-intel_extension_for_transformers.evaluation.lm_eval"], [195, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [196, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [197, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [198, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [199, "module-intel_extension_for_transformers"], [200, "module-intel_extension_for_transformers.optimization.benchmark"], [201, "module-intel_extension_for_transformers.optimization.config"], [202, "module-intel_extension_for_transformers.optimization.distillation"], [203, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [204, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [205, "module-intel_extension_for_transformers.optimization.dynamic"], [206, "module-intel_extension_for_transformers.optimization"], [207, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [208, "module-intel_extension_for_transformers.optimization.mixture"], [209, "module-intel_extension_for_transformers.optimization.model"], [210, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [211, "module-intel_extension_for_transformers.optimization.nas"], [212, "module-intel_extension_for_transformers.optimization.nas.nas"], [213, "module-intel_extension_for_transformers.optimization.optimizer"], [214, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [215, "module-intel_extension_for_transformers.optimization.pipeline"], [216, "module-intel_extension_for_transformers.optimization.pruning"], [217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [218, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [226, "module-intel_extension_for_transformers.optimization.quantization"], [227, "module-intel_extension_for_transformers.optimization.trainer"], [228, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [229, "module-intel_extension_for_transformers.optimization.utils"], [230, "module-intel_extension_for_transformers.optimization.utils.metrics"], [231, "module-intel_extension_for_transformers.optimization.utils.models"], [232, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [233, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [234, "module-intel_extension_for_transformers.optimization.utils.objectives"], [235, "module-intel_extension_for_transformers.optimization.utils.utility"], [236, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [237, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [238, "module-intel_extension_for_transformers.preprocessing"], [239, "module-intel_extension_for_transformers.preprocessing.utils"], [240, "module-intel_extension_for_transformers.version"], [241, "module-sparsity_all"], [242, "module-test_add_cls_token"], [243, "module-test_add_embeddings"], [244, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [245, "module-test_attention_reshape"], [246, "module-test_bert_mini_fp32"], [247, "module-test_binary_op"], [248, "module-test_binaryop"], [249, "module-test_cast_to"], [250, "module-test_concat"], [251, "module-test_conv_reshape"], [252, "module-test_decoder_attn_reshape"], [253, "module-test_dispatcher_tuning_acc"], [254, "module-test_dispatcher_tuning_throughput"], [255, "module-test_dynamic_quantization"], [256, "module-test_embedding"], [257, "module-test_embeddingbag"], [258, "module-test_execution_options"], [259, "module-test_gelu"], [260, "module-test_gpt_int8"], [261, "module-test_graph_dispatch"], [262, "module-test_insert_input_output_data"], [263, "module-test_is_supported_onnx_graph"], [264, "module-test_last_layer_shape"], [265, "module-test_layer_norm_with_reduce_mean"], [266, "module-test_layer_norm_with_transpose"], [267, "module-test_layernorm"], [268, "module-test_linear"], [269, "module-test_linear_int8"], [270, "module-test_llama_pattern"], [271, "module-test_main"], [272, "module-test_matmul"], [273, "module-test_matmul_int8"], [274, "module-test_matmul_with_bias_relu"], [275, "module-test_matmul_with_bias_sigmoid"], [276, "module-test_matmul_with_bias_tanh"], [277, "module-test_merged_embeddingbag"], [278, "module-test_model"], [279, "module-test_onnx_utils"], [280, "module-test_operator_adaptor"], [281, "module-test_ops"], [282, "module-test_padding_seq"], [283, "module-test_padding_sequence"], [284, "module-test_pattern_dispatch"], [285, "module-test_permute"], [286, "module-test_position_embeddings"], [287, "module-test_pow"], [288, "module-test_primitive_cache_acc"], [289, "module-test_primitive_cache_throughput"], [290, "module-test_qkv_merge"], [291, "module-test_qkv_reshape"], [292, "module-test_quant_onnx_execute"], [293, "module-test_reshape_after_restore_hidden_states"], [294, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [295, "module-test_reshape_before_restore_hidden_states"], [296, "module-test_size"], [297, "module-test_softmax"], [298, "module-test_start_end_logits"], [299, "module-test_tanh"], [300, "module-test_text_encoder"], [301, "module-test_text_encoder_bf16"], [302, "module-test_tf_utils"], [303, "module-test_token_type_embeddings"], [304, "module-test_transpose"], [305, "module-test_transpose_batch_matmul"], [306, "module-test_unet"], [307, "module-test_unet_bf16"], [308, "module-test_unsqueeze"], [309, "module-test_vae_decoder"], [310, "module-test_vae_decoder_bf16"], [311, "module-test_weight_sharing_acc"], [312, "module-test_weight_sharing_dispatcher_tuning_acc"], [313, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [314, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[191, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[192, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[193, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[193, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[194, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[195, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[195, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[195, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[198, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[198, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[199, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[200, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[200, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[200, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[200, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[200, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[201, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[201, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[201, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[202, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[202, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[202, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[203, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[203, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[203, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[204, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[204, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[205, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[206, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[207, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[207, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[208, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[209, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[209, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[209, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[210, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[210, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[210, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[210, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[210, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[211, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[212, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[212, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[213, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[213, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[213, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[214, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[214, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[215, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[215, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[216, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[216, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[216, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[218, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[221, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[221, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[222, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[222, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[223, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[223, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[224, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[224, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[225, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[225, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[226, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[226, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[227, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[227, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[227, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[227, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[228, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[229, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[230, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[230, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[231, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[232, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[232, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[233, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[233, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[234, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[234, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[234, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[234, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[235, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[235, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[236, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[236, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[236, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[236, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[236, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[237, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[237, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[237, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[237, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[237, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[238, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[239, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[239, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[239, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[240, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[241, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[242, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[242, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[242, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[242, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[243, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[243, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[243, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[243, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[244, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[244, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[244, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[244, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[245, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[245, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[245, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[245, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[246, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[246, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[246, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[246, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[247, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[247, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[247, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[247, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[248, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[248, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[248, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[248, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[249, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[249, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[249, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[249, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[250, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[250, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[250, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[250, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[251, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[251, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[251, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[251, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[252, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[252, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[252, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[252, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[253, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[253, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[253, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[253, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[254, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[254, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[254, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[254, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[255, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[255, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[255, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[255, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[256, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[256, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[256, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[256, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[257, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[257, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[257, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[257, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[258, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[258, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[258, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[258, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[259, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[259, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[259, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[259, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[260, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[260, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[260, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[260, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[261, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[261, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[261, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[261, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[262, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[262, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[262, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[262, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[263, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[263, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[263, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[263, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[263, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[264, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[264, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[264, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[264, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[265, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[265, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[265, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[265, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[266, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[266, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[266, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[266, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[267, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[267, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[267, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[267, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[268, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[268, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[268, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[268, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[269, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[269, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[269, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[269, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[270, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[270, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[270, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[270, "module-test_llama_pattern"]], "testmain (class in test_main)": [[271, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[271, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[271, "test_main.TestMain.tearDownClass"]], "test_main": [[271, "module-test_main"]], "testtorchop (class in test_matmul)": [[272, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[272, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[272, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[272, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[273, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[273, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[273, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[273, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[274, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[274, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[274, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[274, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[275, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[275, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[275, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[275, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[276, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[276, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[276, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[276, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[277, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[277, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[277, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[277, "module-test_merged_embeddingbag"]], "test_model": [[278, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[279, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[279, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[279, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[279, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[280, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[280, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[280, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[280, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[281, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[281, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[281, "test_ops.TestOps.tearDownClass"]], "test_ops": [[281, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[282, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[282, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[282, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[282, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[283, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[283, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[283, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[283, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[284, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[284, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[284, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[284, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[285, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[285, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[285, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[285, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[286, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[286, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[286, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[286, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[287, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[287, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[287, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[287, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[288, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[288, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[288, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[288, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[289, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[289, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[289, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[289, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[290, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[290, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[290, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[290, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[291, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[291, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[291, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[291, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[292, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[292, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[292, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[292, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[293, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[293, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[293, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[293, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[294, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[294, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[294, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[294, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[295, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[295, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[295, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[295, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[296, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[296, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[296, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[296, "module-test_size"]], "testtorchop (class in test_softmax)": [[297, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[297, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[297, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[297, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[298, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[298, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[298, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[298, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[299, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[299, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[299, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[299, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[300, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[300, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[300, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[300, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[301, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[301, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[301, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[301, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[302, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[302, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[302, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[302, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[303, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[303, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[303, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[303, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[304, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[304, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[304, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[304, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[305, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[305, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[305, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[305, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[306, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[306, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[306, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[306, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[307, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[307, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[307, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[307, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[308, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[308, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[308, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[308, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[309, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[309, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[309, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[309, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[310, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[310, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[310, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[310, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[311, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[311, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[311, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[311, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[312, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[312, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[312, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[312, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[313, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[313, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[313, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[313, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[314, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[314, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[314, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[314, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[323, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[323, "c.NULL_INSTANCE"]], "jd (c++ type)": [[323, "_CPPv42jd"], [324, "_CPPv42jd"], [325, "_CPPv42jd"], [326, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[323, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[323, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[323, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[323, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[323, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[323, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[323, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[323, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[323, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[323, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[323, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[323, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[323, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[323, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[323, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[323, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[323, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[324, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[324, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [324, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[324, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[324, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[324, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [324, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[324, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[324, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[324, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [324, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[324, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[324, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[324, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [324, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[324, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[324, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[324, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [324, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[324, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[324, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[324, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [324, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[324, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[324, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[324, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [324, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[324, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[324, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[324, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [324, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[324, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[324, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[324, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [324, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[324, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[324, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[324, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [324, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[324, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[324, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[324, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [324, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[324, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[324, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[324, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [324, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[324, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[324, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[324, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[324, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[324, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [324, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[324, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[324, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[324, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[324, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[324, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[324, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[324, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[324, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [324, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[324, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[324, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[324, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [324, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[324, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[324, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[324, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [324, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[324, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[324, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[324, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [324, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[324, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[324, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[324, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [324, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[324, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[324, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[324, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [324, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[324, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[324, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[324, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [324, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[324, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[324, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[324, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [324, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[324, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[324, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[324, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [324, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[324, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[324, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[324, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[324, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[324, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[324, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[324, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[324, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[324, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[324, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [324, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[324, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[324, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[324, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [324, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[324, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[324, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[324, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [324, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[324, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[324, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[324, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [324, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[324, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[324, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[324, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [324, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[324, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[324, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[324, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [324, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[324, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[324, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[324, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [324, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[324, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[324, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[324, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [324, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[324, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[324, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[324, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [324, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[324, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[324, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[324, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [324, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[324, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[325, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[325, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[325, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[325, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[325, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[325, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[325, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[325, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[325, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[325, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [325, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [325, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[325, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[325, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[325, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[325, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[325, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[326, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[326, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[326, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[326, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[326, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[326, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[326, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[326, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[326, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[326, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[326, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[326, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[326, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[326, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[326, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[326, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[326, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[326, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[326, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[326, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[326, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[326, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[326, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[326, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[326, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[326, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[326, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[326, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[326, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[326, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[326, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[326, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[326, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[326, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[326, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_8E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_gelu (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t8has_geluE"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_fp8 (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[326, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_io (c++ type)": [[326, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[326, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[326, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[326, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[326, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[326, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[326, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[326, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[326, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[326, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[326, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[326, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[326, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[326, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[326, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[326, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[326, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[326, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[326, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[326, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[326, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[326, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[326, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[326, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[326, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[326, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[326, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[326, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[326, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[326, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[326, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[326, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[326, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[326, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[326, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[326, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[326, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[326, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[326, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})