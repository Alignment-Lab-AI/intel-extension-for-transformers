Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/test_add_cls_token/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_conv_reshape/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_main/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_ops/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_position_embeddings/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_start_end_logits/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_c_engine", "docs/api_doc/api_engine", "docs/api_doc/api_kernel", "docs/api_doc/engine/compile", "docs/api_doc/engine/dispatcher", "docs/api_doc/kernel/api_c", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/kernel", "docs/api_doc/optimization", "docs/api_doc/optimization/benchmark", "docs/api_doc/optimization/distillation", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/optimizer_tf", "docs/api_doc/optimization/pipeline", "docs/api_doc/optimization/trainer", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/neural_engine", "docs/build_docs/source/xtransformers", "docs/data_augmentation", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "feature", "index", "kernel", "neural_engine", "xtransformers"], "filenames": ["autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_c_engine.rst", "docs/api_doc/api_engine.rst", "docs/api_doc/api_kernel.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/dispatcher.rst", "docs/api_doc/kernel/api_c.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/kernel.rst", "docs/api_doc/optimization.rst", "docs/api_doc/optimization/benchmark.rst", "docs/api_doc/optimization/distillation.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/optimizer_tf.rst", "docs/api_doc/optimization/pipeline.rst", "docs/api_doc/optimization/trainer.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/xtransformers.rst", "docs/data_augmentation.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "feature.rst", "index.rst", "kernel.rst", "neural_engine.rst", "xtransformers.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "Python APIs", "C++ APIs", "Python APIs", "C++ APIs", "Compile", "Class dispatcher", "Kernel C++ APIs", "Class engine", "Class kernel", "Optimization APIs", "Benchmark", "Distillation", "Optimizer", "Optimizer_tf", "Pipeline", "Trainer", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Transformers-accelerated Libraries", "Neural Engine", "Intel\u00ae Extension for Transformers", "Data Augmentation", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Deploy and Integration", "Installation", "Add Customized Pattern", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "platform configuration", "Transformers-accelerated Libraries", "Memory Layout in SPMM_VNNI", "Introduction", "Introduction", "Design of AMX Kernel", "Design of AVX512F Kernel", "Introduction", "Design of the VNNI Kernel", "Performance and Profiling", "Validation Performance Data", "Benchmark for Kernels", "Inputs format", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Transformers-accelerated Libraries", "Neural Engine", "Intel\u00ae Extension for Transformers"], "terms": {"The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 119, 121, 122, 123, 124, 126, 136, 138, 140, 141, 142, 144, 148, 184, 185, 186, 187, 188, 191, 194, 202, 203, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 240, 241, 242], "neural": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 104, 109, 118, 121, 126, 148, 184, 202, 205, 210, 217, 218, 219, 220, 221, 231, 239, 242, 244], "engin": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 104, 109, 118, 119, 136, 148, 184, 188, 202, 205, 217, 218, 220, 223, 228, 244], "start_pipelin": 1, "model": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 32, 42, 43, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 119, 122, 123, 125, 126, 127, 131, 136, 144, 190, 202, 203, 209, 210, 211, 213, 216, 217, 219, 220, 224, 225, 228, 232, 235, 238, 239, 241, 242, 246, 247], "config": [1, 6, 7, 8, 9, 32, 43, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 112, 115, 118, 119, 125, 126, 127, 128, 130, 131, 132, 134, 136, 140, 141, 184, 203, 209, 210, 211, 213, 215, 218, 220, 223, 228, 236, 240, 241], "none": [1, 6, 7, 9, 13, 59, 113, 114, 115, 116, 118, 119, 122, 123, 125, 126, 127, 128, 136, 138, 140, 141, 142, 143, 144, 202, 209, 210, 211, 212, 218, 238, 239, 241, 242], "pipelin": [1, 118, 119, 122, 123, 184, 194], "interfac": [1, 9, 140, 141, 191, 212, 216, 226], "firstli": [1, 9], "us": [1, 8, 9, 13, 32, 43, 74, 92, 109, 113, 115, 118, 119, 121, 122, 123, 125, 126, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 203, 209, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242], "loader": [1, 9, 110, 219, 221, 224], "get": [1, 6, 7, 8, 9, 12, 13, 32, 43, 59, 109, 113, 115, 116, 118, 122, 123, 125, 126, 130, 132, 134, 142, 144, 212, 217, 219, 220, 221, 223, 224, 228, 232, 233, 237, 240], "comput": [1, 8, 9, 109, 136, 140, 141, 213, 224, 226, 227, 228, 229, 232, 240, 242], "graph": [1, 2, 3, 4, 5, 8, 9, 10, 13, 32, 43, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 210, 217, 221, 224, 231, 232, 233], "correspond": [1, 4, 5, 8, 9, 202, 217, 220, 224, 226, 233, 242], "framework": [1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 112, 113, 118, 119, 127, 136, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 211, 214, 215, 217, 221, 226, 240, 241, 242], "contain": [1, 8, 9, 13, 109, 136, 140, 141, 202, 209, 210, 215, 217, 219, 220, 224, 226, 228, 236, 237, 241, 242], "node": [1, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 144, 212, 224, 225, 235], "edg": [1, 9], "i": [1, 2, 4, 5, 8, 9, 13, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 118, 119, 126, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242], "op": [1, 4, 5, 8, 9, 13, 109, 110, 136, 190, 218, 223, 224, 228, 229, 236, 237, 242], "tensor": [1, 4, 5, 6, 7, 8, 9, 13, 32, 43, 109, 110, 136, 140, 141, 190, 215, 217, 218, 220, 221, 223, 232, 236, 241, 242], "Then": [1, 8, 9, 210, 220, 221, 233, 236, 241, 242], "extract": [1, 2, 3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 217, 219, 221], "pack": [1, 9, 32, 110, 233], "them": [1, 4, 5, 8, 9, 215, 217, 220, 228, 230, 233, 242], "our": [1, 9, 203, 209, 212, 224, 228, 230, 232, 233, 240], "form": [1, 8, 9, 136, 210, 218, 224, 227, 231, 236], "next": [1, 6, 7, 9, 140, 141, 202, 220, 221, 228, 231, 232, 233], "exploit": [1, 9, 224], "abov": [1, 8, 9, 140, 141, 216, 217, 219, 220, 224, 230, 232], "consist": [1, 9], "sub": [1, 8, 9, 22, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 217, 219, 220, 228, 232], "which": [1, 4, 5, 8, 9, 109, 115, 118, 119, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 210, 215, 216, 217, 219, 220, 224, 227, 228, 229, 230, 231, 233, 238, 241, 242], "can": [1, 8, 9, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 203, 209, 210, 212, 215, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242], "see": [1, 8, 9, 140, 141, 183, 217, 218, 219, 220, 221, 224, 225, 227, 231, 234, 235, 236], "new": [1, 4, 5, 8, 9, 13, 136, 147, 224, 228, 229, 237], "big": [1, 9, 219, 220], "like": [1, 4, 5, 8, 9, 109, 184, 209, 210, 215, 217, 218, 219, 220, 221, 224, 228, 229, 230, 234, 238, 239, 241, 242], "layernorm": [1, 8, 9, 22, 35, 81, 217, 220, 224, 236], "There": [1, 9, 210, 215, 217, 218, 234, 236, 239, 241], "mai": [1, 8, 9, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 219, 224, 230, 231, 232, 233, 236, 242], "have": [1, 8, 9, 109, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 217, 218, 219, 220, 221, 224, 229, 232, 236, 238, 239, 240, 241, 242], "differ": [1, 6, 7, 9, 10, 11, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 115, 118, 123, 124, 202, 209, 210, 213, 215, 217, 219, 220, 221, 224, 226, 227, 233, 238, 239, 241, 242], "flow": [1, 8, 9, 217, 220], "one": [1, 4, 5, 8, 9, 140, 202, 210, 213, 216, 217, 218, 219, 220, 224, 228, 230, 236, 240], "subgraph": [1, 8, 9, 104, 219, 221], "final": [1, 9, 219, 220, 221, 223, 224, 238], "convert": [1, 4, 5, 8, 9, 13, 109, 212, 222, 236, 242], "yaml": [1, 6, 7, 8, 9, 118, 122, 123, 124, 136, 218, 219, 221], "file": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 92, 104, 116, 118, 119, 121, 122, 123, 124, 136, 148, 209, 215, 217, 218, 219, 221, 223, 228, 229, 236, 237], "bin": [1, 6, 7, 9, 215, 218, 219, 221, 234], "configur": [1, 9, 66, 113, 115, 118, 121, 122, 123, 124, 126, 128, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 209, 211, 212, 219, 227, 228, 231], "infer": [1, 6, 7, 9, 10, 11, 112, 118, 126, 136, 141, 184, 203, 211, 213, 216, 217, 218, 219, 220, 221, 230, 239, 242], "base": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 127, 128, 132, 135, 136, 138, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 202, 203, 209, 212, 214, 221, 222, 223, 225, 231, 232, 234, 235, 240, 247], "thi": [2, 8, 136, 140, 141, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 209, 210, 212, 215, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 240, 242], "tensorflow": [2, 5, 14, 15, 16, 17, 18, 19, 23, 25, 30, 33, 34, 36, 37, 38, 40, 41, 44, 45, 46, 48, 50, 51, 53, 57, 58, 62, 109, 113, 118, 119, 126, 144, 213, 214, 215, 224, 242], "onnx": [2, 4, 13, 136, 203, 213, 217, 218, 219, 232, 240, 246], "pleas": [2, 4, 5, 132, 183, 184, 202, 203, 209, 210, 211, 213, 217, 220, 223, 226, 227, 228, 229, 236, 241, 242], "refer": [2, 4, 5, 132, 184, 202, 209, 210, 213, 220, 223, 230, 236, 241, 242], "onnx_extractor": [2, 3, 9, 110], "py": [2, 209, 214, 217, 218, 222], "tf_extractor": [2, 3, 9, 110], "more": [2, 4, 5, 8, 183, 184, 203, 210, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 235, 236], "detail": [2, 8, 202, 203, 210, 211, 213, 216, 217, 218, 219, 220, 223, 224, 225, 226, 230, 234, 235, 236, 241, 242], "object": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 32, 43, 59, 74, 92, 104, 109, 112, 113, 114, 116, 118, 122, 123, 124, 125, 126, 127, 136, 137, 138, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 203, 210, 213, 217, 223, 241], "A": [2, 3, 8, 112, 115, 122, 123, 127, 136, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 217, 224, 225, 227, 230, 233, 235, 236], "super": [2, 3, 217, 219], "an": [2, 3, 13, 109, 118, 123, 124, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 203, 209, 211, 212, 213, 215, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 233, 237, 238, 240, 246], "oper": [2, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 190, 191, 193, 211, 215, 216, 217, 219, 221, 226, 228, 229, 231, 232, 233, 236, 242], "do": [2, 3, 116, 118, 125, 126, 136, 212, 215, 217, 219, 220, 224, 228, 241, 242], "addit": [2, 3, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 211, 218, 237], "attribut": [2, 3, 4, 5, 8, 43, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 193, 202, 218, 220, 223, 229], "without": [2, 3, 118, 125, 136, 210, 215, 217, 233, 234, 236], "modifi": [2, 3, 6, 7, 8, 141, 215, 218, 221], "topologi": [2, 3], "modul": [3, 7, 9, 10, 32, 74, 123, 202, 221, 222], "all": [4, 5, 6, 7, 8, 9, 32, 43, 74, 92, 110, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 202, 210, 215, 216, 217, 218, 220, 224, 225, 228, 229, 230, 235, 238, 241, 242], "input": [4, 5, 6, 7, 8, 13, 22, 109, 113, 118, 126, 127, 136, 140, 141, 184, 190, 202, 203, 209, 210, 212, 213, 215, 218, 219, 220, 223, 231, 232, 233, 236, 240], "python": [4, 5, 8, 140, 141, 209, 214, 215, 216, 217, 219, 221, 222, 246, 247], "compos": [4, 5, 118, 119, 136, 202, 217, 221], "order": [4, 5, 6, 7, 8, 118, 119, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 209, 217, 218, 224, 227, 233], "origin": [4, 5, 8, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 203, 209, 210, 217, 221, 232, 242], "calcul": [4, 5, 116, 202, 218, 224, 227, 229, 233, 236, 242], "notic": [4, 5, 221, 228, 232], "map": [4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 136, 184, 190, 202, 210, 227, 242], "between": [4, 5, 140, 141, 202, 210, 233, 236, 242], "For": [4, 5, 8, 13, 183, 184, 202, 203, 213, 217, 219, 220, 224, 225, 226, 228, 230, 232, 233, 234, 235, 240], "relat": [4, 5, 136, 210, 217, 220, 224, 230, 241, 242], "deatil": [4, 5], "api": [4, 5, 6, 7, 184, 203, 215, 219, 220, 221, 223, 224, 228, 229, 240, 245, 246, 247], "onnxextractor": 4, "decor": [4, 5, 13, 32, 43, 74, 92, 109], "graph_def": [4, 5, 109], "ha": [4, 5, 8, 202, 209, 217, 219, 220, 222, 223, 224, 227, 229, 236, 242], "input_tensor": [4, 5, 8, 13, 32, 43, 109, 140, 141, 217, 220], "output_tensor": [4, 5, 8, 13, 32, 43, 109, 217, 220], "record": [4, 5, 202, 218, 219], "sourc": [4, 5, 8, 13, 109, 215, 228, 232, 236], "dest": [4, 5, 8, 13, 109], "name": [4, 5, 6, 7, 8, 13, 32, 43, 59, 74, 92, 109, 113, 114, 118, 121, 126, 127, 128, 130, 132, 134, 138, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 190, 202, 203, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 229, 235, 238, 239, 240, 241, 242], "list": [4, 5, 6, 7, 8, 13, 109, 113, 114, 118, 125, 128, 136, 140, 141, 210, 215, 216, 217, 220, 228, 229, 237, 242], "return": [4, 5, 8, 13, 32, 43, 74, 92, 109, 112, 115, 118, 119, 121, 122, 123, 124, 126, 127, 136, 140, 141, 202, 209, 217, 220, 224, 228, 229, 238], "paramet": [4, 5, 8, 13, 32, 43, 74, 92, 109, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 136, 140, 141, 144, 202, 210, 218, 224, 238, 241], "onnxmodel": [4, 13], "type": [4, 5, 8, 13, 32, 43, 74, 92, 109, 115, 118, 121, 126, 127, 136, 140, 144, 190, 202, 203, 209, 210, 211, 212, 215, 218, 219, 221, 224, 228, 229, 236, 238, 239, 242], "tensorflowextractor": 5, "tensorflowmodel": [5, 109], "defint": [6, 7], "properti": [6, 7, 32, 43, 59, 113, 118, 119, 122, 123, 125, 126, 136], "execution_opt": [6, 7, 219], "option": [6, 7, 8, 118, 121, 125, 126, 127, 136, 140, 141, 202, 218, 224, 228, 233, 236], "execut": [6, 7, 122, 123, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 202, 219, 223, 226, 228, 229, 234, 236, 242], "weight_data": [6, 7], "weight_byt": [6, 7], "net_config": [6, 7], "network": [6, 7, 132, 202, 210, 215, 217, 218, 220, 231, 241, 242], "dict": [6, 7, 8, 13, 59, 109, 113, 118, 122, 123, 127, 128, 136, 140, 141, 209, 215, 217, 241], "insert_nod": [6, 7], "index": [6, 7, 140, 141, 144, 220, 223, 224], "insert": [6, 7, 8, 221, 223, 224, 228, 229, 242], "ir": [6, 7, 215, 217, 218, 219, 234, 246], "remove_nod": [6, 7], "node_nam": [6, 7, 8, 13, 109, 217, 220], "remov": [6, 7, 141, 229, 241], "from": [6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 116, 118, 119, 121, 136, 140, 141, 147, 202, 203, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 223, 224, 228, 229, 231, 232, 233, 238, 239, 240, 241, 242], "get_node_id": [6, 7, 217], "id": [6, 7, 8, 118, 121, 141, 144, 229], "accord": [6, 7, 217, 219, 233], "get_node_by_nam": [6, 7], "rename_nod": [6, 7], "old_nam": [6, 7], "new_nam": [6, 7], "change_node_input_tensor": [6, 7], "mode": [6, 7, 114, 118, 128, 135, 190, 202, 218, 222, 236, 237, 242], "change_node_output_tensor": [6, 7], "output": [6, 7, 8, 13, 22, 32, 43, 109, 113, 118, 126, 136, 140, 141, 184, 190, 202, 209, 210, 215, 217, 218, 219, 220, 221, 222, 223, 224, 231, 232, 233, 236, 240], "get_pre_node_nam": [6, 7], "previou": [6, 7, 118, 119, 136, 215], "get_next_node_nam": [6, 7], "get_tensor_idx": [6, 7], "tensor_nam": [6, 7, 13, 109], "from_output": [6, 7], "true": [6, 7, 113, 118, 136, 138, 140, 141, 142, 184, 190, 202, 203, 212, 213, 216, 217, 218, 219, 228, 229, 232, 234, 236, 238, 239, 242], "modify_node_connect": [6, 7], "dump_tensor": [6, 7], "tensor_list": [6, 7], "dump": [6, 7, 242], "engine_init": [6, 7], "net_info": [6, 7], "b": [6, 7, 8, 13, 140, 217, 224, 227, 230, 231, 233, 236], "pybind": [6, 7], "executor": [6, 7, 112, 190, 203, 215, 217, 218], "input_data": [6, 7, 8, 9, 74, 110, 215], "graph_init": [6, 7, 215, 219], "initi": [6, 7, 8, 13, 32, 43, 113, 118, 122, 123, 136, 140, 141, 202, 228, 229, 240, 241], "exampl": [6, 7, 8, 140, 141, 184, 209, 210, 213, 215, 217, 219, 220, 222, 223, 224, 226, 228, 238, 241, 242, 244], "import": [6, 7, 8, 127, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 203, 209, 210, 213, 215, 217, 219, 221, 224, 228, 229, 238, 239, 240, 241, 242], "newgraph": [6, 7], "conf": [6, 7, 113, 118, 128, 190, 215, 218, 219, 223], "out": [6, 7, 8, 136, 215, 217, 220, 226, 232, 242], "input_0": [6, 7, 215, 219], "input_1": [6, 7, 215, 219], "input_2": [6, 7, 215, 219], "save": [6, 7, 116, 136, 209, 215, 217, 218, 221, 230, 232, 233, 242], "output_dir": [6, 7, 113, 118, 125, 136, 202, 209, 221, 222], "ymal": [6, 7], "graph_dispatch": [6, 7, 219], "tune": [6, 7, 136, 209, 210, 238, 239, 241], "inputs_shap": [6, 7, 219], "dispatch": [6, 7, 186], "get_sparse_nodes_nam": [6, 7], "threshold": [6, 7], "0": [6, 7, 8, 109, 113, 114, 116, 118, 128, 138, 140, 141, 143, 144, 184, 190, 191, 192, 193, 202, 203, 209, 210, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242], "7": [6, 7, 8, 202, 211, 214, 216, 217, 220, 222, 224, 225, 230, 235, 236, 238, 242], "sparsiti": [6, 7, 113, 118, 225, 235, 236, 241], "spars": [6, 7, 184, 219, 226, 227, 230, 233, 236], "transpose_mode_int8": [6, 7], "node_name_list": [6, 7], "transpos": [6, 7, 9, 32, 110, 140, 141, 218, 219, 227, 230, 232, 233, 236], "innerproduct": [6, 7, 22, 218, 219], "reorder": [6, 7, 22], "util": [8, 13, 109, 113, 115, 118, 209, 217, 224, 227, 233, 236], "names_from_input": 8, "static": [8, 142, 191, 193, 203, 218, 221, 228, 230, 240], "method": [8, 116, 118, 124, 128, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 202, 209, 211, 228, 230, 234, 241, 242], "valid": [8, 118, 126, 136, 184, 209, 210, 224, 245], "string": [8, 13, 109, 116, 118, 122, 123, 124, 144, 190, 209, 210, 217, 219, 220, 223, 229, 238, 239, 241, 242], "defin": [8, 118, 122, 123, 124, 125, 136, 147, 202, 210, 215, 217, 223, 224, 233, 237, 238, 241, 242], "field": [8, 209, 228, 229, 242], "": [8, 13, 109, 136, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 202, 203, 210, 215, 217, 218, 220, 221, 223, 225, 235, 237, 240, 242], "tupl": [8, 115, 127, 140, 141], "In": [8, 118, 119, 136, 140, 202, 215, 217, 218, 219, 220, 221, 224, 227, 228, 229, 230, 231, 232, 233, 238, 239, 242], "nodedef": [8, 109], "end": [8, 140, 141, 184, 218, 221, 223, 224, 229, 234], "If": [8, 115, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 212, 215, 217, 218, 219, 220, 221, 224, 228, 236, 238, 241, 242], "also": [8, 215, 217, 218, 220, 221, 223, 224, 227, 228, 229, 233, 234, 239, 242], "get_data_dtyp": 8, "data": [8, 59, 184, 202, 211, 215, 217, 219, 221, 222, 223, 227, 228, 229, 233, 236, 242, 245], "const": [8, 13, 109, 190, 191, 192, 193, 223, 226, 228, 229, 230], "dtype": [8, 13, 59, 109, 136, 212, 215, 218, 219, 223], "numpi": [8, 13, 215], "valu": [8, 13, 109, 118, 125, 136, 140, 141, 209, 210, 215, 217, 218, 219, 220, 228, 229, 230, 232, 236, 238, 239, 241, 242], "dtypes_dict": 8, "quant_info_init": 8, "quant": [8, 242], "info": [8, 12, 13, 109, 202, 215, 217, 234], "insert_quant_info": 8, "kei": [8, 13, 109, 136, 140, 141, 184, 218, 219, 220, 228, 229, 230], "get_quant_info": 8, "search_straight_pattern": [8, 224], "input_pattern": [8, 224], "search": [8, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 116, 118, 119, 122, 123, 136, 184, 202, 211, 220], "user": [8, 140, 141, 184, 202, 203, 212, 217, 218, 220, 222, 232, 234, 236, 239, 240], "specifi": [8, 115, 118, 122, 123, 124, 126, 128, 135, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 220, 221, 229, 232, 236, 241, 242], "pattern": [8, 9, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 184, 191, 221, 227, 241], "intern": [8, 220], "grpah": [8, 13, 109], "structur": [8, 211, 215, 217, 219, 231, 241], "attent": [8, 140, 141, 191, 202, 218, 224, 232], "chain": [8, 228, 229], "call": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 217, 219, 220, 227, 228, 229, 233, 242], "must": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 214, 220, 224, 227, 228, 233], "straight": 8, "sequenc": [8, 115, 140, 141, 213, 217, 220, 224, 231], "It": [8, 118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 210, 217, 218, 219, 220, 223, 224, 231, 232, 236], "mean": [8, 9, 32, 110, 140, 141, 209, 215, 217, 218, 219, 220, 224, 227, 228, 233, 236, 238, 241, 242], "ani": [8, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 224, 240], "otherwis": [8, 217, 219, 236], "op_typ": [8, 13, 32, 43, 109, 217, 219, 220, 229], "element": [8, 136, 217, 224, 229, 231, 232, 233, 236], "could": [8, 191, 215, 217, 218, 220, 221, 224, 230, 241, 242], "mandatori": 8, "ar": [8, 115, 116, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 210, 214, 215, 216, 217, 218, 219, 220, 221, 224, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242], "while": [8, 215, 220, 224, 236, 242], "stand": [8, 217], "mybe": 8, "mul": [8, 22, 217, 220, 224, 228], "add": [8, 22, 116, 210, 215, 218, 219, 220, 224, 228, 229, 236, 237], "addv2": [8, 22, 224], "equal": [8, 22, 136, 220, 227, 228], "below": [8, 184, 202, 209, 210, 215, 217, 219, 221, 224, 227, 231, 232, 233, 239], "gener": [8, 140, 141, 147, 203, 210, 217, 220, 224, 228, 229, 231, 234, 236, 238, 239, 242], "extractor": [8, 9, 110, 219, 221, 224], "length": [8, 113, 115, 118, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 203, 220, 224, 228, 242], "match": [8, 202, 210, 219, 220, 224, 231, 232], "result": [8, 118, 119, 126, 136, 184, 202, 203, 211, 217, 219, 220, 225, 228, 229, 232, 233, 235, 241, 242], "24": [8, 202, 224, 225, 230, 235], "layer": [8, 115, 131, 140, 141, 202, 218, 224, 228, 231, 232, 241], "each": [8, 118, 119, 136, 140, 141, 202, 209, 218, 219, 220, 227, 231, 232, 233, 236, 237, 241], "still": [8, 224, 242], "last": [8, 136, 140, 141, 220, 224, 227, 231, 232, 242], "former": [8, 224], "mayb": [8, 219, 233], "search_pattern": [8, 224], "pattern_list": 8, "complet": [8, 217, 225, 235], "represent": [8, 213, 217, 220, 221], "its": [8, 118, 119, 136, 202, 210, 217, 220, 221, 224, 231, 233, 236], "op_idx": 8, "howev": [8, 219, 220, 224, 227, 230, 233], "due": [8, 140, 220, 224, 227, 242], "few": [8, 231], "complic": [8, 217, 224], "thei": [8, 118, 121, 210, 216, 224, 227, 228, 229, 230, 232, 236], "therefor": [8, 212, 227, 231, 232, 233, 242], "fist": 8, "repres": [8, 218, 220, 224, 226, 227, 229, 242], "main": [8, 136, 140, 141, 220, 226, 236], "top": [8, 184, 209, 231], "down": 8, "head": [8, 140, 141, 224, 229, 232], "tail": [8, 224, 234], "left": [8, 140, 141, 230, 232, 233], "e": [8, 118, 119, 136, 184, 202, 210, 219, 228, 229, 232, 236], "g": [8, 118, 119, 136, 202, 210, 228, 229], "bert_large_squad": 8, "pb": [8, 213], "1": [8, 113, 114, 118, 128, 140, 141, 143, 184, 202, 203, 209, 210, 211, 212, 214, 216, 217, 219, 220, 221, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242], "squareddiffer": [8, 22, 224], "2": [8, 113, 115, 118, 140, 184, 202, 203, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 225, 230, 231, 233, 234, 235, 236, 238, 240], "3": [8, 202, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 235, 236, 237, 238], "4": [8, 113, 118, 128, 140, 141, 202, 209, 210, 211, 214, 217, 218, 219, 220, 223, 224, 225, 230, 231, 233, 234, 241], "rsqrt": [8, 22, 224], "5": [8, 113, 114, 118, 202, 209, 210, 217, 218, 220, 223, 224, 225, 230, 235, 236], "8": [8, 202, 211, 212, 214, 217, 218, 220, 222, 224, 225, 229, 230, 233, 234, 235, 236, 242], "9": [8, 202, 209, 213, 214, 217, 224, 225, 230, 235, 236, 241], "6": [8, 202, 210, 211, 216, 217, 220, 224, 225, 229, 230, 234, 235, 242], "same": [8, 141, 210, 212, 215, 217, 218, 220, 221, 224, 227, 233, 236, 237], "func": [8, 202, 219], "follow": [8, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 140, 141, 185, 186, 187, 188, 194, 209, 210, 214, 217, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 233, 234, 236, 237, 242], "frozen": [8, 215, 221], "you": [8, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 203, 209, 210, 212, 215, 217, 219, 220, 221, 224, 228, 229, 230, 234, 236, 238, 240, 241, 242], "had": [8, 217], "better": [8, 118, 119, 126, 136, 202, 217, 218, 219, 227, 232, 238, 239, 242], "identifi": [8, 118, 121], "your": [8, 136, 209, 213, 215, 217, 218, 219, 220, 228, 229, 236, 240], "own": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 220, 221, 228, 239], "casual": 8, "tf": [8, 118, 126, 140, 202], "control": [8, 202, 217], "start": [8, 140, 141, 218, 224, 237], "mostli": [8, 224], "longest": [8, 224], "path": [8, 113, 118, 119, 121, 122, 123, 124, 136, 144, 209, 213, 215, 218, 219, 221, 234, 236], "sometim": [8, 220, 242], "connect": [8, 132, 241], "But": [8, 215, 227, 240], "don": [8, 140, 141, 223, 228], "t": [8, 140, 141, 191, 202, 209, 210, 223, 226, 227, 228, 232, 233, 236, 241], "need": [8, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 209, 210, 217, 218, 219, 220, 221, 226, 227, 228, 229, 230, 232, 233, 236, 241, 242], "least": 8, "doesn": [8, 202, 228, 233, 236], "exist": [8, 118, 121, 202, 213, 217, 240], "relationship": 8, "sever": [8, 209, 217, 221, 224, 227, 236, 242], "should": [8, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 217, 219, 220, 223, 224, 227, 228, 229, 236, 237, 238, 239, 242], "split": [8, 9, 32, 110, 209, 219, 227, 230], "representtaion": 8, "two": [8, 136, 210, 217, 219, 220, 222, 223, 228, 229, 230, 232, 233, 239, 240, 241, 242], "idx": [8, 229], "some": [8, 141, 215, 217, 218, 219, 220, 223, 224, 228, 229, 233, 242], "outsid": [8, 140, 141, 220, 224], "give": [8, 217, 220, 227], "just": [8, 141, 215, 217, 218, 219, 220, 221, 224, 229, 233, 238], "empti": [8, 22, 220, 224, 229, 237], "algorithm": [8, 32, 43, 74, 92, 113, 118, 122, 123, 184, 202, 209, 219, 220, 223, 224, 226, 227, 228, 236, 241, 242], "support": [8, 13, 92, 112, 116, 118, 122, 123, 127, 128, 135, 184, 214, 215, 216, 217, 218, 219, 223, 224, 229, 234, 236, 240, 241], "kind": [8, 66, 192, 223, 226, 236], "beaus": 8, "make": [8, 32, 43, 136, 215, 216, 217, 226, 227, 228, 229, 231, 232, 234, 236], "sure": [8, 217, 236], "whole": [8, 118, 119, 202, 211, 218, 219, 222, 231, 234], "so": [8, 118, 121, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 216, 217, 219, 220, 223, 224, 226, 228, 230, 231, 233, 234, 238, 239, 241, 242], "check": [8, 13, 136, 203, 217, 219, 220, 224, 229], "symmetr": [8, 224, 242], "consecut": [8, 230, 233], "y": [8, 229], "o": [8, 202, 209, 214, 225, 229, 235], "shape": [8, 22, 59, 140, 141, 202, 215, 218, 219, 223, 227, 232, 236], "df": [8, 224], "duplic": 8, "would": [8, 217, 220, 221, 224, 234], "perform": [8, 113, 118, 119, 122, 123, 136, 140, 141, 142, 184, 202, 203, 210, 212, 213, 215, 218, 219, 222, 225, 227, 230, 231, 232, 233, 236, 238, 239, 241, 242, 245], "befor": [8, 136, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 212, 215, 217, 219, 220, 221, 224, 228, 229, 230, 236, 242], "splice": 8, "de": 8, "total": [8, 115, 140, 202, 209, 220, 224, 233, 234], "c": [8, 214, 215, 216, 217, 219, 224, 225, 231, 235, 236, 245, 246], "d": [8, 202, 209, 210, 227, 232], "f": [8, 210, 223, 234, 242], "c1": 8, "d1": [8, 236], "c2": 8, "d2": 8, "c3": [8, 234], "d3": [8, 234], "step": [8, 136, 216, 217, 218, 220, 221, 222, 223, 224, 228, 232, 236], "now": [8, 203, 215, 216, 217, 219, 220, 221, 228, 229, 236, 240], "set": [8, 32, 43, 114, 115, 118, 125, 126, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 215, 219, 220, 221, 223, 224, 227, 228, 229, 231, 236], "part": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 220, 223, 224, 233], "As": [8, 210, 217, 218, 220, 221, 230, 232, 233], "appli": [8, 211, 213, 228, 229, 232, 233, 241, 242], "everi": [8, 217, 227, 236], "right": [8, 140, 141, 203, 230, 232, 233, 240], "construct_nod": 8, "attr": [8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 215, 217, 228, 229], "ordereddict": [8, 32, 43, 217], "construct": [8, 32, 43, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 228, 229], "new_nod": 8, "insert_pattern": 8, "target_node_nam": 8, "replac": [8, 141, 184, 210, 213, 217, 220, 241, 242], "specif": [8, 118, 121, 122, 123, 202, 210, 214, 217, 219, 220, 226, 227, 231, 236, 238, 239, 240, 242], "ccontain": 8, "insid": [8, 220, 223, 231], "been": [8, 140, 141, 210, 229, 240], "pattern_map": [8, 217, 220], "pattern_nam": 8, "mapping_dict": 8, "custom": [8, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 118, 126, 136, 184, 202, 218, 220], "mapping_config": 8, "first": [8, 136, 209, 216, 217, 219, 220, 222, 224, 229, 230, 231, 232, 233, 234, 237, 242], "second": [8, 140, 141, 216, 220, 222, 223, 224, 230, 231, 232, 233, 234, 236, 242], "third": [8, 220, 231, 233], "requir": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 213, 220, 222, 224, 225, 227, 230, 236, 242], "old": 8, "reshap": [8, 9, 32, 110, 190, 215, 217, 218, 223], "paddingsequ": [8, 22, 91, 215], "search_mod": [8, 217, 220], "embed": [8, 140, 141, 215, 220, 224, 228], "m": [8, 210, 211, 218, 219, 225, 227, 230, 231, 233, 235, 236], "after": [8, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 216, 218, 219, 220, 221, 223, 224, 226, 227, 229, 233, 237, 242], "fusion": [8, 66, 223, 224, 228, 229], "about": [8, 217, 220, 223, 225, 229, 233, 235], "in_pattern": 8, "input_id": [8, 140, 141, 213, 215], "segment_id": [8, 213, 215], "input_mask": [8, 213, 215], "out_pattern": 8, "int": [8, 113, 118, 128, 140, 217, 228, 229], "th": [8, 220], "berfor": 8, "n": [8, 116, 140, 141, 209, 210, 219, 220, 222, 225, 227, 230, 231, 233, 235, 236], "match_result": 8, "_n": 8, "reshape_0": [8, 220], "where": [8, 22, 140, 141, 202, 210, 220, 226, 227, 229, 231, 232, 233, 236, 237], "go": [8, 203], "happen": [8, 218, 233], "sepcial": 8, "biasadd": [8, 18, 220, 224], "bia": [8, 13, 218], "unfix": 8, "locat": [8, 59, 215, 217, 220, 224, 233, 236], "onli": [8, 113, 118, 136, 140, 141, 203, 214, 215, 219, 220, 221, 223, 226, 228, 229, 232, 233, 236, 238, 240], "other": [8, 118, 121, 191, 193, 209, 213, 215, 217, 218, 219, 220, 224, 225, 233, 235, 236, 242], "write": [8, 209, 217, 224], "note": [8, 211, 214, 215, 217, 218, 219, 220, 222, 223, 224, 228, 229, 232, 233, 236, 242], "That": [8, 233], "too": [8, 217, 227, 228], "decompos": [8, 217], "list2str": [8, 217], "src_perm": 8, "str": [8, 32, 43, 74, 92, 112, 113, 114, 118, 121, 125, 127, 128, 136, 138, 140, 141, 142, 209], "emit": [8, 220], "ret": [8, 224, 234], "str2list": 8, "src_str": 8, "pattern_mapping_conf_valid": 8, "conf_dict": 8, "lazyimport": 8, "module_nam": 8, "lazi": 8, "till": 8, "later": [8, 217, 224], "get_model_fwk_nam": 8, "detect": 8, "belong": [8, 217, 242], "avail": [8, 185, 186, 187, 188, 194, 231], "fwk": 8, "na": [8, 113, 118, 119, 136, 209], "assert": [9, 32, 110, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202], "batch_matmul": [9, 32, 110], "batch_matmul_v2": [9, 32, 110], "bias_add": [9, 13, 32, 110], "cast": [9, 32, 110], "concat": [9, 32, 110, 217], "conv": [9, 32, 110, 218, 219, 229], "empty_op": [9, 32, 110, 217], "expand_dim": [9, 32, 110], "fused_batch_matmul_v2": [9, 32, 110], "fused_batch_norm_v3": [9, 32, 110], "fused_gemm": [9, 32, 110], "fused_matmul": [9, 32, 110], "gather": [9, 32, 110, 136, 140, 141, 191, 217, 228], "gather_el": [9, 32, 110, 217], "gelu": [9, 32, 74, 110, 217, 223, 229, 236], "gemm": [9, 32, 110, 184, 212, 226, 227, 233, 236], "iterator_get_next": [9, 32, 110], "iterator_v2": [9, 32, 110, 217], "layer_norm": [9, 32, 74, 110, 217], "map_and_batch_dataset": [9, 32, 110, 217], "matmul": [9, 13, 22, 32, 110, 212, 218, 220, 221, 224, 226, 232, 236], "mkl_layer_norm": [9, 32, 110], "model_dataset": [9, 32, 110], "one_hot": [9, 32, 110], "onnx_input": [9, 32, 110], "optimize_dataset": [9, 32, 110, 217], "placehold": [9, 32, 110], "quantize_linear": [9, 32, 110, 217], "quantize_v2": [9, 32, 110], "quantized_fused_matmul_and_dequant": [9, 32, 110], "quantized_matmul_with_bias_and_dequant": [9, 32, 110], "reduce_mean": [9, 32, 110, 217], "reduce_sum": [9, 32, 110], "scatter_el": [9, 32, 110], "softmax": [9, 32, 110, 140, 191, 202, 210, 232], "squeez": [9, 32, 110], "strided_slic": [9, 32, 110], "top_k": [9, 32, 110], "unpack": [9, 32, 110, 136, 217], "unsqueez": [9, 32, 110, 217], "sub_graph": [9, 110, 217, 219], "add_cls_token": [9, 74, 110], "add_embed": [9, 74, 110], "attention_mask_length_adaptive_keep_indic": [9, 74, 110], "attention_output_layer_norm_length_adaptive_keep_indic": [9, 74, 110], "attention_reshap": [9, 74, 110], "collect_quant_info": [9, 74, 110], "conv_reshap": [9, 74, 110], "embeddingbag": [9, 22, 74, 110], "generate_sequ": [9, 74, 110], "input_fil": [9, 74, 110], "insert_bf16_nod": [9, 74, 110], "insert_quant_nod": [9, 74, 110], "interact_featur": [9, 74, 110], "last_layer_shap": [9, 74, 110], "layer_norm_with_reduce_mean": [9, 74, 110, 217], "matmul_with_bia": [9, 74, 110], "matmul_with_bias_add": [9, 74, 110], "matmul_with_bias_gelu": [9, 74, 110], "matmul_with_bias_relu": [9, 74, 110], "matmul_with_bias_sigmoid": [9, 74, 110], "matmul_with_bias_tanh": [9, 74, 110], "merged_embeddingbag": [9, 74, 110], "output_data": [9, 74, 110, 215], "padding_sequ": [9, 74, 110, 215], "position_embed": [9, 74, 110], "position_embeddings_v1": [9, 74, 110], "qkv_merg": [9, 74, 110], "qkv_reshap": [9, 74, 110], "quantize_fus": [9, 74, 110], "reshape_after_restore_hidden_st": [9, 74, 110], "reshape_before_and_after_attention_out_layer_norm_gather_el": [9, 74, 110], "reshape_before_restore_hidden_st": [9, 74, 110], "reshape_fus": [9, 74, 110], "restore_hidden_states_in_length_adaptive_update_indic": [9, 74, 110], "start_end_logit": [9, 74, 110], "subgraph_match": [9, 74, 110, 219], "token_type_embed": [9, 74, 110, 217], "token_type_embeddings_v1": [9, 74, 110, 217], "transpose_batch_matmul": [9, 74, 110, 217], "word_embed": [9, 74, 110, 215], "graph_util": [9, 110, 217, 220, 224], "logger": [9, 110, 234], "onnx_util": [9, 110], "tf_util": [9, 110], "load": [10, 11, 116, 118, 119, 126, 127, 136, 140, 141, 215, 217, 218, 219, 221, 227, 229, 230, 231, 233], "frontend": [10, 11, 231], "get_logg": 12, "log": [12, 215, 223], "level": [12, 141, 215, 219, 229, 231], "msg": 12, "arg": [12, 112, 118, 121, 126, 136, 191, 202, 218, 223], "kwarg": [12, 118, 121, 136, 140, 141], "format": [12, 136, 202, 218, 232, 242], "debug": 12, "error": [12, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 223, 234], "fatal": 12, "warn": 12, "get_children": 13, "input_name_to_nod": 13, "get_node_children_nam": 13, "nodeproto": 13, "get_initializer_children_nam": 13, "graph_node_names_detail": [13, 109], "pars": [13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 215, 223], "graph_nodes_dict": [13, 109], "Be": [13, 109], "class": [13, 109, 127, 130, 134, 186, 188, 191, 203, 209, 210, 217, 223, 226, 228, 229], "cerat": 13, "output_nam": [13, 113, 118, 126], "ouput": 13, "param": [13, 109, 136, 228, 229], "node_names_detail": [13, 109], "is_supported_onnx_graph": [13, 158], "is_supported_onnx_nod": 13, "change_num_nam": 13, "number": [13, 113, 115, 116, 118, 141, 209, 219, 220, 224, 227, 233, 237, 242], "bias_to_int32": 13, "bias_nod": 13, "a_scal": 13, "b_scale": 13, "int8": [13, 127, 136, 184, 203, 211, 218, 219, 221, 229, 232, 236, 242], "int32": [13, 215], "matric": [13, 232], "scale": [13, 136, 228, 242], "arrai": [13, 215], "fp32_bia": 13, "int8_bia": 13, "int8_bias_zero_point": 13, "int8_bias_scal": 13, "int32_bia": 13, "onnx_extract_oper": 13, "nodes_dict": [13, 32, 42, 43, 109], "tf_dtype": [13, 109], "set_attr": [14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 190, 217], "batchmatmul": 16, "batchmatmulv2": 17, "onnxruntim": [20, 21, 27, 29, 47, 52, 54, 56, 60, 61, 63, 212, 214, 217, 222], "regist": [22, 32, 43, 74, 92, 130, 132, 134, 227, 228, 229, 231, 232, 233], "binaryadd": [22, 228], "constantofshap": 22, "dequantizelinear": [22, 221], "div": [22, 217, 220], "erf": [22, 223], "expand": [22, 140, 141], "fill": [22, 220, 232], "flatmapdataset": 22, "ident": [22, 210], "lessequ": 22, "makeiter": 22, "matmulwithbiasadd": [22, 84], "matmulwithbiasgelu": [22, 85], "matmulwithbiastanh": [22, 88], "matmulwithbia": [22, 83], "nonzero": [22, 230], "pow": [22, 217, 220], "qlinearmatmul": [22, 221], "qlinearadd": 22, "qlinearmul": 22, "realdiv": 22, "slice": 22, "sqrt": [22, 217, 220, 232], "squar": [22, 140, 141], "stopgradi": 22, "tanh": [22, 223, 229, 236], "tensorslicedataset": 22, "transposebatchmatmul": [22, 107, 217], "rang": [22, 113, 118, 136, 202, 217, 219, 236, 241, 242], "relu": [22, 229, 236], "matmulwithbiasrelu": [22, 86], "quantiz": [22, 113, 118, 121, 125, 126, 136, 212, 228, 229, 236, 238, 243], "Not": [22, 122, 123, 209, 231], "cumsum": 22, "onehot": [22, 41], "tokentypeid": 22, "positionid": 22, "loop": [22, 136, 202, 217, 228, 232], "sigmoid": 22, "matmulwithbiassigmoid": [22, 87], "flatten": 22, "mergedembeddingbag": [22, 89], "convolut": [22, 210, 219], "expandindic": 22, "tile": [22, 227, 230, 232, 233, 236], "expanddim": 23, "fusedbatchnormv3": 25, "fusedgemm": 26, "fusedmatmul": 27, "gatherv2": [28, 217], "gatherel": [29, 217], "operator_registri": [32, 43, 217], "operator_typ": [32, 43, 217], "subclass": [32, 43, 74, 92, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193], "cl": [32, 43, 74, 92, 202], "registr": [32, 43, 74, 92, 217], "iteratorgetnext": 33, "iteratorv2": [34, 217], "mapandbatchdataset": [36, 217], "modeldataset": 40, "onnxinput": 42, "optimizedataset": [44, 217], "quantizelinear": [47, 217, 221], "quantizev2": 48, "quantizedmatmulwithbiasanddequant": 50, "reducemean": [51, 217, 220], "reducesum": 52, "scatterel": 54, "stridedslic": 58, "source_op": 59, "dest_op": 59, "definit": [59, 229], "topk": 60, "addclstoken": [64, 66], "fuse": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 221, 228, 229], "acceler": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 205, 211, 212, 221, 228, 229, 232, 242, 244, 247], "strategi": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 118, 126], "addembed": 65, "attentionmasklengthadaptiveexpandindic": 66, "attentionoutputlayernormlengthadaptiveexpandindic": 67, "attentionreshap": 68, "collectquantinfo": 69, "convreshap": 70, "generatesequ": 73, "bass": [74, 92], "pattern_registri": [74, 92, 217], "pattern_typ": [74, 92, 217], "subgraphmatch": [74, 104, 219], "inputdata": [75, 217], "inputfil": 76, "insertbf16nod": 77, "insertquantnod": 78, "interactfeatur": 79, "lastlayershap": 80, "layernormwithreducemean": [82, 217], "outputdata": [90, 217], "positionembed": 93, "positionembeddingsv1": 94, "qkvmerg": 95, "qkvreshap": 96, "qunatizefus": 97, "reshapeafterrestorehiddenst": 98, "reshapebeforeandafterattentionoutlayernormgatherel": 99, "reshapebeforerestorehiddenst": 100, "reshapefus": 101, "restorehiddenstatesinlengthadapt": 102, "startendlogit": 103, "matcher": [104, 202, 221], "tokentypeembed": [105, 217], "tokentypeembeddingsv1": [106, 217], "wordembed": 108, "create_tf_nod": 109, "creat": [109, 118, 119, 123, 124, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 217, 222, 223, 231, 236, 238], "when": [109, 136, 140, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 203, 211, 217, 219, 220, 223, 224, 227, 229, 231, 233, 236, 238, 239, 242], "tendorflow": 109, "get_tensor_dest_op": 109, "someth": 109, "store": [109, 116, 118, 119, 121, 202, 217, 220, 221, 224, 227, 228, 229, 230, 232, 233], "dest_op_nam": 109, "tf_extract_oper": 109, "tf_dtype_id": 109, "deal": [109, 202, 218], "multipl": [109, 140, 141, 211, 217, 218, 229, 231, 232, 233, 236, 238, 239], "indetermin": 109, "compil": [110, 184, 187, 213, 215, 216, 217, 219, 220, 222, 224, 246], "version": [111, 118, 121, 136, 214, 219, 225, 235], "provid": [112, 113, 116, 118, 121, 125, 126, 136, 140, 141, 184, 202, 211, 212, 213, 217, 226, 229, 238, 242], "pytorchbenchmark": 112, "executorbenchmark": 112, "run": [112, 118, 125, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 203, 209, 236, 237, 242], "self": [112, 140, 141, 202, 209, 217, 218], "print": [112, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 224], "tabl": [112, 219, 229, 233], "header": 112, "pytorch": [112, 113, 116, 118, 119, 121, 125, 136, 140, 141, 143, 203, 209, 212, 214, 240, 241, 242], "transform": [112, 113, 118, 126, 127, 136, 140, 141, 202, 203, 209, 210, 214, 216, 217, 228, 229, 232, 233, 239, 240, 241, 242], "overwrit": 112, "_prepare_inference_func": 112, "executorbenchmarkargu": [112, 203], "pretrainedconfig": 112, "process": [113, 118, 119, 122, 123, 136, 202, 211, 215, 217, 219, 220, 224, 227, 228, 233, 241, 242], "enum": [113, 114, 118, 128, 135, 147, 228, 229], "function": [113, 118, 119, 121, 122, 123, 125, 126, 136, 190, 191, 192, 193, 202, 210, 217, 219, 220, 223, 224, 228, 229, 236, 238, 241, 242], "inc": [113, 118, 121, 125, 126, 136, 222], "nncf": [113, 118], "dynamiclengthconfig": [113, 118, 136, 213], "max_length": [113, 118, 136, 184], "length_config": [113, 118, 140, 141, 213], "const_rat": [113, 118], "float": [113, 114, 118, 126, 128, 136, 138, 142, 190, 209, 210, 212, 217, 222, 228, 229, 238, 239, 241, 242], "num_sandwich": [113, 118], "length_drop_ratio_bound": [113, 115, 118], "layer_dropout_prob": [113, 115, 118], "layer_dropout_bound": [113, 115, 118], "dynamic_train": [113, 118], "bool": [113, 114, 118, 121, 136, 138, 140, 141, 142, 190, 191, 193, 210, 217, 228, 229, 238, 239], "fals": [113, 114, 116, 118, 121, 136, 140, 141, 184, 190, 202, 203, 210, 217, 219, 228, 229, 238], "load_store_fil": [113, 118], "evo_it": [113, 118], "30": [113, 118, 230], "population_s": [113, 118], "20": [113, 118, 214, 215, 222, 225, 230, 234, 235], "mutation_s": [113, 118], "mutation_prob": [113, 116, 118], "crossover_s": [113, 118], "num_cpu": [113, 118], "48": [113, 118, 225, 235], "distributed_world_s": [113, 118], "latency_constraint": [113, 118], "evo_eval_metr": [113, 118], "eval_f1": [113, 116, 118, 213, 238, 242], "dynam": [113, 118, 136, 223, 228, 231], "adapt": [113, 118, 184], "quantizationconfig": [113, 118, 125, 126, 136, 184, 213], "approach": [113, 118, 122, 123, 124, 209, 210, 211, 213, 229], "posttrainingstat": [113, 118, 211, 212, 213, 242], "timeout": [113, 118, 242], "max_trial": [113, 118, 202, 242], "100": [113, 118, 136, 140, 141, 236, 242], "metric": [113, 118, 119, 122, 123, 126, 136, 137, 184, 202, 213], "union": [113, 118, 136, 140, 141], "config_fil": [113, 118], "sampling_s": [113, 118], "use_bf16": [113, 118], "input_nam": [113, 118, 126], "op_wis": [113, 118], "maximum": [113, 118, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 225, 235, 242], "trial": [113, 118, 136], "performance_onli": [113, 118], "boolean": [113, 118], "whether": [113, 118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 218, 224], "random_se": [113, 118], "random": [113, 118, 140, 202], "seed": [113, 118, 202], "tensorboard": [113, 118], "directori": [113, 118, 121, 221, 226], "resume_path": [113, 118], "resum": [113, 118, 121, 136], "sampl": [113, 115, 118, 136, 184, 202, 209, 225, 232, 242], "size": [113, 118, 136, 140, 141, 202, 203, 213, 215, 219, 227, 231, 232, 242], "pruningconfig": [113, 118, 213], "epoch": [113, 118, 241], "epoch_rang": [113, 118, 128], "initial_sparsity_ratio": [113, 118, 128], "target_sparsity_ratio": [113, 118, 128, 213, 241], "97": [113, 118, 128, 235, 241], "pruner_config": [113, 118, 213, 241], "neural_compressor": [113, 118, 119, 122, 123, 125, 128, 136], "pruner": [113, 118, 128, 136, 210, 241], "prune": [113, 118, 125, 126, 131, 132, 136, 140, 141, 184, 243], "target": [113, 118, 131, 136, 202, 218, 233, 241], "ratio": [113, 115, 116, 118, 210, 236, 238, 239, 241], "init_prune_config": [113, 118], "init": [113, 118, 119, 125, 126, 143, 144, 191, 193, 202, 209, 214, 215, 216, 229], "distillationconfig": [113, 118, 136, 213], "criterion": [113, 114, 118, 126, 138, 213, 238, 242], "distil": [113, 118, 119, 125, 126, 136, 184, 194, 209, 222], "inc_config": [113, 118], "tfdistillationconfig": [113, 118, 202], "loss_typ": [113, 114, 118, 202, 210], "loss_weight": [113, 118, 202], "train_step": [113, 118, 202], "temperatur": [113, 114, 118, 202, 209, 210], "flashdistillationconfig": [113, 118], "block_nam": [113, 118, 202], "layer_mappings_for_knowledge_transf": [113, 118, 202], "add_origin_loss": [113, 114, 118, 202, 210], "flash": [113, 118, 119, 136], "autodistillationconfig": [113, 118, 202], "search_spac": [113, 118, 122, 123, 202], "search_algorithm": [113, 118, 202], "bo": [113, 118, 202], "knowledge_transf": [113, 118, 202], "regular_distil": [113, 118, 202], "auto": [113, 118, 119, 126, 209, 218, 223, 229], "disil": [113, 118], "knowledg": [113, 118, 136, 202, 209], "transfer": [113, 118, 136, 144, 210], "regular": [113, 118, 119, 241], "space": [113, 118, 119, 122, 123, 136, 202, 219, 227], "max": [113, 115, 118, 136, 225, 228, 231, 233, 235, 242], "nasconfig": [113, 118, 122, 123, 124], "basic": [113, 118, 122, 123, 141, 144, 214, 223], "parser": [113, 118], "procedur": [113, 118, 236], "knowledgeloss": [114, 210], "ce": [114, 202, 210], "loss_weight_ratio": [114, 210], "layer_map": [114, 210], "distillationcriterionmod": [114, 118], "drop": [115, 131, 211, 233, 238], "restor": [115, 211], "sample_length_configur": 115, "max_seq_length": [115, 116], "num_hidden_lay": 115, "layer_config": [115, 140, 141], "length_drop_prob": 115, "length_drop_ratio": 115, "min_length": 115, "hidden": [115, 140, 141, 202], "probabl": [115, 202], "truncat": [115, 184], "less": [115, 210, 219, 233, 241], "than": [115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 218, 219, 220, 228, 232, 236, 242], "min": [115, 136, 242], "sample_layer_configur": 115, "layer_dropout": 115, "depend": [115, 122, 123, 214, 216], "paramat": 115, "dropout": 115, "how": [115, 136, 183, 215, 217, 218, 221, 222, 224, 229, 230, 236, 238, 241], "mani": [115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 218, 220, 228, 230, 236], "bound": 115, "kept": 115, "evolust": 116, "evolustionari": 116, "approx_ratio": 116, "x": [116, 140, 141, 219, 229, 231, 232, 236, 242], "12": [116, 209, 214, 216, 218, 225, 230, 232, 234, 235, 236], "l": [116, 202, 210], "384": [116, 202, 219, 225, 235], "approxim": 116, "invers": 116, "store2str": 116, "gene": 116, "mac": 116, "score": [116, 140, 141, 240], "parent": 116, "parmat": 116, "devic": [116, 209, 210, 215, 219, 240], "evalu": [116, 118, 119, 122, 123, 125, 126, 136, 202, 210, 218, 232, 238, 239, 241, 242], "lower_constraint": 116, "upper_constraint": 116, "eval_metr": 116, "evolutionari": [116, 136], "load_stor": 116, "store_fil": 116, "save_stor": 116, "get_stor": 116, "set_lower_constraint": 116, "constraint": [116, 242], "setter": [116, 140, 141], "lower": [116, 233, 239, 242], "set_upper_constraint": 116, "upper": [116, 229], "save_popul": 116, "population_fil": 116, "popul": 116, "convex_hul": 116, "pareto_fronti": 116, "add_gen": 116, "mutat": 116, "rai": 116, "crossov": 116, "packag": [117, 120, 209], "drop_and_restore_util": [117, 118], "evolut": [117, 118, 211], "mixtur": 118, "auto_distil": [118, 120, 202], "basic_na": [118, 123], "utility_tf": [118, 137], "benchmark": [118, 184, 185, 194, 219, 225, 226, 235, 237], "optimizer_tf": [118, 194], "trainer": [118, 125, 184, 194, 211, 212, 213], "autodistil": [118, 119, 126, 136], "model_build": [118, 119, 122, 123, 126, 136, 202], "conf_fname_or_obj": [118, 119, 122, 123, 124], "experiment": [118, 119, 122, 123, 125, 136, 229], "nasbas": [118, 119, 122, 123, 124], "design": [118, 119, 136, 217, 226, 228, 229], "handl": [118, 119, 136, 140, 141, 183, 191, 202, 223, 230, 231], "three": [118, 119, 128, 135, 136, 202, 217, 220, 224, 232, 241, 242], "major": [118, 119, 136, 202, 227, 233, 242], "stage": [118, 119, 136, 190, 202], "explor": [118, 119, 136, 202, 213], "compress": [118, 119, 136, 184, 202, 210, 213, 227, 230, 233, 242], "architectur": [118, 119, 122, 123, 126, 136, 140, 141, 184, 202, 214, 227], "iter": [118, 119, 136, 202, 215, 219, 223, 228, 231, 232, 236, 237], "train": [118, 119, 122, 123, 125, 126, 136, 184, 202, 203, 209, 210, 241], "discov": [118, 119, 136, 202], "potenti": [118, 119, 136, 202], "measur": [118, 119, 136, 202, 210, 226, 238, 239, 241, 242], "predict": [118, 119, 136, 140, 141, 202, 209, 210], "accuraci": [118, 119, 136, 202, 210, 211, 213, 236, 238, 239, 241], "hardwar": [118, 119, 136, 202, 210, 234], "etc": [118, 119, 136, 202, 210, 218], "select": [118, 119, 136, 140, 141, 202, 229], "best": [118, 119, 122, 123, 136, 202, 211], "teacher_model": [118, 119, 125, 126, 136, 202, 210, 213], "getter": [118, 119, 136, 140, 141], "teacher": [118, 119, 125, 126, 202, 210, 211], "student_model": [118, 119], "student": [118, 119, 202, 210, 211], "train_func": [118, 119, 122, 123, 125, 126, 136, 202], "eval_func": [118, 119, 122, 123, 125, 126, 136, 202], "res_save_path": [118, 119, 122, 123], "model_cl": [118, 119, 126, 136, 202], "found": [118, 119, 122, 123, 216, 217, 233], "estim": [118, 119, 122, 123, 218, 233], "load_search_result": [118, 119], "init_by_cfg": [118, 119, 122, 123], "instanc": [118, 119, 122, 123, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 215, 218, 225, 235, 237, 238, 239, 240], "create_distil": [118, 119], "optimizedmodel": [118, 121], "from_pretrain": [118, 121, 140, 141, 184, 203, 240], "classmethod": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "model_name_or_path": [118, 121, 209], "instanti": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "given": [118, 121, 140, 141, 209, 224, 229, 231, 232, 233, 241], "intel": [118, 121, 183, 203, 209, 213, 214, 215, 216, 217, 225, 227, 234, 235, 239, 240, 241, 242], "compressor": [118, 121, 126, 184, 239, 242], "repositori": [118, 121], "hug": [118, 121, 184, 221], "face": [118, 121, 184, 221], "hub": [118, 121, 240], "local": [118, 121, 136, 217, 227], "host": [118, 121], "cache_dir": [118, 121], "download": [118, 121, 140, 141], "cach": [118, 121, 191, 223, 232], "standard": [118, 121], "force_download": [118, 121], "default": [118, 121, 127, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 209, 210, 217, 219, 225, 229, 233, 234, 235, 236, 238, 239, 241, 242], "forc": [118, 121], "re": [118, 121, 230], "overrid": [118, 121, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 223], "resume_download": [118, 121], "delet": [118, 121, 191, 193, 241], "incomplet": [118, 121], "receiv": [118, 121, 220, 224], "attempt": [118, 121], "revis": [118, 121], "branch": [118, 121, 236], "tag": [118, 121], "commit": [118, 121, 237], "sinc": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210], "we": [118, 121, 122, 123, 141, 209, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 242], "git": [118, 121, 209, 214, 215, 216], "system": [118, 121, 216], "artifact": [118, 121], "huggingfac": [118, 121, 238, 240], "co": [118, 121], "allow": [118, 121], "q_model": [118, 121], "obj": [118, 122, 123, 124], "notraineroptim": [118, 125, 210, 241, 242], "saved_result": [118, 125], "calib_func": [118, 125], "calib": [118, 125], "calib_dataload": [118, 125, 136], "calibr": [118, 125, 136, 242], "dataload": [118, 125, 136, 144], "init_quant": [118, 125, 126, 136, 228], "quant_config": [118, 125, 126, 136, 184, 213, 242], "callabl": [118, 125, 126, 136, 202], "prepar": [118, 125, 126, 140, 141, 190, 209, 218, 220, 223, 228, 229, 233, 242], "invok": [118, 125, 126], "_inc_quant": [118, 125], "init_prun": [118, 125, 126, 136], "pruning_config": [118, 125, 126, 136, 213, 241], "init_distil": [118, 125, 126, 136], "distillation_config": [118, 125, 126, 136, 210, 213], "orchestrate_optim": [118, 125, 136], "compon": [118, 125, 136, 228], "aggreg": [118, 125], "orchestr": [118, 125, 136, 184], "fit": [118, 125], "schedul": [118, 125, 136, 202, 226], "tfoptim": [118, 126, 202, 210], "pretrainedmodel": [118, 126, 136, 140, 141, 202], "training_args_tf": [118, 126], "tftrainingargu": [118, 126], "train_dataset": [118, 126, 184, 202], "eval_dataset": [118, 126, 184, 202], "compute_metr": [118, 126, 202], "task_typ": [118, 126, 144], "task_id": [118, 126, 144], "entri": [118, 126, 136, 140, 141], "techniqu": [118, 126, 211, 213, 242], "dataset": [118, 126, 136, 144, 209, 211, 238, 242], "builtin_eval_func": [118, 126, 136], "saved_model": [118, 126], "quantized_model_path": [118, 126], "larger": [118, 126, 136], "model_builder_builtin": [118, 126, 136, 202], "arch_para": [118, 126, 136], "built": [118, 126, 202, 239], "builder": [118, 126, 202], "inform": [118, 126, 183, 185, 186, 187, 188, 194, 210, 215, 218, 225, 229, 231, 235, 236, 241, 242], "autodistillation_config": [118, 126, 136, 202], "build": [118, 122, 123, 126, 136, 202, 216, 227, 234, 239], "build_train_func": [118, 126], "prunerconfig": [118, 128, 213], "update_frequ": [118, 128], "prune_typ": [118, 128, 213, 241], "basicmagnitud": [118, 128, 211, 213, 241], "per_tensor": [118, 128], "pruningmod": [118, 128], "current": [118, 128, 135, 218, 228, 229, 231, 232, 236], "quantizationmod": [118, 135], "both": [119, 136, 140, 141, 209, 213, 232, 236, 237, 238, 242], "basicna": [122, 123], "conf_fnam": [122, 123], "dictionari": [122, 123, 136], "here": [122, 123, 136, 216, 217, 219, 220, 221, 223, 224, 229, 233, 242], "common": [124, 242], "infer_framework_load_model": 127, "autoconfig": [127, 184, 203, 240], "model_class": 127, "task": [127, 141, 144, 202, 209, 210, 211, 222, 229, 232, 234, 240], "model_kwarg": [127, 140, 141, 240], "register_pattern": 130, "registri": [130, 132, 134], "get_pattern": 130, "parse_to_prun": 131, "keep": [131, 220], "parse_not_to_prun": 131, "non": [131, 141, 231, 232, 233, 237], "register_prun": 132, "get_prun": 132, "snipprun": 132, "snip": 132, "singl": [132, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 232], "shot": 132, "sensit": 132, "http": [132, 140, 209, 214, 215, 216, 223], "arxiv": [132, 140], "org": [132, 140, 214], "ab": [132, 140, 242], "1810": 132, "02340": 132, "register_schedul": 134, "get_schedul": 134, "easili": [136, 227, 228], "finetun": [136, 184, 203, 211, 240], "basetrain": 136, "resuming_checkpoint": 136, "checkpoint": [136, 140], "builtin_train_func": 136, "goal": [136, 241], "automativ": 136, "recip": [136, 209, 219, 239], "low": [136, 213, 227, 239, 242], "precis": [136, 212, 221, 239, 242], "achiev": [136, 239], "point": [136, 140, 141, 202, 220, 228, 229, 242], "automat": [136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 218, 219, 220, 228, 236], "pruningconf": 136, "torch": [136, 140, 141, 240], "nn": [136, 140, 141, 231], "smaller": [136, 210, 241], "config_list": 136, "optimizt": 136, "combin": [136, 202, 219, 224, 228, 229, 242], "create_optimizer_builtin": 136, "resume_from_checkpoint": 136, "optuna": 136, "ignore_keys_for_ev": 136, "tor": 136, "present": [136, 140], "state": [136, 140, 141, 225, 235], "hyperparamet": [136, 202], "ignor": [136, 140, 141, 217], "dure": [136, 215, 233, 237, 239, 241, 242], "keyword": 136, "argument": [136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 218, 237, 238, 239, 241, 242], "hide": [136, 140, 141], "deprec": [136, 140, 141], "training_step": 136, "batch": [136, 184, 203, 215, 231, 232, 237], "inject": [136, 229], "behavior": [136, 210, 227, 228, 241, 242], "being": 136, "fed": 136, "most": [136, 220, 224, 228, 229, 232, 240], "expect": [136, 140, 141, 203, 233, 239], "under": [136, 215, 217, 218, 221, 236], "label": [136, 140, 141, 209, 237, 240], "document": [136, 209, 210, 213, 232, 233, 241, 242], "accept": [136, 240], "loss": [136, 140, 141, 202, 209, 210, 242], "training_step_length_adapt": 136, "compute_loss": 136, "return_output": 136, "By": [136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215], "nas_config": 136, "baseic": 136, "callabel": 136, "auto_distil_evaluation_loop": 136, "descript": [136, 209, 210, 218, 233, 238, 239, 241, 242], "prediction_loss_onli": 136, "ignore_kei": 136, "metric_key_prefix": 136, "eval": [136, 202, 238], "trainer_util": 136, "evalloopoutput": 136, "share": 136, "work": [136, 183, 229, 240], "doe": [136, 217, 228, 229, 230, 231, 232], "avoid": [136, 140, 141, 224, 227, 229, 232, 236], "memori": [136, 203, 223, 228, 229, 230, 231, 232, 233, 239, 242], "huge": 136, "prefix": [136, 236], "export_to_onnx": [136, 203, 212], "tranfer": 136, "paramert": 136, "export_to_fp32_onnx": 136, "save_path": [136, 212], "opset_vers": [136, 212], "14": [136, 212, 225, 230, 234, 235], "do_constant_fold": [136, 212], "verbos": [136, 212], "fp32": [136, 203, 211, 215, 218, 219, 221, 223, 228, 229, 230, 231, 236, 240, 242], "export": [136, 184, 203, 215, 218, 221, 240], "constant": 136, "fold": [136, 236], "export_to_bf16_onnx": 136, "bf16": [136, 211, 221, 229, 230, 236], "export_to_int8_onnx": 136, "quant_format": [136, 212], "qdq": [136, 212, 221], "s8s8": [136, 212], "sample_s": 136, "calibrate_method": 136, "minmax": 136, "scale_map": 136, "export_to_jit": 136, "jit": [136, 226, 228, 229, 231], "set_dynamic_config": [136, 213], "dynamic_config": [136, 213], "run_evolutionary_search": 136, "nlptrainer": [136, 184, 210, 213, 241, 242], "nlp": [136, 184, 209, 211, 213, 215, 222, 241, 242], "nlpseq2seqtrain": 136, "seq2seqtrain": 136, "seq2seq": [136, 140, 141], "lenght": 136, "num_beam": 136, "numbert": 136, "beam": 136, "greater_is_bett": [138, 142, 184, 202, 238, 239, 242], "is_rel": [138, 213, 238, 242], "01": [138, 203, 213, 235, 238, 242], "weight_ratio": [138, 142, 238, 239, 242], "modeling_bert_dynam": 139, "modeling_roberta_dynam": 139, "bert": [140, 202, 210, 211, 215, 218, 219, 222, 224, 225, 228, 232], "load_tf_weights_in_bert": 140, "tf_checkpoint_path": 140, "bertembed": [140, 141], "word": [140, 141, 211, 233], "posit": [140, 141, 184, 219, 224, 236, 240], "token_typ": 140, "forward": [140, 141, 190, 202, 218, 223, 242], "longtensor": [140, 141], "token_type_id": [140, 141], "position_id": [140, 141], "inputs_emb": [140, 141], "floattensor": [140, 141], "past_key_values_length": [140, 141], "bertselfattent": 140, "position_embedding_typ": [140, 141], "transpose_for_scor": [140, 141], "hidden_st": [140, 141], "attention_mask": [140, 141], "head_mask": [140, 141], "encoder_hidden_st": [140, 141], "encoder_attention_mask": [140, 141], "past_key_valu": [140, 141], "output_attent": [140, 141], "bertselfoutput": 140, "bertattent": 140, "prune_head": [140, 141], "bertintermedi": 140, "intermedi": [140, 202, 217, 221, 224, 233, 242], "bertoutput": 140, "bertlay": 140, "output_length": [140, 141], "always_keep_cls_token": [140, 141], "feed_forward_chunk": [140, 141], "attention_output": [140, 141], "feed": [140, 141, 210, 215], "chunk": 140, "bertencod": 140, "encod": [140, 141, 202, 218, 224], "use_cach": [140, 141], "output_hidden_st": [140, 141], "return_dict": [140, 141], "modeling_output": [140, 141], "basemodeloutputwithpastandcrossattent": [140, 141], "bertpool": 140, "pooler": [140, 141], "bertpredictionheadtransform": 140, "bertlmpredictionhead": 140, "languag": [140, 141, 184, 209, 211, 240], "bertonlymlmhead": 140, "mask": [140, 141, 211, 228, 229, 230], "sequence_output": 140, "bertonlynsphead": 140, "pooled_output": 140, "bertpretraininghead": 140, "pretrain": [140, 141, 217], "bertpretrainedmodel": 140, "modeling_util": [140, 141], "abstract": [140, 141], "weight": [140, 141, 202, 210, 212, 218, 219, 221, 227, 230, 231, 233, 236, 238, 239, 241, 242], "simpl": [140, 141, 214, 215, 228, 240], "bertforpretrainingoutput": 140, "modeloutput": 140, "bertforpretrain": 140, "sum": [140, 210, 218, 233, 236], "classif": [140, 141, 202, 210, 211, 240], "prediction_logit": [140, 141], "batch_siz": [140, 141, 144, 203, 215, 218, 222, 232, 236], "sequence_length": [140, 141, 203], "vocab_s": [140, 141], "vocabulari": 140, "token": [140, 141, 184, 209, 211, 221, 240], "seq_relationship_logit": 140, "continu": [140, 227, 232], "hidden_s": [140, 141, 202], "plu": 140, "num_head": [140, 141], "averag": [140, 218], "bertmodel": 140, "add_pooling_lay": [140, 141], "behav": [140, 141], "well": [140, 141, 212, 242], "decod": [140, 141, 234], "case": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 210, 211, 218, 219, 227, 229, 230, 236, 237], "cross": [140, 141], "ad": [140, 141, 217, 220, 224, 228, 233, 236, 240], "describ": [140, 141, 209, 231, 232, 236, 238, 239], "1706": [140, 225, 235], "03762": 140, "ashish": [140, 141], "vaswani": [140, 141], "noam": [140, 141], "shazeer": [140, 141], "niki": [140, 141], "parmar": [140, 141], "jakob": [140, 141], "uszkoreit": [140, 141], "llion": [140, 141], "jone": [140, 141], "aidan": [140, 141], "gomez": [140, 141], "lukasz": [140, 141], "kaiser": [140, 141], "illia": [140, 141], "polosukhin": [140, 141], "To": [140, 141, 202, 217, 232, 233, 236, 237], "is_decod": [140, 141], "add_cross_attent": [140, 141], "pass": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 228, 229, 240, 242], "get_input_embed": [140, 141], "set_input_embed": [140, 141], "set_length_config": [140, 141], "set_output_attent": [140, 141], "basemodeloutputwithpoolingandcrossattent": [140, 141], "pad": [140, 141, 184, 218, 233], "indic": [140, 141, 224, 228, 229, 232, 233, 238], "n_layer": [140, 141], "embed_size_per_head": [140, 141], "precomput": [140, 141], "block": [140, 141, 211, 227, 230, 231, 233, 241], "speed": [140, 141, 203, 217, 220], "up": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 218, 220, 229, 236], "decoder_input_id": [140, 141], "those": [140, 141, 232, 241, 242], "past": [140, 141], "instead": [140, 141], "get_output_embed": [140, 141], "set_output_embed": [140, 141], "new_embed": [140, 141], "next_sentence_label": 140, "docstr": [140, 141], "pair": [140, 215, 229, 233], "legaci": [140, 141], "berttoken": 140, "uncas": [140, 184, 202, 203, 211, 221, 240], "hello": [140, 141], "my": [140, 141], "dog": [140, 141], "cute": [140, 141], "return_tensor": [140, 141, 184], "pt": [140, 141, 184, 240], "bertlmheadmodel": 140, "causallmoutputwithcrossattent": [140, 141], "prepare_inputs_for_gener": [140, 141], "bertformaskedlm": 140, "maskedlmoutput": [140, 141], "bertfornextsentencepredict": 140, "sentenc": [140, 141, 184, 209], "nextsentencepredictoroutput": 140, "prompt": 140, "itali": 140, "pizza": 140, "serv": 140, "formal": 140, "restaur": 140, "unslic": 140, "next_sent": 140, "sky": 140, "blue": 140, "shorter": 140, "wavelength": 140, "light": 140, "logit": [140, 141, 184, 202, 210, 215], "wa": 140, "bertforsequenceclassif": 140, "sequenceclassifieroutput": [140, 141], "regress": [140, 141, 209], "num_label": [140, 141, 184], "entropi": [140, 141, 202], "bertformultiplechoic": 140, "choic": [140, 141, 211], "multiplechoicemodeloutput": [140, 141], "num_choic": [140, 141], "dimens": [140, 141, 202, 210, 219, 231, 232, 233, 236], "bertfortokenclassif": 140, "tokenclassifieroutput": [140, 141], "bertforquestionansw": 140, "question": [140, 211, 230], "answer": [140, 141, 211], "start_posit": [140, 141], "end_posit": [140, 141], "questionansweringmodeloutput": [140, 141], "span": [140, 141], "clamp": [140, 141], "taken": [140, 141], "account": [140, 141], "expand_gath": [140, 141], "dim": [140, 141, 215, 223, 227, 233, 236], "roberta": [141, 211], "robertaembed": 141, "tini": [141, 211], "tweak": 141, "create_position_ids_from_inputs_emb": 141, "directli": [141, 228, 230], "cannot": [141, 227, 233, 237], "sequenti": [141, 220, 228, 229, 231], "robertaselfattent": 141, "robertaselfoutput": 141, "robertaattent": 141, "attenion": 141, "robertaintermedi": 141, "intermidi": 141, "robertaoutput": 141, "robertalay": 141, "robertaencod": 141, "roberata": 141, "robertapool": 141, "robertapretrainedmodel": 141, "update_keys_to_ignor": 141, "del_keys_to_ignor": 141, "robertamodel": 141, "_": [141, 202, 203, 209, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 236, 238, 239, 240, 241, 242], "robertaforcausallm": 141, "causal": [141, 209], "robertatoken": 141, "robertaconfig": 141, "robertaformaskedlm": 141, "robertalmhead": 141, "featur": [141, 184, 202, 208, 210, 221, 224, 227, 234, 240, 247], "robertaforsequenceclassif": 141, "robertaformultiplechoic": 141, "robertafortokenclassif": 141, "robertaclassificationhead": 141, "robertaforquestionansw": 141, "quanstion": 141, "create_position_ids_from_input_id": 141, "padding_idx": 141, "symbol": 141, "begin": [141, 202, 228, 229], "fairseq": 141, "make_posit": 141, "models": [142, 211, 239], "distributed_init": [143, 144], "backend": [143, 203, 211, 213, 214, 216, 217, 219, 221, 224, 226, 236, 242], "gloo": 143, "world_siz": 143, "rank": 143, "init_method": 143, "master_addr": 143, "127": [143, 218, 234, 235, 242], "master_port": 143, "12345": 143, "distibut": 143, "environ": [143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 236], "tfdataload": 144, "worker_address": 144, "worker": 144, "distribut": [144, 202, 210, 242], "address": [144, 184, 228], "treat": [144, 217], "chief": 144, "get_filepath": 144, "base_dirpath": 144, "folder": [144, 215, 216, 217, 218, 219, 221], "keras2savedmodel": 144, "kera": 144, "save_model": 144, "augmentertyp": 147, "enumer": 147, "deriv": [147, 191, 226, 232], "testaddclstoken": 149, "methodnam": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "runtest": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "unittest": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "testcas": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "whose": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 202, 224], "test": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 211, 214, 225, 235, 236, 237], "code": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 213, 214, 217, 219, 229, 230, 231, 234, 236], "itself": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 234], "place": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 229, 241], "fixtur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "constructor": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 223], "author": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "deconstruct": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "implement": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 202, 217, 219, 220, 224, 226, 227, 228, 231, 232, 234, 236], "setup": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 214, 217], "teardown": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "respect": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 220, 221], "necessari": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 223, 233], "__init__": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217], "alwai": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 224, 237], "chang": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 227, 228, 233], "signatur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "failureexcept": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "determin": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 219, 226, 234], "except": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 219, 228], "rais": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "fail": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "deem": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "rather": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 220, 228], "longmessag": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "long": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 224], "messag": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "includ": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 211, 215, 218, 219, 226, 229, 233, 236, 242], "repr": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "failur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "explicit": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 193, 223, 229], "maxdiff": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "diff": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "difflib": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "look": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 218, 229], "individu": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "setupclass": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "hook": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "teardownclass": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "testattentionreshap": [150, 151, 173, 176], "testconvreshap": 152, "testembeddingbag": 153, "testexecutionopt": 154, "testgelu": 155, "testgraphdispatch": 156, "testinsertinputouputdata": 157, "testissupportedonnxgraph": 158, "testlastlayershap": 159, "testlayernormwithreducemean": [160, 175, 177], "testmain": 161, "testmatmulwithbiasrelu": 162, "testmatmulwithbiassigmoid": 163, "testmatmulwithbiastanh": 164, "testmergedembeddingbag": 165, "testonnxutil": 167, "testop": 168, "testpaddingsequ": 169, "testpatterndispatch": 170, "testpositionembed": 171, "testqkvmerg": 172, "testquantonnxexecut": 174, "teststartendlogit": 178, "testtfutil": 179, "testtokentypeembed": 180, "testtranspos": 181, "testtransposebatchmatmul": 182, "issu": [183, 202, 242], "center": 183, "resolv": 183, "guidelin": 183, "innov": 184, "toolkit": [184, 211, 215], "particular": 184, "effect": [184, 209, 217, 236], "4th": 184, "xeon": [184, 211, 214, 227, 235, 242], "scalabl": [184, 211, 214, 228], "processor": [184, 211, 214, 225, 235], "sapphir": [184, 214], "rapid": [184, 214], "codenam": 184, "seamless": 184, "experi": [184, 230, 233], "extend": 184, "leverag": [184, 202, 210, 213], "advanc": [184, 202, 226, 234], "softwar": 184, "optim": [184, 202, 203, 210, 211, 212, 213, 214, 215, 220, 221, 222, 228, 229, 231, 238, 239, 240, 241, 242], "uniqu": 184, "awar": 184, "runtim": [184, 234, 236, 242], "releas": 184, "neurip": 184, "2022": [184, 225, 235], "paper": [184, 213], "fast": [184, 213], "distilbert": [184, 202, 203, 211, 213, 221, 240], "cpu": [184, 209, 213, 214, 215, 223, 225, 227, 229, 234, 235, 240], "quala": [184, 211, 213], "minilm": [184, 211, 213], "2021": 184, "onc": [184, 218], "pre": [184, 220], "applic": 184, "stabl": [184, 214], "diffus": [184, 211], "gpt": [184, 209, 211], "j": [184, 211, 215, 216, 217, 226, 231, 233, 234, 236], "6b": [184, 211], "bloom": 184, "176b": 184, "t5": [184, 211], "setfit": 184, "pip": [184, 209, 214, 222], "page": 184, "load_dataset": [184, 209], "load_metr": 184, "automodelforsequenceclassif": 184, "autotoken": [184, 240], "raw_dataset": [184, 209], "glue": [184, 209], "sst2": [184, 209, 211, 218, 222], "sst": [184, 203, 209, 211, 240], "english": [184, 203, 211, 240], "lambda": 184, "128": [184, 202, 203, 218, 222, 225, 235, 236, 242], "intel_extension_for_transform": [184, 203, 210, 213, 214, 215, 217, 219, 221, 224, 226, 236, 238, 239, 240, 241, 242], "label2id": 184, "id2label": 184, "neg": 184, "q_config": [184, 213, 242], "eval_loss": [184, 202], "argmax": 184, "item": 184, "quick": [184, 217], "matrix": [184, 227, 230, 231, 232, 233, 236, 241], "overview": 184, "kernel": [184, 188, 215, 218, 223, 225, 227, 228, 229, 232, 234, 235], "librari": [184, 205, 228, 229, 244], "deploy": [184, 209, 213, 219], "profil": [184, 245], "augment": 184, "tutori": [184, 215], "AND": 184, "blog": 184, "publish": 184, "medium": [184, 209, 237], "mleffici": 184, "effici": [184, 213], "dec": 184, "nov": 184, "coher": 184, "novemb": 184, "alibaba": 184, "deep": [184, 209, 221, 229, 239, 242], "learn": [184, 209, 221, 229, 239, 242], "purif": 184, "aug": [184, 209], "namespac": [190, 191, 192, 193], "public": [190, 191, 192, 193, 223, 228, 229], "typedef": 190, "std": [190, 191, 192, 193, 226, 228, 229], "unordered_map": [190, 229], "shared_ptr": [190, 191, 193, 223], "kernelhandl": 190, "operatorconfig": [190, 223], "executionopt": [190, 219], "e_ptr": 190, "m_ptr": 190, "inlin": [190, 191, 192, 193, 228], "void": [190, 191, 193, 223, 226, 228, 229], "vector": [190, 191, 192, 193, 223, 226, 228, 229, 231, 232, 233], "adaptattr": 190, "adapttensor": 190, "resetopstatu": 190, "getexecutekernel": 190, "reshape_model": 190, "has_dispatch_table_fil": 190, "set_tuning_mod": 190, "do_tun": 190, "operator_conf": 190, "execute_kernel": 190, "no_tuning_spac": 190, "set_post_op": 190, "post_op": 190, "set_lat": 190, "latenc": [190, 202, 211, 218, 225, 235, 242], "set_enable_spars": 190, "enable_spars": 190, "kernel_typ": [190, 236, 237], "weight_zero_ratio": 190, "set_weight_shap": 190, "int64_t": 190, "weight_shap": 190, "set_table_id": 190, "table_id": 190, "set_perf_ratio_id": 190, "perf_ratio_id": 190, "set_it_shap": 190, "input_shap": [190, 218, 219, 236], "set_ot_shap": 190, "output_shap": [190, 218], "get_it_shap": 190, "get_ot_shap": 190, "set_reshape_tim": 190, "reshape_time_": 190, "get_reshape_tim": 190, "input_attr": 190, "get_attr": 190, "protect": [190, 191, 192, 193], "size_t": [190, 219, 229], "gethash": 190, "name_": 190, "type_": 190, "operator_conf_": [190, 223], "isa": [190, 219, 228, 233, 234], "cpu_isa_": 190, "kernel_handler_": 190, "execute_kernel_": 190, "do_tuning_": 190, "no_tuning_space_": 190, "iter_cnt_": 190, "sparselib_available_": 190, "tune_dense_in_sparse_": 190, "monopoly_kernel_": 190, "dispatch_table_file_exists_": 190, "execution_options_ptr_": 190, "nullptr": [190, 191, 228], "adapt_action_": 190, "model_": 190, "jd": [191, 192, 193, 229], "templat": [191, 193], "typenam": [191, 193], "arg_t": 191, "proxy_bas": 191, "hpp": [191, 193, 219, 226, 236], "proxi": [191, 226], "anyth": 191, "similar": [191, 220, 228, 230, 231, 232, 241], "onednn": [191, 223], "struct": [191, 228, 229], "oneapi": [191, 223, 234], "dnnl": [191, 219, 223], "136": 191, "virtual": [191, 192, 193, 223, 228, 229], "reset_sp": 191, "sp": 191, "get_sp": 191, "create_proxy_object": 191, "result_ref": 191, "privat": [191, 215, 223, 227, 228, 229], "member": [191, 223, 228, 229], "data_handle_": 191, "kernel_desc_proxi": 191, "kernel_desc_t": [191, 193], "operator_desc": [191, 192, 226], "real": [191, 193, 219, 232, 234], "attention_desc": 191, "eltwiseop_desc": 191, "gather_desc": 191, "layernorm_ba_desc": [191, 228], "softmax_desc": 191, "sparse_matmul_desc": [191, 226], "transpose_matmul_desc": 191, "op_desc": [191, 192, 226, 229], "kernel_kind": [191, 229], "impl_list_item_t": [191, 192], "impl_list_": 191, "kernel_proxi": 191, "kernel_t": [191, 193], "eltwiseop": [191, 228, 229], "layernorm_ba": 191, "sparse_matmul": [191, 234], "transpose_matmul": 191, "kdp": 191, "rt_data": [191, 193, 226], "kd": [191, 193, 202, 210, 226], "sparse_matmul_desc_t": 191, "sparse_matmul_t": 191, "primit": [191, 193, 223, 226], "attention_k_t": [191, 193], "attention_ref_k_t": [191, 193], "eltwiseop_k_t": [191, 193], "eltwiseop_ref_k_t": [191, 193], "gather_k_t": [191, 193], "gather_ref_k_t": [191, 193], "layernorm_ba_k_t": [191, 193], "layernorm_ba_ref_k_t": [191, 193], "matmul_avx512f_p2031_p2013_k_t": [191, 193], "matmul_ref_k_t": [191, 193], "matmul_vnni_noperm_p2031_p1302_k_t": [191, 193], "matmul_vnni_p2031_p2013_k_t": [191, 193], "softmax_k_t": [191, 193], "softmax_ref_k_t": [191, 193], "spmm_amx_bf16_x16_k_t": [191, 193], "spmm_avx512f_k_t": [191, 193], "spmm_ref_k_t": [191, 193], "spmm_vnni_k_t": [191, 193], "derived_k_t": [191, 193], "derived_kd_t": [191, 193], "k_ref": [191, 193], "kd_": [191, 193], "cpu_engin": 192, "engine_kind": [192, 229], "eng_kind": [192, 226, 229], "get_implementation_list": 192, "eng_kind_": [192, 229], "within": [202, 231], "arch": 202, "proposit": 202, "propos": [202, 210, 227], "promis": [202, 231], "assess": 202, "64": [202, 203, 214, 218, 225, 232, 234, 235, 236], "num": [202, 209, 218, 227, 229, 232], "advisor": 202, "bayesian": 202, "ever": 202, "find": [202, 217, 219, 223, 224, 231, 241], "minim": [202, 210, 233], "done": [202, 210, 219, 236, 242], "z": [202, 210], "distanc": [202, 210], "euclidean": [202, 210], "kullback": [202, 210], "leibler": [202, 210], "diverg": [202, 210], "term": [202, 210, 231, 232, 233, 238, 239, 242], "assign": 202, "cal": 202, "sloss": 202, "mismatch": 202, "512": [202, 218, 231, 233, 235], "linear": [202, 210, 229, 231, 232], "desir": [202, 218], "unmatch": 202, "def": [202, 217], "agent": 202, "train_func_builtin": 202, "flash_distil": 202, "eval_func_builtin": 202, "els": [202, 217, 223], "search_loop": 202, "model_arch_para": 202, "oob": 202, "246": 202, "intra_bottleneck_s": 202, "96": [202, 225, 235], "160": [202, 225, 234], "num_attention_head": 202, "intermediate_s": 202, "640": 202, "num_feedforward_network": 202, "mobilebert": [202, 210, 211], "kl": 202, "mse": 202, "best_model_arch": 202, "automodelforpretrain": 202, "higher_is_bett": 202, "10": [202, 209, 214, 218, 225, 230, 235, 236], "42": [202, 225, 235], "500": 202, "25000": 202, "mobilebert_distil": 202, "sgd": 202, "learning_r": 202, "001": 202, "mobilebert_na": 202, "5000": 202, "partial": 202, "pylint": 202, "disabl": [202, 225, 235], "e1101": 202, "makedir": 202, "exist_ok": 202, "120": [202, 234], "240": 202, "256": [202, 218, 235], "tfautomodelforsequenceclassif": 202, "inherit": [203, 210, 217, 223, 240, 241, 242], "help": [203, 209, 224, 228], "improv": [203, 218, 228, 231, 233, 242], "reduct": [203, 213, 231, 232], "compar": [203, 211, 227, 236, 242], "pytorchbenchmarkargu": 203, "model_id_fp32": 203, "model_id_int8": 203, "benchmark_arg": 203, "32": [203, 212, 215, 225, 230, 231, 232, 233, 234, 235, 236], "multi_process": 203, "only_pretrain_model": 203, "seq": [203, 215, 232], "time": [203, 218, 227, 228, 230, 231, 232, 233, 236, 237, 242], "finetu": 203, "017": 203, "021": [203, 225], "029": 203, "013": [203, 225], "mb": [203, 211], "255": [203, 225, 242], "45": [203, 225, 235], "engl": 203, "65": [203, 235], "026": 203, "md": [203, 218, 221], "model_nam": [203, 240], "008": 203, "012": 203, "023": 203, "003": 203, "004": 203, "466": 203, "132": [203, 235], "53": [203, 234, 235], "extens": [209, 213, 214, 216, 217, 239, 240, 241], "tool": [209, 211, 218, 226, 236], "machin": [209, 236], "project": 209, "integr": 209, "nlpaug": 209, "lab": 209, "clone": [209, 214, 216, 217], "github": [209, 214, 215, 216, 223], "com": [209, 214, 215, 216, 225, 235], "cd": [209, 214, 216, 217, 222, 226, 234, 236], "submodul": [209, 214, 215, 216], "updat": [209, 214, 215, 216, 241], "recurs": [209, 214, 215, 216, 224], "preprocess": 209, "data_augment": 209, "dataaugment": 209, "augmenter_typ": 209, "textgenerationaug": 209, "input_dataset": 209, "dev": 209, "csv": 209, "output_path": 209, "join": 209, "result_path": 209, "test1": 209, "cv": 209, "augmenter_argu": 209, "gpt2": 209, "data_aug": 209, "data_fil": 209, "delimit": [209, 236], "asserttru": 209, "len": [209, 215, 217, 224, 232], "json": 209, "column": [209, 227, 231, 233, 241], "conduct": 209, "integ": [209, 212, 219, 220, 233, 236, 241, 242], "cuda": 209, "keyboardaug": 209, "ocraug": 209, "spellingaug": 209, "contextualwordembsforsentenceaug": 209, "condit": [209, 219, 220], "xl": 209, "xlnet": [209, 211], "ctrl": [209, 211], "enough": [209, 242], "rescu": 209, "natur": [209, 211], "fine": [209, 241, 242], "eo": 209, "open": [209, 215, 221], "txt": [209, 214, 215, 219, 222, 234], "w": [209, 218, 219, 227], "fw": 209, "clm": [209, 211], "train_fil": 209, "validation_fil": 209, "model_dir": 209, "python3": [209, 216], "run_clm": 209, "do_train": 209, "do_ev": 209, "overwrite_output_dir": 209, "secondli": 209, "training_set": 209, "scenario": 209, "line": [209, 217, 219, 227, 232, 233, 237], "stop": [209, 242], "k": [209, 219, 226, 228, 230, 231, 232, 233, 235, 236], "p": 209, "repetit": 209, "penalti": 209, "wide": [210, 229, 242], "larg": [210, 211, 224, 225, 227, 232], "signific": 210, "expens": 210, "deploi": 210, "power": [210, 211], "mobil": 210, "shown": [210, 219, 231, 233], "workflow": [210, 219, 221, 232], "take": [210, 218, 220, 223, 228, 233], "produc": [210, 233], "instruct": [210, 220, 228, 230, 233, 234, 236, 242], "besid": [210, 229], "often": 210, "guid": [210, 217, 229, 230], "patient": 210, "compact": 210, "agnost": 210, "resourc": 210, "limit": [210, 231], "summar": [210, 211], "usual": [210, 220, 227, 233, 242], "1x1": [210, 219], "eval_accuraci": [210, 213, 241], "d_conf": [210, 213], "tune_metr": [210, 241], "metric_": 210, "classifi": 210, "distillation_conf": 210, "distilled_model": 210, "phase": [210, 241], "intermediatelayersloss": 210, "knowledgedistillationloss": 210, "meanwhil": [211, 227], "demonstr": [211, 213, 232, 233], "posttrainingdynam": [211, 212, 242], "wikitext": 211, "10004": [211, 212], "xsum": 211, "cnn": 211, "cnn_dailymail": 211, "dm": 211, "lambdalab": 211, "sd": 211, "pokemon": 211, "text": [211, 229, 234, 240], "imag": [211, 221, 224, 230, 233], "mlm": 211, "plm": 211, "eleutherai": 211, "neo": 211, "125m": 211, "sshleifer": 211, "wip": [211, 230], "star": 211, "ehdwns1516": 211, "uncased_swag": 211, "swag": 211, "squad": 211, "lvwerra": 211, "pegasu": 211, "samsum": 211, "textattack": [211, 221], "mrpc": [211, 221, 222], "echarlaix": 211, "acc91": 211, "d37": 211, "hybrid": 211, "elast": 211, "conll03": 211, "conll2003": 211, "small": [211, 219, 232], "translat": 211, "wmt16": 211, "helsinki": 211, "opu": 211, "mt": 211, "en": 211, "ro": 211, "quantizationawaretrain": [211, 212], "No": 211, "maskinun": 211, "distilgpt2": 211, "rocketknight1": 211, "dslim": 211, "ner": 211, "datatyp": [211, 212], "f1": [211, 238], "gflop": [211, 235, 237], "speedup": 211, "415": [211, 225], "47": [211, 225, 235], "88": [211, 225, 234, 235], "58": [211, 235], "56": [211, 234, 235], "35": [211, 225, 235], "1x": 211, "la": 211, "minilmv2": 211, "115": 211, "04": [211, 214, 225, 235], "89": [211, 235], "28": [211, 225, 230, 235], "16": [211, 212, 215, 225, 230, 231, 233, 234, 235, 242], "99": [211, 235], "76": [211, 234, 235], "33x": 211, "269": 211, "253": 211, "252": [211, 234], "202": 211, "104": 211, "34": [211, 235], "87": [211, 235], "11": [211, 214, 222, 230, 235], "44": [211, 218, 225, 234, 235], "49": [211, 224, 225, 235], "94x": 211, "84": [211, 235], "85": [211, 225, 235], "21x": 211, "315": 211, "251": [211, 235], "242": [211, 225, 235], "159": [211, 234], "142": [211, 235], "33": [211, 235], "86": [211, 235], "68": [211, 234, 235], "41": [211, 225, 235], "55": [211, 234, 235], "82x": 211, "amount": 211, "obtain": [211, 218], "torchprofil": 211, "platinum": [211, 225, 235], "8280": 211, "unstructur": [211, 241], "group": [211, 217, 224, 232, 233, 241], "lasso": [211, 241], "nbsp": [211, 225, 235], "qnli": 211, "qqp": 211, "mnli": 211, "v1": 211, "tinybert_general_4l_312d": 211, "distilroberta": 211, "cola": 211, "krishna2020": 211, "googl": 211, "wikipedia": 211, "prajjwal1": 211, "approch": 211, "90": [211, 218, 225], "pruneofa": 211, "patternlock": [211, 241], "bhadresh": 211, "savani": 211, "emot": 211, "fac": 211, "mini": [211, 218, 222, 225], "gchhablani": 211, "philschmid": 211, "l6": 211, "h384": 211, "moshew": [211, 222], "squadv1": 211, "80": [211, 218, 225, 235], "1x4": [211, 233], "desigh": 212, "bit": [212, 213, 227, 228, 233, 242], "bfloat": 212, "fetch": [212, 227], "flag": 212, "enable_bf16": 212, "bfloat16": 212, "qlinear": [212, 221], "u8s8": 212, "u8u8": 212, "highli": 212, "suggest": [212, 228], "enabl": [212, 213, 225, 227, 234, 235], "enable_executor": 212, "p_conf": [213, 241], "further": [213, 219, 231], "enhanc": [213, 231], "accommod": 213, "budget": 213, "tradeoff": [213, 230], "dynamic_length_config": 213, "aim": [213, 217, 218, 220], "extrem": 213, "opportun": 213, "hw": 213, "sw": 213, "neural_engin": [213, 215, 216, 217, 218, 219, 221, 224, 226, 236], "satisfi": [214, 224], "success": 214, "r": [214, 222, 225, 235, 242], "recommend": [214, 217, 219, 222, 224, 234], "protobuf": [214, 222], "nightli": 214, "conda": [214, 222], "visual": 214, "studio": 214, "compat": 214, "formerli": [214, 226], "cascad": 214, "lake": 214, "icelak": 214, "futur": [214, 221, 228, 229, 234], "cento": 214, "ubuntu": [214, 225, 235], "ipex": [214, 242], "13": [214, 225, 230, 235], "high": [215, 226, 233], "multi": [215, 218, 219], "bert_model": 215, "30522": 215, "1024": [215, 218, 219, 235, 236], "125018112": 215, "dst_shape": [215, 217, 223], "slightli": 215, "read": 215, "activ": [215, 221, 222, 227, 230, 231, 242], "throught": 215, "numactl": 215, "command": [215, 217, 221, 237], "bind": 215, "core": [215, 225, 227, 235, 237], "omp_num_thread": 215, "session": 215, "want": [215, 217, 218, 219, 221, 224, 227, 228, 229, 236, 238], "close": 215, "glog_minloglevel": [215, 222], "again": 215, "nerual": 215, "show": [215, 217, 220, 221, 224, 230, 232], "actual": [215, 217], "cc": 215, "cmakelist": 215, "reus": 215, "mkdir": [215, 216, 226, 234, 236], "engine_integr": 215, "innersourc": 215, "ai": 215, "xtransform": 215, "submoudl": 215, "cp": 215, "src": [215, 229, 233, 236], "nlp_executor": 215, "neural_engine_exampl": 215, "ne": 215, "root": 215, "ne_root": 215, "project_source_dir": 215, "link": [215, 223, 241], "lib": 215, "add_execut": 215, "target_include_directori": 215, "boost_inc_dir": 215, "target_link_librari": 215, "cmake_thread_libs_init": 215, "gflag": 215, "cmake": [215, 216, 226, 234, 236], "window": 216, "linux": 216, "gcc": 216, "repo_path": 216, "dpython_execut": 216, "dne_with_sparselib": [216, 236], "neural_engine_bin": 216, "neural_engine_pi": [216, 219], "cpython": 216, "37m": 216, "x86_64": 216, "gnu": 216, "libkernellib": 216, "libneural_engin": 216, "pure": [216, 229], "certain": [217, 224], "simplifi": [217, 220], "attach": [217, 224], "distilbert_bas": 217, "assum": [217, 224], "repo": [217, 236], "instal": [217, 246], "These": [217, 220, 224], "roughli": 217, "divid": [217, 224, 227, 231, 237], "categori": [217, 218], "through": [217, 228, 230, 231, 234], "father": 217, "keep_dim": 217, "axi": [217, 218, 232], "ax": [217, 232], "come": 217, "rewrit": 217, "_attr": 217, "successfulli": [217, 224], "forget": [217, 220, 223], "reinstal": 217, "enter": 217, "you_work_dir": 217, "noth": [217, 224], "wrong": [217, 224], "anoth": [217, 220, 234], "correctli": 217, "distil_bert_bas": 217, "pattern_mapping_config": 217, "becaus": [217, 228, 230, 242], "even": [217, 227], "delv": 217, "recogn": 217, "doc": [217, 220, 228, 233], "put": [217, 220], "collect": [217, 218, 242], "namedtupl": 217, "__call__": 217, "retriev": 217, "equival": [217, 233], "supported_pattern": 217, "appropri": [217, 228], "influenc": [217, 220], "arbitrari": 217, "pattern_dict": 217, "new_node_nam": 217, "ret_old_nod": 217, "talk": 217, "epsilon": 217, "denomin": 217, "numer": [217, 242], "stabil": 217, "_set_attr": 217, "ln_node_idx": 217, "meet": [217, 230, 233], "finish": [217, 220, 222], "yourself": [217, 224], "analyz": 218, "let": [218, 223, 230], "readm": [218, 221], "run_executor": [218, 222], "input_model": [218, 221, 222], "model_and_token": [218, 221, 222], "seq_len": [218, 222, 232, 236], "Of": [218, 224], "cours": [218, 224], "proflil": 218, "trace": 218, "latanc": 218, "perf": [218, 233, 236, 237], "perfrom": 218, "chrome": 218, "view": [218, 227], "wai": [218, 219, 220, 224, 227, 229, 232, 234], "tell": [218, 220, 228, 229], "inst": 218, "And": [218, 219, 220, 221, 224, 228], "count": [218, 223], "pref": 218, "semi": 218, "4x1": [218, 227, 233], "70": [218, 225], "256x256": [218, 236], "settabl": 218, "256x1024": 218, "1024x256": 218, "dens": [218, 219, 224, 233, 236, 241], "post": [218, 236], "gelu_tanh": [218, 223], "add_37": 218, "116": [218, 235], "641": 218, "00": 218, "075": 218, "0375": 218, "comparison": [218, 233], "entir": [218, 227, 241], "185": 218, "801": 218, "693": 218, "366": 218, "content": 218, "part1": [218, 223], "modif": 218, "xlsx": 218, "titl": 218, "model_infer": 218, "friendli": 218, "000": 218, "wall": 218, "durat": 218, "17": [218, 225, 230, 235], "138": 218, "iteration4": 218, "726": 218, "per": [218, 225, 228, 230, 235, 237, 241], "phrase": 218, "0m": 218, "permut": [218, 230, 232, 236], "src1": [218, 228, 236], "perm": [218, 232], "add_284": 218, "028": [218, 235], "044": 218, "reshape_tim": 218, "004m": 218, "forward_tim": 218, "044m": 218, "input_tensor_nam": 218, "matmul_357": 218, "matmul_358": 218, "matmul_346": 218, "input_typ": 218, "f32": [218, 223], "output_tensor_nam": 218, "output_typ": 218, "append_op": 218, "src1_perm": 218, "try": [219, 242], "pictur": [219, 227], "bring": [219, 231, 233], "mainli": 219, "merg": [219, 224], "qkv": [219, 221], "off": 219, "model_path": 219, "easi": [219, 221], "mix": 219, "int8_model_path": 219, "shape_0": 219, "shape_1": 219, "shape_2": 219, "consid": [219, 227, 229, 230], "enlarg": 219, "subsequ": 219, "remark": 219, "sparselib": [219, 226], "micro": [219, 227, 231, 233], "oc": [219, 236], "mk": 219, "kn": 219, "nhwc": 219, "nxhxw": 219, "h": 219, "nk": 219, "km": 219, "mmkmb": 219, "mmxmb": 219, "fulfil": 219, "along": [219, 231, 232, 233], "omp": 219, "higher": [219, 232, 233, 236, 242], "unrol": [219, 231], "know": [219, 230], "disk": [219, 221], "dp": 219, "enable_op_tun": 219, "fix": [219, 230], "engine_dispatch_t": 219, "workspac": 219, "row": [219, 230, 233, 241], "rest": [219, 220, 224, 232, 233], "hash": [219, 228], "kernel_config": [219, 236], "kernel_nam": [219, 236], "3025159985633461085": 219, "40": [219, 225], "14124194128933833351": 219, "thing": 219, "affect": 219, "warmup": 219, "simul": [219, 233, 234], "warmup_it": 219, "num_iter": 219, "dispatch_table_file_root": 219, "file_root": 219, "script": [219, 221], "prevent": 219, "imprecis": 219, "purpos": [220, 224, 228], "realiz": 220, "suppli": [220, 224], "recognit": [220, 224], "embeddings_reshap": 220, "said": 220, "thought": 220, "st": 220, "nd": 220, "copi": [220, 232], "greater": [220, 238, 239], "reason": [220, 223], "sent": 220, "written": 220, "might": 220, "phenomenon": 220, "correct": [220, 224, 232], "Its": 220, "situat": 220, "nod": 220, "leav": [220, 232, 233], "old_node_index": 220, "variabl": [220, 223, 236], "_get_pattern_info": 220, "maintain": 220, "becom": [220, 233], "_create_out_pattern": 220, "_replace_pattern": 220, "emitt": 221, "netron": 221, "s8": [221, 228, 229, 236], "u8": [221, 223, 229, 236], "bash": [221, 222], "prepare_model": [221, 222], "sh": [221, 222, 237], "task_nam": [221, 222], "ptq": 221, "much": 221, "ir_path": 221, "focu": [222, 232, 238], "nc_folder": 222, "deepengin": 222, "distilbert_base_uncased_mrpc": 222, "env": 222, "prepare_dataset": 222, "shell": 222, "tokenizer_dir": 222, "data_dir": 222, "develop": 223, "geluoper": 223, "destructor": 223, "io": 223, "html": 223, "algorithm_": 223, "eng_": 223, "eltwise_forward": 223, "gelu_p_": 223, "src_m_": 223, "dst_m_": 223, "attrs_map": 223, "adjust": [223, 242], "becuas": 223, "descriptor": [223, 226, 236], "src_shape": 223, "dst": [223, 228, 229, 230, 231, 233, 236], "dst_tensor_ptr": 223, "set_shap": 223, "stride": [223, 227], "src_stride": 223, "getstrid": 223, "dst_stride": 223, "desc": [223, 228, 229], "src_md": 223, "data_typ": [223, 228, 229, 236], "dst_md": 223, "part2": 223, "gelu_algorithm": 223, "gelu_erf": 223, "eltwise_gelu_erf": 223, "eltwise_gelu_tanh": 223, "gelu_d": 223, "prop_kind": 223, "forward_infer": [223, 229], "primitive_desc": 223, "gelu_pd": 223, "unrefernc": 223, "reduc": [223, 227, 228, 231, 233, 242], "manag": 223, "strictli": 223, "alia": 223, "src_data": 223, "dst_data": 223, "mutable_data": 223, "data_ptr": 223, "stream": 223, "set_data_handl": 223, "const_cast": 223, "reinterpret_cast": 223, "memory_args_": 223, "dnnl_arg_src": 223, "dnnl_arg_dst": 223, "unref": 223, "unref_tensor": 223, "especi": [223, 233], "int8_lut_optim": 223, "int8_lut_acc_test": 223, "set_dtyp": 223, "register_operator_class": 223, "rule": 224, "recruit": 224, "ln_pattern": 224, "grow": 224, "concis": 224, "intuit": 224, "choos": 224, "prefer": [224, 232], "longer": 224, "ones": 224, "op_type1": 224, "op_type2": 224, "type1": 224, "type2": 224, "separ": [224, 233], "elig": 224, "a_node_name_1": 224, "b_node_name_1": 224, "c_node_name_1": 224, "a_node_name_2": 224, "b_node_name_2": 224, "c_node_name_2": 224, "a_node_name_n": 224, "b_node_name_n": 224, "c_node_name_n": 224, "bert_large_model_path": 224, "layer_0": 224, "layer_1": 224, "layer_2": 224, "afterward": 224, "volatil": 224, "incorrect": 224, "outcom": 224, "Or": 224, "exactli": 224, "screen": 224, "occur": [224, 227], "alreadi": 224, "moment": 224, "varianc": 224, "batchnorm": 224, "mul_1": 224, "mul_2": 224, "add_1": 224, "07": [225, 235], "8375c": [225, 235], "aw": [225, 235], "c6i": [225, 235], "12xlarg": [225, 235], "vari": [225, 235], "factor": [225, 235], "visit": [225, 235], "www": [225, 235], "sequencelength": 225, "throughput": 225, "sec": 225, "batchsiz": 225, "2652": 225, "36": [225, 235], "513": 225, "lt": [225, 235], "50m": 225, "2181": 225, "43": [225, 235], "628": 225, "1719": 225, "91": [225, 235], "75": [225, 235], "1487": [225, 235], "1220": 225, "39": [225, 235], "143": 225, "1304": 225, "46": [225, 235], "066": 225, "1102": [225, 235], "870": 225, "487": 225, "750": 225, "82": [225, 234, 235], "690": [225, 235], "188": 225, "910": [225, 235], "921": [225, 235], "729": 225, "71": [225, 234, 235], "619": 225, "38": [225, 234, 235], "821": [225, 235], "499": 225, "933": 225, "429": [225, 234], "936": [225, 235], "680": 225, "318": [225, 235], "557": 225, "262": 225, "467": 225, "589": 225, "405": 225, "339": 225, "473": 225, "119": [225, 235], "389": 225, "945": [225, 235], "360": 225, "274": 225, "843": 225, "259": [225, 234, 235], "442": 225, "241": 225, "364": 225, "016": [225, 235], "303": 225, "266": 225, "05": [225, 235], "221": 225, "973": 225, "112": [225, 235], "349": 225, "938": [225, 235], "275": [225, 234], "614": 225, "217": 225, "37": [225, 235], "039": 225, "301": 225, "166": 225, "033": 225, "320": 225, "769": 225, "263": 225, "724": [225, 235], "207": 225, "819": [225, 235], "181": 225, "979": [225, 235], "74": [225, 235], "235": 225, "63": [225, 235], "091": 225, "51": [225, 235], "914": [225, 235], "698": [225, 235], "905": [225, 235], "8972": 225, "076": [225, 235], "20m": 225, "7192": 225, "19": [225, 230, 235], "906": 225, "5482": 225, "509": 225, "4808": 225, "952": 225, "3678": 225, "409": 225, "4750": 225, "975": [225, 235], "3647": 225, "867": 225, "2921": 225, "587": [225, 235], "2576": 225, "18": [225, 230, 235], "768": [225, 235], "2131": [225, 235], "913": [225, 235], "2804": 225, "096": 225, "2263": 225, "037": 225, "1938": 225, "756": [225, 235], "1581": 225, "15": [225, 230, 231, 233, 235], "1409": 225, "015": 225, "2116": 225, "113": 225, "1777": 225, "972": [225, 235], "1474": 225, "392": 225, "1278": 225, "1137": 225, "752": 225, "1594": 225, "124": 225, "1347": [225, 235], "1126": 225, "993": [225, 235], "258": 225, "890": [225, 235], "877": [225, 235], "1319": 225, "1086": 225, "931": [225, 235], "545": 225, "833": 225, "332": [225, 235], "747": [225, 235], "141": 225, "1106": [225, 235], "31": [225, 230, 231, 235], "924": 225, "446": 225, "719": 225, "633": 225, "501": 225, "816": 225, "961": 225, "549": 225, "807": 225, "868": [225, 235], "701": [225, 235], "117": 225, "613": 225, "618": 225, "515": 225, "484": 225, "75384": 225, "989": 225, "1m": 225, "55628": 225, "917": 225, "49120": 225, "957": [225, 235], "41598": 225, "39218": 225, "31211": 225, "788": [225, 235], "28399": 225, "848": 225, "24910": 225, "966": 225, "20505": 225, "18575": 225, "865": 225, "25485": 225, "987": 225, "17468": 225, "16771": 225, "971": [225, 235], "16004": 225, "996": [225, 235], "13381": 225, "894": [225, 235], "13990": 225, "863": [225, 235], "13154": 225, "12535": 225, "12102": 225, "998": 225, "8426": [225, 235], "8736": 225, "8282": 225, "967": 225, "6659": 225, "898": [225, 235], "6477": 225, "6290": 225, "974": [225, 235], "8598": 225, "6449": 225, "935": [225, 235], "6263": [225, 235], "965": [225, 235], "6080": 225, "988": 225, "3684": 225, "817": [225, 235], "6246": 225, "978": 225, "6374": 225, "947": [225, 235], "6026": 225, "3300": [225, 235], "926": 225, "3226": 225, "6221": 225, "958": 225, "6322": 225, "6081": 225, "985": [225, 235], "3368": 225, "3264": 225, "distillbert": 225, "15460": 225, "296": 225, "10m": 225, "13129": 225, "363": 225, "11323": 225, "578": [225, 235], "10072": 225, "599": 225, "8689": 225, "7901": 225, "205": [225, 235], "6737": 225, "562": 225, "5440": 225, "904": [225, 235], "4920": 225, "786": [225, 235], "4460": 225, "053": 225, "5280": 225, "179": 225, "4339": 225, "244": [225, 234], "3634": [225, 235], "928": 225, "3255": 225, "211": [225, 235], "2928": 225, "197": [225, 235], "3681": 225, "527": [225, 235], "2965": [225, 235], "106": [225, 235], "2741": 225, "862": [225, 235], "2351": 225, "2150": 225, "282": 225, "2918": 225, "316": 225, "2505": [225, 235], "602": 225, "2010": [225, 235], "995": 225, "1872": 225, "609": [225, 235], "2409": 225, "983": 225, "1993": 225, "1671": [225, 235], "627": 225, "1484": 225, "131": 225, "1342": [225, 235], "1910": 225, "456": [225, 235], "1659": 225, "687": 225, "1293": 225, "245": [225, 235], "1230": 225, "798": 225, "1091": 225, "261": 225, "1627": 225, "908": 225, "1397": 225, "684": 225, "1130": 225, "1081": 225, "353": 225, "982": [225, 235], "187": [225, 234], "manufactur": [225, 235], "amazon": [225, 235], "ec2": [225, 235], "product": [225, 232, 235, 239, 242], "bio": [225, 235], "1021": [225, 235], "microcod": [225, 235], "0xd000331": [225, 235], "irq": [225, 235], "balanc": [225, 235], "xeonplatinum": 225, "90ghz": [225, 235], "frequenc": [225, 235, 241], "9ghz": [225, 235], "5ghz": [225, 235], "thread": 225, "socket": [225, 235], "numa": [225, 235], "turbo": [225, 235], "frequencygovern": [225, 235], "known": 226, "assembli": [226, 231, 233, 234], "domain": 226, "workdir": 226, "dne_with_test": 226, "ON": [226, 236], "ut": [226, 229], "dne_with_sparselib_onli": [226, 236], "dne_with_sparselib_benchmark": [226, 236], "test_spmm_vnni_kernel": 226, "box": 226, "profl": [226, 234], "section": [226, 233, 234], "ker_kind": [226, 229], "ker_prop": [226, 229], "ts_desc": [226, 229], "op_attr": [226, 228, 229, 232], "spmm_desc": 226, "spmm_kern": 226, "data0": 226, "data1": 226, "data2": 226, "data3": 226, "data4": 226, "unit": 226, "xbyak": [226, 229], "codegener": 226, "convent": 226, "xxxx": 226, "brgemm": 226, "isom": 226, "logic": [226, 234], "spmm": [227, 232, 236], "vnni": [227, 230, 232, 236, 242], "deeplearn": 227, "multipli": [227, 233, 242], "adopt": [227, 231, 233], "modern": 227, "spatial": 227, "program": 227, "64byte": 227, "organ": 227, "associ": 227, "access": [227, 231], "align": [227, 229, 233], "b1": 227, "b2": 227, "avx512": [227, 230, 242], "simd": [227, 228, 231], "width": [227, 228, 231, 242], "evenli": 227, "discontinu": 227, "fulli": [227, 233], "worst": 227, "veri": [227, 229], "miss": [227, 233], "frequent": 227, "introduc": [227, 228, 229, 230, 232, 233, 242], "destin": [227, 231, 232], "l1": 227, "l2": 227, "perhap": 227, "mxk": [227, 236], "bxm": 227, "xk": 227, "bxkxm": 227, "nxm": 227, "2d": [227, 236], "respons": 227, "frac": [227, 232], "binaryop": 228, "injector": [228, 229], "dl": 228, "changeabl": 228, "operand": [228, 231], "src2": [228, 236], "seri": [228, 230, 236], "horizont": 228, "overhead": [228, 232, 233], "move": 228, "binaryop_injector": 228, "postop": [228, 229, 236], "quit": 228, "eltwise_injector": [228, 229], "escap": [228, 229], "lut": [228, 229, 236], "compute_vector": 228, "expos": [228, 229], "arithmet": 228, "brows": 228, "dt": [228, 229], "vpaddb": 228, "vaddp": 228, "binaryop_attr": 228, "unlik": 228, "set_binaryop_list": 228, "what": [228, 229, 232, 241], "ptr": [228, 229, 234], "static_addr": 228, "normal": 228, "zp": 228, "channel": [228, 231, 233, 241], "dequant": [228, 229, 236], "free": [228, 236], "addr": 228, "binaryop_alg": 228, "uint8_t": [228, 229], "undef": [228, 229], "per_channel_qu": 228, "per_channel_dequ": 228, "op_alg": [228, 229], "op_dt": 228, "alg": 228, "set_scal": 228, "set_zp": 228, "binaryop_list_": 228, "binaryop_list": 228, "get_binaryop_list": 228, "binary_injector_init": 228, "set_mask": 228, "binari": [228, 229, 236], "reg64": [228, 229], "zmm": [228, 229, 231, 233], "get_addr": 228, "broadcast": [228, 231, 233, 234], "scalar": 228, "enable_mask": 228, "vector_comput": [228, 229], "bianryop": 228, "comput_vector": 228, "wrapper": 228, "jit_binary_injector": 228, "addr_typ": 228, "jit_gener": [228, 229], "opmask": [228, 229], "reg": [228, 229], "mov": [228, 234], "addr_ptr": 228, "zmm_src1": 228, "regexp": 228, "step1": [228, 229], "binary_injector": 228, "step2": [228, 229], "via": [228, 230, 234], "data_param": 228, "binaryop_addr": 228, "param_": [228, 229], "front": 228, "append_loop_len": 228, "process_col": 228, "zmm_byte_s": 228, "get_data_s": 228, "input_dt": [228, 236], "offset_exp": 228, "thread_elt_offset": 228, "bianryop_attr_list": 228, "append_vec": 228, "binary_add": 228, "eltwis": 229, "tradit": 229, "obvious": 229, "useless": 229, "idea": [229, 233, 241], "who": 229, "wise": [229, 236], "exp": [229, 236], "postop_attr": 229, "algo": 229, "aplha": 229, "zero": [229, 231, 233, 241], "sacl": 229, "postop_alg": 229, "int8_lut": 229, "postop_typ": 229, "mathemat": 229, "satur": 229, "round": [229, 242], "unus": 229, "\u03b1x": 229, "\u03b2": 229, "le": 229, "gt": 229, "apply_postops_list_": 229, "ker_kind_": 229, "ker_prop_": 229, "kernel_prop": 229, "impl_nthr_": 229, "ts_descs_": 229, "attrs_": 229, "tensor_desc": 229, "apply_postops_list": 229, "omp_get_max_thread": 229, "omp_get_num_proc": 229, "eltwise_injector_init": 229, "chian": 229, "escape_reg": 229, "escape_eras": 229, "eras": 229, "prepare_t": 229, "zmm_src": 229, "postop_idx": 229, "reg_typ": 229, "reg_idx": 229, "step0": 229, "eltwiseop_param_t": 229, "element_num": 229, "jit_eltwiseop_t": 229, "ssd": [229, 236], "assign_reg": 229, "eltwiseop_kd_t": 229, "op_desc_": 229, "params_": 229, "remain_task_mask": 229, "scratch_": 229, "r10": 229, "reg_src": 229, "addr_src": 229, "r15": [229, 234], "addr_dst": 229, "r14": [229, 234], "reg_param": 229, "rdi": [229, 234], "remain_element_num": 229, "rsi": 229, "getidx": 229, "alloc": 229, "special": [229, 232], "rcx": 229, "rdx": 229, "rsp": 229, "step3": 229, "preambl": 229, "load_param": 229, "vmovup": [229, 234], "postambl": 229, "fp32_gelu_attr": 229, "bf16_gelu_attr": 229, "gen": 229, "push_back": 229, "gen_cas": 229, "data0_desc": 229, "postop_list": 229, "fp32_gelu": [229, 236], "fp32_exp": 229, "mask_mock1": 229, "reg64_mock1": 229, "zmm_mock1": 229, "fp32_exp_attr": 229, "data1_desc": 229, "bf16_gelu": 229, "bf16_exp": [229, 236], "bf16_exp_attr": 229, "dt1op1": 229, "dt2op2": 229, "hase": 229, "get_true_data": 229, "rf_data": 229, "tmp": [229, 230], "your_kernel_log": 229, "apply_postop_list": 229, "unit_test_util": 229, "tdpbf16p": 230, "16x32": 230, "32x16": 230, "FOR": [230, 231, 233], "TO": 230, "colsb": 230, "byte": [230, 233], "col": 230, "endfor": [230, 231, 233], "write_row_and_zero": 230, "zero_upper_row": 230, "zero_tileconfig_start": 230, "layout": [230, 232], "successor": 230, "1x16": [230, 233], "concaten": [230, 233, 236], "intrins": 230, "offlin": [230, 233, 242], "tileloadd": 230, "good": 230, "vmovdqu32": 230, "consum": 230, "altern": [230, 233], "lot": 230, "disast": 230, "16x1": [230, 232], "greatli": 230, "impact": 230, "fly": 230, "__m512i": 230, "_mm512_set_epi16": 230, "29": [230, 235], "27": [230, 235], "26": [230, 234, 235], "25": [230, 235, 236], "23": [230, 235], "22": [230, 235], "21": [230, 235], "__m256i": 230, "lo": 230, "_mm256_loadu_epi": 230, "li": 230, "vec": 230, "_mm512_inserti32x8": 230, "_mm512_castsi256_si512": 230, "_mm512_permutexvar_epi16": 230, "_mm512_storeu_epi32": 230, "vfmadd": 231, "vfmadd231p": [231, 234], "degre": 231, "parallel": [231, 233, 236], "conting": 231, "act": 231, "bsc": 231, "variant": 231, "bsr": 231, "openmp": 231, "over": [231, 232], "thu": [231, 242], "relief": 231, "bottleneck": 231, "microkernel": 231, "peripher": 231, "decid": [231, 242], "implicit": 231, "p2031": [232, 236], "2013": 232, "avx512f": [232, 236], "noperm": [232, 236], "p1302": [232, 236], "p2013": [232, 236], "equat": [232, 242], "dot": [232, 242], "rm": 232, "q": 232, "v": 232, "qk": 232, "textunderscor": 232, "head_num": [232, 236], "head_siz": [232, 236], "nativ": 232, "sparelib": 232, "physic": 232, "axis": 232, "conceptu": 232, "head_nun": 232, "perm2031": 232, "perm2013": 232, "perm1302": 232, "concept": [232, 233], "lh": 232, "rh": 232, "float32": [232, 242], "figur": [232, 233], "illustr": 232, "inner": 232, "bodi": 232, "accumul": [232, 233], "16x16": 232, "drawn": 232, "lighter": 232, "cell": [232, 233], "uint8": [232, 242], "respectfulli": 232, "vnni_noperm_p2013_p1302": 232, "transpose_4b_8x8": 232, "legend": 232, "explan": 232, "offset": 232, "contigu": 232, "ellipsi": 232, "thinner": 232, "border": 232, "bolder": 232, "color": [232, 233], "16x32x16": 232, "lead": [232, 233], "suboptim": 232, "temporari": 232, "piec": 232, "turn": 232, "abl": [232, 242], "boost": 232, "twofold": 232, "unifi": 232, "roll": 232, "back": 232, "workload": 232, "four": 233, "adjac": 233, "unsign": [233, 236], "sign": [233, 242], "tmp1": 233, "zeroextend16": 233, "signextend16": 233, "tmp2": 233, "tmp3": 233, "tmp4": 233, "dword": [233, 234], "capabl": 233, "benefit": [233, 242], "transposit": 233, "discuss": 233, "typic": 233, "sai": 233, "4x4": 233, "4x16": 233, "pick": 233, "mxkxn": 233, "problem": 233, "densiti": 233, "fma": 233, "bubbl": 233, "16x4": 233, "highlight": 233, "4x": 233, "talent": 233, "solut": 233, "smart": 233, "gui": [233, 234], "swizzl": 233, "workaround": 233, "investig": 233, "unfortun": 233, "difficulti": 233, "bad": 233, "cost": 233, "harm": 233, "2x1": 233, "conclus": 233, "against": 233, "brief": 234, "sparse_lib_verbos": 234, "sparselib_verbos": 234, "nthr": 234, "224": [234, 235], "exec": 234, "shape_256_256_128": 234, "4658": [234, 235], "56982": 234, "itt": 234, "dne_with_sparselib_vtun": 234, "opt": 234, "latest": 234, "manual": 234, "dcmake_vtune_hom": 234, "sparse_lib_vtun": 234, "ssh": 234, "analys": 234, "verifi": 234, "sparse_lib_dump": 234, "xed64": 234, "click": 234, "xdi": 234, "push": 234, "rbx": 234, "rbp": 234, "4154": 234, "r12": 234, "4155": 234, "r13": 234, "4156": 234, "4157": 234, "dataxf": 234, "bd00040000": 234, "ebp": 234, "0x400": 234, "4c8b3f": 234, "qword": 234, "4c8b7708": 234, "0x8": 234, "4c8b6f10": 234, "0x10": 234, "1a": 234, "avx512evex": 234, "62f17d48efc0": 234, "vpxord": 234, "zmm0": 234, "62f15d48efe4": 234, "zmm4": 234, "62513d48efc0": 234, "zmm8": 234, "2c": 234, "62511d48efe4": 234, "zmm12": 234, "62f17548efc9": 234, "zmm1": 234, "62f15548efe": 234, "zmm5": 234, "3e": 234, "62513548efc9": 234, "zmm9": 234, "62511548efe": 234, "zmm13": 234, "4a": 234, "62f16d48efd2": 234, "zmm2": 234, "50": 234, "62f14d48eff6": 234, "zmm6": 234, "62512d48efd2": 234, "zmm10": 234, "5c": 234, "62510d48eff6": 234, "zmm14": 234, "62": [234, 235], "62c17c481006": 234, "zmm16": 234, "zmmword": 234, "62c17c48104e01": 234, "zmm17": 234, "0x40": 234, "6f": 234, "62c17c48105602": 234, "zmm18": 234, "0x80": 234, "62427d48183f": 234, "vbroadcastss": 234, "zmm31": 234, "7c": 234, "vfma": 234, "62927d40b8c7": 234, "62927540b8cf": 234, "62926d40b8d7": 234, "8e": 234, "62427d48187f04": 234, "95": [234, 235], "62927d40b8e7": 234, "9b": 234, "62927540b8ef": 234, "a1": 234, "62926d40b8f7": 234, "a7": 234, "62427d48187f08": 234, "0x20": 234, "ae": 234, "62127d40b8c7": 234, "b4": 234, "62127540b8cf": 234, "ba": [234, 236], "62126d40b8d7": 234, "c0": 234, "62427d48187f0c": 234, "0x30": 234, "c7": 234, "62127d40b8e7": 234, "62127540b8ef": 234, "62126d40b8f7": 234, "d9": 234, "62c17c48104603": 234, "0xc0": 234, "e0": 234, "62c17c48104e04": 234, "0x100": 234, "e7": 234, "62c17c48105605": 234, "0x140": 234, "ee": 234, "62427d48187f01": 234, "0x4": 234, "f5": 234, "fb": 234, "101": 234, "107": 234, "62427d48187f05": 234, "0x14": 234, "10e": 234, "114": 234, "11a": 234, "62427d48187f09": 234, "0x24": 234, "12d": 234, "133": 234, "139": 234, "62427d48187f0d": 234, "0x34": 234, "140": 234, "146": 234, "14c": 234, "152": 234, "62c17c48104606": 234, "0x180": 234, "62c17c48104e07": 234, "0x1c0": 234, "62c17c48105608": 234, "0x200": 234, "167": [234, 235], "62427d48187f02": 234, "16e": 234, "174": 234, "17a": 234, "180": 234, "62427d48187f06": 234, "0x18": 234, "18d": 234, "193": 234, "199": 234, "62427d48187f0a": 234, "0x28": 234, "1a0": 234, "1a6": 234, "1ac": 234, "1b2": 234, "62427d48187f0e": 234, "0x38": 234, "1b9": 234, "1bf": 234, "1c5": 234, "1cb": 234, "62c17c48104609": 234, "0x240": 234, "1d2": 234, "62c17c48104e0a": 234, "0x280": 234, "1d9": 234, "62c17c4810560b": 234, "0x2c0": 234, "1e0": 234, "62427d48187f03": 234, "0xc": 234, "1e7": 234, "1ed": 234, "1f3": 234, "1f9": 234, "62427d48187f07": 234, "0x1c": 234, "200": 234, "206": 234, "20c": 234, "212": 234, "62427d48187f0b": 234, "0x2c": 234, "219": [234, 235], "21f": 234, "225": 234, "22b": 234, "62427d48187f0f": 234, "0x3c": 234, "232": [234, 235], "238": 234, "23e": 234, "62d17c48114500": 234, "24b": 234, "62d17c48116503": 234, "62517c48114506": 234, "62517c48116509": 234, "260": 234, "62d17c48114d01": 234, "267": 234, "62d17c48116d04": 234, "26e": 234, "62517c48114d07": 234, "62517c48116d0a": 234, "27c": 234, "62d17c48115502": 234, "283": 234, "62d17c48117505": 234, "28a": 234, "62517c48115508": 234, "291": 234, "62517c4811750b": 234, "298": [234, 235], "pop": 234, "415f": 234, "29a": 234, "415e": 234, "29c": 234, "415d": 234, "29e": 234, "415c": 234, "2a0": 234, "5d": 234, "2a1": 234, "5b": 234, "2a2": 234, "avx": 234, "c5f877": 234, "vzeroupp": 234, "2a5": 234, "xed3": 234, "stat": 234, "cycl": 234, "29220": 234, "236418": 234, "118": 234, "2003": 234, "54": [234, 235], "003486": 235, "601": 235, "003107": 235, "675": 235, "002614": 235, "802": 235, "002166": 235, "968": 235, "068": 235, "001647": 235, "1273": 235, "011226": 235, "284": 235, "009475": 235, "885": 235, "377": 235, "007641": 235, "1097": 235, "78": 235, "005845": 235, "1435": 235, "004071": 235, "2060": 235, "012745": 235, "658": 235, "198": 235, "011113": 235, "754": 235, "835": 235, "009402": 235, "892": 235, "007602": 235, "1103": 235, "005494": 235, "1527": 235, "044202": 235, "759": 235, "036423": 235, "029245": 235, "1147": 235, "022347": 235, "1501": 235, "014906": 235, "2251": 235, "4096": 235, "216338": 235, "620": 235, "408": 235, "179593": 235, "345": 235, "135054": 235, "806": 235, "094698": 235, "1417": 235, "06097": 235, "2201": 235, "190508": 235, "704": 235, "526": 235, "159566": 235, "841": 235, "130863": 235, "1025": 235, "103927": 235, "1291": 235, "073996": 235, "1813": 235, "02504": 235, "753": 235, "784": 235, "021073": 235, "895": 235, "682": 235, "017099": 235, "013078": 235, "1443": 235, "009233": 235, "2044": 235, "3072": 235, "112882": 235, "668": 235, "818": 235, "087939": 235, "858": 235, "525": 235, "068835": 235, "1096": 235, "79": 235, "048734": 235, "1549": 235, "031756": 235, "2377": 235, "109308": 235, "679": 235, "092247": 235, "805": 235, "638": 235, "075911": 235, "055895": 235, "1329": 235, "61": 235, "035875": 235, "2071": 235, "57": 235, "00565": 235, "742": 235, "297": 235, "005036": 235, "832": 235, "004475": 235, "937": 235, "182": 235, "003685": 235, "1138": 235, "00271": 235, "1547": 235, "98": 235, "018348": 235, "386": 235, "015412": 235, "1088": 235, "01257": 235, "1334": 235, "009599": 235, "1747": 235, "72": 235, "006776": 235, "2475": 235, "020632": 235, "813": 235, "162": 235, "018427": 235, "483": 235, "01647": 235, "1018": 235, "66": 235, "01358": 235, "1235": 235, "010552": 235, "1589": 235, "072121": 235, "930": 235, "506": 235, "059613": 235, "1125": 235, "048378": 235, "1387": 235, "036675": 235, "1829": 235, "83": 235, "024857": 235, "2699": 235, "376539": 235, "712": 235, "902": 235, "31929": 235, "840": 235, "727": 235, "261265": 235, "1027": 235, "193579": 235, "1386": 235, "118429": 235, "2266": 235, "309195": 235, "177": 235, "256619": 235, "1046": 235, "213454": 235, "1257": 235, "165192": 235, "1624": 235, "118402": 235, "2267": 235, "040293": 235, "855": 235, "034117": 235, "027528": 235, "1371": 235, "02113": 235, "1786": 235, "015069": 235, "218765": 235, "215": 235, "180921": 235, "834": 235, "592": 235, "142778": 235, "1057": 235, "097692": 235, "1545": 235, "062003": 235, "2435": 235, "174101": 235, "853": 235, "73": 235, "148369": 235, "1001": 235, "123554": 235, "1203": 235, "092366": 235, "1609": 235, "059128": 235, "2513": 235, "007447": 235, "844": 235, "006572": 235, "005702": 235, "004831": 235, "1302": 235, "003674": 235, "1712": 235, "024706": 235, "020746": 235, "1213": 235, "03": 235, "016921": 235, "012994": 235, "1936": 235, "009038": 235, "2784": 235, "027588": 235, "912": 235, "024042": 235, "77": 235, "020788": 235, "1210": 235, "017787": 235, "1414": 235, "014013": 235, "1795": 235, "099457": 235, "1012": 235, "081973": 235, "1228": 235, "066057": 235, "1523": 235, "049708": 235, "2025": 235, "034191": 235, "2944": 235, "500698": 235, "804": 235, "184": 235, "420619": 235, "287": 235, "337529": 235, "1192": 235, "94": 235, "251221": 235, "1602": 235, "158668": 235, "2537": 235, "412912": 235, "155": 235, "346369": 235, "1162": 235, "2831": 235, "1422": 235, "220585": 235, "1825": 235, "156168": 235, "2578": 235, "05384": 235, "1051": 235, "045507": 235, "1244": 235, "036978": 235, "1531": 235, "028483": 235, "1987": 235, "020046": 235, "2824": 235, "283445": 235, "799": 235, "069": 235, "236101": 235, "959": 235, "302": 235, "188745": 235, "1199": 235, "135532": 235, "084554": 235, "2678": 235, "227976": 235, "977": 235, "19463": 235, "1145": 235, "161251": 235, "1382": 235, "123585": 235, "1804": 235, "084032": 235, "2653": 235, "009405": 235, "891": 235, "00822": 235, "1020": 235, "007013": 235, "1196": 235, "08": 235, "005799": 235, "1446": 235, "004647": 235, "1805": 235, "033634": 235, "997": 235, "629": 235, "027609": 235, "1215": 235, "022443": 235, "1495": 235, "09": 235, "017081": 235, "1964": 235, "011754": 235, "2854": 235, "03586": 235, "031008": 235, "1082": 235, "026049": 235, "1288": 235, "021516": 235, "1559": 235, "017011": 235, "1972": 235, "133295": 235, "1006": 235, "92": 235, "111186": 235, "1207": 235, "088111": 235, "066552": 235, "2016": 235, "045442": 235, "2953": 235, "611718": 235, "645": 235, "533329": 235, "430288": 235, "1247": 235, "307141": 235, "198987": 235, "2698": 235, "02": [235, 238], "556249": 235, "163": 235, "462737": 235, "1160": 235, "37537": 235, "1430": 235, "28321": 235, "1895": 235, "203901": 235, "2633": 235, "071636": 235, "1053": 235, "060352": 235, "1250": 235, "04901": 235, "1540": 235, "037568": 235, "2009": 235, "026748": 235, "2822": 235, "3572": 235, "845": 235, "437": 235, "299561": 235, "1008": 235, "228752": 235, "1320": 235, "165648": 235, "1823": 235, "105656": 235, "2858": 235, "298907": 235, "994": 235, "529": 235, "255598": 235, "1163": 235, "20824": 235, "1427": 235, "159911": 235, "1858": 235, "111211": 235, "2673": 235, "0153": 235, "685": 235, "358": 235, "013145": 235, "797": 235, "010967": 235, "956": 235, "009211": 235, "007554": 235, "1388": 235, "055308": 235, "758": 235, "351": 235, "045848": 235, "826": 235, "036726": 235, "1142": 235, "06": 235, "027535": 235, "018464": 235, "2271": 235, "059788": 235, "051022": 235, "822": 235, "062": 235, "042164": 235, "033344": 235, "029639": 235, "1415": 235, "22241": 235, "337": 235, "18324": 235, "915": 235, "145322": 235, "1154": 235, "1083": 235, "072884": 235, "2301": 235, "11793": 235, "600": 235, "929398": 235, "722": 235, "720963": 235, "823": 235, "510039": 235, "1315": 235, "336519": 235, "1994": 235, "909941": 235, "737": 235, "508": 235, "753487": 235, "644": 235, "606477": 235, "459915": 235, "1459": 235, "303455": 235, "2211": 235, "123429": 235, "764": 235, "586": 235, "103035": 235, "923": 235, "082503": 235, "1143": 235, "062558": 235, "1508": 235, "042694": 235, "2210": 235, "60813": 235, "734": 235, "483053": 235, "781": 235, "462": 235, "357348": 235, "1056": 235, "256715": 235, "1470": 235, "169119": 235, "2232": 235, "503341": 235, "738": 235, "42134": 235, "881": 235, "342843": 235, "255199": 235, "1456": 235, "174091": 235, "2134": 235, "014267": 235, "012397": 235, "1015": 235, "010587": 235, "1188": 235, "008608": 235, "1461": 235, "006554": 235, "1919": 235, "053254": 235, "044755": 235, "1124": 235, "034839": 235, "1444": 235, "026689": 235, "1885": 235, "017743": 235, "2836": 235, "69": 235, "054911": 235, "916": 235, "608": 235, "047555": 235, "1058": 235, "040166": 235, "1253": 235, "032695": 235, "1539": 235, "025032": 235, "220947": 235, "911": 235, "178324": 235, "1128": 235, "137361": 235, "1465": 235, "103126": 235, "1952": 235, "070143": 235, "2870": 235, "06648": 235, "755": 235, "893959": 235, "900": 235, "831": 235, "718893": 235, "1120": 235, "537405": 235, "1498": 235, "280686": 235, "2869": 235, "902588": 235, "730678": 235, "582871": 235, "1381": 235, "444133": 235, "298489": 235, "2697": 235, "581": 235, "095595": 235, "1184": 235, "078109": 235, "1449": 235, "059619": 235, "1899": 235, "041405": 235, "2735": 235, "596568": 235, "497127": 235, "396634": 235, "286973": 235, "1578": 235, "167473": 235, "2704": 235, "472466": 235, "943": 235, "787": 235, "391055": 235, "1140": 235, "319865": 235, "1394": 235, "247491": 235, "1801": 235, "169874": 235, "2624": 235, "93": 235, "021379": 235, "686": 235, "67": 235, "018228": 235, "015207": 235, "012053": 235, "1218": 235, "010396": 235, "1412": 235, "077159": 235, "761": 235, "06424": 235, "074": 235, "051467": 235, "038789": 235, "1513": 235, "025687": 235, "2285": 235, "083622": 235, "702": 235, "071292": 235, "664": 235, "058915": 235, "697": 235, "048407": 235, "041133": 235, "311691": 235, "569": 235, "256635": 235, "204973": 235, "153086": 235, "1534": 235, "101206": 235, "2320": 235, "59625": 235, "588": 235, "583": 235, "33246": 235, "705": 235, "03849": 235, "703": 235, "738939": 235, "1271": 235, "480308": 235, "1956": 235, "26056": 235, "745": 235, "324": 235, "04874": 235, "842936": 235, "1114": 235, "59": 235, "635554": 235, "1478": 235, "42145": 235, "2229": 235, "174215": 235, "375": 235, "145836": 235, "116701": 235, "1132": 235, "087673": 235, "1506": 235, "0595": 235, "2220": 235, "883258": 235, "598": 235, "333": 235, "711146": 235, "743": 235, "543634": 235, "129": 235, "402406": 235, "1313": 235, "266945": 235, "1979": 235, "70404": 235, "592043": 235, "878": 235, "695": 235, "475444": 235, "1094": 235, "358932": 235, "240739": 235, "2160": 235, "018438": 235, "909": 235, "907": 235, "015871": 235, "013504": 235, "1242": 235, "010993": 235, "1526": 235, "00826": 235, "2031": 235, "061272": 235, "1095": 235, "060962": 235, "1100": 235, "046729": 235, "1436": 235, "034036": 235, "1971": 235, "023128": 235, "2901": 235, "071725": 235, "061692": 235, "1087": 235, "05216": 235, "1286": 235, "042327": 235, "1585": 235, "032111": 235, "2089": 235, "286461": 235, "242512": 235, "181783": 235, "1476": 235, "139021": 235, "1930": 235, "087012": 235, "3085": 235, "36322": 235, "652": 235, "08991": 235, "880185": 235, "1219": 235, "694533": 235, "366328": 235, "2931": 235, "15748": 235, "927": 235, "937824": 235, "1144": 235, "745357": 235, "1440": 235, "558061": 235, "1924": 235, "391387": 235, "2743": 235, "157349": 235, "616": 235, "129806": 235, "103083": 235, "1464": 235, "078442": 235, "053639": 235, "2815": 235, "767569": 235, "874": 235, "641585": 235, "941": 235, "387": 235, "488558": 235, "1236": 235, "355651": 235, "1698": 235, "230945": 235, "2615": 235, "611059": 235, "514108": 235, "1156": 235, "416571": 235, "318094": 235, "1869": 235, "225023": 235, "2642": 235, "037509": 235, "564": 235, "03176": 235, "026189": 235, "1281": 235, "021115": 235, "015895": 235, "2110": 235, "141333": 235, "949": 235, "133647": 235, "1004": 235, "071033": 235, "1889": 235, "52": 235, "042992": 235, "3121": 235, "147474": 235, "125344": 235, "1070": 235, "104294": 235, "084977": 235, "1579": 235, "062473": 235, "2148": 235, "701639": 235, "765": 235, "534615": 235, "359791": 235, "1492": 235, "2612": 235, "2055": 235, "183193": 235, "2930": 235, "92067": 235, "735": 235, "271": 235, "4402": 235, "880": 235, "046": 235, "69186": 235, "1269": 235, "17436": 235, "1828": 235, "880179": 235, "2439": 235, "62123": 235, "264": 235, "14905": 235, "999": 235, "64253": 235, "1307": 235, "1413": 235, "1881": 235, "771439": 235, "2783": 235, "369429": 235, "451": 235, "288236": 235, "1047": 235, "209526": 235, "1441": 235, "148115": 235, "2038": 235, "106089": 235, "2846": 235, "53204": 235, "465": 235, "28593": 235, "939": 235, "368": 235, "0852": 235, "1113": 235, "685382": 235, "1762": 235, "408357": 235, "2958": 235, "4521": 235, "13466": 235, "853916": 235, "1392": 235, "642672": 235, "1850": 235, "446442": 235, "2663": 235, "057419": 235, "876": 235, "046081": 235, "1092": 235, "038936": 235, "1292": 235, "031279": 235, "02345": 235, "2146": 235, "204966": 235, "17364": 235, "1159": 235, "141097": 235, "1426": 235, "105192": 235, "1913": 235, "067777": 235, "2970": 235, "21269": 235, "946": 235, "573": 235, "191564": 235, "1050": 235, "156368": 235, "1287": 235, "1565": 235, "093357": 235, "2156": 235, "84983": 235, "789777": 235, "1019": 235, "598168": 235, "1346": 235, "433492": 235, "1857": 235, "269504": 235, "2988": 235, "74845": 235, "859": 235, "348": 235, "96945": 235, "811": 235, "505": 235, "77082": 235, "76407": 235, "1826": 235, "09719": 235, "2935": 235, "73162": 235, "00241": 235, "1072": 235, "39024": 235, "77317": 235, "1816": 235, "19536": 235, "2694": 235, "517278": 235, "875": 235, "708": 235, "382208": 235, "1185": 235, "317837": 235, "1425": 235, "233231": 235, "1942": 235, "152925": 235, "2962": 235, "44309": 235, "741": 235, "62409": 235, "1115": 235, "64963": 235, "1098": 235, "03923": 235, "1743": 235, "625089": 235, "2898": 235, "07006": 235, "861": 235, "632": 235, "64247": 235, "1085": 235, "33386": 235, "1337": 235, "994935": 235, "1792": 235, "68383": 235, "2608": 235, "071358": 235, "940": 235, "061246": 235, "051679": 235, "1298": 235, "041483": 235, "1617": 235, "030989": 235, "2165": 235, "282241": 235, "951": 235, "085": 235, "238855": 235, "1123": 235, "193713": 235, "1385": 235, "146781": 235, "81": 235, "093896": 235, "286141": 235, "122": 235, "257138": 235, "1043": 235, "214208": 235, "167575": 235, "1601": 235, "124072": 235, "2163": 235, "21431": 235, "884": 235, "237": 235, "955251": 235, "775294": 235, "1384": 235, "63282": 235, "1696": 235, "37333": 235, "2876": 235, "87335": 235, "317": 235, "65059": 235, "1176": 235, "94733": 235, "1457": 235, "62241": 235, "1637": 235, "47752": 235, "2906": 235, "75786": 235, "83024": 235, "889": 235, "87429": 235, "1108": 235, "87685": 235, "75328": 235, "2449": 235, "718776": 235, "289": 235, "561317": 235, "1076": 235, "429166": 235, "1407": 235, "317204": 235, "1904": 235, "208555": 235, "2896": 235, "94057": 235, "30458": 235, "1048": 235, "6702": 235, "25799": 235, "1920": 235, "84121": 235, "2871": 235, "34423": 235, "711": 235, "77444": 235, "857": 235, "10049": 235, "52509": 235, "926038": 235, "2568": 235, "00203": 235, "1032": 235, "001981": 235, "001794": 235, "1169": 235, "001637": 235, "1280": 235, "00171": 235, "1226": 235, "003958": 235, "2119": 235, "003405": 235, "2463": 235, "003086": 235, "2718": 235, "002927": 235, "2866": 235, "002179": 235, "3849": 235, "004371": 235, "1918": 235, "004182": 235, "2005": 235, "003448": 235, "2433": 235, "00291": 235, "2882": 235, "002937": 235, "2856": 235, "012095": 235, "2774": 235, "010338": 235, "3245": 235, "008508": 235, "3943": 235, "006595": 235, "5087": 235, "004847": 235, "6923": 235, "052451": 235, "2558": 235, "042874": 235, "3130": 235, "032364": 235, "4147": 235, "02312": 235, "5805": 235, "01522": 235, "8818": 235, "045123": 235, "2974": 235, "037382": 235, "3590": 235, "030275": 235, "4433": 235, "023182": 235, "5789": 235, "01617": 235, "8300": 235, "007314": 235, "2580": 235, "006332": 235, "2980": 235, "005359": 235, "3522": 235, "004493": 235, "4200": 235, "003418": 235, "5521": 235, "027003": 235, "2795": 235, "02197": 235, "3436": 235, "017748": 235, "4253": 235, "013134": 235, "5748": 235, "008974": 235, "8412": 235, "025719": 235, "2889": 235, "021897": 235, "3393": 235, "018093": 235, "4107": 235, "013742": 235, "5408": 235, "009924": 235, "7488": 235, "002891": 235, "1450": 235, "002458": 235, "002523": 235, "1662": 235, "002266": 235, "1851": 235, "001803": 235, "2326": 235, "005789": 235, "005004": 235, "3353": 235, "00424": 235, "3956": 235, "003505": 235, "4786": 235, "002972": 235, "5644": 235, "006933": 235, "2420": 235, "005931": 235, "2828": 235, "005267": 235, "3185": 235, "004801": 235, "3494": 235, "003851": 235, "4356": 235, "019352": 235, "3467": 235, "016625": 235, "4036": 235, "013287": 235, "5050": 235, "010629": 235, "6313": 235, "007591": 235, "8841": 235, "097726": 235, "2746": 235, "081327": 235, "065632": 235, "4090": 235, "047646": 235, "5633": 235, "029536": 235, "9088": 235, "073619": 235, "3646": 235, "060379": 235, "4445": 235, "048994": 235, "5478": 235, "036992": 235, "7256": 235, "02588": 235, "10372": 235, "011659": 235, "3237": 235, "009791": 235, "3855": 235, "008118": 235, "4650": 235, "006679": 235, "5652": 235, "004939": 235, "7643": 235, "053777": 235, "2807": 235, "045914": 235, "3288": 235, "03588": 235, "4208": 235, "02529": 235, "5970": 235, "016742": 235, "9018": 235, "040705": 235, "3651": 235, "034291": 235, "4334": 235, "028568": 235, "5202": 235, "02187": 235, "6796": 235, "016186": 235, "9183": 235, "003155": 235, "002952": 235, "002655": 235, "2369": 235, "002436": 235, "2582": 235, "002236": 235, "2813": 235, "00745": 235, "3377": 235, "006565": 235, "3833": 235, "005426": 235, "4638": 235, "004256": 235, "5912": 235, "003466": 235, "7261": 235, "008359": 235, "3010": 235, "00742": 235, "3391": 235, "006535": 235, "3850": 235, "005559": 235, "4526": 235, "004881": 235, "5156": 235, "025726": 235, "3912": 235, "021747": 235, "4628": 235, "017651": 235, "5703": 235, "013712": 235, "7341": 235, "009801": 235, "10270": 235, "124749": 235, "3227": 235, "103385": 235, "3894": 235, "083219": 235, "4838": 235, "062601": 235, "6432": 235, "039799": 235, "10117": 235, "101071": 235, "3983": 235, "082567": 235, "4876": 235, "066852": 235, "6023": 235, "048773": 235, "8255": 235, "035419": 235, "11368": 235, "014772": 235, "01278": 235, "4430": 235, "010532": 235, "5376": 235, "008698": 235, "6509": 235, "006436": 235, "8798": 235, "069887": 235, "3240": 235, "058858": 235, "3848": 235, "047341": 235, "4784": 235, "034614": 235, "6543": 235, "022295": 235, "10159": 235, "053815": 235, "4142": 235, "045458": 235, "4904": 235, "037358": 235, "5968": 235, "02914": 235, "7651": 235, "02089": 235, "10672": 235, "003936": 235, "003322": 235, "2525": 235, "003173": 235, "2643": 235, "002691": 235, "3117": 235, "002358": 235, "3557": 235, "009382": 235, "3576": 235, "008289": 235, "4047": 235, "006724": 235, "4990": 235, "005148": 235, "6518": 235, "004061": 235, "8262": 235, "010712": 235, "3132": 235, "009203": 235, "007943": 235, "4224": 235, "006981": 235, "4806": 235, "00561": 235, "5980": 235, "034567": 235, "3882": 235, "028972": 235, "4632": 235, "023258": 235, "5770": 235, "017977": 235, "7466": 235, "012814": 235, "10474": 235, "158162": 235, "3394": 235, "132552": 235, "4050": 235, "101844": 235, "5271": 235, "080936": 235, "6633": 235, "05301": 235, "10127": 235, "135839": 235, "3952": 235, "11116": 235, "4829": 235, "089951": 235, "063302": 235, "8481": 235, "046746": 235, "11484": 235, "019263": 235, "3919": 235, "016459": 235, "4586": 235, "013535": 235, "5578": 235, "010771": 235, "7009": 235, "007611": 235, "9919": 235, "085488": 235, "3532": 235, "074727": 235, "4041": 235, "060476": 235, "4993": 235, "041796": 235, "7225": 235, "027547": 235, "10962": 235, "071382": 235, "4164": 235, "060077": 235, "4948": 235, "049658": 235, "5986": 235, "038139": 235, "7794": 235, "027025": 235, "10999": 235, "005025": 235, "2086": 235, "004519": 235, "003968": 235, "00339": 235, "3093": 235, "003153": 235, "3325": 235, "014795": 235, "2834": 235, "012623": 235, "3322": 235, "010269": 235, "4084": 235, "007859": 235, "5337": 235, "005703": 235, "7354": 235, "016169": 235, "2594": 235, "014448": 235, "2902": 235, "011705": 235, "3583": 235, "010149": 235, "4132": 235, "008793": 235, "4769": 235, "05603": 235, "2994": 235, "0468": 235, "3584": 235, "03744": 235, "4481": 235, "028166": 235, "5956": 235, "019259": 235, "8711": 235, "277815": 235, "2415": 235, "229837": 235, "2919": 235, "1787": 235, "3755": 235, "126545": 235, "5303": 235, "083532": 235, "8033": 235, "224925": 235, "2983": 235, "184256": 235, "3642": 235, "146452": 235, "4582": 235, "108899": 235, "6162": 235, "074066": 235, "9060": 235, "031946": 235, "2954": 235, "026814": 235, "3519": 235, "021706": 235, "4347": 235, "016667": 235, "5662": 235, "011647": 235, "8102": 235, "150549": 235, "2507": 235, "119951": 235, "3147": 235, "089309": 235, "4226": 235, "063723": 235, "5923": 235, "042784": 235, "8823": 235, "122421": 235, "3035": 235, "102244": 235, "082201": 235, "4520": 235, "062248": 235, "5969": 235, "042944": 235, "8652": 235, "004811": 235, "004438": 235, "2835": 235, "003899": 235, "003438": 235, "3659": 235, "002978": 235, "4225": 235, "014576": 235, "3453": 235, "012078": 235, "4167": 235, "008963": 235, "5615": 235, "007276": 235, "6917": 235, "005485": 235, "9176": 235, "015062": 235, "3341": 235, "013243": 235, "3800": 235, "011443": 235, "4398": 235, "009288": 235, "5418": 235, "007446": 235, "6759": 235, "054398": 235, "3701": 235, "044569": 235, "4517": 235, "036333": 235, "5541": 235, "027049": 235, "7442": 235, "018742": 235, "10742": 235, "267367": 235, "3011": 235, "223615": 235, "3601": 235, "1797": 235, "134716": 235, "5977": 235, "069275": 235, "11624": 235, "222661": 235, "3616": 235, "179525": 235, "4485": 235, "139298": 235, "5781": 235, "095879": 235, "8399": 235, "176292": 235, "4568": 235, "070028": 235, "025834": 235, "4383": 235, "02075": 235, "5457": 235, "016128": 235, "7021": 235, "011601": 235, "9761": 235, "148512": 235, "3050": 235, "124238": 235, "09953": 235, "4551": 235, "071432": 235, "6341": 235, "044154": 235, "10259": 235, "113174": 235, "3940": 235, "096166": 235, "4636": 235, "076584": 235, "5822": 235, "059291": 235, "7520": 235, "041661": 235, "10703": 235, "006557": 235, "2239": 235, "005848": 235, "2510": 235, "005021": 235, "2923": 235, "004663": 235, "3148": 235, "003933": 235, "3732": 235, "020392": 235, "2879": 235, "017102": 235, "3433": 235, "013703": 235, "4285": 235, "010953": 235, "5361": 235, "007496": 235, "7833": 235, "022132": 235, "019376": 235, "3030": 235, "015877": 235, "3698": 235, "013437": 235, "4370": 235, "011637": 235, "5046": 235, "078075": 235, "3008": 235, "065155": 235, "3604": 235, "052195": 235, "4500": 235, "03941": 235, "5959": 235, "026271": 235, "8940": 235, "398509": 235, "2357": 235, "332153": 235, "259051": 235, "3626": 235, "184412": 235, "5094": 235, "119678": 235, "7850": 235, "313656": 235, "2995": 235, "257989": 235, "3641": 235, "206049": 235, "4559": 235, "152848": 235, "6146": 235, "103125": 235, "9110": 235, "044486": 235, "2969": 235, "037334": 235, "3538": 235, "030229": 235, "023198": 235, "5695": 235, "01587": 235, "8325": 235, "219777": 235, "2404": 235, "17764": 235, "2975": 235, "135864": 235, "3889": 235, "100424": 235, "5262": 235, "067755": 235, "7799": 235, "172356": 235, "3018": 235, "144231": 235, "3606": 235, "116019": 235, "4483": 235, "087388": 235, "5953": 235, "0596": 235, "8728": 235, "006097": 235, "2751": 235, "005176": 235, "3241": 235, "00449": 235, "3736": 235, "003949": 235, "4248": 235, "003175": 235, "5284": 235, "020483": 235, "3276": 235, "013769": 235, "4873": 235, "011419": 235, "5876": 235, "008933": 235, "7512": 235, "006533": 235, "10272": 235, "019241": 235, "3487": 235, "016835": 235, "3986": 235, "014234": 235, "4714": 235, "011946": 235, "5617": 235, "009106": 235, "7369": 235, "07811": 235, "061481": 235, "4366": 235, "046201": 235, "5810": 235, "035702": 235, "7518": 235, "02221": 235, "12086": 235, "326917": 235, "3284": 235, "273363": 235, "3927": 235, "220994": 235, "4858": 235, "166153": 235, "6462": 235, "08544": 235, "12567": 235, "311348": 235, "3448": 235, "243012": 235, "4418": 235, "187933": 235, "5713": 235, "126819": 235, "8466": 235, "085569": 235, "12548": 235, "040478": 235, "3730": 235, "03297": 235, "4579": 235, "026527": 235, "5692": 235, "020782": 235, "7265": 235, "013904": 235, "10860": 235, "183003": 235, "161443": 235, "3741": 235, "129767": 235, "4654": 235, "089335": 235, "6760": 235, "061068": 235, "9890": 235, "15525": 235, "3829": 235, "125772": 235, "4727": 235, "101434": 235, "5861": 235, "076508": 235, "7770": 235, "053732": 235, "11064": 235, "010421": 235, "3219": 235, "009082": 235, "3694": 235, "007813": 235, "4294": 235, "006511": 235, "5153": 235, "005172": 235, "6487": 235, "032138": 235, "4176": 235, "02699": 235, "4972": 235, "022001": 235, "6100": 235, "016901": 235, "7941": 235, "012004": 235, "11180": 235, "03738": 235, "03149": 235, "4262": 235, "026673": 235, "5031": 235, "021782": 235, "6161": 235, "016822": 235, "7978": 235, "176031": 235, "3049": 235, "134442": 235, "3993": 235, "084378": 235, "6362": 235, "064058": 235, "8381": 235, "043787": 235, "12261": 235, "697876": 235, "3077": 235, "615338": 235, "3489": 235, "350147": 235, "6133": 235, "267289": 235, "8034": 235, "179695": 235, "11950": 235, "703207": 235, "3053": 235, "561805": 235, "3822": 235, "423052": 235, "5076": 235, "254835": 235, "171434": 235, "12526": 235, "093348": 235, "3235": 235, "072563": 235, "4161": 235, "05392": 235, "5600": 235, "037612": 235, "8029": 235, "026314": 235, "11476": 235, "407388": 235, "340939": 235, "3543": 235, "261028": 235, "4627": 235, "151649": 235, "7965": 235, "103379": 235, "11684": 235, "358769": 235, "3314": 235, "283046": 235, "4201": 235, "212152": 235, "5604": 235, "158502": 235, "7502": 235, "107514": 235, "11059": 235, "014833": 235, "012912": 235, "3898": 235, "011054": 235, "4553": 235, "009253": 235, "5439": 235, "00717": 235, "7019": 235, "052661": 235, "3823": 235, "044728": 235, "4501": 235, "036583": 235, "5503": 235, "027487": 235, "7324": 235, "01839": 235, "10947": 235, "055665": 235, "046588": 235, "4321": 235, "039411": 235, "5108": 235, "031875": 235, "6316": 235, "8148": 235, "263316": 235, "3058": 235, "198303": 235, "4061": 235, "141966": 235, "5672": 235, "105849": 235, "7608": 235, "068787": 235, "11707": 235, "793822": 235, "4057": 235, "996979": 235, "3230": 235, "54288": 235, "5933": 235, "412174": 235, "7815": 235, "274441": 235, "11737": 235, "03474": 235, "3113": 235, "832701": 235, "3868": 235, "564787": 235, "421781": 235, "7637": 235, "271587": 235, "11860": 235, "130834": 235, "3462": 235, "094331": 235, "4802": 235, "076012": 235, "058047": 235, "7803": 235, "039534": 235, "11458": 235, "635729": 235, "2850": 235, "379899": 235, "307908": 235, "5884": 235, "233057": 235, "7774": 235, "157518": 235, "11503": 235, "518276": 235, "3441": 235, "422517": 235, "4221": 235, "323476": 235, "5513": 235, "247251": 235, "7213": 235, "163369": 235, "10917": 235, "019231": 235, "016815": 235, "3991": 235, "014327": 235, "4683": 235, "011932": 235, "5624": 235, "00915": 235, "7334": 235, "072314": 235, "3712": 235, "06138": 235, "4373": 235, "050021": 235, "5366": 235, "037695": 235, "7121": 235, "02494": 235, "10763": 235, "079663": 235, "3369": 235, "06167": 235, "4352": 235, "052133": 235, "5149": 235, "042188": 235, "032574": 235, "8240": 235, "380582": 235, "2821": 235, "24038": 235, "4466": 235, "195271": 235, "5498": 235, "146935": 235, "7307": 235, "094832": 235, "11322": 235, "08794": 235, "3947": 235, "913626": 235, "4701": 235, "737943": 235, "5820": 235, "558473": 235, "7690": 235, "369466": 235, "51009": 235, "2844": 235, "26974": 235, "3382": 235, "778244": 235, "5518": 235, "589803": 235, "7282": 235, "375284": 235, "11444": 235, "160705": 235, "3758": 235, "135495": 235, "4457": 235, "108718": 235, "5555": 235, "08112": 235, "7445": 235, "053351": 235, "11320": 235, "614109": 235, "3934": 235, "518614": 235, "418491": 235, "5772": 235, "31592": 235, "7647": 235, "211893": 235, "11401": 235, "836616": 235, "2842": 235, "699579": 235, "3399": 235, "544194": 235, "379699": 235, "228043": 235, "10428": 235, "amx": 236, "x16": 236, "environment_vari": 236, "acc": [236, 237], "perfom": 236, "introduct": 236, "benchmark_it": 236, "benchmark_no_refresh": 236, "refresh": 236, "kxn": 236, "mxn": 236, "sparse_ratio": 236, "micro_b": 236, "output_fp32": 236, "has_append_sum": 236, "micro_oc": 236, "sub_func_level": 236, "3d_infer": 236, "append": [236, 237], "automaticlli": 236, "subfunc_level": 236, "subfunc_level_max": 236, "dsparse_lib_use_amx": 236, "amx_bf16_x16": 236, "output_bf16": 236, "interv": 236, "lower_bound": 236, "upper_bound": 236, "invalid": 236, "fp32_relu": 236, "src_dt": 236, "dst_dt": 236, "tanspos": 236, "4d": 236, "distinguish": 236, "alpha": 236, "src0": 236, "bs0": 236, "bs1": 236, "beta": 236, "scr2": 236, "avx512f_p2031_p2013": 236, "has_binary_add": 236, "tile_m": 236, "tile_n": 236, "coeffici": 236, "vnni_noperm_p2031_p1302": 236, "spec_typ": 236, "output_dt": 236, "suuport": 236, "d0xd1x": 236, "d0": 236, "dst_type": 236, "newli": 236, "subdir": 236, "benchmark_dir": 236, "bench_": 236, "cpp": 236, "test_": 236, "entranc": 236, "get_true_data_": 236, "check_result_": 236, "gen_case_": 236, "run_bench_": 236, "feel": 236, "calc_flop": 236, "get_refresh_data_idx": 236, "benchmark_util": 236, "whitespac": 237, "labl": 237, "skip": 237, "run_ci": 237, "discard": 237, "new_input_fil": 237, "medium_n": 237, "it_per_cor": 237, "repeat": 237, "ci": 237, "toler": 238, "usag": [238, 239], "rel": 238, "conjunct": 238, "absolut": [238, 241, 242], "proport": [238, 239], "statu": [239, 242], "criteria": 239, "vision": 240, "speech": 240, "multimod": 240, "text_classifi": 240, "great": 240, "9998425245285034": 240, "believ": 240, "beauti": 240, "evoc": 240, "ve": 240, "seen": 240, "9998886585235596": 240, "redund": 241, "bear": 241, "brain": 241, "damag": 241, "hypothesi": 241, "yann": 241, "lecun": 241, "salient": 241, "anywher": 241, "filter": 241, "magnitud": 241, "lowest": 241, "lock": 241, "freez": 241, "grouplasso": 241, "hyper": 241, "didn": 241, "pruning_conf": 241, "full": 242, "littl": 242, "degrad": 242, "gain": 242, "bandwidth": 242, "ex": 242, "articl": 242, "affin": 242, "convers": 242, "math": 242, "zeropoint": 242, "asymmetr": 242, "earli": 242, "platform": [242, 247], "overflow": 242, "fp16": 242, "solv": 242, "unseen": 242, "peopl": 242, "emul": 242, "fake": 242, "With": 242, "backward": 242, "mimic": 242, "made": 242, "fact": 242, "ultim": 242, "yield": 242, "either": 242, "pain": 242, "brought": 242, "lossi": 242, "fx": 242, "eager": 242, "qat": 242, "exit": 242, "guarante": 242}, "objects": {"": [[190, 0, 1, "_CPPv48executor", "executor"], [190, 1, 1, "_CPPv4N8executor10DispatcherE", "executor::Dispatcher"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::stage"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::stage"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::conf"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::has_dispatch_table_file"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::reshape_model"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash::input"], [190, 0, 1, "_CPPv4N8executor10Dispatcher13KernelHandlerE", "executor::Dispatcher::KernelHandler"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus"], [190, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::output"], [190, 4, 1, "_CPPv4N8executor10Dispatcher13adapt_action_E", "executor::Dispatcher::adapt_action_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher8cpu_isa_E", "executor::Dispatcher::cpu_isa_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E", "executor::Dispatcher::dispatch_table_file_exists_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher9do_tuningEv", "executor::Dispatcher::do_tuning"], [190, 4, 1, "_CPPv4N8executor10Dispatcher10do_tuning_E", "executor::Dispatcher::do_tuning_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13enable_sparseEv", "executor::Dispatcher::enable_sparse"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher14execute_kernelEv", "executor::Dispatcher::execute_kernel"], [190, 4, 1, "_CPPv4N8executor10Dispatcher15execute_kernel_E", "executor::Dispatcher::execute_kernel_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E", "executor::Dispatcher::execution_options_ptr_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher9get_attrsEv", "executor::Dispatcher::get_attrs"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12get_it_shapeEv", "executor::Dispatcher::get_it_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv", "executor::Dispatcher::get_ot_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv", "executor::Dispatcher::get_reshape_time"], [190, 4, 1, "_CPPv4N8executor10Dispatcher9iter_cnt_E", "executor::Dispatcher::iter_cnt_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher15kernel_handler_E", "executor::Dispatcher::kernel_handler_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11kernel_typeEv", "executor::Dispatcher::kernel_type"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7latencyEv", "executor::Dispatcher::latency"], [190, 4, 1, "_CPPv4N8executor10Dispatcher6model_E", "executor::Dispatcher::model_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E", "executor::Dispatcher::monopoly_kernel_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher4nameEv", "executor::Dispatcher::name"], [190, 4, 1, "_CPPv4N8executor10Dispatcher5name_E", "executor::Dispatcher::name_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv", "executor::Dispatcher::no_tuning_space"], [190, 4, 1, "_CPPv4N8executor10Dispatcher16no_tuning_space_E", "executor::Dispatcher::no_tuning_space_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher13operator_confEv", "executor::Dispatcher::operator_conf"], [190, 4, 1, "_CPPv4N8executor10Dispatcher14operator_conf_E", "executor::Dispatcher::operator_conf_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv", "executor::Dispatcher::perf_ratio_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7post_opEv", "executor::Dispatcher::post_op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs"], [190, 3, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs::input_attrs"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse"], [190, 3, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse::enable_sparse"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape::input_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency"], [190, 3, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency::latency"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape::output_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id"], [190, 3, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id::perf_ratio_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op"], [190, 3, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op::post_op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time::reshape_time_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id::table_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode"], [190, 3, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode::mode"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape::weight_shape"], [190, 4, 1, "_CPPv4N8executor10Dispatcher20sparselib_available_E", "executor::Dispatcher::sparselib_available_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher8table_idEv", "executor::Dispatcher::table_id"], [190, 4, 1, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E", "executor::Dispatcher::tune_dense_in_sparse_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher4typeEv", "executor::Dispatcher::type"], [190, 4, 1, "_CPPv4N8executor10Dispatcher5type_E", "executor::Dispatcher::type_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12weight_shapeEv", "executor::Dispatcher::weight_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv", "executor::Dispatcher::weight_zero_ratio"], [190, 2, 1, "_CPPv4N8executor10DispatcherD0Ev", "executor::Dispatcher::~Dispatcher"], [191, 0, 1, "_CPPv42jd", "jd"], [191, 0, 1, "_CPPv42jd", "jd"], [192, 0, 1, "_CPPv42jd", "jd"], [193, 0, 1, "_CPPv42jd", "jd"], [191, 1, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [191, 2, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [191, 2, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [191, 3, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [191, 2, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [191, 1, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [191, 2, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [191, 2, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [191, 3, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [191, 1, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [191, 2, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [191, 2, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [191, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [191, 2, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [191, 1, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [191, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [192, 1, 1, "_CPPv4N2jd6engineE", "jd::engine"], [192, 4, 1, "_CPPv4N2jd6engine9eng_kind_E", "jd::engine::eng_kind_"], [192, 2, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine"], [192, 3, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine::eng_kind"], [192, 2, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list"], [192, 3, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list::op_desc"], [192, 2, 1, "_CPPv4NK2jd6engine4kindEv", "jd::engine::kind"], [192, 2, 1, "_CPPv4N2jd6engineD0Ev", "jd::engine::~engine"], [191, 1, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [191, 2, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [191, 2, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [191, 3, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [191, 2, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [191, 1, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [191, 2, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [191, 2, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [191, 3, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [191, 1, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [191, 4, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [191, 2, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [191, 1, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [191, 2, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [191, 2, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [191, 1, 1, "_CPPv4N2jd8kernel_tE", "jd::kernel_t"], [193, 1, 1, "_CPPv4N2jd8kernel_tE", "jd::kernel_t"], [191, 2, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create"], [193, 2, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create"], [191, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_k_t"], [193, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_k_t"], [191, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_kd_t"], [193, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_kd_t"], [191, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::k_ref"], [193, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::k_ref"], [191, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::kd"], [193, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::kd"], [191, 2, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute"], [193, 2, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute"], [191, 3, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute::rt_data"], [193, 3, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute::rt_data"], [191, 2, 1, "_CPPv4N2jd8kernel_t4initEv", "jd::kernel_t::init"], [193, 2, 1, "_CPPv4N2jd8kernel_t4initEv", "jd::kernel_t::init"], [191, 2, 1, "_CPPv4NK2jd8kernel_t2kdEv", "jd::kernel_t::kd"], [193, 2, 1, "_CPPv4NK2jd8kernel_t2kdEv", "jd::kernel_t::kd"], [191, 4, 1, "_CPPv4N2jd8kernel_t3kd_E", "jd::kernel_t::kd_"], [193, 4, 1, "_CPPv4N2jd8kernel_t3kd_E", "jd::kernel_t::kd_"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t::kd"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t::kd"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t::other"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t::other"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t::other"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t::other"], [191, 2, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator="], [191, 2, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator="], [193, 2, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator="], [193, 2, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator="], [191, 3, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator=::other"], [191, 3, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator=::other"], [193, 3, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator=::other"], [193, 3, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator=::other"], [191, 2, 1, "_CPPv4N2jd8kernel_tD0Ev", "jd::kernel_t::~kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_tD0Ev", "jd::kernel_t::~kernel_t"], [191, 1, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [191, 2, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [191, 2, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [191, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [191, 2, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [191, 1, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [191, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [191, 1, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [191, 5, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [191, 5, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [191, 2, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [191, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [191, 4, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [191, 2, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [191, 2, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [191, 2, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [191, 3, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [191, 2, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [191, 1, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [191, 2, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [191, 2, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [191, 3, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [191, 2, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [191, 1, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [191, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [191, 1, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [191, 2, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [191, 2, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [191, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [191, 2, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [191, 1, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [191, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [191, 1, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [191, 2, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [191, 2, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [191, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [191, 2, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [191, 1, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [191, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [111, 6, 0, "-", "intel_extension_for_transformers"], [149, 6, 0, "-", "test_add_cls_token"], [150, 6, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [151, 6, 0, "-", "test_attention_reshape"], [152, 6, 0, "-", "test_conv_reshape"], [153, 6, 0, "-", "test_embeddingbag"], [154, 6, 0, "-", "test_execution_options"], [155, 6, 0, "-", "test_gelu"], [156, 6, 0, "-", "test_graph_dispatch"], [157, 6, 0, "-", "test_insert_input_output_data"], [158, 6, 0, "-", "test_is_supported_onnx_graph"], [159, 6, 0, "-", "test_last_layer_shape"], [160, 6, 0, "-", "test_layer_norm_with_reduce_mean"], [161, 6, 0, "-", "test_main"], [162, 6, 0, "-", "test_matmul_with_bias_relu"], [163, 6, 0, "-", "test_matmul_with_bias_sigmoid"], [164, 6, 0, "-", "test_matmul_with_bias_tanh"], [165, 6, 0, "-", "test_merged_embeddingbag"], [166, 6, 0, "-", "test_model"], [167, 6, 0, "-", "test_onnx_utils"], [168, 6, 0, "-", "test_ops"], [169, 6, 0, "-", "test_padding_sequence"], [170, 6, 0, "-", "test_pattern_dispatch"], [171, 6, 0, "-", "test_position_embeddings"], [172, 6, 0, "-", "test_qkv_merge"], [173, 6, 0, "-", "test_qkv_reshape"], [174, 6, 0, "-", "test_quant_onnx_execute"], [175, 6, 0, "-", "test_reshape_after_restore_hidden_states"], [176, 6, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [177, 6, 0, "-", "test_reshape_before_restore_hidden_states"], [178, 6, 0, "-", "test_start_end_logits"], [179, 6, 0, "-", "test_tf_utils"], [180, 6, 0, "-", "test_token_type_embeddings"], [181, 6, 0, "-", "test_transpose"], [182, 6, 0, "-", "test_transpose_batch_matmul"]], "intel_extension_for_transformers": [[0, 6, 0, "-", "backends"], [118, 6, 0, "-", "optimization"], [146, 6, 0, "-", "preprocessing"], [148, 6, 0, "-", "version"]], "intel_extension_for_transformers.backends": [[110, 6, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[9, 6, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, 7, 1, "", "compile"], [1, 6, 0, "-", "compile"], [3, 6, 0, "-", "extractors"], [7, 6, 0, "-", "graph"], [8, 6, 0, "-", "graph_utils"], [10, 6, 0, "-", "loaders"], [12, 6, 0, "-", "logger"], [13, 6, 0, "-", "onnx_utils"], [32, 6, 0, "-", "ops"], [74, 6, 0, "-", "sub_graph"], [109, 6, 0, "-", "tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, 7, 1, "", "compile"], [1, 7, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 8, 1, "", "Extractor"], [2, 6, 0, "-", "extractor"], [4, 6, 0, "-", "onnx_extractor"], [5, 6, 0, "-", "tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, 8, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, 8, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, 8, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, 8, 1, "", "Graph"], [6, 6, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph": [[7, 9, 1, "", "change_node_input_tensors"], [7, 9, 1, "", "change_node_output_tensors"], [7, 9, 1, "", "dump_tensor"], [7, 9, 1, "", "engine_init"], [7, 10, 1, "", "execution_options"], [7, 9, 1, "", "get_next_node_names"], [7, 9, 1, "", "get_node_by_name"], [7, 9, 1, "", "get_node_id"], [7, 9, 1, "", "get_pre_node_names"], [7, 9, 1, "", "get_sparse_nodes_name"], [7, 9, 1, "", "get_tensor_idx"], [7, 9, 1, "", "graph_dispatch"], [7, 9, 1, "", "graph_init"], [7, 9, 1, "", "inference"], [7, 9, 1, "", "insert_nodes"], [7, 9, 1, "", "modify_node_connections"], [7, 10, 1, "", "net_config"], [7, 10, 1, "", "nodes"], [7, 9, 1, "", "remove_nodes"], [7, 9, 1, "", "rename_node"], [7, 9, 1, "", "save"], [7, 9, 1, "", "transpose_mode_int8"], [7, 10, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, 8, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[6, 9, 1, "", "change_node_input_tensors"], [6, 9, 1, "", "change_node_output_tensors"], [6, 9, 1, "", "dump_tensor"], [6, 9, 1, "", "engine_init"], [6, 10, 1, "", "execution_options"], [6, 9, 1, "", "get_next_node_names"], [6, 9, 1, "", "get_node_by_name"], [6, 9, 1, "", "get_node_id"], [6, 9, 1, "", "get_pre_node_names"], [6, 9, 1, "", "get_sparse_nodes_name"], [6, 9, 1, "", "get_tensor_idx"], [6, 9, 1, "", "graph_dispatch"], [6, 9, 1, "", "graph_init"], [6, 9, 1, "", "inference"], [6, 9, 1, "", "insert_nodes"], [6, 9, 1, "", "modify_node_connections"], [6, 10, 1, "", "net_config"], [6, 10, 1, "", "nodes"], [6, 9, 1, "", "remove_nodes"], [6, 9, 1, "", "rename_node"], [6, 9, 1, "", "save"], [6, 9, 1, "", "transpose_mode_int8"], [6, 10, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, 8, 1, "", "LazyImport"], [8, 7, 1, "", "construct_node"], [8, 7, 1, "", "get_data_dtype"], [8, 7, 1, "", "get_model_fwk_name"], [8, 7, 1, "", "get_quant_info"], [8, 7, 1, "", "insert_pattern"], [8, 7, 1, "", "insert_quant_info"], [8, 7, 1, "", "list2str"], [8, 7, 1, "", "names_from_input"], [8, 7, 1, "", "pattern_mapping"], [8, 7, 1, "", "pattern_mapping_conf_validation"], [8, 7, 1, "", "quant_info_init"], [8, 7, 1, "", "search_pattern"], [8, 7, 1, "", "search_straight_pattern"], [8, 7, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, 8, 1, "", "Loader"], [11, 6, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, 8, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, 8, 1, "", "Logger"], [12, 7, 1, "", "debug"], [12, 7, 1, "", "error"], [12, 7, 1, "", "fatal"], [12, 7, 1, "", "info"], [12, 7, 1, "", "log"], [12, 7, 1, "", "warn"], [12, 7, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[12, 9, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, 7, 1, "", "bias_to_int32"], [13, 7, 1, "", "change_num_name"], [13, 7, 1, "", "get_children"], [13, 7, 1, "", "get_initializer_children_names"], [13, 7, 1, "", "get_node_children_names"], [13, 7, 1, "", "graph_node_names_details"], [13, 7, 1, "", "is_supported_onnx_graph"], [13, 7, 1, "", "is_supported_onnx_node"], [13, 7, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, 8, 1, "", "Operator"], [14, 6, 0, "-", "all"], [15, 6, 0, "-", "assert"], [16, 6, 0, "-", "batch_matmul"], [17, 6, 0, "-", "batch_matmul_v2"], [18, 6, 0, "-", "bias_add"], [19, 6, 0, "-", "cast"], [20, 6, 0, "-", "concat"], [21, 6, 0, "-", "conv"], [22, 6, 0, "-", "empty_ops"], [23, 6, 0, "-", "expand_dims"], [24, 6, 0, "-", "fused_batch_matmul_v2"], [25, 6, 0, "-", "fused_batch_norm_v3"], [26, 6, 0, "-", "fused_gemm"], [27, 6, 0, "-", "fused_matmul"], [28, 6, 0, "-", "gather"], [29, 6, 0, "-", "gather_elements"], [30, 6, 0, "-", "gelu"], [31, 6, 0, "-", "gemm"], [33, 6, 0, "-", "iterator_get_next"], [34, 6, 0, "-", "iterator_v2"], [35, 6, 0, "-", "layer_normalization"], [36, 6, 0, "-", "map_and_batch_dataset"], [37, 6, 0, "-", "matmul"], [38, 6, 0, "-", "mean"], [39, 6, 0, "-", "mkl_layer_norm"], [40, 6, 0, "-", "model_dataset"], [41, 6, 0, "-", "one_hot"], [42, 6, 0, "-", "onnx_input"], [43, 6, 0, "-", "op"], [32, 7, 1, "", "operator_registry"], [44, 6, 0, "-", "optimize_dataset"], [45, 6, 0, "-", "pack"], [46, 6, 0, "-", "placeholder"], [47, 6, 0, "-", "quantize_linear"], [48, 6, 0, "-", "quantize_v2"], [49, 6, 0, "-", "quantized_fused_matmul_and_dequantize"], [50, 6, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [51, 6, 0, "-", "reduce_mean"], [52, 6, 0, "-", "reduce_sum"], [53, 6, 0, "-", "reshape"], [54, 6, 0, "-", "scatter_elements"], [55, 6, 0, "-", "softmax"], [56, 6, 0, "-", "split"], [57, 6, 0, "-", "squeeze"], [58, 6, 0, "-", "strided_slice"], [59, 6, 0, "-", "tensor"], [60, 6, 0, "-", "top_k"], [61, 6, 0, "-", "transpose"], [62, 6, 0, "-", "unpack"], [63, 6, 0, "-", "unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator": [[32, 10, 1, "", "attr"], [32, 10, 1, "", "config"], [32, 9, 1, "", "construct"], [32, 9, 1, "", "extract"], [32, 10, 1, "", "input_tensors"], [32, 10, 1, "", "name"], [32, 10, 1, "", "op_type"], [32, 10, 1, "", "output_tensors"], [32, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, 8, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[14, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, 8, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[15, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, 8, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[16, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, 8, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[17, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, 8, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[18, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, 8, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[19, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, 8, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[20, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, 8, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[21, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, 8, 1, "", "Add"], [22, 8, 1, "", "AddV2"], [22, 8, 1, "", "BinaryAdd"], [22, 8, 1, "", "ConstantOfShape"], [22, 8, 1, "", "Convolution"], [22, 8, 1, "", "CumSum"], [22, 8, 1, "", "DequantizeLinear"], [22, 8, 1, "", "Div"], [22, 8, 1, "", "EmbeddingBag"], [22, 8, 1, "", "Equal"], [22, 8, 1, "", "Erf"], [22, 8, 1, "", "Expand"], [22, 8, 1, "", "ExpandIndices"], [22, 8, 1, "", "Fill"], [22, 8, 1, "", "FlatMapDataset"], [22, 8, 1, "", "Flatten"], [22, 8, 1, "", "Identity"], [22, 8, 1, "", "InnerProduct"], [22, 8, 1, "", "Input"], [22, 8, 1, "", "LayerNorm"], [22, 8, 1, "", "LessEqual"], [22, 8, 1, "", "Loop"], [22, 8, 1, "", "MakeIterator"], [22, 8, 1, "", "MatMulWithBias"], [22, 8, 1, "", "MatMulWithBiasAdd"], [22, 8, 1, "", "MatMulWithBiasGelu"], [22, 8, 1, "", "MatMulWithBiasRelu"], [22, 8, 1, "", "MatMulWithBiasSigmoid"], [22, 8, 1, "", "MatMulWithBiasTanh"], [22, 8, 1, "", "Matmul"], [22, 8, 1, "", "MergedEmbeddingbag"], [22, 8, 1, "", "Mul"], [22, 8, 1, "", "NonZero"], [22, 8, 1, "", "Not"], [22, 8, 1, "", "Onehot"], [22, 8, 1, "", "Output"], [22, 8, 1, "", "PaddingSequence"], [22, 8, 1, "", "PositionIds"], [22, 8, 1, "", "Pow"], [22, 8, 1, "", "QLinearAdd"], [22, 8, 1, "", "QLinearMatMul"], [22, 8, 1, "", "QLinearMul"], [22, 8, 1, "", "Quantize"], [22, 8, 1, "", "Range"], [22, 8, 1, "", "RealDiv"], [22, 8, 1, "", "Relu"], [22, 8, 1, "", "Reorder"], [22, 8, 1, "", "Rsqrt"], [22, 8, 1, "", "Shape"], [22, 8, 1, "", "Sigmoid"], [22, 8, 1, "", "Slice"], [22, 8, 1, "", "Sqrt"], [22, 8, 1, "", "Square"], [22, 8, 1, "", "SquaredDifference"], [22, 8, 1, "", "StopGradient"], [22, 8, 1, "", "Sub"], [22, 8, 1, "", "Tanh"], [22, 8, 1, "", "TensorSliceDataset"], [22, 8, 1, "", "Tile"], [22, 8, 1, "", "TokenTypeIds"], [22, 8, 1, "", "TransposeBatchMatMul"], [22, 8, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, 8, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[23, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, 8, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[25, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, 8, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[26, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, 8, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[27, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, 8, 1, "", "Gather"], [28, 8, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[28, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[28, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, 8, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[29, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, 8, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[30, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, 8, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[31, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, 8, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[33, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, 8, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[34, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, 8, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[35, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, 8, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[36, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, 8, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[37, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, 8, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[38, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, 8, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[40, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, 8, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[41, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, 8, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[42, 9, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, 8, 1, "", "Operator"], [43, 7, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[43, 10, 1, "", "attr"], [43, 10, 1, "", "config"], [43, 9, 1, "", "construct"], [43, 9, 1, "", "extract"], [43, 10, 1, "", "input_tensors"], [43, 10, 1, "", "name"], [43, 10, 1, "", "op_type"], [43, 10, 1, "", "output_tensors"], [43, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, 8, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[44, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, 8, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[45, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, 8, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[46, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, 8, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[47, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, 8, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[48, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, 8, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[50, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, 8, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[51, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, 8, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[52, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, 8, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[53, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, 8, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[54, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, 8, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[55, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, 8, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[56, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, 8, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[57, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, 8, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[58, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, 8, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor": [[59, 10, 1, "", "config"], [59, 10, 1, "", "data"], [59, 10, 1, "", "dest_op"], [59, 10, 1, "", "dtype"], [59, 10, 1, "", "location"], [59, 10, 1, "", "name"], [59, 10, 1, "", "shape"], [59, 10, 1, "", "source_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, 8, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[60, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, 8, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[61, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, 8, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[62, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, 8, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[63, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, 8, 1, "", "Pattern"], [74, 8, 1, "", "SubGraphMatcher"], [64, 6, 0, "-", "add_cls_token"], [65, 6, 0, "-", "add_embeddings"], [66, 6, 0, "-", "attention_mask_length_adaptive_keep_indices"], [67, 6, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [68, 6, 0, "-", "attention_reshape"], [69, 6, 0, "-", "collect_quant_info"], [70, 6, 0, "-", "conv_reshape"], [71, 6, 0, "-", "embeddingbag"], [72, 6, 0, "-", "gelu"], [73, 6, 0, "-", "generate_sequence"], [75, 6, 0, "-", "input_data"], [76, 6, 0, "-", "input_file"], [77, 6, 0, "-", "insert_bf16_node"], [78, 6, 0, "-", "insert_quant_node"], [79, 6, 0, "-", "interact_features"], [80, 6, 0, "-", "last_layer_shape"], [81, 6, 0, "-", "layer_norm"], [82, 6, 0, "-", "layer_norm_with_reduce_mean"], [83, 6, 0, "-", "matmul_with_bias"], [84, 6, 0, "-", "matmul_with_bias_add"], [85, 6, 0, "-", "matmul_with_bias_gelu"], [86, 6, 0, "-", "matmul_with_bias_relu"], [87, 6, 0, "-", "matmul_with_bias_sigmoid"], [88, 6, 0, "-", "matmul_with_bias_tanh"], [89, 6, 0, "-", "merged_embeddingbag"], [90, 6, 0, "-", "output_data"], [91, 6, 0, "-", "padding_sequence"], [92, 6, 0, "-", "pattern"], [74, 7, 1, "", "pattern_registry"], [93, 6, 0, "-", "position_embeddings"], [94, 6, 0, "-", "position_embeddings_v1"], [95, 6, 0, "-", "qkv_merge"], [96, 6, 0, "-", "qkv_reshape"], [97, 6, 0, "-", "quantize_fusion"], [98, 6, 0, "-", "reshape_after_restore_hidden_states"], [99, 6, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [100, 6, 0, "-", "reshape_before_restore_hidden_states"], [101, 6, 0, "-", "reshape_fusion"], [102, 6, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [103, 6, 0, "-", "start_end_logits"], [104, 6, 0, "-", "subgraph_matcher"], [105, 6, 0, "-", "token_type_embeddings"], [106, 6, 0, "-", "token_type_embeddings_v1"], [107, 6, 0, "-", "transpose_batch_matmul"], [108, 6, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, 8, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, 8, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, 8, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, 8, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, 8, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, 8, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, 8, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, 8, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, 8, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, 8, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, 8, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, 8, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, 8, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, 8, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, 8, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, 8, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, 8, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, 8, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, 8, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, 8, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, 8, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, 8, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, 8, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, 8, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, 8, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, 8, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, 8, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, 8, 1, "", "Pattern"], [92, 7, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, 8, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, 8, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, 8, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, 8, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, 8, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, 8, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, 8, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, 8, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, 8, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, 8, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, 8, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, 8, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, 8, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, 8, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, 8, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, 8, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, 11, 1, "", "TF_DTYPE_ID"], [109, 7, 1, "", "create_tf_node"], [109, 7, 1, "", "get_tensor_dest_op"], [109, 7, 1, "", "graph_node_names_details"], [109, 7, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.optimization": [[118, 8, 1, "", "AutoDistillation"], [118, 8, 1, "", "AutoDistillationConfig"], [118, 8, 1, "", "DistillationConfig"], [118, 8, 1, "", "DistillationCriterionMode"], [118, 8, 1, "", "DynamicLengthConfig"], [118, 8, 1, "", "FlashDistillationConfig"], [118, 8, 1, "", "NAS"], [118, 8, 1, "", "NASConfig"], [118, 8, 1, "", "NoTrainerOptimizer"], [118, 8, 1, "", "OptimizedModel"], [118, 8, 1, "", "Orchestrate_optimizer"], [118, 8, 1, "", "Provider"], [118, 8, 1, "", "PrunerConfig"], [118, 8, 1, "", "PruningConfig"], [118, 8, 1, "", "PruningMode"], [118, 8, 1, "", "QuantizationConfig"], [118, 8, 1, "", "QuantizationMode"], [118, 8, 1, "", "TFDistillationConfig"], [118, 8, 1, "", "TFOptimization"], [112, 6, 0, "-", "benchmark"], [113, 6, 0, "-", "config"], [114, 6, 0, "-", "distillation"], [117, 6, 0, "-", "dynamic"], [120, 6, 0, "-", "mixture"], [121, 6, 0, "-", "model"], [123, 6, 0, "-", "nas"], [125, 6, 0, "-", "optimizer"], [126, 6, 0, "-", "optimizer_tf"], [127, 6, 0, "-", "pipeline"], [128, 6, 0, "-", "pruning"], [129, 6, 0, "-", "pytorch_pruner"], [135, 6, 0, "-", "quantization"], [136, 6, 0, "-", "trainer"], [137, 6, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.AutoDistillation": [[118, 9, 1, "", "create_distillers"], [118, 9, 1, "", "estimate"], [118, 10, 1, "", "eval_func"], [118, 9, 1, "", "init_by_cfg"], [118, 9, 1, "", "load_search_results"], [118, 9, 1, "", "search"], [118, 10, 1, "", "student_model"], [118, 10, 1, "", "teacher_model"], [118, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.AutoDistillationConfig": [[118, 10, 1, "", "framework"], [118, 10, 1, "", "knowledge_transfer"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "regular_distillation"], [118, 10, 1, "", "search_algorithm"], [118, 10, 1, "", "search_space"], [118, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.DistillationConfig": [[118, 10, 1, "", "criterion"], [118, 10, 1, "", "framework"], [118, 10, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.NASConfig": [[118, 10, 1, "", "framework"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "search_algorithm"], [118, 10, 1, "", "search_space"], [118, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.NoTrainerOptimizer": [[118, 10, 1, "", "calib_dataloader"], [118, 10, 1, "", "calib_func"], [118, 9, 1, "", "distill"], [118, 10, 1, "", "eval_func"], [118, 9, 1, "", "init_distiller"], [118, 9, 1, "", "init_pruner"], [118, 9, 1, "", "init_quantizer"], [118, 10, 1, "", "provider"], [118, 9, 1, "", "prune"], [118, 9, 1, "", "quantize"], [118, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.OptimizedModel": [[118, 9, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.Orchestrate_optimizer": [[118, 9, 1, "", "fit"]], "intel_extension_for_transformers.optimization.PruningConfig": [[118, 10, 1, "", "epoch_range"], [118, 10, 1, "", "epochs"], [118, 10, 1, "", "framework"], [118, 9, 1, "", "init_prune_config"], [118, 10, 1, "", "initial_sparsity_ratio"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "pruner_config"], [118, 10, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.QuantizationConfig": [[118, 10, 1, "", "approach"], [118, 10, 1, "", "framework"], [118, 10, 1, "", "input_names"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "objectives"], [118, 10, 1, "", "op_wise"], [118, 10, 1, "", "output_dir"], [118, 10, 1, "", "output_names"], [118, 10, 1, "", "performance_only"], [118, 10, 1, "", "random_seed"], [118, 10, 1, "", "resume_path"], [118, 10, 1, "", "sampling_size"], [118, 10, 1, "", "strategy"], [118, 10, 1, "", "tensorboard"], [118, 10, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.TFOptimization": [[118, 9, 1, "", "autodistill"], [118, 9, 1, "", "build_train_func"], [118, 9, 1, "", "builtin_eval_func"], [118, 9, 1, "", "distill"], [118, 10, 1, "", "eval_dataset"], [118, 10, 1, "", "eval_func"], [118, 9, 1, "", "init_distiller"], [118, 9, 1, "", "init_pruner"], [118, 9, 1, "", "init_quantizer"], [118, 10, 1, "", "input_names"], [118, 10, 1, "", "inputs"], [118, 9, 1, "", "model_builder_builtin"], [118, 10, 1, "", "output_names"], [118, 9, 1, "", "prune"], [118, 9, 1, "", "quantize"], [118, 10, 1, "", "train_dataset"], [118, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.benchmark": [[112, 8, 1, "", "ExecutorBenchmark"], [112, 7, 1, "", "run"]], "intel_extension_for_transformers.optimization.config": [[113, 8, 1, "", "AutoDistillationConfig"], [113, 8, 1, "", "DistillationConfig"], [113, 8, 1, "", "DynamicLengthConfig"], [113, 8, 1, "", "FlashDistillationConfig"], [113, 8, 1, "", "NASConfig"], [113, 8, 1, "", "Provider"], [113, 8, 1, "", "PruningConfig"], [113, 8, 1, "", "QuantizationConfig"], [113, 8, 1, "", "TFDistillationConfig"]], "intel_extension_for_transformers.optimization.config.AutoDistillationConfig": [[113, 10, 1, "", "framework"], [113, 10, 1, "", "knowledge_transfer"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "regular_distillation"], [113, 10, 1, "", "search_algorithm"], [113, 10, 1, "", "search_space"], [113, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.DistillationConfig": [[113, 10, 1, "", "criterion"], [113, 10, 1, "", "framework"], [113, 10, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.config.NASConfig": [[113, 10, 1, "", "framework"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "search_algorithm"], [113, 10, 1, "", "search_space"], [113, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[113, 10, 1, "", "epoch_range"], [113, 10, 1, "", "epochs"], [113, 10, 1, "", "framework"], [113, 9, 1, "", "init_prune_config"], [113, 10, 1, "", "initial_sparsity_ratio"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "pruner_config"], [113, 10, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.config.QuantizationConfig": [[113, 10, 1, "", "approach"], [113, 10, 1, "", "framework"], [113, 10, 1, "", "input_names"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "objectives"], [113, 10, 1, "", "op_wise"], [113, 10, 1, "", "output_dir"], [113, 10, 1, "", "output_names"], [113, 10, 1, "", "performance_only"], [113, 10, 1, "", "random_seed"], [113, 10, 1, "", "resume_path"], [113, 10, 1, "", "sampling_size"], [113, 10, 1, "", "strategy"], [113, 10, 1, "", "tensorboard"], [113, 10, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.distillation": [[114, 8, 1, "", "Criterion"], [114, 8, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[115, 6, 0, "-", "drop_and_restore_utils"], [116, 6, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, 7, 1, "", "sample_layer_configuration"], [115, 7, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, 8, 1, "", "Evolution"], [116, 7, 1, "", "approx_ratio"], [116, 7, 1, "", "inverse"], [116, 7, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[116, 9, 1, "", "add_gene"], [116, 9, 1, "", "convex_hull"], [116, 9, 1, "", "crossover"], [116, 9, 1, "", "get_store"], [116, 9, 1, "", "load_store"], [116, 9, 1, "", "mutate"], [116, 9, 1, "", "pareto_frontier"], [116, 9, 1, "", "save_population"], [116, 9, 1, "", "save_store"], [116, 9, 1, "", "set_lower_constraint"], [116, 9, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[119, 6, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, 8, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[119, 9, 1, "", "create_distillers"], [119, 9, 1, "", "estimate"], [119, 10, 1, "", "eval_func"], [119, 9, 1, "", "init_by_cfg"], [119, 9, 1, "", "load_search_results"], [119, 9, 1, "", "search"], [119, 10, 1, "", "student_model"], [119, 10, 1, "", "teacher_model"], [119, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.model": [[121, 8, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[121, 9, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[123, 8, 1, "", "BasicNAS"], [123, 8, 1, "", "NAS"], [122, 6, 0, "-", "basic_nas"], [124, 6, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.BasicNAS": [[123, 9, 1, "", "estimate"], [123, 10, 1, "", "eval_func"], [123, 9, 1, "", "execute"], [123, 9, 1, "", "init_by_cfg"], [123, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, 8, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[122, 9, 1, "", "estimate"], [122, 10, 1, "", "eval_func"], [122, 9, 1, "", "execute"], [122, 9, 1, "", "init_by_cfg"], [122, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, 8, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[125, 8, 1, "", "NoTrainerOptimizer"], [125, 8, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[125, 10, 1, "", "calib_dataloader"], [125, 10, 1, "", "calib_func"], [125, 9, 1, "", "distill"], [125, 10, 1, "", "eval_func"], [125, 9, 1, "", "init_distiller"], [125, 9, 1, "", "init_pruner"], [125, 9, 1, "", "init_quantizer"], [125, 10, 1, "", "provider"], [125, 9, 1, "", "prune"], [125, 9, 1, "", "quantize"], [125, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[125, 9, 1, "", "fit"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, 8, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[126, 9, 1, "", "autodistill"], [126, 9, 1, "", "build_train_func"], [126, 9, 1, "", "builtin_eval_func"], [126, 9, 1, "", "distill"], [126, 10, 1, "", "eval_dataset"], [126, 10, 1, "", "eval_func"], [126, 9, 1, "", "init_distiller"], [126, 9, 1, "", "init_pruner"], [126, 9, 1, "", "init_quantizer"], [126, 10, 1, "", "input_names"], [126, 10, 1, "", "inputs"], [126, 9, 1, "", "model_builder_builtin"], [126, 10, 1, "", "output_names"], [126, 9, 1, "", "prune"], [126, 9, 1, "", "quantize"], [126, 10, 1, "", "train_dataset"], [126, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.pipeline": [[127, 7, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[128, 8, 1, "", "PrunerConfig"], [128, 8, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[130, 6, 0, "-", "patterns"], [131, 6, 0, "-", "prune_utils"], [132, 6, 0, "-", "pruner"], [133, 6, 0, "-", "pruning"], [134, 6, 0, "-", "scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, 7, 1, "", "get_pattern"], [130, 7, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, 7, 1, "", "parse_not_to_prune"], [131, 7, 1, "", "parse_to_prune"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, 8, 1, "", "SnipPruner"], [132, 7, 1, "", "get_pruner"], [132, 7, 1, "", "register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, 7, 1, "", "get_scheduler"], [134, 7, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.quantization": [[135, 8, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[136, 8, 1, "", "BaseTrainer"], [136, 8, 1, "", "NLPSeq2SeqTrainer"], [136, 8, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[136, 9, 1, "", "auto_distil_evaluation_loop"], [136, 9, 1, "", "autodistillation"], [136, 9, 1, "", "builtin_eval_func"], [136, 9, 1, "", "builtin_train_func"], [136, 10, 1, "", "calib_dataloader"], [136, 9, 1, "", "compute_loss"], [136, 9, 1, "", "create_optimizer_builtin"], [136, 9, 1, "", "distill"], [136, 10, 1, "", "eval_func"], [136, 9, 1, "", "export_to_bf16_onnx"], [136, 9, 1, "", "export_to_fp32_onnx"], [136, 9, 1, "", "export_to_int8_onnx"], [136, 9, 1, "", "export_to_jit"], [136, 9, 1, "", "export_to_onnx"], [136, 9, 1, "", "init_distiller"], [136, 9, 1, "", "init_pruner"], [136, 9, 1, "", "init_quantizer"], [136, 9, 1, "", "model_builder_builtin"], [136, 9, 1, "", "nas"], [136, 9, 1, "", "orchestrate_optimizations"], [136, 10, 1, "", "provider"], [136, 9, 1, "", "prune"], [136, 9, 1, "", "quantize"], [136, 10, 1, "", "resuming_checkpoint"], [136, 9, 1, "", "run_evolutionary_search"], [136, 9, 1, "", "set_dynamic_config"], [136, 9, 1, "", "train"], [136, 10, 1, "", "train_func"], [136, 9, 1, "", "training_step"], [136, 9, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[136, 9, 1, "", "builtin_eval_func"], [136, 10, 1, "", "max_length"], [136, 10, 1, "", "num_beams"]], "intel_extension_for_transformers.optimization.utils": [[138, 6, 0, "-", "metrics"], [139, 6, 0, "-", "models"], [142, 6, 0, "-", "objectives"], [143, 6, 0, "-", "utility"], [144, 6, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, 8, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[140, 6, 0, "-", "modeling_bert_dynamic"], [141, 6, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, 8, 1, "", "BertAttention"], [140, 8, 1, "", "BertEmbeddings"], [140, 8, 1, "", "BertEncoder"], [140, 8, 1, "", "BertForMaskedLM"], [140, 8, 1, "", "BertForMultipleChoice"], [140, 8, 1, "", "BertForNextSentencePrediction"], [140, 8, 1, "", "BertForPreTraining"], [140, 8, 1, "", "BertForPreTrainingOutput"], [140, 8, 1, "", "BertForQuestionAnswering"], [140, 8, 1, "", "BertForSequenceClassification"], [140, 8, 1, "", "BertForTokenClassification"], [140, 8, 1, "", "BertIntermediate"], [140, 8, 1, "", "BertLMHeadModel"], [140, 8, 1, "", "BertLMPredictionHead"], [140, 8, 1, "", "BertLayer"], [140, 8, 1, "", "BertModel"], [140, 8, 1, "", "BertOnlyMLMHead"], [140, 8, 1, "", "BertOnlyNSPHead"], [140, 8, 1, "", "BertOutput"], [140, 8, 1, "", "BertPooler"], [140, 8, 1, "", "BertPreTrainedModel"], [140, 8, 1, "", "BertPreTrainingHeads"], [140, 8, 1, "", "BertPredictionHeadTransform"], [140, 8, 1, "", "BertSelfAttention"], [140, 8, 1, "", "BertSelfOutput"], [140, 7, 1, "", "expand_gather"], [140, 7, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "get_output_embeddings"], [140, 9, 1, "", "prepare_inputs_for_generation"], [140, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "get_output_embeddings"], [140, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "get_output_embeddings"], [140, 9, 1, "", "prepare_inputs_for_generation"], [140, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[140, 9, 1, "", "feed_forward_chunk"], [140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "get_input_embeddings"], [140, 9, 1, "", "set_input_embeddings"], [140, 9, 1, "", "set_length_config"], [140, 9, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[140, 9, 1, "", "forward"], [140, 9, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, 8, 1, "", "RobertaAttention"], [141, 8, 1, "", "RobertaClassificationHead"], [141, 8, 1, "", "RobertaEmbeddings"], [141, 8, 1, "", "RobertaEncoder"], [141, 8, 1, "", "RobertaForCausalLM"], [141, 8, 1, "", "RobertaForMaskedLM"], [141, 8, 1, "", "RobertaForMultipleChoice"], [141, 8, 1, "", "RobertaForQuestionAnswering"], [141, 8, 1, "", "RobertaForSequenceClassification"], [141, 8, 1, "", "RobertaForTokenClassification"], [141, 8, 1, "", "RobertaIntermediate"], [141, 8, 1, "", "RobertaLMHead"], [141, 8, 1, "", "RobertaLayer"], [141, 8, 1, "", "RobertaModel"], [141, 8, 1, "", "RobertaOutput"], [141, 8, 1, "", "RobertaPooler"], [141, 8, 1, "", "RobertaPreTrainedModel"], [141, 8, 1, "", "RobertaSelfAttention"], [141, 8, 1, "", "RobertaSelfOutput"], [141, 7, 1, "", "create_position_ids_from_input_ids"], [141, 7, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[141, 9, 1, "", "create_position_ids_from_inputs_embeds"], [141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_output_embeddings"], [141, 9, 1, "", "prepare_inputs_for_generation"], [141, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_output_embeddings"], [141, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[141, 9, 1, "", "feed_forward_chunk"], [141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_input_embeddings"], [141, 9, 1, "", "set_input_embeddings"], [141, 9, 1, "", "set_length_config"], [141, 9, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[141, 9, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, 8, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[142, 9, 1, "", "modelsize"], [142, 9, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, 7, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, 8, 1, "", "TFDataloader"], [144, 7, 1, "", "distributed_init"], [144, 7, 1, "", "get_filepath"], [144, 7, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[145, 6, 0, "-", "data_augmentation"], [147, 6, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.utils": [[147, 8, 1, "", "AugmenterType"]], "test_add_cls_token": [[149, 8, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[149, 9, 1, "", "setUpClass"], [149, 9, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, 8, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[150, 9, 1, "", "setUpClass"], [150, 9, 1, "", "tearDownClass"]], "test_attention_reshape": [[151, 8, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[151, 9, 1, "", "setUpClass"], [151, 9, 1, "", "tearDownClass"]], "test_conv_reshape": [[152, 8, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[152, 9, 1, "", "setUpClass"], [152, 9, 1, "", "tearDownClass"]], "test_embeddingbag": [[153, 8, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[153, 9, 1, "", "setUpClass"], [153, 9, 1, "", "tearDownClass"]], "test_execution_options": [[154, 8, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[154, 9, 1, "", "setUpClass"], [154, 9, 1, "", "tearDownClass"]], "test_gelu": [[155, 8, 1, "", "TestGelu"]], "test_gelu.TestGelu": [[155, 9, 1, "", "setUpClass"], [155, 9, 1, "", "tearDownClass"]], "test_graph_dispatch": [[156, 8, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[156, 9, 1, "", "setUpClass"], [156, 9, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[157, 8, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[157, 9, 1, "", "setUpClass"], [157, 9, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[158, 8, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[158, 9, 1, "", "setUpClass"], [158, 9, 1, "", "tearDownClass"], [158, 9, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[159, 8, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[159, 9, 1, "", "setUpClass"], [159, 9, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[160, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[160, 9, 1, "", "setUpClass"], [160, 9, 1, "", "tearDownClass"]], "test_main": [[161, 8, 1, "", "TestMain"]], "test_main.TestMain": [[161, 9, 1, "", "setUpClass"], [161, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[162, 8, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[162, 9, 1, "", "setUpClass"], [162, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[163, 8, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[163, 9, 1, "", "setUpClass"], [163, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[164, 8, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[164, 9, 1, "", "setUpClass"], [164, 9, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[165, 8, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[165, 9, 1, "", "setUpClass"], [165, 9, 1, "", "tearDownClass"]], "test_onnx_utils": [[167, 8, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[167, 9, 1, "", "setUpClass"], [167, 9, 1, "", "tearDownClass"]], "test_ops": [[168, 8, 1, "", "TestOps"]], "test_ops.TestOps": [[168, 9, 1, "", "setUpClass"], [168, 9, 1, "", "tearDownClass"]], "test_padding_sequence": [[169, 8, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[169, 9, 1, "", "setUpClass"], [169, 9, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[170, 8, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[170, 9, 1, "", "setUpClass"], [170, 9, 1, "", "tearDownClass"]], "test_position_embeddings": [[171, 8, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[171, 9, 1, "", "setUpClass"], [171, 9, 1, "", "tearDownClass"]], "test_qkv_merge": [[172, 8, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[172, 9, 1, "", "setUpClass"], [172, 9, 1, "", "tearDownClass"]], "test_qkv_reshape": [[173, 8, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[173, 9, 1, "", "setUpClass"], [173, 9, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[174, 8, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[174, 9, 1, "", "setUpClass"], [174, 9, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[175, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[175, 9, 1, "", "setUpClass"], [175, 9, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, 8, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[176, 9, 1, "", "setUpClass"], [176, 9, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[177, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[177, 9, 1, "", "setUpClass"], [177, 9, 1, "", "tearDownClass"]], "test_start_end_logits": [[178, 8, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[178, 9, 1, "", "setUpClass"], [178, 9, 1, "", "tearDownClass"]], "test_tf_utils": [[179, 8, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[179, 9, 1, "", "setUpClass"], [179, 9, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[180, 8, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[180, 9, 1, "", "setUpClass"], [180, 9, 1, "", "tearDownClass"]], "test_transpose": [[181, 8, 1, "", "TestTranspose"]], "test_transpose.TestTranspose": [[181, 9, 1, "", "setUpClass"], [181, 9, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[182, 8, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[182, 9, 1, "", "setUpClass"], [182, 9, 1, "", "tearDownClass"]]}, "objtypes": {"0": "cpp:type", "1": "cpp:class", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:templateParam", "6": "py:module", "7": "py:function", "8": "py:class", "9": "py:method", "10": "py:property", "11": "py:data"}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "templateParam", "C++ template parameter"], "6": ["py", "module", "Python module"], "7": ["py", "function", "Python function"], "8": ["py", "class", "Python class"], "9": ["py", "method", "Python method"], "10": ["py", "property", "Python property"], "11": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 209, 216], "backend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 212, 215, 240], "neural_engin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "compil": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 189, 221], "modul": [1, 2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 243], "function": [1, 8, 9, 12, 13, 32, 43, 74, 92, 109, 112, 115, 116, 127, 130, 131, 132, 134, 140, 141, 143, 144], "extractor": [2, 3, 4, 5], "class": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 125, 126, 128, 132, 135, 136, 138, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 192, 193, 202, 238], "submodul": [3, 7, 9, 10, 32, 74, 111, 117, 118, 120, 123, 137, 139], "packag": [3, 7, 9, 10, 32, 74, 118, 123], "onnx_extractor": 4, "tf_extractor": 5, "graph": [6, 7, 215, 219, 220], "graph_util": 8, "subpackag": [9, 110, 118], "loader": [10, 11], "logger": 12, "onnx_util": 13, "op": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 217, 219], "all": 14, "assert": 15, "batch_matmul": 16, "batch_matmul_v2": 17, "bias_add": 18, "cast": 19, "concat": 20, "conv": 21, "empty_op": 22, "expand_dim": 23, "fused_batch_matmul_v2": 24, "fused_batch_norm_v3": 25, "fused_gemm": 26, "fused_matmul": 27, "gather": 28, "gather_el": 29, "gelu": [30, 72], "gemm": 31, "attribut": [32, 74, 109, 217], "iterator_get_next": 33, "iterator_v2": 34, "layer_norm": [35, 81], "map_and_batch_dataset": 36, "matmul": 37, "mean": [38, 229], "mkl_layer_norm": 39, "model_dataset": 40, "one_hot": 41, "onnx_input": 42, "optimize_dataset": 44, "pack": 45, "placehold": 46, "quantize_linear": 47, "quantize_v2": 48, "quantized_fused_matmul_and_dequant": 49, "quantized_matmul_with_bias_and_dequant": 50, "reduce_mean": 51, "reduce_sum": 52, "reshap": 53, "scatter_el": 54, "softmax": [55, 236], "split": 56, "squeez": 57, "strided_slic": 58, "tensor": 59, "top_k": 60, "transpos": 61, "unpack": 62, "unsqueez": 63, "sub_graph": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "add_cls_token": 64, "add_embed": 65, "attention_mask_length_adaptive_keep_indic": 66, "attention_output_layer_norm_length_adaptive_keep_indic": 67, "attention_reshap": 68, "collect_quant_info": 69, "conv_reshap": 70, "embeddingbag": 71, "generate_sequ": 73, "input_data": 75, "input_fil": 76, "insert_bf16_nod": 77, "insert_quant_nod": 78, "interact_featur": 79, "last_layer_shap": 80, "layer_norm_with_reduce_mean": 82, "matmul_with_bia": 83, "matmul_with_bias_add": 84, "matmul_with_bias_gelu": 85, "matmul_with_bias_relu": 86, "matmul_with_bias_sigmoid": 87, "matmul_with_bias_tanh": 88, "merged_embeddingbag": 89, "output_data": 90, "padding_sequ": 91, "pattern": [92, 130, 217, 219, 220, 224, 230, 231, 233], "position_embed": 93, "position_embeddings_v1": 94, "qkv_merg": 95, "qkv_reshap": 96, "quantize_fus": 97, "reshape_after_restore_hidden_st": 98, "reshape_before_and_after_attention_out_layer_norm_gather_el": 99, "reshape_before_restore_hidden_st": 100, "reshape_fus": 101, "restore_hidden_states_in_length_adaptive_update_indic": 102, "start_end_logit": 103, "subgraph_match": 104, "token_type_embed": 105, "token_type_embeddings_v1": 106, "transpose_batch_matmul": 107, "word_embed": 108, "tf_util": 109, "optim": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 194, 197], "benchmark": [112, 195, 203, 222, 236], "config": [113, 202, 217, 219], "distil": [114, 196, 202, 210, 211, 213], "dynam": [115, 116, 117, 242], "drop_and_restore_util": 115, "evolut": 116, "mixtur": [119, 120], "auto_distil": 119, "model": [121, 139, 140, 141, 184, 212, 215, 218, 221, 222, 240], "na": [122, 123, 124, 211], "basic_na": 122, "optimizer_tf": [126, 198, 202], "pipelin": [127, 199, 202, 240], "prune": [128, 133, 211, 213, 241], "pytorch_prun": [129, 130, 131, 132, 133, 134], "prune_util": 131, "pruner": 132, "schedul": 134, "quantiz": [135, 184, 211, 213, 222, 242], "trainer": [136, 200, 202, 210, 241, 242], "util": [137, 138, 139, 140, 141, 142, 143, 144, 147], "metric": [138, 210, 238, 241, 242], "modeling_bert_dynam": 140, "modeling_roberta_dynam": 141, "object": [142, 239, 242], "utility_tf": 144, "preprocess": [145, 146, 147], "data_augment": 145, "version": [148, 216], "test_add_cls_token": 149, "test_attention_output_layer_norm_length_adaptive_keep_indic": 150, "test_attention_reshap": 151, "test_conv_reshap": 152, "test_embeddingbag": 153, "test_execution_opt": 154, "test_gelu": 155, "test_graph_dispatch": 156, "test_insert_input_output_data": 157, "test_is_supported_onnx_graph": 158, "test_last_layer_shap": 159, "test_layer_norm_with_reduce_mean": 160, "test_main": 161, "test_matmul_with_bias_relu": 162, "test_matmul_with_bias_sigmoid": 163, "test_matmul_with_bias_tanh": 164, "test_merged_embeddingbag": 165, "test_model": 166, "test_onnx_util": 167, "test_op": 168, "test_padding_sequ": 169, "test_pattern_dispatch": 170, "test_position_embed": 171, "test_qkv_merg": 172, "test_qkv_reshap": 173, "test_quant_onnx_execut": 174, "test_reshape_after_restore_hidden_st": 175, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 176, "test_reshape_before_restore_hidden_st": 177, "test_start_end_logit": 178, "test_tf_util": 179, "test_token_type_embed": 180, "test_transpos": 181, "test_transpose_batch_matmul": 182, "secur": 183, "polici": 183, "report": 183, "vulner": 183, "intel": [184, 201, 205, 208, 211, 244, 247], "extens": [184, 201, 205, 208, 211, 244, 247], "transform": [184, 201, 205, 206, 208, 211, 213, 226, 244, 245, 247], "acceler": [184, 206, 213, 226, 245], "base": [184, 211], "platform": [184, 225, 235], "instal": [184, 209, 214, 216, 222, 226], "from": [184, 214, 216], "pypi": [184, 214], "get": [184, 209, 213, 218, 222, 238, 242], "start": [184, 209, 213, 238, 242], "sentiment": 184, "analysi": 184, "prepar": [184, 221, 222], "dataset": [184, 222], "document": [184, 205, 244], "select": 184, "public": 184, "event": 184, "python": [185, 187, 218], "api": [185, 186, 187, 188, 191, 194, 202, 212, 218, 226], "c": [186, 188, 191, 218], "dispatch": [190, 219], "kernel": [191, 193, 219, 226, 230, 231, 233, 236], "engin": [192, 207, 211, 213, 215, 216, 219, 221, 222, 246], "architectur": [201, 215], "autodistil": 202, "design": [202, 222, 230, 231, 233], "framework": [202, 228, 229], "criterion": [202, 210], "knowledgedistillationloss": 202, "intermediatelayersknowledgedistillationloss": 202, "usag": [202, 210, 212, 228, 229, 236, 241], "pytorch": [202, 210, 211], "flash": 202, "exampl": [202, 211, 212, 218, 221, 236, 239, 240], "regular": 202, "tensorflow": [202, 210, 211], "introduct": [203, 209, 210, 212, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 232, 238, 239, 240, 241, 242], "pytorchbenchmark": 203, "executorbenchmark": 203, "featur": [204, 228, 229, 242, 243], "welcom": [205, 244], "section": [205, 244], "librari": [206, 226, 245], "neural": [207, 211, 213, 215, 216, 246], "data": [209, 231, 235], "augment": 209, "depend": 209, "script": [209, 210, 241, 242], "paramet": 209, "support": [209, 212, 221, 238, 239, 242], "text": 209, "gener": [209, 215], "argument": 209, "knowledg": [210, 211], "intermedi": 210, "layer": 210, "creat": [210, 220, 241, 242], "an": [210, 221, 241, 242], "instanc": [210, 241, 242], "option": [210, 219, 241, 242], "distillationconfig": 210, "stock": 211, "ipex": 211, "length": [211, 213], "adapt": [211, 213], "auto": 211, "orchestr": 211, "refer": [211, 226], "deploy": 211, "dens": 211, "spars": [211, 218, 231], "export": 212, "onnx": [212, 215, 221, 222], "matrix": [212, 239, 242], "fp32": 212, "bf16": 212, "int8": [212, 222, 240], "For": [212, 236], "executor": [212, 223, 240], "linux": 214, "prerequisit": [214, 216, 222], "sourc": 214, "window": 214, "system": 214, "requir": 214, "valid": [214, 235], "hardwar": 214, "environ": [214, 222], "softwar": 214, "deploi": [215, 216], "integr": 215, "1": [215, 218, 222, 223], "2": [215, 222, 223], "tf": 215, "us": 215, "infer": [215, 227, 240], "through": 215, "run": [215, 218, 222], "3": 215, "manual": 215, "custom": [215, 217, 223], "yaml": 215, "weight": 215, "binari": [215, 216], "build": [215, 226, 236], "4": [215, 235], "stabl": 216, "pip": 216, "bare": 216, "metal": 216, "add": [217, 223], "regist": [217, 223], "node": [217, 220], "type": [217, 241], "set": [217, 218], "map": [217, 220], "fuse": 217, "new": [217, 220], "after": 217, "fusion": [217, 220], "profil": [218, 234], "profl": 218, "you": 218, "can": 218, "onli": 218, "engine_profil": 218, "befor": 218, "part": 218, "csv": 218, "ratio": 218, "oper": [218, 223], "total": 218, "level": 218, "json": 218, "iter": 218, "tune": [219, 222, 242], "best": 219, "relat": 219, "runtim": 219, "how": 219, "turn": 219, "mechan": 219, "more": 219, "dict": 220, "obtain": 220, "necessari": 220, "inform": 220, "construct": 220, "establish": 220, "connect": 220, "remov": [220, 224], "old": 220, "insert": 220, "ir": [221, 222], "format": [221, 231, 237], "low": 222, "precis": 222, "To": 222, "its": 222, "accuraci": [222, 242], "h": 223, "includ": 223, "cpp": 223, "src": 223, "recogn": 224, "represent": 224, "pars": 224, "list": [224, 241], "search": 224, "each": 224, "straight": 224, "chain": 224, "splice": 224, "sub": 224, "main": 224, "duplic": 224, "result": 224, "configur": [225, 235], "test": 226, "perform": [226, 234, 235], "user": [226, 228, 229], "sparse_matmul": [226, 236], "develop": [226, 228, 229, 236], "guid": 226, "memori": 227, "layout": 227, "spmm_vnni": [227, 236], "cach": 227, "issu": 227, "3d": 227, "param_typ": [228, 229], "hpp": [228, 229], "operator_desc": [228, 229], "jit_binaryop_injector": 228, "": [228, 229], "perspect": [228, 229], "alpha": 229, "beta": 229, "scale": 229, "jit_eltwise_injector": 229, "amx": 230, "brief": 230, "isa": 230, "reorder": [230, 232, 233], "avx512f": 231, "kei": 231, "instruct": 231, "loop": 231, "problem": 232, "statement": 232, "matmul_p2031_2013": 232, "matmul_avx512f_p2031_p2013": [232, 236], "matmul_noperm_p2031_p1302": 232, "matmul_vnni_noperm_p2013_p1302": 232, "beforehand": 232, "vnni": 233, "On": 233, "fly": 233, "activ": 233, "candid": 233, "verbos": 234, "vtune": 234, "sde": 234, "singl": 235, "thread": 235, "multi": 235, "spmm_avx512f": 236, "spmm_amx_bf16_x16": 236, "eltwiseop": 236, "layernorm_ba": 236, "transpose_matmul": 236, "matmul_vnni_noperm_p2031_p1302": 236, "attent": 236, "input": 237, "summari": 238, "prunerconfig": 241, "pruningconfig": 241, "fundament": 242, "approach": 242, "post": 242, "train": 242, "static": 242, "awar": 242, "quantizationconfig": 242}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [119, "module-contents"], [121, "module-contents"], [122, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [138, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [147, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"]], "Functions": [[1, "functions"], [8, "functions"], [9, "functions"], [12, "functions"], [13, "functions"], [32, "functions"], [43, "functions"], [74, "functions"], [92, "functions"], [109, "functions"], [112, "functions"], [115, "functions"], [116, "functions"], [127, "functions"], [130, "functions"], [131, "functions"], [132, "functions"], [134, "functions"], [140, "functions"], [141, "functions"], [143, "functions"], [144, "functions"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [116, "classes"], [118, "classes"], [119, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [128, "classes"], [132, "classes"], [135, "classes"], [136, "classes"], [138, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [144, "classes"], [147, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [32, "submodules"], [74, "submodules"], [111, "submodules"], [117, "submodules"], [118, "submodules"], [120, "submodules"], [123, "submodules"], [137, "submodules"], [139, "submodules"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [9, "package-contents"], [10, "package-contents"], [32, "package-contents"], [74, "package-contents"], [118, "package-contents"], [123, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[9, "subpackages"], [110, "subpackages"], [118, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Attributes": [[32, "attributes"], [74, "attributes"], [109, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[110, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[111, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[112, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[113, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[114, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[117, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[118, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[120, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[121, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[123, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[125, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[127, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[128, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "intel_extension_for_transformers.optimization.quantization": [[135, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[136, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils": [[137, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[139, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[146, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[147, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[148, "module-intel_extension_for_transformers.version"]], "test_add_cls_token": [[149, "module-test_add_cls_token"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[151, "module-test_attention_reshape"]], "test_conv_reshape": [[152, "module-test_conv_reshape"]], "test_embeddingbag": [[153, "module-test_embeddingbag"]], "test_execution_options": [[154, "module-test_execution_options"]], "test_gelu": [[155, "module-test_gelu"]], "test_graph_dispatch": [[156, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[157, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[158, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[159, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[160, "module-test_layer_norm_with_reduce_mean"]], "test_main": [[161, "module-test_main"]], "test_matmul_with_bias_relu": [[162, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[163, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[164, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[165, "module-test_merged_embeddingbag"]], "test_model": [[166, "module-test_model"]], "test_onnx_utils": [[167, "module-test_onnx_utils"]], "test_ops": [[168, "module-test_ops"]], "test_padding_sequence": [[169, "module-test_padding_sequence"]], "test_pattern_dispatch": [[170, "module-test_pattern_dispatch"]], "test_position_embeddings": [[171, "module-test_position_embeddings"]], "test_qkv_merge": [[172, "module-test_qkv_merge"]], "test_qkv_reshape": [[173, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[174, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[175, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[177, "module-test_reshape_before_restore_hidden_states"]], "test_start_end_logits": [[178, "module-test_start_end_logits"]], "test_tf_utils": [[179, "module-test_tf_utils"]], "test_token_type_embeddings": [[180, "module-test_token_type_embeddings"]], "test_transpose": [[181, "module-test_transpose"]], "test_transpose_batch_matmul": [[182, "module-test_transpose_batch_matmul"]], "Security Policy": [[183, "security-policy"]], "Report a Vulnerability": [[183, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[184, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Installation": [[184, "installation"], [214, "installation"], [216, "installation"], [226, "installation"]], "Install from Pypi": [[184, "install-from-pypi"], [214, "install-from-pypi"], [214, "id2"]], "Getting Started": [[184, "getting-started"], [209, "getting-started"], [213, "getting-started"]], "Sentiment Analysis with Quantization": [[184, "sentiment-analysis-with-quantization"]], "Prepare Dataset": [[184, "prepare-dataset"], [222, "prepare-dataset"]], "Quantization": [[184, "quantization"], [211, "quantization"], [213, "quantization"], [242, "quantization"]], "Documentation": [[184, "documentation"]], "Selected Publications/Events": [[184, "selected-publications-events"]], "Python APIs": [[185, "python-apis"], [187, "python-apis"]], "C++ APIs": [[186, "c-apis"], [188, "c-apis"]], "Compile": [[189, "compile"]], "Class dispatcher": [[190, "class-dispatcher"]], "Kernel C++ APIs": [[191, "kernel-c-apis"]], "Class engine": [[192, "class-engine"]], "Class kernel": [[193, "class-kernel"]], "Optimization APIs": [[194, "optimization-apis"]], "Benchmark": [[195, "benchmark"], [203, "benchmark"]], "Distillation": [[196, "distillation"], [210, "distillation"], [210, "id1"], [211, "distillation"], [213, "distillation"]], "Optimizer": [[197, "optimizer"]], "Optimizer_tf": [[198, "optimizer-tf"]], "Pipeline": [[199, "pipeline"], [240, "pipeline"]], "Trainer": [[200, "trainer"]], "Architecture of Intel\u00ae Extension for Transformers": [[201, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[202, "autodistillation-design"]], "AutoDistillation Pipeline": [[202, "autodistillation-pipeline"]], "Framework Class Design": [[202, "framework-class-design"]], "Criterion Class Design": [[202, "criterion-class-design"]], "KnowledgeDistillationLoss": [[202, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[202, "intermediatelayersknowledgedistillationloss"]], "Usage": [[202, "usage"], [228, "usage"], [229, "usage"], [236, "usage"], [241, "usage"]], "Pytorch": [[202, "pytorch"]], "AutoDistillation API in Trainer": [[202, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[202, "flash-distillation-config-example"]], "Regular distillation config example": [[202, "regular-distillation-config-example"]], "AutoDistillation config example": [[202, "autodistillation-config-example"], [202, "id1"]], "Tensorflow": [[202, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[202, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[202, "distillation-config-example"]], "Introduction": [[203, "introduction"], [209, "introduction"], [210, "introduction"], [212, "introduction"], [217, "introduction"], [218, "introduction"], [219, "introduction"], [220, "introduction"], [221, "introduction"], [224, "introduction"], [226, "introduction"], [228, "introduction"], [229, "introduction"], [232, "introduction"], [238, "introduction"], [239, "introduction"], [240, "introduction"], [241, "introduction"], [242, "introduction"]], "PyTorchBenchmark": [[203, "pytorchbenchmark"]], "ExecutorBenchmark": [[203, "executorbenchmark"]], "Features": [[204, "features"], [243, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[205, "welcome-to-intel-extension-for-transformers-documentation"], [244, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[205, "sections"], [244, "sections"]], "Transformers-accelerated Libraries": [[206, "transformers-accelerated-libraries"], [226, "transformers-accelerated-libraries"], [245, "transformers-accelerated-libraries"]], "Neural Engine": [[207, "neural-engine"], [246, "neural-engine"]], "Intel\u00ae Extension for Transformers": [[208, "intel-extension-for-transformers"], [247, "intel-extension-for-transformers"]], "Data Augmentation": [[209, "data-augmentation"], [209, "id1"]], "Install Dependency": [[209, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[209, "install-intel-extension-for-transformers"]], "Script": [[209, "script"]], "Parameters of Data Augmentation": [[209, "parameters-of-data-augmentation"]], "Supported Augmenter": [[209, "supported-augmenter"]], "Text Generation Augmenter": [[209, "text-generation-augmenter"]], "Augmenter Arguments:": [[209, "augmenter-arguments"]], "Knowledge Distillation": [[210, "knowledge-distillation"], [211, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[210, "intermediate-layer-knowledge-distillation"]], "usage": [[210, "usage"]], "Pytorch Script:": [[210, "pytorch-script"]], "Tensorflow Script:": [[210, "tensorflow-script"]], "Create an Instance of Metric": [[210, "create-an-instance-of-metric"], [242, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[210, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[210, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[210, "distill-with-trainer"]], "Examples": [[211, "examples"], [212, "examples"], [236, "examples"], [236, "id1"], [236, "id2"], [236, "id3"], [236, "id4"], [236, "id5"], [236, "id6"], [236, "id7"], [236, "id8"], [240, "examples"]], "Stock PyTorch Examples": [[211, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[211, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[211, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[211, "length-adaptive-transformers"]], "Pruning": [[211, "pruning"], [213, "pruning"], [241, "pruning"]], "Auto Distillation (NAS Based)": [[211, "auto-distillation-nas-based"]], "Orchestrate": [[211, "orchestrate"]], "Reference Deployment on Neural Engine": [[211, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[211, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[211, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[212, "export-to-onnx"]], "Supported Model Export Matrix": [[212, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[212, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[212, "export-to-bf16-onnx-model"]], "API usage": [[212, "api-usage"]], "Export to INT8 ONNX Model": [[212, "export-to-int8-onnx-model"]], "For executor backend": [[212, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[213, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[213, "transformers-accelerated-neural-engine"]], "Linux Installation": [[214, "linux-installation"]], "Prerequisites": [[214, "prerequisites"], [214, "id1"], [216, "prerequisites"]], "Install from Source": [[214, "install-from-source"], [214, "id3"]], "Windows Installation": [[214, "windows-installation"]], "System Requirements": [[214, "system-requirements"]], "Validated Hardware Environment": [[214, "validated-hardware-environment"]], "Validated Software Environment": [[214, "validated-software-environment"]], "Deploy and Integration": [[215, "deploy-and-integration"]], "1. Architecture": [[215, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[215, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[215, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[215, "run-the-inference-by-engine"], [215, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[215, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[215, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[215, "integrate-neural-engine-as-backend"]], "Install": [[216, "install"]], "Install stable version intel_extension_for_transformers from pip": [[216, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[216, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[217, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[217, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[217, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[217, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Profiling": [[218, "profiling"]], "Profling API": [[218, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[218, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[218, "profiling-examples"]], "Parts of CSV Profiling": [[218, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[218, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[218, "operator-profiling-part"]], "Total Profiling Part": [[218, "total-profiling-part"]], "Levels of JSON Profiling": [[218, "levels-of-json-profiling"]], "Model Level": [[218, "model-level"]], "Iteration Level": [[218, "iteration-level"]], "Operator Level": [[218, "operator-level"]], "Engine Tuning": [[219, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[219, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[219, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[219, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[219, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[219, "more-tuning-options"]], "Graph Fusion": [[220, "graph-fusion"]], "Pattern Mapping Dict": [[220, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[220, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[220, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[220, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[221, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[221, "supported-onnx-format"]], "Compile Examples": [[221, "compile-examples"]], "Prepare ONNX Model": [[221, "prepare-onnx-model"]], "Compile to IR": [[221, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[222, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[222, "design"]], "Prerequisite": [[222, "prerequisite"]], "Install environment": [[222, "install-environment"]], "Prepare ONNX model": [[222, "prepare-onnx-model"]], "Run tuning and benchmark": [[222, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[222, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[222, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[223, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[223, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[223, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[224, "pattern-recognize"]], "Pattern Representation": [[224, "pattern-representation"]], "Parse Pattern Representation List": [[224, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[224, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[224, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "platform configuration": [[225, "platform-configuration"], [235, "platform-configuration"]], "Build": [[226, "build"], [236, "build"]], "Test": [[226, "test"]], "Performance": [[226, "performance"]], "API reference for users": [[226, "api-reference-for-users"]], "sparse_matmul kernel:": [[226, "sparse-matmul-kernel"]], "Developer guide for developers": [[226, "developer-guide-for-developers"]], "Memory Layout in SPMM_VNNI": [[227, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[227, "cache-issues"]], "SPMM_VNNI 3D Inference": [[227, "spmm-vnni-3d-inference"]], "Framework Features": [[228, "framework-features"], [229, "framework-features"]], "param_type.hpp": [[228, "param-type-hpp"]], "operator_desc.hpp": [[228, "operator-desc-hpp"], [229, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[228, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[228, "developer-s-perspective"]], "User\u2019s Perspective": [[228, "user-s-perspective"], [229, "user-s-perspective"]], "param_types.hpp": [[229, "param-types-hpp"]], "alpha,beta,scale meaning": [[229, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[229, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[229, "developer-s-perspective"]], "Design of AMX Kernel": [[230, "design-of-amx-kernel"]], "Brief introduction for ISAs": [[230, "brief-introduction-for-isas"]], "Pattern": [[230, "pattern"]], "Reorder": [[230, "reorder"]], "Design of AVX512F Kernel": [[231, "design-of-avx512f-kernel"]], "Key Instruction": [[231, "key-instruction"]], "Sparse Pattern & Data Format": [[231, "sparse-pattern-data-format"]], "Loops": [[231, "loops"]], "Problem Statements": [[232, "problem-statements"]], "Matmul_p2031_2013": [[232, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[232, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[232, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[232, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[232, "reorder-beforehand"]], "Design of the VNNI Kernel": [[233, "design-of-the-vnni-kernel"]], "On the fly activation reordering": [[233, "on-the-fly-activation-reordering"]], "Candidate patterns": [[233, "candidate-patterns"]], "Performance and Profiling": [[234, "performance-and-profiling"]], "Verbose": [[234, "verbose"]], "VTune": [[234, "vtune"]], "SDE": [[234, "sde"]], "Validation Performance Data": [[235, "validation-performance-data"]], "Single Thread": [[235, "single-thread"]], "Multi Thread (Thread = 4)": [[235, "multi-thread-thread-4"]], "Benchmark for Kernels": [[236, "benchmark-for-kernels"]], "sparse_matmul": [[236, "sparse-matmul"]], "spmm_avx512f": [[236, "spmm-avx512f"]], "spmm_vnni": [[236, "spmm-vnni"]], "spmm_amx_bf16_x16": [[236, "spmm-amx-bf16-x16"]], "eltwiseop": [[236, "eltwiseop"]], "layernorm_ba": [[236, "layernorm-ba"]], "transpose_matmul": [[236, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[236, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[236, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[236, "softmax"]], "attention": [[236, "attention"]], "For developers": [[236, "for-developers"]], "Inputs format": [[237, "inputs-format"]], "Metrics": [[238, "metrics"]], "Supported Metric": [[238, "supported-metric"]], "Metric Class Summary": [[238, "metric-class-summary"]], "Get Start with Metrics": [[238, "get-start-with-metrics"]], "Objective": [[239, "objective"]], "Supported Objectives Matrix:": [[239, "supported-objectives-matrix"]], "Examples:": [[239, "examples"]], "Pipeline Inference for INT8 Model": [[240, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[240, "pipeline-inference-for-executor-backend"]], "Pruning types": [[241, "pruning-types"]], "Script:": [[241, "script"], [242, "script"]], "Create an instance of Metric": [[241, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[241, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[241, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[241, "prune-with-trainer"]], "Quantization Fundamentals": [[242, "quantization-fundamentals"]], "Quantization Approach": [[242, "quantization-approach"]], "Post Training Dynamic Quantization": [[242, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[242, "post-training-static-quantization"]], "Quantization Aware Training": [[242, "quantization-aware-training"]], "Accuracy Aware Tuning": [[242, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[242, "supported-feature-matrix"]], "Get Started": [[242, "get-started"]], "Create an Instance of Objective(Optional)": [[242, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[242, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[242, "quantization-with-trainer"]], "Contents:": [[243, null]]}, "indexentries": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "module": [[0, "module-intel_extension_for_transformers.backends"], [1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [110, "module-intel_extension_for_transformers.backends.neural_engine"], [111, "module-intel_extension_for_transformers"], [112, "module-intel_extension_for_transformers.optimization.benchmark"], [113, "module-intel_extension_for_transformers.optimization.config"], [114, "module-intel_extension_for_transformers.optimization.distillation"], [115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [117, "module-intel_extension_for_transformers.optimization.dynamic"], [118, "module-intel_extension_for_transformers.optimization"], [119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [120, "module-intel_extension_for_transformers.optimization.mixture"], [121, "module-intel_extension_for_transformers.optimization.model"], [122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [123, "module-intel_extension_for_transformers.optimization.nas"], [124, "module-intel_extension_for_transformers.optimization.nas.nas"], [125, "module-intel_extension_for_transformers.optimization.optimizer"], [126, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [127, "module-intel_extension_for_transformers.optimization.pipeline"], [128, "module-intel_extension_for_transformers.optimization.pruning"], [129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"], [132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"], [133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"], [135, "module-intel_extension_for_transformers.optimization.quantization"], [136, "module-intel_extension_for_transformers.optimization.trainer"], [137, "module-intel_extension_for_transformers.optimization.utils"], [138, "module-intel_extension_for_transformers.optimization.utils.metrics"], [139, "module-intel_extension_for_transformers.optimization.utils.models"], [140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [142, "module-intel_extension_for_transformers.optimization.utils.objectives"], [143, "module-intel_extension_for_transformers.optimization.utils.utility"], [144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [146, "module-intel_extension_for_transformers.preprocessing"], [147, "module-intel_extension_for_transformers.preprocessing.utils"], [148, "module-intel_extension_for_transformers.version"], [149, "module-test_add_cls_token"], [150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [151, "module-test_attention_reshape"], [152, "module-test_conv_reshape"], [153, "module-test_embeddingbag"], [154, "module-test_execution_options"], [155, "module-test_gelu"], [156, "module-test_graph_dispatch"], [157, "module-test_insert_input_output_data"], [158, "module-test_is_supported_onnx_graph"], [159, "module-test_last_layer_shape"], [160, "module-test_layer_norm_with_reduce_mean"], [161, "module-test_main"], [162, "module-test_matmul_with_bias_relu"], [163, "module-test_matmul_with_bias_sigmoid"], [164, "module-test_matmul_with_bias_tanh"], [165, "module-test_merged_embeddingbag"], [166, "module-test_model"], [167, "module-test_onnx_utils"], [168, "module-test_ops"], [169, "module-test_padding_sequence"], [170, "module-test_pattern_dispatch"], [171, "module-test_position_embeddings"], [172, "module-test_qkv_merge"], [173, "module-test_qkv_reshape"], [174, "module-test_quant_onnx_execute"], [175, "module-test_reshape_after_restore_hidden_states"], [176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [177, "module-test_reshape_before_restore_hidden_states"], [178, "module-test_start_end_logits"], [179, "module-test_tf_utils"], [180, "module-test_token_type_embeddings"], [181, "module-test_transpose"], [182, "module-test_transpose_batch_matmul"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[4, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.weight_data"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.weight_data"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "div (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Div"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "equal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Equal"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LayerNorm"]], "lessequal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LessEqual"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "mul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Mul"]], "nonzero (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.NonZero"]], "not (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Not"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PaddingSequence"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Pow"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Quantize"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reorder"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Shape"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Slice"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "sub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sub"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.set_attr"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.config"]], "data (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.data"]], "dest_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dest_op"]], "dtype (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dtype"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "location (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.location"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.name"]], "shape (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.shape"]], "source_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.source_op"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.Pattern"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern_registry"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[110, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[111, "module-intel_extension_for_transformers"]], "executorbenchmark (class in intel_extension_for_transformers.optimization.benchmark)": [[112, "intel_extension_for_transformers.optimization.benchmark.ExecutorBenchmark"]], "intel_extension_for_transformers.optimization.benchmark": [[112, "module-intel_extension_for_transformers.optimization.benchmark"]], "run() (in module intel_extension_for_transformers.optimization.benchmark)": [[112, "intel_extension_for_transformers.optimization.benchmark.run"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.Provider"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "approach (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.approach"]], "criterion (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.criterion"]], "epoch_range (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.epochs"]], "framework (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.framework"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.input_names"]], "intel_extension_for_transformers.optimization.config": [[113, "module-intel_extension_for_transformers.optimization.config"]], "knowledge_transfer (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.knowledge_transfer"]], "max_trials (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.metrics"]], "objectives (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_names"]], "performance_only (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.performance_only"]], "pruner_config (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.pruner_config"]], "random_seed (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.sampling_size"]], "search_algorithm (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.strategy"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.target_sparsity_ratio"]], "tensorboard (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.timeout"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[114, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[114, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[114, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[115, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[115, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[117, "module-intel_extension_for_transformers.optimization.dynamic"]], "autodistillation (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DistillationCriterionMode"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.FlashDistillationConfig"]], "nas (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.NAS"]], "nasconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.NASConfig"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer"]], "optimizedmodel (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.OptimizedModel"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.Orchestrate_optimizer"]], "provider (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.Provider"]], "prunerconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PrunerConfig"]], "pruningconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PruningConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PruningMode"]], "quantizationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig"]], "quantizationmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.QuantizationMode"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.TFDistillationConfig"]], "tfoptimization (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.TFOptimization"]], "approach (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.approach"]], "autodistill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.builtin_eval_func"]], "calib_dataloader (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.calib_dataloader"]], "calib_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.calib_func"]], "create_distillers() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.create_distillers"]], "criterion (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.criterion"]], "distill() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.distill"]], "distill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.distill"]], "epoch_range (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.epochs"]], "estimate() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.estimate"]], "eval_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.eval_func"]], "eval_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.eval_func"]], "eval_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.eval_func"]], "fit() (intel_extension_for_transformers.optimization.orchestrate_optimizer method)": [[118, "intel_extension_for_transformers.optimization.Orchestrate_optimizer.fit"]], "framework (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.framework"]], "from_pretrained() (intel_extension_for_transformers.optimization.optimizedmodel class method)": [[118, "intel_extension_for_transformers.optimization.OptimizedModel.from_pretrained"]], "init_by_cfg() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.init_by_cfg"]], "init_distiller() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_distiller"]], "init_distiller() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_distiller"]], "init_prune_config() (intel_extension_for_transformers.optimization.pruningconfig method)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.init_prune_config"]], "init_pruner() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_pruner"]], "init_pruner() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_quantizer"]], "init_quantizer() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_quantizer"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.input_names"]], "input_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization": [[118, "module-intel_extension_for_transformers.optimization"]], "knowledge_transfer (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.knowledge_transfer"]], "load_search_results() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.load_search_results"]], "max_trials (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.metrics"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.model_builder_builtin"]], "objectives (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.output_names"]], "output_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.output_names"]], "performance_only (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.performance_only"]], "provider (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.provider"]], "prune() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.prune"]], "prune() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.prune"]], "pruner_config (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.pruner_config"]], "quantize() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.quantize"]], "quantize() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.quantize"]], "random_seed (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.sampling_size"]], "search() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.search"]], "search_algorithm (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.strategy"]], "student_model (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.student_model"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.target_sparsity_ratio"]], "teacher_model (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.teacher_model"]], "tensorboard (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.timeout"]], "train_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.train_func"]], "train_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[118, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.train_func"]], "train_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.train_func"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "eval_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.eval_func"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "student_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.student_model"]], "teacher_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.teacher_model"]], "train_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.train_func"]], "intel_extension_for_transformers.optimization.mixture": [[120, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[121, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[121, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[121, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.train_func"]], "basicnas (class in intel_extension_for_transformers.optimization.nas)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS"]], "nas (class in intel_extension_for_transformers.optimization.nas)": [[123, "intel_extension_for_transformers.optimization.nas.NAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas": [[123, "module-intel_extension_for_transformers.optimization.nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.train_func"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[124, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[125, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "calib_dataloader (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_dataloader"]], "calib_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "eval_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.eval_func"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[125, "module-intel_extension_for_transformers.optimization.optimizer"]], "provider (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.provider"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "train_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.train_func"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "eval_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_func"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "input_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "output_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.output_names"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "train_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_func"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[127, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[127, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[128, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[128, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[128, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[130, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[130, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "parse_not_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[131, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_not_to_prune"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[131, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_to_prune"]], "snippruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.get_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "register_pruners() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.register_scheduler"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[135, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[135, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "calib_dataloader (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.calib_dataloader"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "eval_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.eval_func"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[136, "module-intel_extension_for_transformers.optimization.trainer"]], "max_length (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.max_length"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "num_beams (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.num_beams"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "provider (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.provider"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "resuming_checkpoint (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.resuming_checkpoint"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "train_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train_func"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils": [[137, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[138, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[139, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[143, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[146, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[147, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "intel_extension_for_transformers.preprocessing.utils": [[147, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[148, "module-intel_extension_for_transformers.version"]], "testaddclstoken (class in test_add_cls_token)": [[149, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[149, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[149, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[149, "module-test_add_cls_token"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[151, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[151, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[151, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[151, "module-test_attention_reshape"]], "testconvreshape (class in test_conv_reshape)": [[152, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[152, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[152, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[152, "module-test_conv_reshape"]], "testembeddingbag (class in test_embeddingbag)": [[153, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[153, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[153, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[153, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[154, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[154, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[154, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[154, "module-test_execution_options"]], "testgelu (class in test_gelu)": [[155, "test_gelu.TestGelu"]], "setupclass() (test_gelu.testgelu class method)": [[155, "test_gelu.TestGelu.setUpClass"]], "teardownclass() (test_gelu.testgelu class method)": [[155, "test_gelu.TestGelu.tearDownClass"]], "test_gelu": [[155, "module-test_gelu"]], "testgraphdispatch (class in test_graph_dispatch)": [[156, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[156, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[156, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[156, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[157, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[157, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[157, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[157, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[158, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[159, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[159, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[159, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[159, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[160, "module-test_layer_norm_with_reduce_mean"]], "testmain (class in test_main)": [[161, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[161, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[161, "test_main.TestMain.tearDownClass"]], "test_main": [[161, "module-test_main"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[162, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[163, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[164, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[165, "module-test_merged_embeddingbag"]], "test_model": [[166, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[167, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[167, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[167, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[167, "module-test_onnx_utils"]], "testops (class in test_ops)": [[168, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[168, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[168, "test_ops.TestOps.tearDownClass"]], "test_ops": [[168, "module-test_ops"]], "testpaddingsequence (class in test_padding_sequence)": [[169, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[169, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[169, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[169, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[170, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[170, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[170, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[170, "module-test_pattern_dispatch"]], "testpositionembeddings (class in test_position_embeddings)": [[171, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[171, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[171, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[171, "module-test_position_embeddings"]], "testqkvmerge (class in test_qkv_merge)": [[172, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[172, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[172, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[172, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[173, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[173, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[173, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[173, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[174, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[175, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[177, "module-test_reshape_before_restore_hidden_states"]], "teststartendlogits (class in test_start_end_logits)": [[178, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[178, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[178, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[178, "module-test_start_end_logits"]], "testtfutils (class in test_tf_utils)": [[179, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[179, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[179, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[179, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[180, "module-test_token_type_embeddings"]], "testtranspose (class in test_transpose)": [[181, "test_transpose.TestTranspose"]], "setupclass() (test_transpose.testtranspose class method)": [[181, "test_transpose.TestTranspose.setUpClass"]], "teardownclass() (test_transpose.testtranspose class method)": [[181, "test_transpose.TestTranspose.tearDownClass"]], "test_transpose": [[181, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[182, "module-test_transpose_batch_matmul"]], "executor (c++ type)": [[190, "_CPPv48executor"]], "executor::dispatcher (c++ class)": [[190, "_CPPv4N8executor10DispatcherE"]], "executor::dispatcher::adaptattrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::adapttensors (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::dispatcher (c++ function)": [[190, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model"], [190, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model"]], "executor::dispatcher::forward (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::getexecutekernel (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb"]], "executor::dispatcher::gethash (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE"]], "executor::dispatcher::kernelhandler (c++ type)": [[190, "_CPPv4N8executor10Dispatcher13KernelHandlerE"]], "executor::dispatcher::prepare (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::resetopstatus (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::reshape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::adapt_action_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher13adapt_action_E"]], "executor::dispatcher::cpu_isa_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher8cpu_isa_E"]], "executor::dispatcher::dispatch_table_file_exists_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E"]], "executor::dispatcher::do_tuning (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher9do_tuningEv"]], "executor::dispatcher::do_tuning_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher10do_tuning_E"]], "executor::dispatcher::enable_sparse (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13enable_sparseEv"]], "executor::dispatcher::execute_kernel (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher14execute_kernelEv"]], "executor::dispatcher::execute_kernel_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher15execute_kernel_E"]], "executor::dispatcher::execution_options_ptr_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E"]], "executor::dispatcher::get_attrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher9get_attrsEv"]], "executor::dispatcher::get_it_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12get_it_shapeEv"]], "executor::dispatcher::get_ot_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv"]], "executor::dispatcher::get_reshape_time (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv"]], "executor::dispatcher::iter_cnt_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher9iter_cnt_E"]], "executor::dispatcher::kernel_handler_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher15kernel_handler_E"]], "executor::dispatcher::kernel_type (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11kernel_typeEv"]], "executor::dispatcher::latency (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7latencyEv"]], "executor::dispatcher::model_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher6model_E"]], "executor::dispatcher::monopoly_kernel_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E"]], "executor::dispatcher::name (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher4nameEv"]], "executor::dispatcher::name_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher5name_E"]], "executor::dispatcher::no_tuning_space (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv"]], "executor::dispatcher::no_tuning_space_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher16no_tuning_space_E"]], "executor::dispatcher::operator_conf (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher13operator_confEv"]], "executor::dispatcher::operator_conf_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher14operator_conf_E"]], "executor::dispatcher::perf_ratio_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv"]], "executor::dispatcher::post_op (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7post_opEv"]], "executor::dispatcher::set_attrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE"]], "executor::dispatcher::set_enable_sparse (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb"]], "executor::dispatcher::set_it_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_latency (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11set_latencyEKf"]], "executor::dispatcher::set_ot_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_perf_ratio_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string"]], "executor::dispatcher::set_post_op (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11set_post_opERK6string"]], "executor::dispatcher::set_reshape_time (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf"]], "executor::dispatcher::set_table_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_table_idE6string"]], "executor::dispatcher::set_tuning_mode (c++ function)": [[190, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb"]], "executor::dispatcher::set_weight_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE"]], "executor::dispatcher::sparselib_available_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher20sparselib_available_E"]], "executor::dispatcher::table_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher8table_idEv"]], "executor::dispatcher::tune_dense_in_sparse_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E"]], "executor::dispatcher::type (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher4typeEv"]], "executor::dispatcher::type_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher5type_E"]], "executor::dispatcher::weight_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12weight_shapeEv"]], "executor::dispatcher::weight_zero_ratio (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv"]], "executor::dispatcher::~dispatcher (c++ function)": [[190, "_CPPv4N8executor10DispatcherD0Ev"]], "jd (c++ type)": [[191, "_CPPv42jd"], [192, "_CPPv42jd"], [193, "_CPPv42jd"]], "jd::attention (c++ class)": [[191, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[191, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [191, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[191, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[191, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[191, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [191, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[191, "_CPPv4N2jd14attention_descD0Ev"]], "jd::eltwiseop (c++ class)": [[191, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[191, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [191, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[191, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[191, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[191, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [191, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[191, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[191, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[191, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [191, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[191, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[191, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[191, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [191, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[191, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[191, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[191, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [191, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[191, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[191, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[191, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [191, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[191, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::kernel_t (c++ class)": [[191, "_CPPv4N2jd8kernel_tE"], [193, "_CPPv4N2jd8kernel_tE"]], "jd::kernel_t::create (c++ function)": [[191, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"], [193, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_t::execute (c++ function)": [[191, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE"], [193, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE"]], "jd::kernel_t::init (c++ function)": [[191, "_CPPv4N2jd8kernel_t4initEv"], [193, "_CPPv4N2jd8kernel_t4initEv"]], "jd::kernel_t::kd (c++ function)": [[191, "_CPPv4NK2jd8kernel_t2kdEv"], [193, "_CPPv4NK2jd8kernel_t2kdEv"]], "jd::kernel_t::kd_ (c++ member)": [[191, "_CPPv4N2jd8kernel_t3kd_E"], [193, "_CPPv4N2jd8kernel_t3kd_E"]], "jd::kernel_t::kernel_t (c++ function)": [[191, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t"], [191, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE"], [191, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t"], [193, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t"], [193, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE"], [193, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t"]], "jd::kernel_t::operator= (c++ function)": [[191, "_CPPv4N2jd8kernel_taSERK8kernel_t"], [191, "_CPPv4N2jd8kernel_taSERR8kernel_t"], [193, "_CPPv4N2jd8kernel_taSERK8kernel_t"], [193, "_CPPv4N2jd8kernel_taSERR8kernel_t"]], "jd::kernel_t::~kernel_t (c++ function)": [[191, "_CPPv4N2jd8kernel_tD0Ev"], [193, "_CPPv4N2jd8kernel_tD0Ev"]], "jd::layernorm_ba (c++ class)": [[191, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[191, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [191, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[191, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[191, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[191, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [191, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[191, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::proxy_base (c++ class)": [[191, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[191, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[191, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[191, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[191, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[191, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::softmax (c++ class)": [[191, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[191, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [191, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[191, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[191, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[191, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [191, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[191, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[191, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[191, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [191, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[191, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[191, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[191, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [191, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[191, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[191, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[191, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [191, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[191, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[191, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[191, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [191, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[191, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::engine (c++ class)": [[192, "_CPPv4N2jd6engineE"]], "jd::engine::eng_kind_ (c++ member)": [[192, "_CPPv4N2jd6engine9eng_kind_E"]], "jd::engine::engine (c++ function)": [[192, "_CPPv4N2jd6engine6engineERK11engine_kind"]], "jd::engine::get_implementation_list (c++ function)": [[192, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc"]], "jd::engine::kind (c++ function)": [[192, "_CPPv4NK2jd6engine4kindEv"]], "jd::engine::~engine (c++ function)": [[192, "_CPPv4N2jd6engineD0Ev"]]}})