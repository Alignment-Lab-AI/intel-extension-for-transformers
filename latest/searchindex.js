Search.setIndex({"docnames": ["autoapi/clangformat/index", "autoapi/convert_falcon/index", "autoapi/convert_gptj/index", "autoapi/convert_gptneox/index", "autoapi/convert_llama/index", "autoapi/convert_mpt/index", "autoapi/gptj_binding/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/modeling/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_add_zeros/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_baddbmm/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dolly_pattern/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gather/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_neox_rotary_pos_emb/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_slice/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_static_compressed_buffer/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/clangformat/index.rst", "autoapi/convert_falcon/index.rst", "autoapi/convert_gptj/index.rst", "autoapi/convert_gptneox/index.rst", "autoapi/convert_llama/index.rst", "autoapi/convert_mpt/index.rst", "autoapi/gptj_binding/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_add_zeros/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_baddbmm/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dolly_pattern/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gather/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_neox_rotary_pos_emb/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_slice/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_static_compressed_buffer/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">clang-format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_falcon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptneox</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_llama</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_mpt</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gptj_binding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.where</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dolly_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_static_compressed_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Static Compressed Buffer", "Neural Engine Support Matrix", "ITREX Graph", "Table of Contents", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"bytes_to_unicod": [1, 2, 3, 5], "sourc": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 382, 396, 403, 409, 411], "return": [1, 2, 3, 4, 5, 12, 13, 14, 17, 22, 56, 149, 205, 206, 213, 215, 222, 225, 229, 231, 235, 237, 239, 240, 242, 245, 250, 251, 361, 362, 373, 374, 381, 385, 389, 393, 396, 397, 412], "list": [1, 2, 3, 4, 5, 12, 13, 14, 15, 17, 22, 56, 205, 206, 213, 215, 223, 224, 238, 242, 243, 245, 250, 251, 374, 375, 380, 381, 382, 385, 390, 396, 397, 410, 416], "utf": [1, 2, 3, 5], "8": [1, 2, 3, 4, 5, 17, 245, 352, 361, 374, 376, 377, 379, 381, 383, 385, 387, 389, 391, 393, 397, 398, 399, 405, 406, 407, 409, 416], "byte": [1, 2, 3, 4, 5, 399, 405], "correspond": [1, 2, 3, 5, 8, 12, 13, 17, 361, 381, 385, 389, 394, 401, 405, 408, 416], "unicod": [1, 2, 3, 5], "string": [1, 2, 3, 4, 5, 17, 22, 205, 206, 215, 226, 235, 237, 242, 254, 255, 351, 373, 375, 381, 384, 385, 388, 393, 397, 412, 413, 415, 416], "The": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220, 223, 225, 226, 229, 231, 234, 235, 237, 239, 242, 245, 248, 250, 251, 252, 254, 255, 257, 343, 345, 348, 350, 351, 353, 359, 361, 362, 371, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 412, 414, 415, 416], "revers": [1, 2, 3, 5], "bpe": [1, 2, 3, 5], "code": [1, 2, 3, 5, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 374, 378, 379, 381, 384, 392, 393, 397, 398, 399, 400, 401, 406, 409, 411], "work": [1, 2, 3, 5, 245, 342, 390, 393, 397, 414], "thi": [1, 2, 3, 4, 5, 10, 17, 182, 215, 234, 242, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 361, 371, 372, 373, 374, 375, 377, 381, 382, 383, 384, 385, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 414, 416], "mean": [1, 2, 3, 5, 17, 18, 44, 207, 220, 223, 250, 251, 255, 352, 373, 381, 382, 383, 384, 385, 389, 390, 392, 393, 395, 396, 398, 402, 405, 409, 412, 415, 416], "you": [1, 2, 3, 5, 17, 217, 223, 238, 250, 251, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 372, 373, 374, 375, 377, 381, 382, 384, 385, 386, 389, 390, 392, 393, 396, 397, 399, 406, 408, 409, 411, 412, 414, 415, 416, 417], "need": [1, 2, 3, 4, 5, 17, 122, 223, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 373, 374, 375, 381, 383, 384, 385, 386, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 409, 415, 416, 417], "larg": [1, 2, 3, 5, 375, 376, 389, 390, 391, 392, 393, 395, 398, 401, 402, 403, 409], "charact": [1, 2, 3, 5, 393], "your": [1, 2, 3, 5, 17, 245, 255, 257, 343, 372, 373, 374, 378, 381, 382, 383, 384, 385, 392, 393, 396, 397, 409, 411, 414], "vocab": [1, 2, 3, 5], "want": [1, 2, 3, 5, 223, 238, 362, 368, 381, 383, 384, 386, 389, 390, 393, 395, 396, 397, 409, 412, 424], "avoid": [1, 2, 3, 5, 245, 250, 251, 389, 393, 395, 397, 401, 403, 404, 409], "unk": [1, 2, 3, 5], "when": [1, 2, 3, 5, 205, 223, 245, 250, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 371, 376, 381, 382, 384, 385, 388, 389, 390, 393, 395, 397, 398, 400, 401, 402, 404, 405, 409, 412, 413, 416], "re": [1, 2, 3, 5, 231, 393, 399], "someth": [1, 2, 3, 5, 205], "like": [1, 2, 3, 5, 8, 12, 13, 14, 17, 112, 113, 205, 255, 373, 374, 375, 378, 381, 382, 383, 384, 385, 386, 389, 390, 393, 396, 397, 399, 406, 412, 413, 415, 416], "10b": [1, 2, 3, 5], "token": [1, 2, 3, 5, 209, 213, 217, 238, 250, 251, 255, 362, 373, 374, 376, 378, 386, 390, 392, 414], "dataset": [1, 2, 3, 5, 220, 239, 245, 254, 255, 362, 373, 376, 412, 416], "end": [1, 2, 3, 5, 17, 242, 250, 251, 255, 343, 374, 383, 386, 388, 389, 393, 397, 406], "up": [1, 2, 3, 4, 5, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 383, 385, 390, 393, 397, 409], "around": [1, 2, 3, 5], "5k": [1, 2, 3, 5], "decent": [1, 2, 3, 5], "coverag": [1, 2, 3, 5], "i": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 17, 22, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 220, 223, 229, 239, 242, 245, 250, 251, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 348, 349, 350, 351, 352, 353, 359, 361, 362, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 422], "signific": [1, 3, 375, 393], "percentag": [1, 2, 3, 5], "normal": [1, 2, 3, 5, 352, 396, 404, 423], "sai": [1, 2, 3, 5, 405], "32k": [1, 2, 3, 5], "To": [1, 2, 3, 5, 220, 250, 251, 361, 372, 381, 393, 398, 401, 403, 405, 409, 410], "we": [1, 2, 3, 5, 231, 235, 251, 368, 371, 373, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413, 414, 416, 424], "lookup": [1, 2, 3, 5], "tabl": [1, 2, 3, 5, 384, 397, 405], "between": [1, 2, 3, 5, 12, 13, 250, 251, 352, 361, 375, 393, 402, 405, 409, 416], "And": [1, 2, 3, 5, 122, 383, 384, 385, 386, 389, 396], "map": [1, 2, 3, 4, 5, 12, 13, 17, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 245, 361, 374, 375, 390, 395, 416], "whitespac": [1, 2, 3, 5, 410], "control": [1, 2, 3, 4, 5, 17, 222, 223, 361, 381, 393], "barf": [1, 2, 3, 5], "signfic": [2, 5], "nefiletyp": 4, "gener": [4, 17, 112, 113, 222, 223, 242, 245, 250, 251, 255, 362, 374, 375, 381, 385, 389, 396, 397, 400, 401, 404, 406, 408, 409, 412, 413, 416], "enumer": [4, 257, 352], "deriv": [4, 350, 402, 403], "from": [4, 15, 17, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 205, 206, 222, 226, 229, 231, 242, 245, 250, 251, 255, 361, 362, 371, 373, 375, 376, 378, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 396, 397, 400, 402, 403, 404, 405, 412, 413, 414, 415, 416], "defin": [4, 17, 215, 223, 235, 237, 238, 242, 245, 349, 361, 371, 374, 375, 381, 382, 388, 389, 405, 410, 412, 415, 416], "new": [4, 8, 12, 13, 14, 17, 22, 245, 372, 389, 390, 393, 396, 397, 410, 417], "handle_quant": 4, "model": [4, 8, 12, 13, 14, 15, 17, 20, 22, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 186, 187, 188, 190, 191, 192, 203, 204, 206, 213, 215, 220, 222, 223, 226, 228, 229, 235, 238, 239, 240, 242, 245, 254, 255, 359, 361, 373, 375, 376, 378, 380, 381, 384, 385, 389, 390, 391, 393, 396, 401, 402, 403, 404, 407, 411, 412, 413, 415, 416, 425], "lazymodel": 4, "convert": [4, 8, 12, 13, 17, 22, 205, 222, 223, 377, 387, 390, 404, 409, 416], "entri": [4, 207, 239, 245, 250, 251, 411], "foo": 4, "qweight": 4, "scale": [4, 22, 245, 352, 396, 401, 404, 416], "etc": [4, 229, 245, 361, 375, 383], "which": [4, 8, 12, 13, 14, 17, 160, 205, 223, 225, 229, 231, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 373, 375, 380, 381, 382, 384, 385, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 408, 409, 412, 415, 416], "resolv": [4, 342], "unquantizedtensor": 4, "raw": 4, "data": [4, 17, 83, 209, 222, 255, 257, 352, 361, 374, 376, 381, 382, 384, 386, 387, 388, 390, 395, 396, 397, 398, 401, 402, 405, 409, 416, 420, 424], "one": [4, 8, 12, 13, 17, 213, 242, 250, 352, 361, 374, 375, 378, 380, 381, 383, 384, 385, 389, 390, 392, 393, 396, 398, 399, 404, 408, 409, 414], "weight": [4, 90, 223, 250, 251, 352, 361, 375, 377, 383, 384, 386, 395, 398, 399, 400, 404, 405, 409, 412, 413, 415, 416], "quantizedtensor": 4, "lazyunpickl": 4, "fp": 4, "io": [4, 352, 388], "data_base_path": 4, "str": [4, 17, 56, 149, 209, 215, 217, 222, 223, 224, 231, 234, 238, 240, 243, 245, 248, 250, 251, 252, 255, 257, 362, 373], "zip_fil": 4, "zipfil": 4, "take": [4, 371, 375, 383, 385, 388, 396, 404, 405], "binari": [4, 379, 397, 404, 409, 423], "file": [4, 8, 10, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 149, 177, 223, 226, 229, 231, 235, 237, 242, 245, 246, 255, 349, 350, 351, 352, 373, 374, 381, 382, 383, 384, 386, 388, 392, 393, 396, 397, 408, 409, 410, 411], "read": [4, 242, 374, 382, 392], "pickl": 4, "stream": [4, 388], "protocol": [4, 402], "version": [4, 220, 231, 245, 371, 374, 379, 384, 391, 407, 411], "detect": [4, 17], "automat": [4, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 373, 383, 384, 385, 393, 396, 409], "so": [4, 17, 231, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 375, 380, 381, 384, 385, 388, 389, 396, 398, 399, 400, 401, 402, 404, 405, 406, 409, 412, 413, 415, 416], "argument": [4, 215, 223, 242, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 375, 383, 410, 412, 413, 415, 416], "past": [4, 250, 251], "object": [4, 12, 13, 14, 205, 215, 223, 228, 235, 237, 238, 239, 240, 242, 245, 247, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 374, 375, 378, 381, 388, 415, 420], "": [4, 17, 22, 56, 109, 205, 223, 245, 251, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 350, 361, 371, 374, 375, 381, 382, 383, 385, 386, 388, 390, 391, 393, 398, 402, 404, 407, 409, 410, 414, 416], "represent": [4, 17, 371, 378, 381, 385, 386], "ar": [4, 17, 112, 113, 160, 220, 225, 226, 242, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 361, 371, 372, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 416], "ignor": [4, 215, 245, 250, 251, 381, 393], "must": [4, 17, 220, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 379, 385, 389, 395, 396, 398, 405], "have": [4, 8, 17, 205, 215, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 372, 374, 381, 382, 383, 384, 385, 386, 389, 390, 393, 397, 401, 402, 403, 404, 408, 409, 411, 412, 413, 414, 415, 416], "two": [4, 17, 245, 375, 381, 384, 385, 387, 388, 390, 396, 397, 399, 402, 403, 404, 405, 413, 414, 415, 416], "method": [4, 17, 226, 237, 243, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 373, 376, 393, 396, 399, 401, 404, 406, 415, 416], "an": [4, 10, 17, 22, 205, 237, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 371, 373, 374, 376, 377, 378, 381, 382, 383, 384, 385, 388, 389, 390, 392, 393, 395, 396, 397, 401, 402, 405, 410, 412, 414, 425], "integ": [4, 373, 377, 384, 385, 405, 409, 415, 416], "readlin": 4, "requir": [4, 17, 146, 220, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 378, 385, 387, 389, 391, 393, 395, 398, 399, 401, 408, 409, 416], "both": [4, 229, 245, 250, 251, 371, 373, 378, 393, 401, 403, 408, 409, 410, 412, 416], "should": [4, 17, 231, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 382, 384, 385, 388, 389, 395, 396, 397, 402, 409, 410, 412, 413, 416], "thu": [4, 400, 416], "can": [4, 8, 17, 112, 113, 122, 146, 217, 231, 242, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 373, 374, 375, 377, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 413, 414, 415, 416], "open": [4, 371, 373, 382, 386, 392], "bytesio": 4, "ani": [4, 17, 231, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 372, 381, 389, 393, 414], "other": [4, 17, 72, 122, 231, 352, 371, 372, 373, 374, 381, 382, 383, 384, 385, 389, 390, 391, 393, 401, 404, 405, 407, 409, 411, 416], "custom": [4, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 215, 239, 245, 255, 343, 361, 374, 383, 385, 393, 425], "meet": [4, 349, 350, 351, 352, 381, 399, 401, 405], "interfac": [4, 8, 207, 223, 250, 251, 350, 377, 380, 394], "option": [4, 17, 215, 222, 223, 231, 238, 240, 245, 250, 251, 361, 362, 383, 389, 396, 405, 409], "keyword": [4, 245], "fix_import": 4, "encod": [4, 234, 250, 251, 361, 383, 389], "error": [4, 21, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 388, 406], "us": [4, 8, 17, 22, 56, 149, 160, 182, 205, 215, 220, 222, 223, 225, 229, 231, 234, 235, 238, 239, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 371, 372, 373, 374, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416], "compat": [4, 379], "support": [4, 17, 22, 149, 215, 217, 223, 226, 240, 243, 244, 255, 352, 378, 379, 380, 381, 382, 383, 384, 388, 389, 397, 401, 402, 404, 406, 408, 409, 414, 415, 419], "python": [4, 12, 13, 17, 250, 251, 348, 359, 372, 373, 374, 379, 380, 381, 382, 384, 386, 387, 392, 408], "2": [4, 17, 220, 223, 225, 250, 352, 361, 362, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 393, 398, 399, 400, 405, 406, 407, 409, 411, 412, 414], "If": [4, 17, 225, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 372, 375, 377, 381, 383, 384, 385, 386, 389, 393, 396, 402, 409, 411, 412, 415, 416], "true": [4, 15, 215, 223, 245, 248, 250, 251, 252, 361, 374, 377, 378, 380, 381, 383, 384, 390, 396, 397, 403, 406, 409, 412, 413, 416], "try": [4, 384, 392, 416], "old": [4, 17], "name": [4, 12, 13, 14, 15, 17, 22, 56, 83, 149, 205, 215, 223, 224, 231, 240, 243, 248, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 387, 389, 391, 397, 407, 408, 411, 412, 413, 414, 415, 416], "3": [4, 17, 352, 361, 362, 373, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 399, 400, 405, 407, 409, 410, 412], "tell": [4, 383, 385, 396, 397], "how": [4, 223, 225, 245, 342, 372, 381, 382, 383, 386, 387, 389, 393, 397, 398, 399, 409, 412, 415], "decod": [4, 234, 250, 251, 390, 406], "bit": [4, 377, 378, 392, 393, 395, 396, 402, 405, 416], "instanc": [4, 223, 229, 235, 245, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 371, 382, 383, 391, 407, 410, 412, 413, 414], "default": [4, 222, 223, 231, 238, 240, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 373, 374, 375, 381, 384, 390, 391, 393, 397, 401, 405, 406, 407, 409, 412, 413, 415, 416], "ascii": 4, "strict": 4, "respect": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 382, 385, 386], "find_class": 4, "specifi": [4, 17, 217, 223, 225, 235, 237, 239, 243, 244, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 385, 386, 390, 393, 397, 401, 403, 409, 415, 416], "necessari": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 388, 393, 405, 409], "import": [4, 15, 17, 240, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 373, 374, 375, 378, 381, 382, 384, 386, 389, 390, 393, 396, 397, 401, 412, 413, 414, 415, 416], "subclass": [4, 56, 149, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350], "mai": [4, 8, 17, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 371, 372, 374, 381, 384, 389, 390, 392, 393, 398, 399, 400, 402, 403, 404, 405, 409, 411, 416], "overrid": [4, 231, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 388], "e": [4, 17, 112, 113, 215, 223, 229, 245, 361, 371, 374, 375, 384, 393, 396, 397, 402, 403, 409, 410], "g": [4, 215, 223, 229, 245, 361, 375, 392, 393, 396, 397, 402, 410], "restrict": 4, "unpickl": 4, "arbitrari": [4, 381], "call": [4, 17, 109, 141, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 377, 381, 384, 385, 390, 395, 396, 397, 404, 405, 416], "whenev": [4, 393], "pass": [4, 242, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 352, 390, 396, 397, 414, 416], "bounded_parallel_map": 4, "func": [4, 17, 361, 384], "callabl": [4, 238, 239, 245, 361], "In": [4, 17, 229, 245, 250, 361, 371, 374, 381, 382, 383, 384, 385, 386, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412, 413, 416], "out": [4, 15, 17, 245, 372, 374, 381, 382, 385, 393, 394, 403, 416], "iter": [4, 215, 223, 229, 245, 361, 362, 374, 382, 384, 388, 390, 396, 400, 403, 404, 409, 410], "concurr": 4, "int": [4, 17, 215, 217, 222, 223, 243, 245, 250, 352, 362, 381, 396, 397, 398, 401], "parallel": [4, 400, 401, 402, 405, 409], "backpressur": 4, "caller": 4, "doesn": [4, 17, 361, 393, 396, 405, 409], "t": [4, 17, 223, 250, 251, 350, 352, 361, 373, 375, 388, 390, 392, 393, 395, 396, 398, 401, 403, 404, 405, 409, 415], "next": [4, 8, 15, 250, 251, 361, 385, 386, 393, 396, 398, 400, 402, 403, 404, 405], "fast": [4, 223, 343, 374, 378], "enough": [4, 373, 390, 401, 416], "stop": [4, 217, 223, 255, 373, 393, 416], "some": [4, 17, 146, 160, 251, 374, 381, 382, 383, 384, 385, 388, 389, 390, 393, 396, 397, 401, 405, 416], "point": [4, 207, 245, 250, 251, 361, 385, 396, 397, 401, 404, 416], "rather": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 385, 396], "than": [4, 225, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 383, 384, 385, 393, 396, 401, 403, 408, 409, 416], "let": [4, 383, 388, 398, 399], "result": [4, 17, 215, 229, 239, 245, 343, 361, 362, 371, 374, 376, 381, 384, 385, 391, 393, 396, 397, 398, 401, 402, 403, 404, 405, 407, 411, 415, 416], "pile": 4, "memori": [4, 245, 388, 390, 396, 397, 398, 399, 400, 402, 403, 404, 405, 413, 416], "specif": [4, 17, 231, 235, 351, 353, 361, 371, 375, 379, 381, 384, 385, 393, 395, 400, 401, 402, 408, 409, 412, 413, 414, 416], "max": [4, 34, 223, 225, 245, 374, 390, 391, 396, 398, 400, 405, 407, 416], "output": [4, 15, 17, 22, 34, 205, 206, 223, 238, 245, 250, 251, 352, 361, 373, 375, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 400, 401, 402, 403, 405, 409, 414], "valu": [4, 17, 22, 205, 206, 213, 222, 223, 238, 242, 245, 250, 251, 352, 373, 374, 375, 381, 382, 383, 384, 385, 393, 396, 397, 398, 399, 401, 403, 404, 409, 412, 413, 415, 416], "buffer": [4, 401, 402, 404], "per": [4, 215, 383, 391, 396, 399, 407, 409, 410, 415], "thread": [4, 391], "nth_multifile_path": 4, "path": [4, 17, 215, 223, 229, 231, 235, 237, 238, 242, 245, 254, 255, 373, 374, 378, 382, 383, 384, 386, 390, 393, 406, 408, 409], "pathlib": 4, "n": [4, 17, 226, 250, 251, 352, 373, 375, 384, 385, 387, 391, 392, 393, 395, 398, 399, 400, 401, 404, 405, 407, 409], "none": [4, 8, 15, 17, 22, 55, 56, 83, 90, 205, 206, 215, 222, 223, 224, 225, 226, 229, 235, 238, 239, 240, 243, 245, 248, 250, 251, 252, 253, 254, 352, 361, 373, 375, 376, 377, 383, 412, 413, 415, 416], "given": [4, 223, 231, 250, 251, 373, 389, 397, 400, 403, 405, 415], "belong": [4, 17, 381, 416], "multi": [4, 217, 382, 383, 384], "bin": [4, 8, 15, 238, 382, 383, 384, 386, 392, 393, 406, 408], "1": [4, 17, 222, 223, 224, 243, 245, 250, 251, 253, 255, 352, 361, 362, 371, 373, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 412, 414, 415, 416], "nth": 4, "find_multifile_path": 4, "whole": [4, 17, 220, 229, 361, 376, 383, 384, 400, 401, 402, 404, 406], "load_some_model": 4, "modelplu": 4, "load": [4, 20, 226, 229, 239, 240, 245, 250, 251, 374, 381, 382, 383, 384, 386, 390, 393, 395, 397, 398, 399, 400, 405], "format": [4, 21, 90, 215, 245, 361, 383, 392, 393, 403, 404, 407, 408, 416], "neural_engin": [7, 374, 378, 380, 381, 382, 383, 384, 386, 389, 390, 394, 409], "compil": [7, 207, 345, 378, 380, 381, 382, 384, 385, 387, 389, 390, 425], "extractor": [7, 17, 18, 207, 384, 386, 389], "graph": [7, 8, 10, 12, 13, 14, 17, 18, 19, 22, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 345, 374, 375, 381, 386, 389, 390, 400, 403, 405, 425], "loader": [7, 8, 18, 207, 384, 386, 389], "op": [7, 8, 12, 13, 14, 17, 18, 22, 122, 146, 157, 205, 206, 207, 223, 245, 352, 383, 388, 389, 390, 396, 397, 409, 410, 416], "sub_graph": [7, 18, 207, 381, 384], "graph_util": [7, 18, 207, 381, 385, 389], "logger": [7, 18, 207, 406], "onnx_util": [7, 18, 207], "optim": [7, 18, 207, 343, 359, 361, 362, 374, 375, 376, 377, 378, 379, 382, 385, 386, 387, 390, 393, 396, 397, 398, 400, 412, 413, 414, 415, 416], "tf_util": [7, 18, 207], "torch_util": [7, 18, 207], "neural": [8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 114, 146, 177, 205, 206, 207, 231, 234, 239, 343, 361, 362, 370, 374, 375, 381, 383, 384, 385, 386, 390, 400, 408, 413, 416, 419, 426], "engin": [8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 114, 146, 177, 205, 206, 207, 229, 245, 344, 353, 361, 370, 374, 381, 383, 385, 388, 390, 396, 401, 404, 408, 419, 426], "start_pipelin": 8, "config": [8, 15, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 222, 225, 228, 229, 234, 238, 239, 240, 242, 245, 250, 251, 359, 362, 373, 374, 375, 376, 378, 382, 383, 385, 388, 396, 409, 414, 415], "pipelin": [8, 228, 229, 235, 420], "firstli": 8, "get": [8, 15, 17, 21, 22, 205, 206, 225, 226, 245, 252, 254, 257, 377, 381, 384, 385, 386, 388, 389, 393, 396, 403, 405, 410, 414, 421], "comput": [8, 17, 205, 220, 245, 250, 251, 366, 374, 378, 389, 393, 394, 395, 396, 397, 398, 401, 403, 404, 408, 414, 416, 422], "framework": [8, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 146, 223, 229, 240, 245, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 366, 375, 376, 379, 381, 382, 386, 390, 394, 414, 415, 416, 422], "contain": [8, 17, 22, 112, 113, 205, 206, 213, 242, 245, 250, 251, 255, 361, 366, 373, 375, 381, 382, 384, 385, 389, 393, 394, 396, 408, 409, 410, 415, 416, 422], "node": [8, 12, 13, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 182, 205, 206, 254, 377, 389, 391, 407], "edg": 8, "tensor": [8, 12, 13, 14, 15, 17, 18, 22, 44, 72, 146, 205, 206, 207, 222, 245, 250, 251, 352, 381, 382, 383, 385, 386, 388, 390, 403, 408, 409, 415, 416], "Then": [8, 17, 375, 385, 386, 404, 405, 409, 415, 416], "extract": [8, 10, 12, 13, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 381, 384, 386], "pack": [8, 18, 44, 207, 405], "them": [8, 12, 13, 17, 381, 382, 385, 393, 396, 399, 401, 404, 405, 416], "our": [8, 373, 377, 389, 396, 398, 399, 401, 403, 404, 405, 414], "form": [8, 17, 215, 245, 375, 383, 389, 395, 400, 404, 409], "exploit": [8, 389], "abov": [8, 17, 250, 251, 380, 381, 384, 385, 389, 393, 398, 399, 401, 402, 403, 408], "consist": [8, 372, 393], "sub": [8, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 381, 384, 385, 396, 403, 404], "see": [8, 17, 112, 113, 215, 220, 250, 251, 342, 371, 374, 381, 383, 384, 385, 386, 389, 391, 392, 393, 395, 400, 404, 406, 407, 408, 409, 411], "big": [8, 384, 385, 390], "layernorm": [8, 17, 47, 125, 381, 385, 389, 394, 409], "There": [8, 375, 381, 382, 383, 402, 406, 409, 413, 415], "differ": [8, 15, 20, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 186, 187, 188, 190, 191, 192, 203, 204, 225, 237, 361, 371, 373, 374, 375, 378, 381, 382, 384, 385, 386, 389, 393, 395, 402, 405, 412, 413, 415, 416], "flow": [8, 17, 381, 385, 393], "subgraph": [8, 17, 177, 384, 386], "final": [8, 384, 385, 386, 388, 389, 393, 398, 401, 402, 404, 412], "yaml": [8, 15, 17, 235, 237, 245, 383, 384, 386, 390, 408], "configur": [8, 100, 223, 225, 231, 235, 237, 239, 242, 243, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 352, 361, 373, 376, 377, 384, 395, 396, 400, 417], "infer": [8, 15, 20, 222, 234, 239, 245, 251, 343, 376, 378, 380, 381, 383, 384, 385, 386, 390, 392, 393, 399, 401, 402, 404, 413, 416, 423], "base": [10, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 231, 240, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 361, 373, 374, 377, 378, 379, 386, 388, 391, 398, 400, 401, 402, 403, 404, 406, 407, 414], "tensorflow": [10, 13, 23, 24, 26, 27, 28, 30, 35, 37, 42, 45, 46, 49, 50, 51, 53, 54, 57, 58, 60, 61, 64, 66, 67, 70, 81, 82, 86, 205, 223, 229, 239, 254, 359, 378, 379, 382, 389, 416], "onnx": [10, 12, 22, 206, 215, 223, 245, 374, 378, 381, 383, 384, 403, 414, 420, 425], "pleas": [10, 12, 13, 242, 255, 257, 342, 361, 362, 373, 375, 376, 378, 381, 385, 388, 392, 393, 394, 395, 396, 397, 401, 404, 409, 415, 416], "refer": [10, 12, 13, 220, 242, 255, 257, 361, 373, 374, 375, 378, 385, 388, 392, 393, 399, 401, 404, 409, 411, 415, 416], "onnx_extractor": [10, 11, 18, 207], "py": [10, 373, 381, 383, 387, 392, 408], "tf_extractor": [10, 11, 18, 207], "more": [10, 12, 13, 17, 112, 113, 342, 375, 378, 380, 381, 383, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 399, 401, 402, 403, 405, 407, 408, 409], "detail": [10, 17, 361, 366, 368, 371, 372, 374, 375, 376, 378, 380, 381, 383, 384, 385, 388, 389, 391, 392, 393, 394, 399, 406, 407, 409, 415, 416, 422, 424], "A": [10, 17, 225, 235, 240, 242, 245, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 382, 389, 391, 393, 395, 398, 399, 405, 407, 409], "super": [10, 381, 384], "oper": [10, 12, 13, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 146, 160, 205, 206, 351, 353, 366, 376, 380, 381, 382, 384, 386, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 409, 416, 422, 425], "do": [10, 223, 226, 238, 239, 242, 245, 371, 377, 381, 382, 384, 385, 389, 390, 393, 396, 398, 401, 415, 416], "addit": [10, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 374, 376, 383, 398, 402, 410, 417], "attribut": [10, 12, 13, 14, 17, 56, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 361, 383, 385, 388, 397], "without": [10, 238, 245, 371, 375, 381, 382, 393, 402, 405, 406, 409], "modifi": [10, 15, 17, 122, 146, 220, 242, 251, 382, 383, 386, 392, 393], "topologi": 10, "modul": [11, 16, 18, 19, 44, 114, 207, 236, 361, 386, 387], "torch_extractor": [11, 18, 207], "all": [12, 13, 14, 15, 17, 18, 44, 56, 146, 149, 160, 207, 213, 242, 245, 250, 251, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 361, 371, 374, 375, 380, 381, 382, 383, 385, 389, 391, 392, 393, 396, 397, 398, 399, 401, 404, 407, 412, 415, 416], "input": [12, 13, 15, 17, 22, 34, 112, 113, 146, 205, 206, 222, 239, 240, 245, 250, 251, 352, 361, 362, 373, 374, 375, 377, 378, 382, 383, 384, 385, 388, 390, 400, 402, 403, 405, 409, 414], "compos": [12, 13, 14, 229, 245, 361, 381, 386, 404], "order": [12, 13, 15, 17, 229, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 373, 381, 383, 389, 395, 401, 402, 404, 405], "origin": [12, 13, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 220, 222, 242, 255, 373, 375, 381, 386, 392, 393, 402, 403, 416], "calcul": [12, 13, 112, 113, 226, 242, 361, 383, 389, 395, 397, 398, 401, 402, 405, 409, 416], "notic": [12, 13, 386, 396, 403, 404, 411], "For": [12, 13, 17, 22, 146, 342, 361, 371, 374, 378, 381, 384, 385, 389, 390, 391, 393, 394, 396, 399, 403, 404, 405, 406, 407, 414], "relat": [12, 13, 245, 368, 375, 381, 385, 389, 390, 399, 404, 415, 416, 424], "deatil": [12, 13], "api": [12, 13, 15, 255, 343, 372, 374, 382, 384, 385, 386, 388, 389, 396, 397, 414, 421], "onnxextractor": 12, "decor": [12, 13, 14, 22, 56, 149, 205, 206], "graph_def": [12, 13, 14, 205], "ha": [12, 13, 14, 17, 255, 361, 372, 373, 374, 381, 384, 385, 387, 388, 389, 392, 393, 395, 397, 401, 409, 416], "input_tensor": [12, 13, 14, 17, 22, 56, 205, 206, 250, 251, 381, 385], "output_tensor": [12, 13, 14, 17, 22, 56, 205, 206, 381, 385], "record": [12, 13, 14, 220, 361, 383, 384], "dest": [12, 13, 14, 17, 22, 205], "paramet": [12, 13, 14, 17, 22, 56, 149, 205, 206, 215, 222, 223, 225, 229, 231, 234, 235, 237, 238, 239, 240, 243, 245, 250, 251, 254, 255, 343, 352, 361, 362, 374, 375, 383, 389, 393, 412, 415], "onnxmodel": [12, 22], "type": [12, 13, 14, 17, 22, 56, 149, 205, 206, 215, 222, 223, 225, 231, 234, 239, 240, 245, 250, 254, 255, 257, 353, 361, 372, 373, 374, 375, 376, 377, 382, 383, 384, 386, 389, 392, 393, 394, 396, 397, 402, 408, 409, 412, 413, 416], "tensorflowextractor": 13, "tensorflowmodel": [13, 205], "torch": [14, 89, 112, 113, 206, 215, 222, 223, 234, 245, 250, 251, 362, 374, 414], "torchextractor": 14, "torchscript": [14, 76, 206, 222, 223, 245, 362], "defint": [15, 90], "add_config_item": 15, "kei": [15, 17, 22, 205, 242, 245, 250, 251, 343, 374, 383, 384, 385, 393, 396, 397, 399], "val": [15, 17], "add": [15, 17, 34, 223, 226, 242, 375, 382, 383, 384, 385, 389, 392, 393, 394, 396, 397, 404, 409, 410, 425], "pair": [15, 223, 250, 382, 397, 405], "framework_modeling_config": 15, "inquire_config_item": 15, "insert_nod": 15, "index": [15, 250, 251, 254, 352, 385, 388, 389], "insert": [15, 17, 386, 388, 389, 393, 396, 397, 416], "ir": [15, 381, 382, 383, 384, 390, 406, 408, 425], "remove_nod": 15, "node_nam": [15, 17, 22, 205, 381, 385], "remov": [15, 17, 157, 160, 251, 371, 372, 397, 415], "get_node_id": [15, 381], "id": [15, 17, 231, 251, 254, 393, 397, 398], "accord": [15, 381, 384, 393, 405], "get_node_by_nam": 15, "rename_nod": 15, "old_nam": 15, "new_nam": 15, "change_node_input_tensor": 15, "mode": [15, 222, 224, 243, 244, 361, 383, 387, 402, 404, 409, 410, 416], "change_node_output_tensor": 15, "get_pre_node_nam": 15, "previou": [15, 229, 245, 374, 382, 401, 417], "get_next_node_nam": 15, "get_tensor_idx": 15, "tensor_nam": [15, 22, 205], "from_output": 15, "modify_node_connect": 15, "dump_tensor": 15, "tensor_list": 15, "dump": [15, 416], "engine_init": 15, "net_info": 15, "weight_data": 15, "b": [15, 17, 22, 250, 381, 389, 392, 393, 395, 398, 399, 400, 404, 405, 409], "refresh_model": 15, "pybind": 15, "executor": [15, 381, 382, 383], "input_data": [15, 17, 18, 114, 207, 382], "graph_init": [15, 382, 384], "load_weight": 15, "fals": [15, 215, 223, 224, 226, 231, 245, 250, 251, 352, 361, 362, 375, 378, 381, 384, 396, 397, 409, 412], "initi": [15, 17, 22, 25, 29, 47, 56, 77, 223, 235, 245, 250, 251, 352, 361, 392, 393, 396, 397, 401, 414, 415], "exampl": [15, 17, 146, 209, 215, 223, 250, 251, 255, 343, 344, 365, 371, 373, 374, 375, 378, 381, 382, 384, 385, 387, 388, 389, 390, 393, 394, 396, 398, 412, 415, 416, 421], "newgraph": 15, "conf": [15, 223, 382, 383, 384, 388, 408], "input_0": [15, 382, 384], "input_1": [15, 382, 384], "input_2": [15, 382, 384], "save": [15, 215, 226, 238, 245, 373, 374, 381, 382, 383, 386, 390, 399, 403, 405, 416], "output_dir": [15, 215, 238, 245, 361, 373, 386, 387], "ymal": 15, "graph_dispatch": [15, 384], "tune": [15, 209, 223, 245, 343, 373, 374, 375, 411, 412, 413, 415, 425], "inputs_shap": [15, 384], "dispatch": 15, "get_sparse_nodes_nam": 15, "threshold": [15, 393, 409], "0": [15, 17, 205, 215, 223, 224, 226, 243, 248, 250, 251, 253, 254, 255, 349, 350, 352, 361, 362, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416], "7": [15, 17, 352, 361, 374, 376, 379, 380, 381, 385, 387, 389, 391, 399, 407, 409, 412, 416], "sparsiti": [15, 223, 242, 391, 409, 415], "spars": [15, 343, 352, 374, 384, 394, 395, 404, 409, 423], "transpose_mode_int8": 15, "node_name_list": 15, "transpos": [15, 18, 44, 69, 207, 250, 251, 383, 384, 394, 395, 399, 401, 402, 405, 409, 423], "innerproduct": [15, 34, 122, 383, 384, 394], "reorder": [15, 18, 44, 207, 401, 402], "util": [17, 22, 205, 206, 223, 225, 228, 256, 373, 381, 389, 392, 393, 395, 402, 405, 409], "names_from_input": 17, "static": [17, 252, 349, 352, 383, 386, 396, 399, 401, 414], "valid": [17, 223, 239, 245, 362, 372, 373, 375, 378, 389, 411, 417, 424], "field": [17, 223, 373, 396, 397, 416], "tupl": [17, 225, 240, 250, 251], "nodedef": [17, 205], "also": [17, 372, 374, 381, 382, 383, 385, 386, 388, 389, 390, 392, 393, 395, 396, 397, 398, 401, 404, 405, 406, 413, 416], "get_data_dtyp": 17, "const": [17, 22, 205, 349, 350, 351, 352, 388, 394, 396, 397, 398, 399], "dtype": [17, 22, 83, 205, 206, 245, 374, 377, 382, 383, 384, 388], "numpi": [17, 22, 374, 382], "dtypes_dict": 17, "autocast_init": 17, "quant": [17, 122, 223, 394, 409, 416, 423], "info": [17, 21, 22, 112, 113, 205, 206, 361, 374, 381, 406], "set_autocast": 17, "get_autocast_info": 17, "quant_info_init": 17, "insert_quant_info": 17, "get_quant_info": 17, "environ_info_init": 17, "environ": [17, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 382, 409, 410], "insert_environ_info": 17, "remove_environ_info_item": 17, "item": [17, 362, 374, 378], "get_environ_info": 17, "search_straight_pattern": [17, 389], "input_pattern": [17, 389], "search": [17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 226, 229, 235, 245, 361, 376, 385], "user": [17, 215, 242, 250, 251, 255, 343, 344, 361, 362, 365, 368, 374, 377, 381, 383, 385, 387, 390, 393, 401, 403, 406, 409, 413, 414, 421, 424], "pattern": [17, 18, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 213, 223, 350, 386, 395, 398, 408, 415, 425], "intern": [17, 385, 393, 401], "grpah": [17, 22, 205], "structur": [17, 376, 381, 382, 384, 392, 393, 400, 404, 408, 415], "attent": [17, 250, 251, 350, 361, 371, 383, 389, 403], "chain": [17, 396, 397], "straight": 17, "sequenc": [17, 209, 217, 225, 250, 251, 374, 378, 381, 385, 389, 393, 400, 409], "It": [17, 109, 231, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 375, 381, 383, 384, 385, 388, 389, 390, 393, 400, 401, 403, 404, 409], "otherwis": [17, 215, 371, 381, 384, 401, 409], "op_typ": [17, 22, 56, 205, 206, 381, 384, 385, 397], "element": [17, 242, 245, 381, 389, 394, 398, 400, 403, 405, 409, 423], "could": [17, 242, 350, 371, 381, 382, 383, 385, 386, 389, 399, 408, 409, 415, 416], "mandatori": 17, "while": [17, 382, 385, 389, 393, 398, 401, 404, 409, 416], "stand": [17, 381], "mybe": 17, "mul": [17, 381, 385, 389, 396], "addv2": [17, 34, 389], "equal": [17, 245, 385, 393, 395, 396], "below": [17, 223, 343, 361, 372, 373, 374, 375, 381, 382, 384, 386, 389, 393, 395, 400, 402, 403, 404, 405, 413], "length": [17, 223, 225, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 374, 385, 389, 393, 396, 409, 416], "match": [17, 213, 361, 375, 384, 385, 389, 400, 403], "24": [17, 361, 389, 391, 399, 407], "layer": [17, 223, 225, 242, 250, 251, 361, 383, 389, 393, 396, 400, 403, 415, 423], "each": [17, 112, 113, 215, 223, 229, 245, 250, 251, 255, 361, 373, 383, 384, 385, 393, 395, 398, 400, 401, 402, 403, 404, 405, 408, 409, 410, 415], "still": [17, 242, 343, 389, 398, 416], "last": [17, 220, 223, 245, 250, 251, 385, 389, 390, 393, 395, 400, 401, 403, 416], "former": [17, 389], "here": [17, 235, 245, 368, 374, 380, 381, 384, 385, 386, 388, 389, 393, 397, 405, 416, 417, 424], "search_pattern": [17, 389], "pattern_list": 17, "complet": [17, 381, 391, 393, 398, 401, 404, 407], "its": [17, 146, 229, 245, 361, 371, 375, 381, 382, 385, 386, 389, 393, 400, 401, 402, 405, 408, 409, 411], "op_idx": 17, "howev": [17, 242, 384, 385, 389, 390, 393, 395, 399, 402, 405], "due": [17, 250, 385, 389, 393, 395, 416], "few": [17, 215, 400], "complic": [17, 381, 389], "thei": [17, 220, 231, 371, 375, 380, 389, 390, 393, 395, 396, 397, 399, 403, 409], "therefor": [17, 377, 395, 400, 403, 405, 416], "fist": 17, "repres": [17, 242, 371, 383, 385, 389, 393, 395, 397, 398, 401, 416], "main": [17, 217, 242, 245, 250, 251, 255, 385, 393, 402, 409], "top": [17, 343, 373, 374, 400], "down": [17, 393], "head": [17, 250, 251, 389, 397, 403, 404], "tail": [17, 389, 406], "left": [17, 250, 251, 399, 403, 405], "bert_large_squad": 17, "pb": [17, 378], "squareddiffer": [17, 34, 389], "4": [17, 223, 243, 245, 250, 251, 352, 361, 362, 371, 373, 375, 376, 379, 381, 383, 384, 385, 388, 389, 390, 391, 392, 393, 399, 400, 401, 402, 405, 406, 409, 415], "rsqrt": [17, 34, 389], "5": [17, 95, 96, 97, 98, 178, 179, 180, 183, 184, 185, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 223, 224, 352, 361, 362, 373, 375, 381, 382, 383, 385, 388, 389, 391, 393, 399, 407, 409], "9": [17, 223, 255, 361, 373, 374, 378, 379, 381, 389, 391, 393, 399, 407, 409, 415], "6": [17, 352, 361, 375, 376, 380, 381, 385, 389, 391, 397, 399, 406, 407, 416], "same": [17, 251, 375, 377, 381, 382, 383, 385, 386, 389, 392, 393, 395, 398, 401, 402, 405, 408, 409, 410], "follow": [17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 217, 250, 251, 345, 348, 353, 359, 362, 371, 372, 373, 374, 375, 379, 381, 383, 384, 385, 386, 388, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 416], "frozen": [17, 382, 386], "had": [17, 381], "better": [17, 109, 229, 239, 245, 361, 381, 382, 383, 384, 393, 395, 401, 402, 403, 404, 408, 412, 413, 416], "identifi": [17, 231, 398], "own": [17, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 381, 385, 386, 392, 393, 396, 402, 413], "casual": 17, "tf": [17, 239, 250, 361], "start": [17, 250, 251, 383, 389, 410, 421], "mostli": [17, 389], "longest": [17, 389], "sometim": [17, 385, 416], "connect": [17, 393, 415], "But": [17, 382, 395, 414], "don": [17, 223, 250, 251, 388, 390, 393, 396], "least": [17, 213, 242, 393, 402], "exist": [17, 231, 255, 361, 378, 381, 414], "relationship": 17, "sever": [17, 373, 381, 386, 389, 390, 393, 395, 409, 416], "split": [17, 18, 44, 207, 362, 373, 384, 395, 399, 401, 402], "representtaion": 17, "idx": [17, 397], "outsid": [17, 250, 251, 385, 389], "give": [17, 381, 385, 395], "just": [17, 251, 374, 381, 382, 383, 384, 385, 386, 389, 393, 397, 405, 408, 412], "empti": [17, 34, 385, 389, 397, 410], "algorithm": [17, 56, 149, 223, 235, 352, 361, 373, 384, 385, 388, 389, 393, 395, 396, 402, 409, 415, 416], "kind": [17, 100, 351, 388, 402, 409], "beaus": 17, "make": [17, 56, 146, 245, 362, 371, 372, 380, 381, 382, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 409], "sure": [17, 146, 362, 381, 393, 398, 409], "check": [17, 22, 122, 223, 245, 368, 372, 374, 381, 384, 385, 389, 393, 397, 424], "symmetr": [17, 389, 401, 409, 416], "consecut": [17, 399, 405], "y": [17, 112, 113, 397], "o": [17, 255, 361, 373, 374, 379, 391, 397, 402, 407], "shape": [17, 18, 44, 83, 207, 250, 251, 352, 361, 374, 382, 383, 384, 388, 390, 395, 401, 403, 409], "df": [17, 389], "duplic": 17, "would": [17, 381, 385, 386, 389, 390, 393, 406], "perform": [17, 223, 229, 235, 245, 250, 251, 252, 361, 362, 366, 374, 375, 377, 378, 382, 383, 384, 387, 392, 395, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 422], "befor": [17, 223, 242, 245, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 372, 375, 377, 381, 384, 385, 386, 389, 393, 396, 397, 398, 399, 401, 402, 404, 409, 416], "splice": 17, "de": 17, "total": [17, 223, 225, 250, 361, 362, 373, 385, 389, 393, 398, 405, 406], "step": [17, 223, 242, 245, 380, 381, 383, 385, 386, 387, 388, 389, 390, 396, 401, 403, 404, 409], "c": [17, 207, 353, 374, 379, 380, 381, 382, 384, 389, 391, 392, 393, 398, 400, 407, 409], "d": [17, 361, 373, 375, 395, 403], "f": [17, 352, 375, 388, 406, 416], "c1": 17, "d1": [17, 409], "c2": 17, "d2": 17, "c3": [17, 406], "d3": [17, 406], "now": [17, 255, 380, 381, 382, 384, 385, 386, 392, 396, 397, 404, 409, 414], "set": [17, 56, 215, 217, 224, 225, 238, 239, 245, 250, 251, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 371, 373, 374, 382, 384, 385, 386, 388, 389, 390, 392, 393, 395, 396, 397, 400, 409], "part": [17, 215, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 385, 388, 389, 390, 393, 404, 405], "As": [17, 375, 381, 383, 385, 386, 399, 403, 405], "appli": [17, 223, 371, 376, 378, 392, 393, 396, 397, 401, 402, 403, 405, 409, 415, 416], "everi": [17, 242, 381, 395, 409], "right": [17, 250, 251, 371, 393, 399, 403, 405, 414], "construct_nod": 17, "attr": [17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 351, 381, 382, 396, 397], "construct": [17, 56, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 396, 397], "new_nod": 17, "insert_pattern": 17, "target_node_nam": 17, "replac": [17, 251, 374, 375, 378, 381, 385, 415, 416], "ccontain": 17, "insid": [17, 385, 388, 400, 402], "been": [17, 250, 251, 372, 375, 397, 401, 414], "pattern_map": [17, 381, 385], "pattern_nam": 17, "mapping_dict": 17, "mapping_config": 17, "first": [17, 141, 223, 245, 373, 380, 381, 384, 385, 387, 389, 390, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 416], "second": [17, 223, 250, 251, 362, 380, 385, 387, 388, 389, 399, 400, 403, 405, 406, 409, 416], "third": [17, 385, 400, 405, 411], "reshap": [17, 18, 44, 61, 182, 207, 381, 382, 383, 388], "paddingsequ": [17, 59, 148, 382], "search_mod": [17, 381, 385], "embed": [17, 250, 251, 382, 385, 389, 396], "m": [17, 352, 374, 375, 376, 383, 384, 391, 392, 393, 395, 398, 399, 400, 401, 402, 404, 405, 407, 409], "after": [17, 109, 146, 160, 182, 242, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 377, 380, 383, 384, 385, 386, 388, 389, 393, 395, 397, 402, 404, 405, 408, 409, 410, 416], "fusion": [17, 100, 146, 160, 388, 389, 396, 397, 402, 425], "about": [17, 371, 374, 381, 385, 388, 391, 393, 397, 405, 407], "in_pattern": 17, "input_id": [17, 250, 251, 378, 382, 390], "segment_id": [17, 378, 382], "input_mask": [17, 378, 382], "out_pattern": 17, "th": [17, 385], "berfor": 17, "match_result": 17, "_n": 17, "reshape_0": [17, 385], "dict": [17, 22, 205, 206, 209, 215, 223, 235, 240, 242, 243, 245, 250, 251, 255, 373, 381, 382, 415], "where": [17, 18, 44, 207, 250, 251, 361, 375, 385, 393, 395, 397, 400, 401, 403, 405, 409, 410], "go": [17, 393, 398], "mayb": [17, 384, 405], "happen": [17, 383, 405], "sepcial": 17, "biasadd": [17, 28, 385, 389], "bia": [17, 22, 223, 352, 383, 409], "unfix": 17, "locat": [17, 83, 381, 382, 385, 389, 405, 409, 417], "onli": [17, 215, 220, 223, 245, 250, 251, 255, 343, 362, 379, 382, 384, 385, 386, 388, 390, 392, 393, 394, 396, 397, 398, 401, 403, 404, 405, 409, 412, 414], "write": [17, 373, 381, 389, 401, 402, 404], "note": [17, 242, 362, 376, 379, 381, 382, 383, 384, 385, 387, 388, 389, 393, 396, 397, 403, 404, 405, 409, 416], "That": [17, 404, 405], "too": [17, 381, 395, 396, 401], "decompos": [17, 381], "list2str": [17, 381], "src_perm": 17, "emit": [17, 385], "ret": [17, 389, 406], "str2list": 17, "src_str": 17, "pattern_mapping_conf_valid": 17, "conf_dict": 17, "lazyimport": 17, "module_nam": 17, "lazi": 17, "till": 17, "later": [17, 381, 389], "get_model_fwk_nam": 17, "avail": [17, 345, 348, 353, 359, 374, 379, 382, 393, 400], "fwk": 17, "na": [17, 223, 228, 245, 373, 394], "set_environ_var": 17, "env": [17, 387], "var": [17, 112, 113, 352], "kv": 17, "del_environ_var": 17, "delet": [17, 231, 415], "assert": [18, 44, 207, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361], "baddbmm": [18, 44, 207], "batch_matmul": [18, 44, 207], "batch_matmul_v2": [18, 44, 207], "bias_add": [18, 22, 44, 207], "cast": [18, 44, 207], "concat": [18, 44, 207, 381], "conv": [18, 44, 207, 223, 383, 384, 397], "co": [18, 44, 89, 207, 217, 231, 374], "empty_op": [18, 44, 207, 381], "expand_dim": [18, 44, 207], "fused_batch_matmul_v2": [18, 44, 207], "fused_batch_norm_v3": [18, 44, 207], "fused_gemm": [18, 44, 207], "fused_matmul": [18, 44, 207], "gather": [18, 44, 207, 245, 250, 251, 350, 381, 396], "gather_el": [18, 44, 207, 381], "gelu": [18, 44, 114, 207, 381, 388, 394, 397, 409], "gemm": [18, 44, 207, 223, 377, 395, 398, 401, 404, 409, 423], "iterator_get_next": [18, 44, 207], "iterator_v2": [18, 44, 207, 381], "layer_norm": [18, 44, 114, 207, 381], "log_softmax": [18, 44, 207], "map_and_batch_dataset": [18, 44, 207, 381], "matmul": [18, 22, 34, 44, 122, 207, 223, 377, 383, 385, 386, 389, 394, 404, 409, 423], "mkl_layer_norm": [18, 44, 207], "model_dataset": [18, 44, 207], "one_hot": [18, 44, 207], "onnx_input": [18, 44, 207], "optimize_dataset": [18, 44, 207, 381], "padding_sequ": [18, 44, 114, 207, 382], "placehold": [18, 44, 207], "pos_emb": [18, 44, 207], "pow": [18, 44, 207, 381, 385], "quantize_linear": [18, 44, 207, 381], "quantize_v2": [18, 44, 207], "quantized_fused_matmul_and_dequant": [18, 44, 207], "quantized_matmul_with_bias_and_dequant": [18, 44, 207], "reduce_mean": [18, 44, 207, 381], "reduce_sum": [18, 44, 207], "resiz": [18, 44, 207], "rsub": [18, 44, 207], "scatter_el": [18, 44, 207], "sin": [18, 44, 207], "size": [18, 44, 207, 215, 222, 223, 245, 250, 251, 361, 371, 374, 378, 382, 384, 390, 395, 398, 400, 402, 403, 404, 409, 416], "slice_position_id": [18, 44, 207], "softmax": [18, 44, 207, 250, 350, 361, 375, 394, 403, 404], "squeez": [18, 44, 207], "strided_slic": [18, 44, 207], "top_k": [18, 44, 207, 255, 393], "unpack": [18, 44, 207, 245, 381], "unsqueez": [18, 44, 207, 381], "view": [18, 44, 207, 372, 383, 395, 417], "innerproductreshapefus": [18, 107, 114, 207], "add_cls_token": [18, 114, 207], "add_embed": [18, 114, 207], "arangewithreciproc": [18, 114, 207], "attentionblock_attentionmaskaddreshap": [18, 114, 207], "attentionblock_constantofshapewithmul": [18, 114, 207], "attentionblock_qkvprereshap": [18, 114, 207], "attentionblock_qkvreshap": [18, 114, 207], "attentionblock_weightreshapeto4d": [18, 114, 207], "attention_mask_length_adaptive_keep_indic": [18, 114, 207], "attention_output_layer_norm_length_adaptive_keep_indic": [18, 114, 207], "attention_reshap": [18, 114, 207], "cast_to": [18, 114, 207], "collect_quant_info": [18, 114, 207], "conv_reshap": [18, 114, 207], "decoder_attn_reshap": [18, 114, 207], "einsumwitharang": [18, 114, 207], "embeddingbag": [18, 34, 114, 207], "embeddings_to_2d_before_inner_product": [18, 114, 207], "generate_sequ": [18, 114, 207], "innerproductwithbiasgelu": [18, 114, 207], "innerproductwithslic": [18, 114, 207], "innerproductwithswish": [18, 114, 207], "input_fil": [18, 114, 207], "insert_bf16_nod": [18, 114, 207], "insert_quant_nod": [18, 114, 207], "int8_bf16_mixed_precision_check": [18, 114, 207], "interact_featur": [18, 114, 207], "last_layer_shap": [18, 114, 207], "layer_norm_with_reduce_mean": [18, 114, 207, 381], "layer_norm_with_transpos": [18, 114, 207], "llama_embed": [18, 114, 207], "llama_matmulwithtranspos": [18, 114, 207], "llama_postprocess": [18, 114, 207], "llama_rotary_pos_emb": [18, 114, 207], "lower_all_tupl": [18, 114, 207], "matmul_with_bia": [18, 114, 207], "matmul_with_bias_add": [18, 114, 207], "matmul_with_bias_gelu": [18, 114, 207], "matmul_with_bias_relu": [18, 114, 207], "matmul_with_bias_sigmoid": [18, 114, 207], "matmul_with_bias_tanh": [18, 114, 207], "matmul_with_bias_unsqueez": [18, 114, 207], "matmul_with_transpos": [18, 114, 207], "matmul_with_transpose_scale_add": [18, 114, 207], "merged_embeddingbag": [18, 114, 207], "neox_reorder_chang": [18, 114, 207], "neox_rotary_pos_emb": [18, 114, 207], "operator_adaptor": [18, 114, 207], "output_data": [18, 114, 207, 382], "position_embed": [18, 114, 207], "position_embeddings_v1": [18, 114, 207], "qkv_merg": [18, 114, 207], "qkv_reshap": [18, 114, 207], "quant_gather_to_bf16": [18, 114, 207], "quantize_fus": [18, 114, 207], "quantized_graph_dtype_refactor": [18, 114, 207], "remove_constant_op": [18, 114, 207], "remove_last_view": [18, 114, 207], "remove_rang": [18, 114, 207], "remove_unused_oper": [18, 114, 207], "remove_zero": [18, 114, 207], "removeslic": [18, 114, 207], "reshape_after_restore_hidden_st": [18, 114, 207], "reshape_before_and_after_attention_out_layer_norm_gather_el": [18, 114, 207], "reshape_before_restore_hidden_st": [18, 114, 207], "reshape_fus": [18, 114, 207], "restore_hidden_states_in_length_adaptive_update_indic": [18, 114, 207], "rms_norm": [18, 114, 207], "rotary_pos_emb": [18, 114, 207], "slicemask": [18, 114, 207], "stablediffusion_explicitnhwctranspos": [18, 114, 207], "stablediffusion_mhareshap": [18, 114, 207], "stablediffusion_reshapefus": [18, 114, 207], "stablediffusion_bf16convert": [18, 114, 207], "start_end_logit": [18, 114, 207], "subgraph_match": [18, 114, 207, 384], "textencdoer_word_embed": [18, 114, 207], "textencoder_attentionmaskaddreshap": [18, 114, 207], "textencoder_attentionreshap": [18, 114, 207], "textencoder_kvreshap": [18, 114, 207], "textencoder_mulreshap": [18, 114, 207], "textencoder_qreshap": [18, 114, 207], "textencoder_softmaxreshap": [18, 114, 207], "textencoder_causal_attention_mask": [18, 114, 207], "token_type_embed": [18, 114, 207, 381], "token_type_embeddings_v1": [18, 114, 207, 381], "torch_embed": [18, 114, 207], "torch_ip_insert_bia": [18, 114, 207], "torch_unpack_baddbmm": [18, 114, 207], "torchinsertbf16nod": [18, 114, 154, 207], "torchpaddingsqu": [18, 114, 207], "transformer2dmodel_attentionmaskaddreshap": [18, 114, 207], "transformer2dmodel_constantofshapewithmul": [18, 114, 207], "transformer2dmodel_ffnslic": [18, 114, 207], "transformer2dmodel_ffnslice_1": [18, 114, 207], "transformer2dmodel_qkvprereshap": [18, 114, 207], "transformer2dmodel_qkvreshap": [18, 114, 207], "transformer2dmodel_qkvreshape4d": [18, 114, 207], "transformer2dmodel_encoderhiddenstatesreshap": [18, 114, 207], "transformer2dmodel_getsamplebatch": [18, 114, 207], "transformer2dmodel_sampleslic": [18, 114, 207], "transpose_batch_matmul": [18, 114, 207, 381], "word_embed": [18, 114, 207, 382], "frontend": [20, 400], "get_logg": 21, "log": [21, 374, 382, 388], "level": [21, 251, 343, 371, 374, 384, 397, 400, 408], "msg": 21, "arg": [21, 90, 213, 217, 231, 239, 242, 245, 255, 350, 361, 383, 388], "kwarg": [21, 90, 217, 223, 231, 242, 245, 250, 251], "debug": [21, 382, 390, 393], "fatal": 21, "warn": 21, "get_children": 22, "input_name_to_nod": 22, "get_node_children_nam": 22, "nodeproto": [22, 206], "get_initializer_children_nam": 22, "graph_node_names_detail": [22, 205, 206], "pars": [22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 89, 205, 382, 388], "graph_nodes_dict": [22, 205], "Be": [22, 205], "class": [22, 205, 215, 232, 240, 352, 353, 362, 373, 375, 381, 388, 396, 397], "cerat": 22, "output_nam": [22, 382], "ouput": 22, "param": [22, 205, 245, 396, 397], "node_names_detail": [22, 205], "is_supported_onnx_graph": [22, 287], "is_supported_onnx_nod": 22, "change_num_nam": 22, "number": [22, 215, 223, 225, 226, 251, 255, 362, 373, 384, 385, 389, 392, 395, 398, 404, 405, 409, 410, 416], "bias_to_int32": 22, "bias_nod": 22, "a_scal": 22, "b_scale": 22, "int8": [22, 223, 240, 245, 374, 376, 383, 384, 386, 392, 394, 397, 402, 403, 409, 416, 425], "int32": [22, 374, 382], "matric": [22, 398, 403, 404], "arrai": [22, 382], "fp32_bia": 22, "int8_bia": 22, "int8_bias_zero_point": 22, "int8_bias_scal": 22, "int32_bia": 22, "onnx_extract_oper": 22, "framework_model": [22, 55, 56, 205], "nodes_dict": [22, 55, 56, 205, 206], "engine_graph": [22, 55, 56, 205, 206], "tf_dtype": [22, 205, 206], "set_attr": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 381], "regist": [25, 34, 47, 56, 59, 62, 63, 72, 74, 78, 88, 149, 395, 396, 397, 398, 400, 401, 402, 403, 405, 425], "tile": [25, 34, 72, 395, 399, 401, 403, 404, 405, 409], "batchmatmul": 26, "batchmatmulv2": 27, "binaryop": [29, 396], "onnxruntim": [31, 32, 33, 39, 41, 62, 63, 68, 69, 71, 72, 73, 75, 80, 84, 85, 87, 88, 374, 377, 379, 381, 387], "multiheadattenion": 34, "binaryadd": [34, 396], "constantofshap": 34, "dequantizelinear": [34, 386], "dequant": [34, 396, 397, 401, 409], "erf": [34, 388], "expand": [34, 250, 251], "fill": [34, 385, 393, 403], "flatmapdataset": 34, "ident": [34, 371, 375, 393], "makeiter": 34, "matmulwithbiasadd": [34, 134], "matmulwithbiasgelu": [34, 135], "matmulwithbiastanh": [34, 138], "matmulwithbia": [34, 133], "qlinearmatmul": [34, 386], "qlinearadd": 34, "qlinearmul": 34, "realdiv": 34, "sqrt": [34, 381, 385, 403], "squar": [34, 250, 251], "stopgradi": 34, "tanh": [34, 388, 397, 409], "tensorslicedataset": 34, "transposebatchmatmul": [34, 203, 381], "rang": [34, 223, 245, 361, 374, 381, 384, 390, 393, 409, 415, 416], "relu": [34, 397, 409], "matmulwithbiasrelu": [34, 136], "cumsum": 34, "onehot": [34, 54], "tokentypeid": 34, "positionid": 34, "loop": [34, 245, 361, 381, 396, 398, 403], "sigmoid": 34, "matmulwithbiassigmoid": [34, 137], "flatten": 34, "mergedembeddingbag": [34, 142], "convolut": [34, 375, 384], "expandindic": 34, "opani": 34, "sequencelength": [34, 391], "arang": 34, "reciproc": 34, "einsum": 34, "repeat": [34, 392, 398, 410], "stack": [34, 404], "constant": [34, 157, 245], "listconstruct": 34, "latrang": 34, "masked_fil": 34, "floor_divid": 34, "listunpack": 34, "silu": 34, "zero": [34, 242, 397, 398, 400, 401, 405, 415], "expanddim": 35, "fusedbatchnormv3": 37, "fusedgemm": 38, "fusedmatmul": 39, "gatherv2": [40, 381], "gatherel": [41, 381], "iteratorgetnext": 45, "iteratorv2": [46, 381], "logsoftmax": [48, 350], "mapandbatchdataset": [49, 381], "modeldataset": 53, "onnxinput": 55, "operator_registri": [56, 381], "operator_typ": [56, 381], "cl": [56, 149, 361], "registr": [56, 149, 381], "ordereddict": [56, 381], "optimizedataset": [57, 381], "packagepositionembed": 61, "quantizelinear": [63, 381, 386], "quantiz": [63, 223, 228, 231, 238, 239, 245, 343, 374, 377, 392, 396, 397, 401, 402, 404, 409, 412, 420, 425], "quantizev2": 64, "quantizedmatmulwithbiasanddequant": 66, "reducemean": [67, 381, 385], "reducesum": 68, "aten": 72, "self": [72, 223, 250, 251, 255, 361, 373, 381, 383], "scalar": [72, 396], "alpha": [72, 352, 402, 409], "scatterel": 73, "primconst": 76, "slicepositionid": 78, "stridedslic": 82, "source_op": 83, "dest_op": 83, "definit": [83, 397], "topk": 84, "input_shap": [90, 383, 384, 409], "weight_optim": 90, "fuse": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 386, 396, 397], "acceler": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 366, 374, 376, 377, 386, 396, 397, 401, 403, 416, 422], "strategi": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 239, 398], "addclstoken": [92, 100], "addembed": 93, "stabl": [95, 96, 97, 98, 112, 113, 178, 179, 180, 183, 184, 185, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 343, 374, 379, 390, 401], "diffusionv1": [95, 96, 97, 98, 179, 180, 183, 184, 185, 193, 194, 197, 198, 199], "attentionmasklengthadaptiveexpandindic": 100, "attentionoutputlayernormlengthadaptiveexpandindic": 101, "attentionreshap": 102, "castto": 103, "collectquantinfo": 104, "convreshap": 105, "decoderattnreshap": 106, "gatherwithadd": 109, "embeddingsto2dbeforeinnerproduct": 109, "operatoradaptor": [109, 146], "quantgathertobf16": [109, 154], "generatesequ": 111, "channel": [112, 113, 396, 400, 405, 409, 415], "separ": [112, 113, 371, 389, 405, 411], "num_group": [112, 113], "group": [112, 113, 376, 381, 389, 398, 403, 405, 415], "num_channel": [112, 113], "x": [112, 113, 226, 250, 251, 384, 397, 400, 401, 403, 404, 409, 416], "epsilon": [112, 113, 381], "gamma": [112, 113], "beta": [112, 113, 352, 402, 409], "http": [112, 113, 217, 220, 250, 255, 257, 373, 374, 379, 380, 382, 388, 411, 417], "pytorch": [112, 113, 215, 223, 226, 229, 231, 234, 238, 245, 250, 251, 253, 359, 373, 374, 377, 379, 387, 392, 408, 414, 415, 416], "org": [112, 113, 220, 250, 379], "doc": [112, 113, 217, 255, 381, 385, 396, 405], "nn": [112, 113, 222, 245, 400], "html": [112, 113, 388], "groupnorm": [113, 350], "inputdata": [118, 381], "inputfil": 119, "insertbf16nod": 120, "insertquantnod": 121, "quantizedgraphdtyperefactor": [122, 156], "int8bf16mixedprecisioncheck": 122, "inferenc": 122, "under": [122, 245, 374, 381, 382, 383, 386, 402, 409, 411], "in8": 122, "bf16": [122, 223, 245, 374, 376, 386, 394, 397, 399, 401, 404, 409], "mix": [122, 384], "precis": [122, 245, 377, 386, 413, 416, 425], "u8": [122, 386, 388, 397, 404, 409], "s8": [122, 386, 396, 397, 401, 409], "fp32": [122, 223, 245, 374, 376, 382, 383, 384, 386, 388, 392, 396, 397, 399, 400, 402, 404, 409, 414, 416], "interactfeatur": 123, "lastlayershap": 124, "layernormwithreducemean": [126, 381], "layernormwithtranspos": 127, "llamaembed": 128, "llamamatmulwithtranspos": 129, "llamapostprocess": 130, "roraryposemb": [131, 145, 169], "llamaroraryposemb": 131, "loweralltupl": 132, "matmulwithbiasunsqueez": 139, "matmulwithtranspos": [140, 141], "matmulwithtransposescaleadd": 141, "multiheadattent": 143, "bass": [143, 149, 172], "neoxreorderchang": 144, "neoxroraryposemb": 145, "sweep": 146, "receiv": [146, 231, 385, 389, 390, 393], "outputdata": [147, 381], "pattern_registri": [149, 381], "pattern_typ": [149, 381], "positionembed": 150, "positionembeddingsv1": 151, "qkvmerg": 152, "qkvreshap": 153, "qunatizefus": 155, "quantizedgraphdtypecheck": 156, "removeconstantop": 157, "removelastview": 158, "removerang": 159, "removeunusedoper": 160, "removezero": 161, "reshapeafterrestorehiddenst": 163, "reshapebeforeandafterattentionoutlayernormgatherel": 164, "reshapebeforerestorehiddenst": 165, "reshapefus": 166, "restorehiddenstatesinlengthadapt": 167, "rmsnorm": 168, "explicitnhwctransposeforconv": 171, "startendlogit": 176, "matcher": [177, 361, 386], "subgraphmatch": [177, 384], "textencoder_wordembed": 178, "textencoderv1": [178, 195, 196, 200, 201, 202], "qkv": [182, 384, 386], "textencoder_casualattentionmask": 185, "tokentypeembed": [186, 381], "tokentypeembeddingsv1": [187, 381], "torchembed": 188, "torchinnerproductinsertbia": 189, "torchunpackbaddbmm": 190, "torchpaddingsequ": 192, "transformer2dmodel_ffninputslic": 195, "transformer2dmodel_ffninputslice_1": 196, "transformer2dmodel_qkvreshapeto4d": 199, "wordembed": 204, "create_tf_nod": 205, "creat": [205, 220, 223, 229, 237, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 371, 381, 387, 388, 393, 400, 409, 412], "tendorflow": 205, "get_tensor_dest_op": 205, "store": [205, 223, 226, 229, 231, 361, 381, 385, 386, 389, 390, 395, 396, 397, 398, 399, 401, 402, 403, 405], "dest_op_nam": 205, "tf_extract_oper": 205, "tf_dtype_id": 205, "deal": [205, 361, 383], "multipl": [205, 246, 250, 251, 255, 362, 376, 381, 383, 393, 397, 398, 400, 401, 402, 403, 404, 405, 409, 412, 413], "indetermin": 205, "torch_extract_oper": 206, "neural_engine_bin": [207, 380], "datacollatorforsuperviseddataset": 209, "transform": [209, 217, 223, 239, 240, 245, 250, 251, 255, 361, 362, 366, 372, 375, 380, 381, 382, 396, 397, 402, 403, 404, 405, 411, 413, 414, 415, 416, 417, 422], "pretrainedtoken": [209, 217], "collat": 209, "supervis": 209, "fine": [209, 343, 373, 374, 393, 415, 416], "preprocess": [209, 222, 223, 373, 374, 404], "target": [209, 220, 222, 223, 245, 361, 383, 393, 405, 415], "pattern_match": 213, "source_list": 213, "task": [213, 215, 240, 251, 254, 361, 373, 374, 375, 376, 387, 393, 397, 403, 406, 414], "batch_siz": [213, 215, 217, 222, 223, 245, 250, 251, 254, 362, 374, 382, 383, 387, 393, 403, 409], "instanti": [213, 215, 231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "model_arg": 215, "new_fewshot": 215, "devic": [215, 226, 234, 373, 375, 382, 384, 414], "cpu": [215, 223, 343, 351, 362, 373, 374, 378, 379, 382, 388, 391, 393, 395, 397, 406, 407, 414], "no_cach": 215, "limit": [215, 223, 375, 393, 400, 404], "bootstrap_it": 215, "100000": 215, "description_dict": 215, "check_integr": 215, "decontamination_ngrams_path": 215, "seed": [215, 223, 361, 392], "1234": 215, "user_model": 215, "model_format": [215, 217], "union": [215, 245, 352], "lm": 215, "get_model": 215, "create_from_arg_str": 215, "taken": [215, 250, 251], "eval_harness_nam": 215, "__name__": 215, "num_fewshot": 215, "shot": 215, "context": [215, 220], "batch": [215, 222, 245, 352, 374, 382, 400, 401, 403, 410], "cuda": [215, 373], "run": [215, 238, 245, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 362, 373, 393, 409, 410, 416], "bool": [215, 223, 224, 231, 245, 248, 250, 251, 252, 349, 350, 351, 352, 362, 375, 381, 396, 397, 412, 413], "whether": [215, 223, 231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 368, 381, 383, 389, 409, 424], "cach": [215, 231, 350, 388, 398, 401, 402, 403, 409], "test": [215, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 372, 374, 376, 379, 391, 393, 407, 409, 410], "bootstrap": 215, "statist": 215, "dictionari": [215, 235, 245], "descript": [215, 245, 372, 373, 375, 383, 405, 412, 413, 415, 416], "task_nam": [215, 386, 387], "relev": [215, 374, 393], "suit": [215, 393], "provid": [215, 222, 223, 226, 231, 238, 239, 245, 250, 251, 255, 257, 343, 361, 362, 374, 376, 377, 378, 381, 390, 393, 394, 397, 402, 404, 412, 416], "autocausallm": 217, "pretrain": [217, 250, 251, 381, 393], "causal": [217, 251, 373], "languag": [217, 250, 251, 343, 371, 373, 374, 376, 414], "find": [217, 352, 361, 381, 384, 388, 389, 393, 400, 415], "hf": 217, "document": [217, 245, 343, 344, 372, 373, 374, 375, 378, 392, 393, 401, 403, 404, 405, 415, 416], "model_doc": 217, "auto": [217, 223, 229, 239, 373, 383, 388, 397], "automodelforcausallm": 217, "autoseq2seqlm": 217, "seq2seq": [217, 245, 250, 251], "automodelforseq2seqlm": 217, "multitokeneoscriteria": 217, "initial_decoder_input_length": 217, "criteria": [217, 413], "lambada": [219, 362], "word": [220, 250, 251, 376, 405], "predict": [220, 229, 245, 250, 251, 361, 373, 374, 375], "broad": 220, "discours": 220, "arxiv": [220, 250], "pdf": 220, "1606": 220, "06031": 220, "capabl": [220, 362, 393, 402, 405], "text": [220, 255, 343, 362, 374, 376, 387, 393, 397, 406, 411, 414], "understand": [220, 393, 398, 401], "collect": [220, 223, 362, 381, 383, 416], "narr": 220, "passag": 220, "share": [220, 245, 398], "characterist": [220, 371], "human": 220, "subject": [220, 411], "abl": [220, 403, 416], "guess": 220, "expos": [220, 396, 397], "sentenc": [220, 250, 251, 255, 362, 373, 374], "preced": 220, "succe": 220, "cannot": [220, 251, 352, 395, 401, 405, 410], "simpli": 220, "reli": 220, "local": [220, 231, 245, 381, 395, 398, 401], "keep": [220, 385, 392], "track": 220, "inform": [220, 239, 242, 342, 345, 348, 353, 359, 371, 372, 374, 375, 382, 383, 391, 393, 397, 400, 407, 408, 409, 415, 416, 417, 421], "broader": 220, "homepag": 220, "zenodo": 220, "2630551": 220, "x4xzn5nkjui": 220, "lambadastandard": 220, "standard": [220, 231], "lambadaopenai": 220, "openai": 220, "gpt": [220, 343, 373, 374, 376, 392], "github": [220, 255, 257, 372, 373, 374, 379, 380, 382, 388, 411, 417], "com": [220, 255, 257, 373, 374, 379, 380, 382, 391, 407, 411, 417], "issu": [220, 342, 361, 368, 371, 372, 374, 402, 416, 424], "131": [220, 391], "issuecom": 220, "497136199": 220, "pytorchbenchmark": 222, "executorbenchmark": 222, "refactor_batch_s": 222, "old_batch_s": 222, "batched_valu": 222, "get_example_input": [222, 362], "dataload": [222, 238, 245, 254, 362, 374], "batched_data": 222, "preprocess_model": 222, "example_input": [222, 362], "additional_cmd": 222, "jit": [222, 223, 245, 349, 350, 351, 352, 362, 366, 394, 396, 397, 400, 404, 409, 422], "trace": [222, 223, 362, 383], "benchmarkconfig": [222, 223, 362], "process": [222, 223, 229, 234, 235, 242, 245, 255, 361, 374, 376, 381, 382, 384, 385, 389, 390, 393, 395, 396, 398, 401, 402, 405, 415, 416], "raw_cmd": 222, "scriptmodul": 222, "model_name_or_path": [222, 231, 245, 255, 362, 373], "build": [222, 235, 239, 245, 361, 374, 379, 380, 392, 393, 395, 401, 402, 406, 413], "inc": [223, 231, 238, 239, 245, 387], "nncf": 223, "check_valu": 223, "src": [223, 352, 382, 397, 405, 409], "supported_typ": 223, "supported_valu": 223, "def": [223, 361, 362, 374, 381], "datatyp": [223, 376, 377], "uint8": [223, 403, 416], "_datatyp": 223, "dynamiclengthconfig": [223, 245, 378], "max_length": [223, 362, 374], "length_config": [223, 250, 251, 378], "const_rat": 223, "float": [223, 224, 239, 242, 243, 245, 248, 252, 352, 373, 375, 377, 381, 387, 396, 397, 398, 412, 413, 415, 416], "num_sandwich": 223, "length_drop_ratio_bound": [223, 225], "layer_dropout_prob": [223, 225], "layer_dropout_bound": [223, 225], "dynamic_train": 223, "load_store_fil": 223, "evo_it": 223, "30": [223, 393, 399], "population_s": 223, "20": [223, 362, 374, 379, 382, 387, 391, 399, 406, 407], "mutation_s": 223, "mutation_prob": [223, 226], "crossover_s": 223, "num_cpu": 223, "48": [223, 391, 392, 407], "distributed_world_s": 223, "latency_constraint": 223, "evo_eval_metr": 223, "eval_f1": [223, 226, 378, 412, 416], "dynam": [223, 228, 245, 388, 390, 393, 394, 396, 400, 402, 409, 423], "adapt": [223, 343, 371, 374, 393], "maximum": [223, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 390, 391, 407, 416], "drop": [223, 225, 376, 402, 405, 412], "ratio": [223, 225, 226, 242, 375, 407, 409, 412, 413, 415], "sandwich": 223, "num": [223, 361, 373, 383, 395, 397, 403], "train": [223, 229, 235, 238, 239, 242, 245, 343, 361, 373, 374, 375, 378, 408, 415], "dropout": [223, 225], "probabl": [223, 225, 361, 393, 402], "evolut": [223, 227, 228, 376], "popul": [223, 226], "mutat": [223, 226], "crossov": [223, 226], "distribut": [223, 254, 361, 375, 393, 402, 416, 417], "world": 223, "latenc": [223, 361, 362, 374, 376, 383, 391, 398, 416], "constraint": [223, 226, 416], "metric": [223, 228, 229, 235, 239, 245, 247, 361, 374, 378, 420], "quantizationconfig": [223, 238, 239, 245, 374, 378], "approach": [223, 235, 237, 373, 375, 376, 378, 397, 398], "posttrainingstat": [223, 376, 377, 378, 416], "basic": [223, 235, 251, 254, 374, 379, 388, 401], "timeout": [223, 416], "max_trial": [223, 361, 416], "100": [223, 245, 250, 251, 374, 393, 409, 416], "config_fil": 223, "sampling_s": 223, "use_bf16": 223, "recip": [223, 245, 373, 384, 413], "earli": [223, 416], "combin": [223, 245, 361, 384, 389, 393, 396, 397, 416], "decid": [223, 400, 416], "exit": [223, 416], "time": [223, 383, 390, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 416], "evalu": [223, 226, 229, 235, 238, 239, 242, 245, 361, 375, 383, 393, 403, 412, 413, 415, 416], "accuraci": [223, 229, 245, 361, 375, 376, 378, 392, 401, 409, 412, 413, 415], "notraineroptim": [223, 238, 375, 415, 416], "guarante": [223, 416], "mani": [223, 225, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 383, 385, 396, 398, 399, 402, 404, 409], "sampl": [223, 225, 245, 255, 361, 362, 373, 374, 378, 391, 403, 416], "neural_compressor": [223, 238, 245], "smooth_quant": 223, "smooth": 223, "smooth_quant_arg": 223, "fast_bias_correct": 223, "correct": [223, 371, 385, 389, 393, 403], "weight_correct": 223, "gemm_to_matmul": 223, "graph_optimization_level": 223, "disable_al": 223, "enable_bas": 223, "enable_extend": 223, "enable_al": 223, "first_conv_or_matmul_quant": 223, "last_conv_or_matmul_quant": 223, "pre_post_process_quant": 223, "postprocess": 223, "add_qdq_pair_to_weight": 223, "qdq": [223, 245, 377, 386], "vaild": 223, "onnxrt_trt_ep": 223, "optypes_to_exclude_output_qu": 223, "optyp": 223, "dedicated_qdq_pair": 223, "dedic": 223, "pruningconfig": [223, 378], "epoch": [223, 242, 415], "epoch_rang": [223, 243], "initial_sparsity_ratio": [223, 243], "target_sparsity_ratio": [223, 243, 378, 415], "97": [223, 243, 407, 415], "pruner_config": [223, 378, 415], "pruner": [223, 228, 243, 245, 375, 415], "prune": [223, 228, 238, 239, 241, 245, 250, 251, 343, 374, 420], "goal": [223, 245, 415], "behavior": [223, 245, 371, 372, 375, 393, 395, 396, 401, 415, 416], "nlp": [223, 245, 255, 257, 343, 373, 374, 376, 378, 382, 415, 416], "wil": 223, "basicmagnitud": [223, 243, 376, 378, 415], "typel": 223, "init_prune_config": 223, "init": [223, 229, 238, 239, 241, 253, 254, 361, 380, 382, 397], "distillationconfig": [223, 245, 378], "criterion": [223, 224, 239, 248, 378, 412, 416], "distil": [223, 228, 229, 238, 239, 245, 373, 374, 387, 420], "inc_config": 223, "knowledgeloss": [223, 224, 375], "tfdistillationconfig": [223, 361], "loss_typ": [223, 224, 361, 375], "loss_weight": [223, 361], "train_step": [223, 361], "temperatur": [223, 224, 255, 361, 373, 375], "loss": [223, 245, 250, 251, 361, 373, 375, 416], "knowledgedistillationloss": [223, 375], "flashdistillationconfig": 223, "block_nam": [223, 361], "layer_mappings_for_knowledge_transf": [223, 361], "add_origin_loss": [223, 224, 361, 375], "flash": [223, 229, 245], "autodistillationconfig": [223, 361], "search_spac": [223, 235, 361], "search_algorithm": [223, 361], "bo": [223, 361, 411], "knowledge_transf": [223, 361], "regular_distil": [223, 361], "disil": 223, "space": [223, 229, 235, 245, 361, 371, 372, 384, 393, 395, 398], "bayesian": [223, 361], "architectur": [223, 229, 235, 239, 245, 250, 251, 361, 374, 379, 395, 402, 404], "candid": 223, "trial": [223, 245], "random": [223, 250, 361, 393, 402], "knowledg": [223, 245, 343, 361, 373, 374], "transfer": [223, 245, 254, 375], "stage": [223, 229, 245, 361], "autodistil": [223, 229, 239, 245, 420], "regular": [223, 229, 415], "nasconfig": [223, 235, 237], "parser": 223, "procedur": [223, 409], "backend": [223, 245, 253, 362, 374, 376, 378, 379, 380, 381, 384, 386, 389, 390, 394, 409, 416], "warmup": [223, 362, 384, 390], "cores_per_inst": [223, 245, 362], "num_of_inst": [223, 245, 362], "benchmark": [223, 228, 245, 246, 374, 384, 391, 394, 407, 410, 420], "skip": [223, 362, 398, 410], "core": [223, 362, 382, 391, 392, 393, 395, 401, 402, 407, 410, 411], "enabl": [223, 362, 377, 378, 391, 393, 395, 401, 402, 406, 407], "prunerv2": 223, "target_spars": 223, "pruning_typ": 223, "op_nam": 223, "excluded_op_nam": 223, "start_step": 223, "end_step": 223, "pruning_scop": 223, "pruning_frequ": 223, "min_sparsity_ratio_per_op": 223, "max_sparsity_ratio_per_op": 223, "sparsity_decay_typ": 223, "pruning_op_typ": 223, "reg_typ": [223, 397], "criterion_reduce_typ": 223, "resume_from_pruned_checkpoint": 223, "similiar": 223, "weightpruningconfig": 223, "pruning_config": [223, 238, 239, 245, 378, 415], "snip_momentum": 223, "4x1": [223, 383, 395, 405], "global": 223, "98": [223, 407], "exp": [223, 397, 404, 409], "linear": [223, 361, 375, 397, 400, 403], "ce": [224, 361, 375], "loss_weight_ratio": [224, 375], "layer_map": [224, 375], "distillationcriterionmod": 224, "restor": [225, 376], "sample_length_configur": 225, "max_seq_length": [225, 226], "num_hidden_lay": 225, "layer_config": [225, 250, 251], "length_drop_prob": 225, "length_drop_ratio": 225, "min_length": 225, "hidden": [225, 250, 251, 361, 398], "truncat": [225, 374], "less": [225, 362, 375, 384, 393, 401, 405, 415], "min": [225, 245, 416], "sample_layer_configur": 225, "layer_dropout": 225, "depend": [225, 235, 372, 380], "paramat": 225, "bound": 225, "kept": [225, 393], "evolust": 226, "evolustionari": 226, "approx_ratio": 226, "12": [226, 379, 380, 383, 391, 392, 399, 403, 406, 407, 409], "l": [226, 361, 375, 392, 393], "384": [226, 361, 384, 391, 407], "approxim": [226, 404], "invers": [226, 404], "store2str": 226, "gene": 226, "mac": 226, "score": [226, 250, 251, 414], "parent": 226, "parmat": 226, "lower_constraint": 226, "upper_constraint": 226, "eval_metr": 226, "evolutionari": [226, 245], "load_stor": 226, "store_fil": 226, "save_stor": 226, "get_stor": 226, "set_lower_constraint": 226, "setter": [226, 250, 251], "lower": [226, 255, 393, 405, 413, 416], "set_upper_constraint": 226, "upper": [226, 397], "save_popul": 226, "population_fil": 226, "convex_hul": 226, "pareto_fronti": 226, "add_gen": 226, "rai": 226, "packag": [227, 230, 343, 373, 374], "drop_and_restore_util": [227, 228], "mixtur": 228, "auto_distil": [228, 230, 361], "basic_na": [228, 236], "get_throughput": [228, 247], "utility_tf": [228, 247], "optimizer_tf": 228, "trainer": [228, 238, 359, 374, 376, 377, 378], "handl": [229, 245, 250, 251, 342, 350, 361, 388, 399, 400], "model_build": [229, 235, 239, 245, 361], "conf_fname_or_obj": [229, 235, 237], "design": [229, 245, 381, 393, 396, 397, 408, 420], "three": [229, 242, 243, 244, 245, 361, 374, 381, 385, 389, 403, 404, 415, 416], "major": [229, 245, 361, 395, 401, 402, 404, 405, 416], "explor": [229, 245, 361, 378], "compress": [229, 245, 343, 361, 375, 378, 395, 399, 401, 405, 408, 416], "discov": [229, 245, 361], "potenti": [229, 245, 352, 361, 372, 393, 402], "measur": [229, 245, 361, 362, 375, 394, 412, 413, 415, 416], "hardwar": [229, 245, 361, 372, 375, 406, 408], "select": [229, 245, 250, 251, 361, 393, 397, 409], "best": [229, 235, 245, 361, 371, 376, 393], "res_save_path": [229, 235], "model_cl": [229, 239, 245, 361], "found": [229, 235, 374, 380, 381, 405], "estim": [229, 235, 383, 405], "load_search_result": 229, "init_by_cfg": [229, 235], "create_distil": 229, "optimizedmodel": 231, "from_pretrain": [231, 250, 251, 362, 374, 378, 414], "function": [231, 235, 238, 239, 242, 245, 349, 350, 351, 361, 375, 381, 384, 385, 388, 389, 390, 393, 396, 397, 409, 412, 415, 416], "classmethod": [231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "intel": [231, 255, 342, 362, 372, 378, 380, 381, 382, 391, 392, 395, 406, 407, 411, 413, 414, 415, 416, 417], "compressor": [231, 234, 239, 343, 362, 374, 413, 416], "repositori": [231, 374], "hug": [231, 343, 374, 386], "face": [231, 343, 344, 371, 374, 386], "hub": [231, 414], "directori": [231, 238, 386, 408], "host": 231, "cache_dir": 231, "download": [231, 250, 251, 417], "force_download": 231, "forc": 231, "resume_download": 231, "incomplet": 231, "attempt": 231, "resum": [231, 245], "revis": 231, "branch": [231, 409], "tag": 231, "commit": [231, 371, 410], "sinc": [231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 375, 401, 402, 404], "git": [231, 373, 374, 379, 380, 382], "system": [231, 374, 380], "artifact": 231, "huggingfac": [231, 255, 374, 387, 412, 414], "allow": [231, 362, 393], "q_model": 231, "incencod": 234, "incdecod": 234, "pretrainedconfig": 234, "basicna": 235, "conf_fnam": 235, "obj": [235, 237], "execut": [235, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 361, 374, 384, 388, 394, 396, 397, 401, 402, 404, 406, 409, 410, 416], "common": [237, 371, 374, 416], "nasbas": 237, "orchestr": [238, 245], "orchestrate_optim": [238, 245], "compon": [238, 245, 396, 411], "experiment": [238, 245, 392, 397], "eval_func": [238, 239, 245, 361], "train_func": [238, 239, 245, 361], "saved_result": [238, 374], "aggreg": 238, "fit": [238, 398], "schedul": [238, 245, 361, 366, 394, 422], "save_model": [238, 254, 374], "json": [238, 255, 373], "pytorch_model": 238, "init_quant": [238, 239, 245, 396], "quant_config": [238, 239, 245, 374, 378, 416], "calib_func": 238, "calib_dataload": [238, 245], "prepar": [238, 239, 250, 251, 373, 383, 385, 388, 396, 397, 405, 416], "invok": [238, 239], "_inc_quant": 238, "calibr": [238, 245, 416], "init_prun": [238, 239, 245], "init_distil": [238, 239, 245], "distillation_config": [238, 239, 245, 375, 378], "teacher_model": [238, 239, 245, 361, 375, 378], "teacher": [238, 239, 361, 375, 376], "tfoptim": [239, 361, 375], "pretrainedmodel": [239, 245, 361], "training_args_tf": 239, "tftrainingargu": 239, "train_dataset": [239, 361, 374, 378], "eval_dataset": [239, 361, 374, 378], "compute_metr": [239, 361, 374], "task_typ": [239, 254], "task_id": [239, 254], "techniqu": [239, 374, 376, 378, 393, 416], "builtin_eval_func": [239, 245], "saved_model": 239, "quantized_model_path": 239, "larger": [239, 245, 393], "model_builder_builtin": [239, 245, 361], "arch_para": [239, 245], "built": [239, 361, 393, 413], "builder": [239, 361], "autodistillation_config": [239, 245, 361], "build_train_func": 239, "infer_framework_load_model": 240, "autoconfig": [240, 374, 378, 414], "model_class": 240, "model_kwarg": [240, 250, 251, 414], "config_file_path": 242, "pruner_info": 242, "update_config": 242, "current": [242, 243, 244, 383, 392, 393, 396, 397, 398, 400, 401, 403, 408, 409], "get_sparsity_ratio": 242, "elementwise_over_matmul_gemm_conv": 242, "elementwise_over_al": 242, "blockwise_over_matmul_gemm_conv": 242, "block": [242, 250, 251, 376, 390, 395, 398, 399, 400, 401, 402, 404, 405, 415], "on_train_begin": 242, "implement": [242, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 366, 374, 381, 384, 385, 389, 392, 394, 395, 396, 398, 400, 401, 402, 403, 404, 406, 409, 422], "begin": [242, 251, 361, 393, 396, 397], "ensur": [242, 393, 401], "on_epoch_begin": 242, "on_step_begin": 242, "local_step": 242, "on_before_optimizer_step": 242, "on_step_end": 242, "on_epoch_end": 242, "on_train_end": 242, "phase": [242, 375, 415], "on_before_ev": 242, "on_after_ev": 242, "on_after_optimizer_step": 242, "pruningmod": 243, "prunerconfig": [243, 378], "update_frequ": 243, "prune_typ": [243, 378, 415], "per_tensor": 243, "quantizationmod": 244, "easili": [245, 395, 396], "finetun": [245, 374, 376, 378, 414], "basetrain": 245, "builtin_train_func": 245, "automativ": 245, "low": [245, 374, 378, 393, 395, 402, 404, 413, 416, 425], "achiev": [245, 374, 393, 398, 413], "pruningconf": 245, "smaller": [245, 375, 393, 415], "config_list": 245, "optimizt": 245, "create_optimizer_builtin": 245, "resume_from_checkpoint": 245, "optuna": 245, "ignore_keys_for_ev": 245, "tor": 245, "checkpoint": [245, 250], "present": [245, 250, 404], "state": [245, 250, 251, 374, 391, 393, 407], "hyperparamet": [245, 361, 393], "dure": [245, 382, 390, 393, 401, 405, 410, 413, 415, 416], "hide": [245, 250, 251], "deprec": [245, 250, 251], "training_step": 245, "inject": [245, 393, 397], "being": [245, 393], "fed": 245, "most": [245, 374, 385, 389, 390, 393, 396, 397, 398, 401, 403, 414], "expect": [245, 250, 251, 371, 372, 393, 405, 413], "label": [245, 250, 251, 255, 373, 410, 414], "accept": [245, 371, 414], "training_step_length_adapt": 245, "compute_loss": 245, "return_output": 245, "By": [245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 393], "nas_config": 245, "baseic": 245, "callabel": 245, "auto_distil_evaluation_loop": 245, "prediction_loss_onli": 245, "ignore_kei": 245, "metric_key_prefix": 245, "eval": [245, 361, 412], "trainer_util": 245, "evalloopoutput": 245, "doe": [245, 381, 396, 397, 398, 399, 400, 403, 409], "huge": 245, "prefix": [245, 409], "export_to_onnx": [245, 374, 377], "tranfer": 245, "paramert": 245, "export_to_fp32_onnx": 245, "save_path": [245, 377], "opset_vers": [245, 377], "14": [245, 377, 391, 399, 406, 407], "do_constant_fold": [245, 377], "verbos": [245, 377, 393], "export": [245, 374, 383, 386, 414, 420], "fold": [245, 409], "export_to_bf16_onnx": 245, "export_to_int8_onnx": 245, "quant_format": [245, 377], "s8s8": [245, 377, 401], "sample_s": 245, "calibrate_method": 245, "minmax": 245, "scale_map": [245, 374], "export_to_jit": 245, "set_dynamic_config": [245, 378], "dynamic_config": [245, 378], "run_evolutionary_search": 245, "nlptrainer": [245, 374, 375, 378, 415, 416], "nlpseq2seqtrain": 245, "special": [246, 397, 403], "trigger": [246, 372, 393], "greater_is_bett": [248, 252, 361, 378, 412, 413, 416], "is_rel": [248, 378, 412, 416], "01": [248, 378, 407, 412, 416], "weight_ratio": [248, 252, 412, 413, 416], "modeling_bert_dynam": 249, "modeling_roberta_dynam": 249, "bert": [250, 361, 374, 375, 376, 382, 383, 384, 387, 389, 390, 391, 396, 401, 402, 403, 404], "load_tf_weights_in_bert": 250, "tf_checkpoint_path": 250, "bertembed": [250, 251], "posit": [250, 251, 371, 374, 378, 384, 389, 393, 409, 414], "token_typ": 250, "forward": [250, 251, 361, 383, 388, 416], "longtensor": [250, 251], "token_type_id": [250, 251, 390], "position_id": [250, 251], "inputs_emb": [250, 251], "floattensor": [250, 251], "past_key_values_length": [250, 251], "bertselfattent": 250, "position_embedding_typ": [250, 251], "transpose_for_scor": [250, 251], "hidden_st": [250, 251], "attention_mask": [250, 251, 390], "head_mask": [250, 251], "encoder_hidden_st": [250, 251], "encoder_attention_mask": [250, 251], "past_key_valu": [250, 251], "output_attent": [250, 251], "bertselfoutput": 250, "bertattent": 250, "prune_head": [250, 251], "bertintermedi": 250, "intermedi": [250, 361, 381, 386, 389, 405, 416], "bertoutput": 250, "bertlay": 250, "output_length": [250, 251], "always_keep_cls_token": [250, 251], "feed_forward_chunk": [250, 251], "attention_output": [250, 251], "feed": [250, 251, 375, 382], "chunk": 250, "bertencod": 250, "use_cach": [250, 251], "output_hidden_st": [250, 251], "return_dict": [250, 251], "modeling_output": [250, 251], "basemodeloutputwithpastandcrossattent": [250, 251], "bertpool": 250, "pooler": [250, 251], "bertpredictionheadtransform": 250, "bertlmpredictionhead": 250, "bertonlymlmhead": 250, "mask": [250, 251, 352, 376, 396, 397, 399, 401, 404], "sequence_output": 250, "bertonlynsphead": 250, "pooled_output": 250, "bertpretraininghead": 250, "bertpretrainedmodel": 250, "abstract": [250, 251], "simpl": [250, 251, 374, 379, 382, 392, 396, 404, 414], "bertforpretrainingoutput": 250, "bertforpretrain": 250, "sum": [250, 362, 375, 383, 402, 404, 405, 409], "classif": [250, 251, 343, 361, 374, 375, 376, 387, 414], "prediction_logit": [250, 251], "sequence_length": [250, 251], "vocab_s": [250, 251], "vocabulari": 250, "seq_relationship_logit": 250, "continu": [250, 393, 395, 398, 402, 403], "hidden_s": [250, 251, 361], "plu": 250, "num_head": [250, 251], "averag": [250, 362, 374, 383], "bertmodel": 250, "add_pooling_lay": [250, 251], "behav": [250, 251], "well": [250, 251, 377, 416, 417], "case": [250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 375, 376, 383, 384, 390, 393, 395, 397, 398, 399, 409, 410], "cross": [250, 251], "ad": [250, 251, 381, 385, 389, 393, 396, 405, 409, 414], "describ": [250, 251, 351, 373, 398, 400, 403, 409, 412, 413], "ab": [250, 416], "1706": [250, 391, 407], "03762": 250, "ashish": [250, 251], "vaswani": [250, 251], "noam": [250, 251], "shazeer": [250, 251], "niki": [250, 251], "parmar": [250, 251], "jakob": [250, 251], "uszkoreit": [250, 251], "llion": [250, 251], "jone": [250, 251], "aidan": [250, 251], "gomez": [250, 251], "lukasz": [250, 251], "kaiser": [250, 251], "illia": [250, 251], "polosukhin": [250, 251], "is_decod": [250, 251], "add_cross_attent": [250, 251], "get_input_embed": [250, 251], "getter": [250, 251], "set_input_embed": [250, 251], "set_length_config": [250, 251], "set_output_attent": [250, 251], "basemodeloutputwithpoolingandcrossattent": [250, 251], "pad": [250, 251, 362, 374, 383, 401, 405, 409], "indic": [250, 251, 352, 389, 396, 397, 403, 405, 409, 412], "n_layer": [250, 251], "embed_size_per_head": [250, 251], "precomput": [250, 251], "speed": [250, 251, 381, 385, 393], "decoder_input_id": [250, 251], "those": [250, 251, 403, 415, 416], "instead": [250, 251, 393, 398], "get_output_embed": [250, 251], "set_output_embed": [250, 251], "new_embed": [250, 251], "next_sentence_label": 250, "docstr": [250, 251], "legaci": [250, 251], "berttoken": 250, "uncas": [250, 361, 374, 376, 378, 386, 414], "hello": [250, 251, 393], "my": [250, 251], "dog": [250, 251], "cute": [250, 251], "return_tensor": [250, 251, 362, 374, 378], "pt": [250, 251, 362, 374, 378, 414], "bertlmheadmodel": 250, "causallmoutputwithcrossattent": [250, 251], "prepare_inputs_for_gener": [250, 251], "bertformaskedlm": 250, "maskedlmoutput": [250, 251], "bertfornextsentencepredict": 250, "nextsentencepredictoroutput": 250, "prompt": 250, "itali": 250, "pizza": 250, "serv": 250, "formal": 250, "restaur": 250, "unslic": 250, "next_sent": 250, "sky": 250, "blue": 250, "shorter": [250, 393], "wavelength": 250, "light": 250, "logit": [250, 251, 361, 374, 375, 378, 382], "wa": 250, "bertforsequenceclassif": 250, "sequenceclassifieroutput": [250, 251], "regress": [250, 251, 373], "num_label": [250, 251, 374, 378], "entropi": [250, 251, 361, 393], "bertformultiplechoic": 250, "choic": [250, 251, 376, 390], "multiplechoicemodeloutput": [250, 251], "num_choic": [250, 251], "dimens": [250, 251, 361, 375, 384, 400, 401, 403, 405, 409], "bertfortokenclassif": 250, "tokenclassifieroutput": [250, 251], "bertforquestionansw": 250, "question": [250, 371, 372, 374, 376, 399], "answer": [250, 251, 371, 376], "start_posit": [250, 251], "end_posit": [250, 251], "questionansweringmodeloutput": [250, 251], "span": [250, 251], "clamp": [250, 251], "account": [250, 251, 371], "expand_gath": [250, 251], "dim": [250, 251, 382, 388, 395, 401, 405, 409], "roberta": [251, 376], "robertaembed": 251, "tini": [251, 376], "tweak": 251, "create_position_ids_from_inputs_emb": 251, "directli": [251, 393, 396, 399, 402], "sequenti": [251, 385, 396, 397, 400], "robertaselfattent": 251, "robertaselfoutput": 251, "robertaattent": 251, "attenion": 251, "robertaintermedi": 251, "intermidi": 251, "robertaoutput": 251, "robertalay": 251, "robertaencod": 251, "roberata": 251, "robertapool": 251, "robertapretrainedmodel": 251, "update_keys_to_ignor": 251, "del_keys_to_ignor": 251, "robertamodel": 251, "_": [251, 361, 373, 375, 380, 381, 382, 383, 384, 385, 386, 388, 389, 393, 394, 395, 396, 397, 401, 402, 403, 404, 409, 412, 413, 414, 415, 416], "robertaforcausallm": 251, "robertatoken": 251, "robertaconfig": 251, "robertaformaskedlm": 251, "robertalmhead": 251, "featur": [251, 343, 361, 370, 372, 374, 375, 386, 389, 392, 395, 402, 406, 414, 417, 426], "robertaforsequenceclassif": 251, "robertaformultiplechoic": 251, "robertafortokenclassif": 251, "robertaclassificationhead": 251, "robertaforquestionansw": 251, "quanstion": 251, "create_position_ids_from_input_id": 251, "padding_idx": 251, "non": [251, 393, 400, 403, 405, 409, 410], "symbol": 251, "fairseq": 251, "make_posit": 251, "models": [252, 376, 413], "distributed_init": [253, 254], "gloo": 253, "world_siz": 253, "rank": [253, 393], "init_method": 253, "master_addr": 253, "127": [253, 383, 406, 407, 416], "master_port": 253, "12345": 253, "distibut": 253, "tfdataload": 254, "worker_address": 254, "worker": 254, "address": [254, 343, 371, 396, 401, 402], "treat": [254, 381], "chief": 254, "get_filepath": 254, "base_dirpath": 254, "folder": [254, 380, 381, 382, 383, 384, 386], "keras2savedmodel": 254, "kera": 254, "augment": [255, 257, 420], "extens": [255, 372, 378, 380, 381, 382, 411, 413, 414, 415, 417], "blob": 255, "md": [255, 383, 386], "dataaugment": [255, 373], "augmenter_typ": [255, 373], "wai": [255, 374, 383, 384, 385, 389, 392, 393, 395, 397, 403, 406], "enhanc": [255, 378, 400], "textgenerationaug": [255, 373], "keyboardaug": [255, 373], "aug": [255, 343, 373], "input_dataset": [255, 373], "origin_data": 255, "output_path": [255, 373, 392], "join": [255, 373], "result_path": [255, 373], "test1": [255, 373], "cv": [255, 373], "augmenter_argu": [255, 373], "gpt2": [255, 373], "medium": [255, 343, 373, 374, 410], "data_aug": [255, 373], "text_generation_augment": 255, "raw_dataset": [255, 373, 374, 378], "No": [255, 376], "glue": [255, 373, 374], "sst2": [255, 362, 373, 374, 376, 383, 387], "eo": [255, 373, 393], "k": [255, 352, 373, 384, 396, 398, 399, 400, 401, 403, 404, 405, 407, 409], "p": [255, 373, 374, 392], "top_p": [255, 393], "effect": [255, 343, 373, 374, 381, 393, 409], "tend": 255, "toward": [255, 371], "greedi": 255, "repetition_penalti": 255, "primarili": [255, 393], "ctrl": [255, 373, 376, 393], "num_return_sent": 255, "entir": [255, 383, 395, 401, 402, 415], "num_sampl": 255, "condit": [255, 373, 384, 385, 411], "stop_token": 255, "mit_data_augment": 255, "nlpaug": [255, 257, 373], "librari": [255, 257, 366, 372, 396, 397, 422], "help": [255, 257, 373, 374, 389, 393, 396, 408], "machin": [255, 257, 373, 409], "learn": [255, 257, 343, 373, 386, 393, 397, 413, 416], "project": [255, 257, 371, 372, 373, 392], "makcedward": [255, 257], "suffix": 255, "csv": [255, 373], "column_nam": 255, "sentence1": 255, "sentence2": 255, "data_augment": [256, 373], "augmentertyp": 257, "get_augmenter_from_typ": 257, "aug_typ": 257, "augment_typ": 257, "testaddclstoken": 259, "methodnam": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "runtest": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "whose": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 389], "singl": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 392, 398, 403], "itself": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 406], "place": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 390, 397, 402, 415], "fixtur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "testcas": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "constructor": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 388], "author": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 411], "deconstruct": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "setup": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "teardown": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "__init__": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381], "alwai": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 389, 393, 401, 410], "chang": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 372, 381, 392, 393, 395, 396, 405, 410, 411], "signatur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "failureexcept": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "determin": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371, 384, 393, 406], "except": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 384, 393, 396], "rais": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 393], "fail": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "deem": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371], "longmessag": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "long": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 389], "messag": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 393], "includ": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 351, 352, 371, 372, 374, 376, 382, 383, 384, 393, 394, 397, 405, 409, 411, 416], "repr": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "print": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 389, 393], "failur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "explicit": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 371, 388, 397], "maxdiff": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "diff": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "difflib": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "look": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 381, 383, 393, 397, 398], "individu": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 371], "setupclass": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "hook": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "teardownclass": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "testaddembed": 260, "testtorchop": [261, 264, 267, 269, 274, 277, 281, 282, 291, 292, 294, 296, 297, 303, 307, 310, 312, 321, 322, 323, 326, 331, 335], "testattentionreshap": [262, 263, 316, 319], "testtorchmodel": [265, 283], "testbinaryop": 266, "testcastto": 268, "testconvreshap": 270, "testdecoderattnreshap": 271, "testdispatchertuningacc": 272, "testdispatchertuningthroughput": 273, "testdynamicquant": 275, "testelectra": 276, "testembeddingbag": 278, "testexecutionopt": [279, 285], "testfwk": 280, "testgraphdispatch": 284, "testinsertinputouputdata": 286, "testissupportedonnxgraph": 287, "testlastlayershap": 288, "testlayernormwithreducemean": [289, 318, 320], "testlayernormwithtranspos": 290, "testtorchlinear": 293, "testmain": 295, "testmatmulwithbiasrelu": 298, "testmatmulwithbiassigmoid": 299, "testmatmulwithbiastanh": 300, "testmergedembeddingbag": 301, "testonnxutil": 304, "testoperatoradaptor": 305, "testop": 306, "testpaddingsequ": 308, "testpatterndispatch": 309, "testpositionembed": 311, "testprimitivecacheacc": 313, "testprimitivecachethroughput": 314, "testqkvmerg": 315, "testquantonnxexecut": 317, "teststartendlogit": 324, "testscbuff": 325, "testtextencod": 327, "testtextencoderbf16": 328, "testtfutil": 329, "testtokentypeembed": 330, "testtransposebatchmatmul": 332, "testunet": 333, "testunetbf16": 334, "testvaedecod": 336, "testvaedecoderbf16": 337, "testweightsharingacc": 338, "testweightsharingdispatchertuningacc": 339, "testweightsharingdispatchertuningthroughput": 340, "testweightsharingthroughput": 341, "center": 342, "guidelin": 342, "innov": [343, 374], "toolkit": [343, 374, 376], "particular": 343, "4th": [343, 374], "xeon": [343, 374, 376, 379, 395, 404, 407, 411, 416], "scalabl": [343, 374, 376, 379, 396], "processor": [343, 374, 376, 379, 391, 407], "sapphir": [343, 374, 379], "rapid": [343, 374, 379], "codenam": 343, "seamless": [343, 374, 393], "experi": [343, 371, 374, 393, 399, 404, 405], "extend": [343, 374, 398], "leverag": [343, 361, 374, 375, 378, 393], "advanc": [343, 361, 371, 374, 394, 406], "softwar": [343, 374, 411], "uniqu": [343, 374], "awar": [343, 374], "runtim": [343, 352, 374, 406, 409, 416], "releas": [343, 374, 421], "neurip": [343, 374], "2022": [343, 374, 391, 407], "paper": [343, 374, 378], "distilbert": [343, 361, 374, 376, 378, 386, 414], "quala": [343, 374, 376, 378], "minilm": [343, 374, 376, 378], "2021": [343, 374], "onc": [343, 374, 383, 393, 404], "pre": [343, 374, 385, 398, 408], "diffus": [343, 374, 376, 401], "j": [343, 374, 376, 380, 381, 382, 392, 394, 400, 405, 406, 409], "6b": [343, 374, 376], "neox": [343, 374, 392], "bloom": [343, 374], "176b": [343, 374], "t5": [343, 374, 376], "flan": [343, 374], "workflow": [343, 374, 375, 384, 386, 403], "setfit": [343, 374], "sentiment": [343, 374], "analysi": [343, 374], "dlsa": [343, 374], "neuralchat": [343, 374], "chatbot": [343, 374], "through": [343, 362, 374, 381, 396, 399, 400, 401, 406], "effici": [343, 374, 378, 390], "peft": [343, 374], "domain": [343, 366, 374, 393, 394, 422], "blog": [343, 374], "publish": [343, 371, 374, 411], "april": 343, "2023": [343, 411], "tech": 343, "artifici": 343, "intellig": 343, "ai": [343, 374], "With": [343, 404, 416], "mlperf": 343, "bar": 343, "5x": 343, "commun": [343, 371], "mleffici": [343, 374], "dec": [343, 374], "nov": [343, 374], "coher": [343, 393, 402], "novemb": 343, "alibaba": 343, "deep": [343, 373, 374, 386, 397, 413, 416], "purif": 343, "kernel": [344, 352, 370, 382, 383, 388, 391, 392, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 426], "namespac": [349, 350, 351, 352], "jd": [349, 350, 351, 352, 397, 409], "convent": [349, 350, 351, 352], "refactor": [349, 350, 351, 352], "engine_t": 349, "cpu_engine_t": 349, "gpu_ocl_engine_t": 349, "public": [349, 350, 351, 352, 371, 388, 396, 397], "inlin": [349, 350, 351, 396], "engine_kind": [349, 351, 397], "runtime_kind": [349, 351], "virtual": [349, 350, 351, 388, 396, 397], "get_engine_kind": 349, "get_runtime_kind": 349, "std": [349, 350, 351, 352, 394, 396, 397], "vector": [349, 350, 351, 352, 388, 394, 396, 397, 398, 400, 403, 405], "impl_list_item_t": [349, 350], "get_implementation_list": 349, "operator_desc": [349, 350, 353, 394], "op_desc": [349, 350, 394, 397], "create_kernel": 349, "shared_ptr": [349, 350, 388], "kernel_t": [349, 350], "stream_t": 349, "create_stream": 349, "create_memory_storag": 349, "memory_storage_t": 349, "protect": [349, 350], "engine_kind_": [349, 351], "runtime_kind_": [349, 351], "cpu_inst": 349, "null_inst": 349, "storag": 349, "empty_list": 349, "templat": [350, 352], "typenam": [350, 352], "arg_t": 350, "void": [350, 351, 352, 388, 394, 396, 397, 398], "proxy_bas": 350, "hpp": [350, 351, 352, 384, 394, 409], "proxi": [350, 366, 394, 422], "anyth": 350, "similar": [350, 385, 396, 399, 400, 402, 403, 415], "onednn": [350, 388], "struct": [350, 352, 396, 397], "oneapi": [350, 388, 406], "dnnl": [350, 384, 388], "136": 350, "reset_sp": 350, "sp": 350, "get_sp": 350, "create_proxy_object": 350, "result_ref": 350, "privat": [350, 351, 371, 382, 388, 395, 396, 397, 401, 402], "member": [350, 351, 352, 371, 388, 396, 397], "data_handle_": 350, "kernel_desc_proxi": 350, "kernel_desc_t": 350, "real": [350, 384, 393, 401, 402, 403, 406], "attention_desc": 350, "dynamic_quant_desc": 350, "dynamic_quant_matmul_desc": 350, "eltwiseop_desc": 350, "gather_desc": 350, "groupnorm_desc": 350, "layernorm_ba_desc": [350, 396], "layernormalized_spmm_desc": 350, "logsoftmax_desc": 350, "mha_dense_desc": 350, "slice_desc": 350, "softmax_desc": 350, "sparse_matmul_desc": [350, 394], "transpose_matmul_desc": 350, "transpose_mha_desc": 350, "kernel_kind": [350, 351, 397], "impl_list_": 350, "nullptr": [350, 352, 396], "kernel_proxi": 350, "dynamic_qu": 350, "dynamic_quant_matmul": 350, "eltwiseop": [350, 396, 397], "layernorm_ba": 350, "layernormalized_spmm": 350, "mha_dens": [350, 409], "slice": [350, 390], "sparse_matmul": [350, 406], "transpose_matmul": 350, "transpose_mha": 350, "kdp": 350, "rt_data": [350, 394], "exec_context_t": 350, "ctx": [350, 393], "size_t": [350, 352, 384, 397], "get_workspace_s": 350, "kd": [350, 361, 375], "sparse_matmul_desc_t": 350, "sparse_matmul_t": 350, "descriptor": [351, 388, 409], "ker_kind": [351, 394, 397], "kernel_prop": [351, 397], "ker_prop": [351, 394, 397], "eng_kind": [351, 394, 397], "tensor_desc": [351, 397], "ts_desc": [351, 394, 397], "unordered_map": [351, 397], "postop_attr": [351, 352, 397], "apply_postops_list": [351, 397], "rh": [351, 403], "set_binaryop_list": [351, 396], "binaryop_attr": [351, 352, 396], "binaryop_list": [351, 396], "uint64_t": 351, "impl_nthr": 351, "get_binaryop_list": [351, 396], "dim_t": [351, 352], "tensor_shap": 351, "data_typ": [351, 352, 388, 396, 397, 409], "tensor_dtyp": 351, "format_typ": 351, "tensor_ftyp": 351, "ker_kind_": [351, 397], "ker_prop_": [351, 397], "forward_infer": [351, 388, 397], "undef": [351, 352, 396, 397], "impl_nthr_": [351, 397], "ts_descs_": [351, 397], "attrs_": [351, 397], "apply_postops_list_": [351, 397], "binaryop_list_": [351, 396], "enum": [352, 396, 397], "attention_io": 352, "merge_src": 352, "merge_dst": 352, "q_weight": 352, "k_weight": 352, "v_weight": 352, "q_bia": 352, "k_bia": 352, "v_bia": 352, "q_scale": 352, "k_scale": 352, "v_scale": 352, "reshape_input": 352, "q_k_src2": 352, "q_k_scale": 352, "qk_v_output_zero_point": 352, "qk_v_output_scal": 352, "ssd": [352, 397, 409], "eltwiseop_param_t": [352, 397], "element_num": [352, 397], "in_dt": 352, "out_dt": 352, "element_num_each_th": 352, "remain_el": 352, "eltwiseop_data_t": 352, "dst": [352, 388, 396, 397, 399, 400, 401, 404, 405, 409], "doxygenfil": 352, "gather_typ": 352, "spec_translnorm_typ": 352, "direct": 352, "layernorm_ba_param_t": 352, "input_dt": [352, 396, 409], "output_dt": [352, 409], "output2_dt": 352, "spec_typ": [352, 409], "row_num": 352, "col_num": 352, "process_col": [352, 396], "direct_process_row": 352, "process_batch_per_k": 352, "ker_per_batch": 352, "batch_num": 352, "thread_elt_offset": [352, 396], "split_output": 352, "layernorm_ba_data_t": 352, "dst2": 352, "process_row": 352, "anonym": 352, "ep": 352, "1e": 352, "matmul_param_t": 352, "m_tile": 352, "n_tile": 352, "matmul_fp8_param_t": 352, "bfloat16_t": 352, "weight_bf16": 352, "int8_t": 352, "weight_int8": 352, "float8_e4m3_t": 352, "weight_f8_e4m3": 352, "float8_e5m2_t": 352, "weight_f8_e5m2": 352, "uint8_t": [352, 396, 397], "weight_8bit": 352, "weight_typ": 352, "has_scale0": 352, "has_append_sum": [352, 409], "thread_num": 352, "matmul_data_t": 352, "src0": [352, 409], "src1": [352, 383, 396, 409], "src2": [352, 396, 409], "matmul_u8_data_t": 352, "zp": [352, 396], "matmul_fp8_data_t": 352, "mata": 352, "matb": 352, "matc": 352, "matd": 352, "mate": 352, "astep": 352, "bstep": 352, "cstep": 352, "dstep": 352, "kpo": 352, "matmul_input": 352, "scale0": 352, "zp0": 352, "append_sum": 352, "matmul_io_max": 352, "matmul_io": 352, "dst0": 352, "matmul_output": 352, "mean_var_reduce_param_t": 352, "bm": 352, "bn": 352, "mean_var_reduce_data_t": 352, "mean_in": 352, "var_in": 352, "mean_out": 352, "var_out": 352, "spec_softmax_typ": 352, "lut": [352, 394, 396, 397, 409], "softmax_param_t": 352, "sepc_typ": 352, "scalar_num": 352, "vec_align_len": 352, "vec_tail_len": 352, "vec_num_per_thr": 352, "vec_num_tail_thr": 352, "get_lut_exp_attr": 352, "softmax_data_t": 352, "tmp": [352, 397, 399, 401, 404], "process_vec_num": 352, "typedef": 352, "amx_params_t": 352, "amx_bf16_params_t": 352, "amx_int8_params_t": 352, "amx_inputs_t": 352, "amx_bf16f32_inputs_t": 352, "amx_bf16bf16_inputs_t": 352, "sparse_schem": 352, "scenario": [352, 373, 401], "spmm_vnni": 352, "sparse_x_dens": 352, "dense_x_spars": 352, "sparse_x_spars": 352, "subfunc_level": [352, 409], "non_kdim": 352, "kdim": 352, "subfunc_level_max": [352, 409], "variabl": [352, 382, 385, 388, 409, 410], "constexpr": 352, "wei": [352, 409], "todo": [352, 418], "yi": 352, "conflict": 352, "dst_m1": 352, "dst_m2": 352, "work_spac": 352, "vnni_param_t": 352, "spmm_type": 352, "primit": [352, 388], "jit_domain": 352, "has_bia": 352, "output_typ": [352, 383], "tile_w": 352, "sub_func": 352, "im_start": 352, "blocksiz": 352, "indptr": 352, "welford": [352, 402], "dst_t": 352, "vnni_data_t": 352, "ptr_dens": 352, "int32_t": 352, "ptr_bia": 352, "ptr_dst": 352, "ptr_scale": 352, "ptr_dst_m1": 352, "ptr_dst_m2": 352, "num_tilem": 352, "tilem": 352, "tilen": 352, "16": [352, 362, 376, 377, 382, 391, 393, 399, 400, 401, 402, 405, 406, 407, 409, 416], "blocks_per_group": 352, "64": [352, 361, 379, 383, 390, 391, 393, 401, 403, 404, 406, 407, 409], "sizeof": 352, "nnz_group": 352, "nrowptr": 352, "colidx": 352, "group_rowptr": 352, "same_src_dtyp": 352, "src_t": 352, "wgt_t": 352, "bia_t": 352, "avx512_fp32_params_t": 352, "int64_t": 352, "bsc_data_t": 352, "sparse_ptr": 352, "im_end": 352, "in_start": 352, "in_end": 352, "avx512_data_t": 352, "dens": [352, 383, 384, 389, 394, 405, 409, 415], "transpose_copy_param": 352, "srcptr": 352, "dstptr": 352, "srcstride": 352, "dststride": 352, "seq_vnni_copy_param": 352, "transpose_mha_step1_param": 352, "expsum": 352, "cfg": 352, "batchk": [352, 404], "sumstep": 352, "cbatchstep": 352, "scaleab": 352, "transpose_mha_step2_param": 352, "sumptr": 352, "transpose_mha_step3_param": 352, "scalec": 352, "zeropointc": 352, "transpose_mha_io": 352, "src_k": 352, "src_q": 352, "src_v": 352, "tmp2m": 352, "sl_pad": 352, "head_num": [352, 403, 409], "head_siz": [352, 403, 409], "seq_len": [352, 374, 382, 383, 387, 403, 409], "scale_q": 352, "scale_k": 352, "scale_v": 352, "scale_dst": 352, "zp_dst": 352, "transpose_mha_io_max": 352, "within": [361, 371, 393, 400], "arch": 361, "proposit": 361, "propos": [361, 375, 395], "promis": [361, 400, 401], "assess": 361, "128": [361, 374, 382, 383, 387, 390, 391, 392, 393, 407, 409, 416], "advisor": 361, "ever": [361, 393], "network": [361, 375, 381, 382, 383, 385, 400, 415, 416], "student": [361, 375, 376], "minim": [361, 375, 405], "done": [361, 375, 384, 401, 409, 416], "z": [361, 375, 393], "distanc": [361, 375], "euclidean": [361, 375], "kullback": [361, 375], "leibler": [361, 375], "diverg": [361, 375, 393], "term": [361, 375, 400, 403, 405, 411, 412, 413, 416], "assign": [361, 401], "cal": 361, "sloss": 361, "mismatch": 361, "512": [361, 383, 392, 393, 400, 402, 405, 407, 409], "desir": [361, 383, 393], "unmatch": 361, "agent": 361, "train_func_builtin": 361, "flash_distil": 361, "eval_func_builtin": 361, "els": [361, 362, 381, 388], "search_loop": 361, "model_arch_para": 361, "oob": 361, "246": 361, "intra_bottleneck_s": 361, "96": [361, 391, 407], "160": [361, 391, 406], "num_attention_head": 361, "intermediate_s": 361, "640": 361, "num_feedforward_network": 361, "mobilebert": [361, 375, 376], "kl": 361, "mse": 361, "best_model_arch": 361, "automodelforpretrain": 361, "higher_is_bett": 361, "10": [361, 373, 374, 379, 382, 383, 391, 393, 399, 407, 409], "42": [361, 391, 407], "500": 361, "25000": 361, "mobilebert_distil": 361, "sgd": 361, "learning_r": 361, "001": 361, "mobilebert_na": 361, "5000": 361, "partial": 361, "pylint": [361, 372], "disabl": [361, 371, 391, 393, 407, 409], "e1101": 361, "makedir": 361, "exist_ok": 361, "120": [361, 406], "240": 361, "256": [361, 383, 392, 407, 409], "eval_loss": [361, 378], "tfautomodelforsequenceclassif": 361, "inherit": [362, 375, 381, 388, 414, 415, 416], "adjust": [362, 388, 393, 416], "physic": [362, 371, 393, 403], "model_nam": [362, 414], "dataset_nam": 362, "autotoken": [362, 374, 414], "load_dataset": [362, 373, 374], "195": 362, "intel_extension_for_transform": [362, 373, 374, 375, 378, 379, 381, 382, 384, 386, 389, 390, 394, 409, 412, 413, 414, 415, 416], "summari": 362, "003": 362, "throughput": [362, 374, 391, 401], "5071": 362, "933": [362, 391], "guid": [365, 374, 375, 381, 397, 399, 421], "formerli": [366, 374, 379, 394, 422], "known": [366, 374, 393, 394, 422], "sparselib": [366, 384, 394, 422], "high": [366, 374, 382, 390, 392, 394, 401, 402, 405, 422], "assembli": [366, 394, 398, 400, 405, 406, 422], "introduc": [368, 372, 395, 396, 397, 398, 399, 401, 403, 404, 405, 416, 424], "who": [368, 371, 393, 397, 424], "might": [368, 385, 393, 424], "profil": [368, 424, 425], "intruct": [368, 424], "met": [368, 424], "request": [368, 374, 424], "interest": 371, "foster": 371, "welcom": [371, 372], "maintain": [371, 372, 374, 385, 390, 393, 417], "particip": [371, 393, 398], "harass": 371, "free": [371, 396, 409], "everyon": 371, "regardless": 371, "ag": 371, "bodi": [371, 403], "ethnic": 371, "sex": 371, "gender": 371, "express": 371, "educ": 371, "socio": 371, "econom": [371, 390], "statu": [371, 413, 416], "nation": 371, "person": 371, "appear": [371, 393], "race": 371, "religion": 371, "sexual": 371, "orient": 371, "contribut": 371, "inclus": 371, "Being": 371, "viewpoint": 371, "gracefulli": 371, "critic": 371, "focus": [371, 393], "what": [371, 396, 397, 403, 415], "show": [371, 374, 381, 382, 385, 386, 389, 393, 399, 401, 403], "empathi": 371, "unaccept": 371, "imageri": 371, "unwelcom": 371, "troll": 371, "insult": 371, "derogatori": 371, "comment": 371, "polit": 371, "attack": 371, "electron": 371, "permiss": 371, "reason": [371, 385, 388, 402], "consid": [371, 384, 393, 395, 397, 399, 410], "inappropri": 371, "profession": 371, "clarifi": 371, "appropri": [371, 381, 396, 404], "fair": 371, "action": 371, "edit": 371, "reject": 371, "wiki": 371, "align": [371, 395, 397, 405], "ban": 371, "temporarili": 371, "perman": 371, "threaten": 371, "offens": 371, "harm": [371, 405], "offici": 371, "mail": 371, "post": [371, 383, 409], "via": [371, 396, 399, 406], "social": 371, "media": 371, "act": [371, 400], "appoint": 371, "onlin": [371, 374, 402], "offlin": [371, 399, 405, 416], "event": 371, "further": [371, 378, 384, 393, 400], "abus": 371, "report": [371, 372, 374], "contact": [371, 417], "complaint": 371, "review": [371, 372], "investig": [371, 405], "circumst": 371, "team": 371, "oblig": 371, "confidenti": 371, "regard": 371, "incid": 371, "polici": [371, 421], "good": [371, 398, 399], "faith": 371, "temporari": [371, 403], "repercuss": 371, "leadership": 371, "faq": 371, "page": [371, 372, 374, 378], "improv": [372, 374, 383, 393, 396, 398, 400, 401, 405, 416], "send": 372, "style": 372, "flake8": 372, "autopep8": 372, "clean": 372, "bug": [372, 374], "fix": [372, 384, 399], "jira": 372, "ticket": 372, "xxx": [372, 374], "risk": [372, 393], "pr": [372, 409], "reproduc": [372, 393], "submit": [372, 374, 393], "reach": [372, 374, 393], "intend": [372, 393], "safe": 372, "collabor": 372, "adher": 372, "tool": [373, 374, 376, 383, 390, 394, 409], "integr": [373, 425], "lab": 373, "pip": [373, 374, 379, 381, 387, 408], "clone": [373, 374, 379, 380, 381], "itrex": [373, 374, 379, 380, 382], "cd": [373, 374, 379, 380, 381, 382, 387, 392, 394, 406, 409], "v": [373, 374, 379, 381, 403, 404], "dev": 373, "data_fil": 373, "delimit": [373, 409], "asserttru": 373, "len": [373, 381, 382, 389, 403], "column": [373, 395, 400, 402, 405, 415], "conduct": 373, "deploy": [373, 374, 378, 384, 387], "ocraug": 373, "spellingaug": 373, "contextualwordembsforsentenceaug": 373, "xl": 373, "xlnet": [373, 376], "Not": [373, 400], "rescu": 373, "natur": [373, 374, 376, 393, 402], "sst": [373, 374, 376, 378, 414], "txt": [373, 382, 384, 387, 406, 408], "w": [373, 382, 383, 384, 395, 398, 404], "fw": 373, "clm": [373, 376], "train_fil": 373, "validation_fil": 373, "model_dir": 373, "python3": [373, 380], "run_clm": 373, "do_train": 373, "do_ev": 373, "overwrite_output_dir": 373, "secondli": 373, "training_set": 373, "line": [373, 381, 384, 393, 395, 402, 403, 405, 410], "repetit": [373, 393], "penalti": [373, 392], "platform": [374, 392, 408, 416], "particularli": [374, 393], "gen": [374, 397], "imag": [374, 376, 386, 389, 399, 405], "becom": [374, 385, 390, 393, 405], "wide": [374, 375, 397, 398, 416], "art": 374, "popular": 374, "visit": [374, 391, 407], "skylak": 374, "cascad": [374, 379], "lake": [374, 379], "ic": 374, "cooper": [374, 401], "seri": [374, 393, 396, 399, 409], "hbm": 374, "develop": [374, 388, 392], "product": [374, 391, 403, 407, 413, 416], "easi": [374, 384, 386], "rich": 374, "demonstr": [374, 376, 378, 403, 405], "extrem": [374, 378, 393], "togeth": [374, 393], "significantli": [374, 393, 402, 404], "cento": [374, 379], "ubuntu": [374, 379, 391, 407], "04": [374, 376, 379, 391, 407], "window": [374, 379, 380], "succeed": 374, "grep": 374, "matrix": [374, 378, 395, 398, 399, 400, 402, 403, 404, 405, 409, 415, 419], "load_metr": 374, "np": 374, "automodelforsequenceclassif": [374, 378], "evalpredict": 374, "english": [374, 376, 378, 414], "lambda": 374, "usag": [374, 393, 412, 413], "label2id": [374, 378], "id2label": [374, 378], "neg": [374, 378, 393, 409], "pred": 374, "argmax": [374, 378], "axi": [374, 381, 383, 403, 404], "label_id": 374, "q_config": [374, 378, 416], "eval_accuraci": [374, 375, 378, 415], "tmp_trainer": 374, "enable_executor": [374, 377], "set_log_fil": 374, "load_graph": 374, "dummydataload": 374, "compute_perform": 374, "reduc": [374, 388, 393, 395, 396, 398, 400, 401, 402, 404, 405, 416], "glog_minloglevel": [374, 382, 387], "obtain": [374, 376, 383, 393, 404], "section": [374, 393, 394, 405, 406], "input_model": [374, 383, 386, 387], "warm_up": 374, "p50": 374, "50": [374, 406], "p90": 374, "90": [374, 376, 383, 391], "p99": 374, "99": [374, 376, 407], "sec": [374, 391], "tutori": [374, 382], "resourc": [374, 375, 398], "catalog": 374, "brand": [374, 411], "claim": [374, 411], "properti": [374, 382, 411], "trademark": 374, "expens": 375, "deploi": [375, 425], "power": [375, 376, 393], "mobil": 375, "shown": [375, 384, 400, 404, 405], "produc": [375, 393, 405], "instruct": [375, 385, 392, 396, 399, 401, 404, 405, 406, 409, 416], "besid": [375, 397], "often": 375, "patient": 375, "compact": 375, "agnost": 375, "summar": [375, 376], "usual": [375, 385, 395, 405, 416], "1x1": [375, 384], "d_conf": [375, 378], "tune_metr": [375, 415], "metric_": 375, "classifi": 375, "distillation_conf": 375, "distilled_model": 375, "intermediatelayersloss": 375, "meanwhil": [376, 395, 401], "posttrainingdynam": [376, 377, 416], "wikitext": 376, "10004": [376, 377], "xsum": 376, "cnn": 376, "cnn_dailymail": 376, "dm": 376, "lambdalab": 376, "sd": 376, "pokemon": 376, "mlm": 376, "plm": 376, "eleutherai": 376, "neo": 376, "125m": 376, "sshleifer": 376, "wip": [376, 399], "star": 376, "ehdwns1516": 376, "uncased_swag": 376, "swag": 376, "squad": 376, "valhalla": 376, "longform": 376, "4096": [376, 407], "squadv1": 376, "lvwerra": 376, "pegasu": 376, "samsum": 376, "textattack": [376, 386], "mrpc": [376, 386, 387], "echarlaix": 376, "acc91": 376, "d37": 376, "hybrid": 376, "elast": 376, "conll03": 376, "conll2003": 376, "small": [376, 384, 401, 403], "translat": 376, "wmt16": 376, "helsinki": 376, "opu": 376, "mt": [376, 408], "en": 376, "ro": 376, "quantizationawaretrain": [376, 377], "maskinun": 376, "distilgpt2": 376, "rocketknight1": 376, "dslim": 376, "ner": 376, "mb": 376, "f1": [376, 412], "gflop": [376, 407, 410], "speedup": 376, "compar": [376, 392, 393, 395, 398, 409, 416], "415": [376, 391], "47": [376, 391, 407], "88": [376, 391, 406, 407], "58": [376, 407], "56": [376, 392, 406, 407], "35": [376, 391, 407], "1x": 376, "la": [376, 398], "minilmv2": 376, "115": 376, "89": [376, 407], "28": [376, 391, 399, 407], "76": [376, 406, 407], "33x": 376, "269": 376, "253": 376, "252": [376, 406], "202": 376, "104": 376, "34": [376, 407], "87": [376, 407], "11": [376, 379, 387, 399, 407], "44": [376, 383, 391, 406, 407], "49": [376, 389, 391, 407], "94x": 376, "84": [376, 407], "85": [376, 391, 407], "21x": 376, "315": 376, "251": [376, 407], "242": [376, 391, 407], "159": [376, 406], "142": [376, 407], "33": [376, 390, 407], "86": [376, 407], "68": [376, 406, 407], "41": [376, 391, 407], "55": [376, 392, 406, 407], "82x": 376, "amount": [376, 393, 398], "torchprofil": 376, "platinum": [376, 391, 407], "8280": 376, "unstructur": [376, 415], "lasso": [376, 415], "nbsp": [376, 391, 407], "qnli": 376, "qqp": 376, "mnli": 376, "v1": 376, "tinybert_general_4l_312d": 376, "distilroberta": 376, "cola": 376, "krishna2020": 376, "googl": 376, "wikipedia": 376, "prajjwal1": 376, "approch": 376, "pruneofa": 376, "patternlock": [376, 415], "bhadresh": 376, "savani": 376, "emot": 376, "fac": 376, "mini": [376, 383, 387, 391], "gchhablani": 376, "philschmid": 376, "l6": 376, "h384": 376, "moshew": [376, 387], "80": [376, 383, 391, 407], "1x4": [376, 405], "desigh": 377, "32": [377, 382, 390, 391, 392, 399, 400, 402, 403, 404, 405, 406, 407, 409], "bfloat": 377, "fetch": [377, 395, 398], "flag": 377, "enable_bf16": 377, "bfloat16": 377, "qlinear": [377, 386], "u8s8": 377, "u8u8": 377, "highli": 377, "suggest": [377, 396], "quick": [378, 381], "p_conf": [378, 415], "reduct": [378, 400, 403], "accommod": 378, "budget": 378, "tradeoff": [378, 399], "dynamic_length_config": 378, "aim": [378, 381, 383, 385, 393], "opportun": 378, "hw": 378, "sw": 378, "recommend": [379, 381, 384, 387, 389, 390, 392, 393, 402, 406], "protobuf": [379, 387], "nightli": 379, "conda": [379, 387], "satisfi": [379, 389, 401], "success": 379, "gcc": [379, 380], "linux": [379, 380], "visual": [379, 393], "studio": 379, "icelak": 379, "futur": [379, 386, 396, 397, 406], "ipex": [379, 416], "13": [379, 391, 399, 407], "cmake": [380, 382, 392, 394, 406, 409], "submodul": [380, 382], "updat": [380, 382, 393, 402, 415], "recurs": [380, 382, 389], "mkdir": [380, 382, 392, 394, 406, 409], "dpython_execut": 380, "dne_with_sparselib": [380, 409], "neural_engine_pi": 380, "cpython": 380, "37m": 380, "x86_64": 380, "gnu": 380, "libkernellib": 380, "libneural_engin": 380, "lib": [380, 382], "subdirectori": 380, "pure": [380, 397], "certain": [381, 389, 393], "simplifi": [381, 385], "attach": [381, 389], "distilbert_bas": 381, "assum": [381, 389, 398], "command": [381, 382, 386, 393, 410], "repo": [381, 409], "instal": [381, 393, 408, 421], "These": [381, 385, 389, 393, 398, 404], "roughli": [381, 401], "divid": [381, 389, 395, 400, 401, 404, 410], "categori": [381, 383], "dst_shape": [381, 382, 388], "father": 381, "keep_dim": 381, "ax": [381, 403], "come": 381, "rewrit": 381, "_attr": 381, "successfulli": [381, 389], "forget": [381, 385, 388], "reinstal": 381, "enter": 381, "you_work_dir": 381, "noth": [381, 389], "wrong": [381, 389], "anoth": [381, 385, 390, 393, 406], "correctli": 381, "distil_bert_bas": 381, "pattern_mapping_config": 381, "div": [381, 385], "becaus": [381, 396, 399, 404, 416], "even": [381, 395], "delv": 381, "recogn": [381, 425], "put": [381, 382, 385, 392], "namedtupl": 381, "__call__": 381, "retriev": 381, "actual": [381, 382, 402], "equival": [381, 405], "supported_pattern": 381, "influenc": [381, 385, 393], "pattern_dict": 381, "new_node_nam": 381, "ret_old_nod": 381, "talk": 381, "denomin": 381, "numer": [381, 416], "stabil": 381, "_set_attr": 381, "ln_node_idx": 381, "finish": [381, 385, 387], "yourself": [381, 389, 392], "seq": [382, 403], "bert_model": 382, "30522": 382, "1024": [382, 383, 384, 392, 407, 409], "125018112": 382, "slightli": 382, "activ": [382, 386, 387, 390, 393, 395, 399, 400, 401, 404, 409, 416], "throught": 382, "numactl": [382, 392], "bind": [382, 392], "omp_num_thread": [382, 392], "session": [382, 390], "glog": 382, "nerual": 382, "cc": 382, "cmakelist": 382, "reus": [382, 390, 393, 401], "engine_integr": 382, "cp": [382, 392], "nlp_executor": 382, "neural_engine_exampl": 382, "ne": [382, 392], "root": 382, "ne_root": 382, "project_source_dir": 382, "link": [382, 388, 415], "runtime_output_directori": 382, "add_execut": 382, "target_include_directori": 382, "boost_inc_dir": 382, "target_link_librari": 382, "cmake_thread_libs_init": 382, "gflag": 382, "dir": 382, "set_target_properti": 382, "analyz": 383, "readm": [383, 386, 393], "run_executor": [383, 387], "model_and_token": [383, 386, 387], "Of": [383, 389, 398], "cours": [383, 389, 398], "proflil": 383, "latanc": 383, "perf": [383, 405, 409, 410], "perfrom": 383, "chrome": 383, "inst": 383, "count": [383, 388, 390], "pref": 383, "semi": 383, "70": [383, 391], "256x256": [383, 409], "settabl": 383, "256x1024": 383, "1024x256": 383, "gelu_tanh": [383, 388], "add_37": 383, "116": [383, 407], "641": 383, "00": 383, "075": 383, "0375": 383, "comparison": [383, 405], "185": 383, "801": 383, "693": 383, "366": 383, "content": 383, "part1": [383, 388], "modif": 383, "xlsx": 383, "titl": [383, 411], "model_infer": 383, "friendli": [383, 401, 402], "000": 383, "wall": 383, "durat": 383, "17": [383, 391, 399, 407], "138": 383, "iteration4": 383, "726": 383, "phrase": 383, "0m": 383, "permut": [383, 399, 403, 409], "perm": [383, 403], "add_284": 383, "028": [383, 407], "044": 383, "reshape_tim": 383, "004m": 383, "forward_tim": 383, "044m": 383, "input_tensor_nam": 383, "matmul_357": 383, "matmul_358": 383, "matmul_346": 383, "input_typ": 383, "f32": [383, 388, 392], "output_tensor_nam": 383, "output_shap": 383, "append_op": 383, "src1_perm": 383, "pictur": [384, 395, 408], "bring": [384, 400, 404, 405], "mainli": [384, 392, 401, 402], "merg": [384, 389], "off": [384, 393], "model_path": [384, 390], "isa": [384, 394, 396, 401, 404, 405, 406], "int8_model_path": 384, "shape_0": 384, "shape_1": 384, "shape_2": 384, "enlarg": 384, "subsequ": [384, 393, 401, 404], "remark": 384, "micro": [384, 395, 400, 405], "oc": [384, 409], "mk": 384, "kn": 384, "nhwc": 384, "nxhxw": 384, "h": [384, 393], "nk": 384, "km": 384, "mmkmb": 384, "mmxmb": 384, "fulfil": 384, "along": [384, 400, 403, 405], "omp": 384, "higher": [384, 392, 393, 403, 405, 409, 416], "unrol": [384, 398, 400], "know": [384, 390, 399], "disk": [384, 386, 390], "enable_op_tun": 384, "execution_opt": [384, 390], "engine_dispatch_t": 384, "workspac": 384, "row": [384, 398, 399, 401, 405, 415], "rest": [384, 385, 389, 403, 405], "hash": [384, 396], "kernel_config": [384, 409], "kernel_nam": [384, 409], "3025159985633461085": 384, "40": [384, 391, 393], "14124194128933833351": 384, "thing": 384, "affect": [384, 393, 401, 404, 410], "simul": [384, 405, 406], "warmup_it": 384, "num_iter": 384, "dispatch_table_file_root": 384, "file_root": 384, "script": [384, 386, 392, 408], "prevent": [384, 393], "imprecis": 384, "purpos": [385, 389, 396, 401], "realiz": 385, "suppli": [385, 389, 390], "recognit": [385, 389], "embeddings_reshap": 385, "said": 385, "thought": 385, "st": 385, "nd": 385, "copi": [385, 403], "greater": [385, 412, 413], "sent": 385, "written": 385, "phenomenon": 385, "Its": 385, "situat": [385, 393, 402], "nod": 385, "leav": [385, 403, 405, 409], "old_node_index": 385, "_get_pattern_info": 385, "_create_out_pattern": 385, "_replace_pattern": 385, "emitt": 386, "netron": 386, "bash": [386, 387], "prepare_model": [386, 387], "sh": [386, 387, 410], "ptq": 386, "much": [386, 393, 398], "ir_path": 386, "focu": [387, 393, 403, 412], "home": 387, "distilbert_base_uncas": 387, "r": [387, 391, 393, 407, 408, 416], "prepare_dataset": 387, "shell": 387, "tokenizer_dir": 387, "data_dir": 387, "geluoper": 388, "destructor": 388, "operatorconfig": 388, "algorithm_": 388, "eng_": 388, "eltwise_forward": 388, "gelu_p_": 388, "src_m_": 388, "dst_m_": 388, "attrs_map": 388, "operator_conf_": 388, "becuas": 388, "src_shape": 388, "dst_tensor_ptr": 388, "set_shap": 388, "stride": [388, 395], "src_stride": 388, "getstrid": 388, "dst_stride": 388, "desc": [388, 396, 397], "src_md": 388, "dst_md": 388, "part2": 388, "gelu_algorithm": 388, "gelu_erf": 388, "eltwise_gelu_erf": 388, "eltwise_gelu_tanh": 388, "gelu_d": 388, "prop_kind": 388, "primitive_desc": 388, "gelu_pd": 388, "unrefernc": 388, "manag": [388, 390], "strictli": 388, "alia": 388, "src_data": 388, "dst_data": 388, "mutable_data": 388, "data_ptr": 388, "set_data_handl": 388, "const_cast": 388, "reinterpret_cast": 388, "memory_args_": 388, "dnnl_arg_src": 388, "dnnl_arg_dst": 388, "unref": 388, "unref_tensor": 388, "especi": [388, 405], "int8_lut_optim": 388, "int8_lut_acc_test": 388, "set_dtyp": 388, "register_operator_class": 388, "rule": 389, "recruit": 389, "ln_pattern": 389, "grow": 389, "concis": 389, "intuit": [389, 401], "choos": 389, "prefer": [389, 403], "longer": [389, 393], "ones": 389, "op_type1": 389, "op_type2": 389, "type1": 389, "type2": 389, "elig": 389, "a_node_name_1": 389, "b_node_name_1": 389, "c_node_name_1": 389, "a_node_name_2": 389, "b_node_name_2": 389, "c_node_name_2": 389, "a_node_name_n": 389, "b_node_name_n": 389, "c_node_name_n": 389, "bert_large_model_path": 389, "layer_0": 389, "layer_1": 389, "layer_2": 389, "afterward": 389, "volatil": 389, "incorrect": 389, "outcom": 389, "Or": 389, "exactli": 389, "screen": 389, "occur": [389, 395, 402], "alreadi": 389, "moment": 389, "varianc": [389, 402], "batchnorm": 389, "mul_1": 389, "mul_2": 389, "add_1": 389, "cycl": [390, 406], "pointer": 390, "life": 390, "malloc": 390, "getmemori": 390, "consum": [390, 399], "lead": [390, 393, 403, 405], "wast": [390, 401, 402], "veri": [390, 395, 397, 398, 401], "alloc": [390, 397, 398], "faster": 390, "setp": 390, "activation_mem_compress": 390, "max_input_shapes_list": 390, "warm": 390, "quit": [390, 396], "llama": [390, 392, 393], "7b": [390, 392, 393], "past_k_v_0": 390, "past_k_v_1": 390, "63": [390, 391, 407], "beam": 390, "extra": [390, 393, 401], "dag": 390, "activation_dag": 390, "dump_activation_dag": 390, "execution_mod": 390, "07": [391, 407], "8375c": [391, 407], "aw": [391, 407], "c6i": [391, 407], "12xlarg": [391, 407], "vari": [391, 407], "factor": [391, 407], "www": [391, 407], "batchsiz": 391, "2652": 391, "36": [391, 407], "513": 391, "lt": [391, 407], "50m": 391, "2181": 391, "43": [391, 407], "628": 391, "1719": 391, "91": [391, 407], "75": [391, 407], "1487": [391, 407], "255": [391, 404, 416], "1220": 391, "39": [391, 407], "143": 391, "1304": 391, "46": [391, 407], "066": 391, "1102": [391, 407], "870": 391, "487": 391, "750": 391, "82": [391, 406, 407], "690": [391, 407], "188": 391, "910": [391, 407], "921": [391, 407], "729": 391, "71": [391, 406, 407], "619": 391, "38": [391, 406, 407], "821": [391, 407], "499": 391, "429": [391, 406], "936": [391, 407], "680": 391, "318": [391, 407], "557": 391, "262": 391, "467": 391, "589": 391, "405": 391, "339": 391, "473": 391, "119": [391, 407], "389": 391, "945": [391, 407], "360": 391, "274": 391, "843": 391, "259": [391, 406, 407], "442": 391, "241": 391, "364": 391, "016": [391, 407], "303": 391, "266": 391, "45": [391, 407], "05": [391, 393, 407], "221": 391, "973": 391, "112": [391, 407], "349": 391, "938": [391, 407], "275": [391, 406], "614": 391, "217": 391, "37": [391, 407], "039": 391, "301": 391, "166": 391, "033": 391, "320": 391, "769": 391, "263": 391, "724": [391, 407], "207": 391, "819": [391, 407], "181": 391, "021": 391, "979": [391, 407], "74": [391, 407], "235": 391, "091": 391, "51": [391, 407], "914": [391, 407], "698": [391, 407], "905": [391, 407], "8972": 391, "076": [391, 407], "20m": 391, "7192": 391, "19": [391, 399, 407], "906": 391, "5482": 391, "509": 391, "4808": 391, "952": 391, "3678": 391, "409": 391, "4750": 391, "975": [391, 407], "3647": 391, "867": 391, "2921": 391, "587": [391, 407], "2576": 391, "18": [391, 399, 407], "768": [391, 407], "2131": [391, 407], "913": [391, 407], "2804": 391, "096": 391, "2263": 391, "037": 391, "1938": 391, "756": [391, 407], "1581": 391, "15": [391, 393, 399, 400, 405, 407], "1409": 391, "015": 391, "2116": 391, "113": 391, "1777": 391, "972": [391, 407], "1474": 391, "392": 391, "1278": 391, "1137": 391, "752": 391, "1594": 391, "124": 391, "1347": [391, 407], "1126": 391, "993": [391, 407], "258": 391, "890": [391, 407], "877": [391, 407], "1319": 391, "1086": 391, "931": [391, 407], "545": 391, "833": 391, "332": [391, 407], "747": [391, 407], "141": 391, "1106": [391, 407], "31": [391, 399, 400, 407], "924": 391, "446": 391, "719": 391, "633": 391, "501": 391, "816": 391, "961": 391, "549": 391, "807": 391, "868": [391, 407], "701": [391, 407], "117": 391, "613": 391, "618": 391, "515": 391, "484": 391, "75384": 391, "989": 391, "1m": 391, "55628": 391, "917": 391, "49120": 391, "957": [391, 407], "41598": 391, "39218": 391, "31211": 391, "788": [391, 407], "28399": 391, "848": 391, "24910": 391, "966": 391, "20505": 391, "18575": 391, "865": 391, "25485": 391, "987": 391, "17468": 391, "16771": 391, "971": [391, 407], "16004": 391, "996": [391, 407], "13381": 391, "894": [391, 407], "13990": 391, "863": [391, 407], "13154": 391, "12535": 391, "12102": 391, "998": 391, "8426": [391, 407], "8736": 391, "8282": 391, "967": 391, "6659": 391, "898": [391, 407], "6477": 391, "6290": 391, "974": [391, 407], "8598": 391, "6449": 391, "935": [391, 407], "6263": [391, 407], "965": [391, 407], "6080": 391, "988": 391, "3684": 391, "817": [391, 407], "6246": 391, "978": 391, "6374": 391, "947": [391, 407], "6026": 391, "3300": [391, 407], "926": 391, "3226": 391, "6221": 391, "958": 391, "6322": 391, "6081": 391, "985": [391, 407], "3368": 391, "3264": 391, "distillbert": 391, "15460": 391, "296": 391, "10m": 391, "13129": 391, "363": 391, "11323": 391, "578": [391, 407], "10072": 391, "599": 391, "8689": 391, "7901": 391, "205": [391, 407], "6737": 391, "562": 391, "5440": 391, "904": [391, 407], "4920": 391, "786": [391, 407], "4460": 391, "053": 391, "5280": 391, "179": 391, "4339": 391, "244": [391, 406], "3634": [391, 407], "928": 391, "3255": 391, "211": [391, 407], "2928": 391, "197": [391, 407], "3681": 391, "527": [391, 407], "2965": [391, 407], "106": [391, 407], "2741": 391, "862": [391, 407], "2351": 391, "2150": 391, "282": 391, "2918": 391, "316": 391, "2505": [391, 407], "602": 391, "2010": [391, 407], "995": 391, "1872": 391, "609": [391, 407], "2409": 391, "983": 391, "1993": 391, "013": 391, "1671": [391, 407], "627": 391, "1484": 391, "1342": [391, 407], "1910": 391, "456": [391, 407], "1659": 391, "687": 391, "1293": 391, "245": [391, 407], "1230": 391, "798": 391, "1091": 391, "261": 391, "1627": 391, "908": 391, "1397": 391, "684": 391, "1130": 391, "1081": 391, "353": 391, "982": [391, 407], "187": [391, 406], "manufactur": [391, 407], "amazon": [391, 407], "ec2": [391, 407], "bio": [391, 407], "1021": [391, 407], "microcod": [391, 407], "0xd000331": [391, 407], "irq": [391, 407], "balanc": [391, 393, 407], "xeonplatinum": 391, "90ghz": [391, 407], "frequenc": [391, 407, 415], "9ghz": [391, 407], "5ghz": [391, 407], "socket": [391, 407], "numa": [391, 407], "turbo": [391, 407], "frequencygovern": [391, 407], "bare": 392, "metal": 392, "llm": 392, "solut": [392, 402, 405], "borrow": 392, "cpp": [392, 393, 409], "almost": 392, "macro": 392, "difficult": 392, "hierarch": 392, "bitsfrom": 392, "avx512f": [392, 394, 403, 409, 423], "x86": 392, "gpu": [392, 398], "short": 392, "ninja": 392, "65b": 392, "30b": 392, "13b": 392, "tokenizer_checklist": 392, "chk": 392, "convert_llama": 392, "outtyp": 392, "outfil": 392, "quant_llama": 392, "model_fil": 392, "out_fil": 392, "q4_j": 392, "block_siz": 392, "gemm_isa": 392, "vnni": [392, 394, 395, 399, 403, 404, 407, 409, 416, 423], "q4_j_vnni_b128": 392, "gptneox": 392, "convert_gptneox": 392, "input_model_name_or_path": 392, "quant_gptneox": 392, "mpt": 392, "convert_mpt": 392, "quant_mpt": 392, "falcon": 392, "convert_falcon": 392, "quant_falcon": 392, "main_llama": [392, 393], "color": [392, 393, 403, 405], "she": 392, "door": 392, "main_gptneox": 392, "main_mpt": 392, "main_falcon": 392, "main_gptj": 392, "q8": 392, "gptj_bind": 392, "awai": 393, "path_to_model": 393, "upon": 393, "cover": 393, "commonli": 393, "program": [393, 395, 411], "fname": 393, "ggml": 393, "respons": [393, 395, 401, 402, 404], "ins": 393, "alpaca": 393, "n_predict": 393, "ctx_size": 393, "were": 393, "2048": [393, 409], "wait": 393, "offer": 393, "engag": 393, "convers": [393, 416], "variou": 393, "press": 393, "interject": 393, "backslash": 393, "immedi": 393, "excel": 393, "differenti": 393, "distinguish": [393, 409], "tailor": 393, "chat": 393, "paus": 393, "encount": 393, "switch": 393, "jump": 393, "back": [393, 401, 402, 403, 404], "turn": [393, 403], "speak": 393, "overcom": 393, "conjunct": [393, 412], "assist": [393, 417], "technic": 393, "reset": 393, "lose": 393, "comprehend": 393, "yield": [393, 416], "increas": [393, 398], "beyond": 393, "unpredict": 393, "retain": 393, "topic": 393, "remain": 393, "divers": 393, "creativ": 393, "qualiti": 393, "infin": 393, "caus": 393, "temp": 393, "determinist": 393, "conserv": 393, "At": [393, 401, 402, 404], "pick": [393, 405], "repeat_penalti": 393, "repeat_last_n": 393, "penal": 393, "nl": 393, "newlin": 393, "monoton": 393, "strongli": 393, "lenient": 393, "histori": 393, "recent": 393, "dialogu": 393, "poetri": 393, "plai": 393, "role": 393, "nonsens": 393, "subset": 393, "cumul": 393, "nucleu": 393, "95": [393, 406, 407], "impact": [393, 399], "suppress": 393, "promot": 393, "contextu": 393, "surround": 393, "closer": 393, "perplex": 393, "mirostat_lr": 393, "rate": [393, 402], "eta": 393, "mirostat_": 393, "tau": 393, "strike": 393, "excess": 393, "boredom": 393, "trap": 393, "incoher": 393, "confus": 393, "quickli": 393, "respond": 393, "feedback": 393, "slower": 393, "token_id": 393, "likelihood": 393, "manual": [393, 406], "decreas": 393, "15043": 393, "inf": 393, "never": 393, "practic": 393, "29905": 393, "preval": 393, "latex": 393, "across": 393, "oppos": 393, "logic": [393, 404, 406], "greatli": [393, 399, 404], "lock": [393, 415], "swap": 393, "trade": 393, "advantag": 393, "ram": 393, "slow": 393, "mmap": 393, "pageout": 393, "memory_f32": 393, "cost": [393, 405], "benefit": [393, 401, 405, 416], "bla": 393, "progress": 393, "startup": 393, "primari": 393, "displai": 393, "latest": [393, 406, 417], "frequent": [393, 395], "outdat": 393, "mtest": 393, "properli": 393, "lora": 393, "impli": 393, "workdir": 394, "dne_with_test": 394, "ON": [394, 409], "ut": [394, 397], "dne_with_sparselib_onli": [394, 409], "dne_with_sparselib_benchmark": [394, 409], "test_spmm_vnni_kernel": 394, "box": 394, "profl": [394, 406], "op_attr": [394, 396, 397, 403], "spmm_desc": 394, "spmm_kern": 394, "data0": 394, "data1": 394, "data2": 394, "data3": 394, "data4": 394, "unit": [394, 401], "amx": [394, 401, 404, 409, 423], "wise": [394, 409, 423], "residu": 394, "avx512": [394, 395, 399, 416], "mha": [394, 423], "spmm": [395, 403, 409], "deeplearn": 395, "multipli": [395, 401, 405, 416], "adopt": [395, 400, 405], "modern": 395, "spatial": [395, 401], "64byte": 395, "organ": 395, "associ": 395, "access": [395, 400, 401], "b1": 395, "b2": 395, "simd": [395, 396, 400], "width": [395, 396, 400, 402, 416], "evenli": 395, "discontinu": 395, "fulli": [395, 404, 405], "worst": 395, "miss": [395, 405], "destin": [395, 400, 403, 409], "l1": 395, "l2": [395, 401, 409], "perhap": 395, "mxk": [395, 409], "bxm": 395, "xk": 395, "bxkxm": 395, "nxm": 395, "2d": [395, 409], "frac": [395, 403], "dl": 396, "changeabl": 396, "operand": [396, 400], "horizont": 396, "overhead": [396, 402, 403, 404, 405], "move": 396, "binaryop_injector": 396, "postop": [396, 397, 409], "eltwise_injector": [396, 397], "escap": [396, 397], "compute_vector": 396, "arithmet": 396, "brows": 396, "dt": [396, 397], "vpaddb": 396, "vaddp": 396, "unlik": 396, "ptr": [396, 397, 406], "static_addr": 396, "addr": 396, "binaryop_alg": 396, "per_channel_qu": 396, "per_channel_dequ": 396, "op_alg": [396, 397], "op_dt": 396, "alg": 396, "set_scal": 396, "set_zp": 396, "binary_injector_init": 396, "set_mask": 396, "reg64": [396, 397], "zmm": [396, 397, 400, 402, 405], "get_addr": 396, "broadcast": [396, 400, 405, 406, 409], "enable_mask": 396, "vector_comput": [396, 397], "bianryop": 396, "comput_vector": 396, "wrapper": 396, "jit_binary_injector": 396, "addr_typ": 396, "jit_gener": [396, 397], "opmask": [396, 397], "reg": [396, 397], "mov": [396, 406], "addr_ptr": 396, "zmm_src1": 396, "regexp": 396, "step1": [396, 397, 404], "binary_injector": 396, "step2": [396, 397, 404], "data_param": 396, "binaryop_addr": 396, "param_": [396, 397], "front": 396, "append_loop_len": 396, "zmm_byte_s": 396, "get_data_s": 396, "offset_exp": 396, "bianryop_attr_list": 396, "append_vec": 396, "binary_add": 396, "eltwis": 397, "tradit": 397, "obvious": [397, 398, 402], "useless": 397, "idea": [397, 405, 415], "xbyak": 397, "algo": 397, "aplha": 397, "sacl": 397, "postop_alg": 397, "int8_lut": 397, "postop_typ": 397, "mathemat": 397, "satur": 397, "round": [397, 416], "unus": 397, "\u03b1x": 397, "\u03b2": 397, "le": 397, "gt": 397, "eng_kind_": 397, "omp_get_max_thread": 397, "omp_get_num_proc": 397, "eltwise_injector_init": 397, "chian": 397, "escape_reg": 397, "escape_eras": 397, "eras": 397, "prepare_t": 397, "zmm_src": 397, "postop_idx": 397, "reg_idx": 397, "step0": 397, "jit_eltwiseop_t": 397, "assign_reg": 397, "eltwiseop_kd_t": 397, "op_desc_": 397, "params_": 397, "remain_task_mask": 397, "scratch_": 397, "r10": 397, "reg_src": 397, "addr_src": 397, "r15": [397, 406], "addr_dst": 397, "r14": [397, 406], "reg_param": 397, "rdi": [397, 406], "remain_element_num": 397, "rsi": 397, "getidx": 397, "rcx": 397, "rdx": 397, "rsp": 397, "step3": [397, 404], "preambl": 397, "load_param": 397, "vmovup": [397, 406], "postambl": 397, "fp32_gelu_attr": 397, "bf16_gelu_attr": 397, "push_back": 397, "gen_cas": 397, "data0_desc": 397, "postop_list": 397, "fp32_gelu": [397, 409], "fp32_exp": 397, "mask_mock1": 397, "reg64_mock1": 397, "zmm_mock1": 397, "fp32_exp_attr": 397, "data1_desc": 397, "bf16_gelu": 397, "bf16_exp": [397, 409], "bf16_exp_attr": 397, "dt1op1": 397, "dt2op2": 397, "hase": 397, "get_true_data": 397, "rf_data": 397, "your_kernel_log": 397, "apply_postop_list": 397, "unit_test_util": 397, "articl": [398, 416], "opencl": 398, "snippet": 398, "unintellig": 398, "__kernel": 398, "naive_gemm": 398, "__global": 398, "globalrow": 398, "get_global_id": 398, "globalcol": 398, "col": [398, 399, 402, 404], "over": [398, 400, 403], "acc": [398, 409, 410], "0f": 398, "mxn": [398, 404, 409], "2xk": 398, "redund": [398, 415], "asub": 398, "bsub": 398, "tile_gemm": 398, "get_local_id": 398, "get_group_id": 398, "__local": 398, "initialis": 398, "accumul": [398, 403, 405], "numtil": 398, "tiledrow": 398, "tiledcol": 398, "synchronis": 398, "barrier": 398, "clk_local_mem_f": 398, "full": [398, 411, 416], "white": 398, "figur": [398, 401, 402, 403, 405, 408], "half": [398, 404], "correspondingli": 398, "workload": [398, 403], "localmemori": 398, "tight": 398, "ll": 398, "twice": [398, 404], "ping": 398, "pong": 398, "tidm": 398, "tidn": 398, "offsetm": 398, "offset": [398, 402, 403], "offsetn": 398, "areg": 398, "breg": 398, "wm": 398, "wn": 398, "lpta": 398, "tid": 398, "mod2": 398, "div2": 398, "tiledindex": 398, "indexa": 398, "indexb": 398, "veca": 398, "vecb": 398, "tt": 398, "pragma": 398, "tdpbf16p": 399, "16x32": 399, "32x16": 399, "FOR": [399, 400, 405], "TO": 399, "colsb": 399, "endfor": [399, 400, 405], "write_row_and_zero": 399, "zero_upper_row": 399, "zero_tileconfig_start": 399, "layout": [399, 402, 403, 404], "successor": 399, "1x16": [399, 405], "concaten": [399, 405, 409], "intrins": 399, "tileloadd": 399, "nonzero": 399, "vmovdqu32": 399, "altern": [399, 405], "lot": 399, "disast": 399, "16x1": [399, 403], "fly": 399, "__m512i": 399, "_mm512_set_epi16": 399, "29": [399, 407], "27": [399, 407], "26": [399, 406, 407], "25": [399, 407, 409], "23": [399, 407], "22": [399, 407], "21": [399, 407], "__m256i": 399, "lo": 399, "_mm256_loadu_epi": 399, "li": 399, "vec": 399, "_mm512_inserti32x8": 399, "_mm512_castsi256_si512": 399, "_mm512_permutexvar_epi16": 399, "_mm512_storeu_epi32": 399, "vfmadd": 400, "vfmadd231p": [400, 406], "degre": 400, "conting": 400, "bsc": 400, "variant": 400, "bsr": 400, "openmp": 400, "relief": 400, "bottleneck": [400, 402], "microkernel": 400, "peripher": 400, "implicit": 400, "technologi": 401, "among": [401, 404], "satisfactori": 401, "inevit": 401, "solv": [401, 402, 416], "facilit": [401, 404], "flexibl": 401, "divis": 401, "tdpbssd": 401, "tile_k": 401, "formula": 401, "max_tile_k": 401, "hope": 401, "large_wei_threshold": 401, "16xpad_n": 401, "tilestor": 401, "pseudo": 401, "tile_m": [401, 409], "16xn": 401, "dp_tile_n": 401, "k_dim_dp": 401, "write_tile_to_tmp_buf": 401, "dequantize_tile_on_tmp_buf": 401, "calculate_scale_on_tmp_buf": 401, "write_back_scal": 401, "quant_tile_n": 401, "quantize_on_tmp_buf": 401, "write_tile_to_dst": 401, "scale_reduce_quant": 401, "needn": 401, "sync": 401, "2nd": [401, 404], "s8s8bf16": 401, "desid": 401, "du": 401, "until": 401, "feel": [401, 409], "suitabl": 401, "chart": 401, "again": 402, "naiv": 402, "gap": 402, "layernrom": 402, "3d": [402, 423], "poor": 402, "fewer": 402, "inconsist": 402, "scene": 402, "quarter": 402, "depict": 402, "bandwidth": [402, 404, 416], "gain": [402, 416], "brought": [402, 416], "majotr": 402, "layternorm": 402, "encapsul": 402, "ba": [402, 406, 409], "discret": 402, "append": [402, 409, 410], "overal": 402, "p2031": [403, 409], "2013": 403, "noperm": [403, 409], "p1302": [403, 409], "p2013": [403, 409], "equat": [403, 416], "dot": [403, 416], "rm": 403, "q": [403, 404], "qk": 403, "textunderscor": 403, "nativ": 403, "sparelib": 403, "axis": 403, "conceptu": 403, "head_nun": 403, "perm2031": 403, "perm2013": 403, "perm1302": 403, "concept": [403, 405], "lh": 403, "float32": [403, 416], "illustr": 403, "inner": 403, "16x16": 403, "drawn": 403, "lighter": 403, "cell": [403, 405], "respectfulli": 403, "vnni_noperm_p2013_p1302": 403, "transpose_4b_8x8": 403, "legend": 403, "explan": 403, "contigu": 403, "ellipsi": 403, "thinner": 403, "border": 403, "bolder": 403, "16x32x16": 403, "suboptim": 403, "piec": 403, "boost": 403, "twofold": 403, "unifi": 403, "roll": 403, "worth": 404, "clear": 404, "fact": [404, 416], "spr": 404, "latter": 404, "clx": 404, "4x16": [404, 405], "launch": 404, "prior": 404, "iteraion": 404, "polynomi": 404, "essenti": 404, "incom": 404, "far": 404, "four": 405, "adjac": 405, "unsign": [405, 409], "sign": [405, 416], "tmp1": 405, "zeroextend16": 405, "signextend16": 405, "tmp2": 405, "tmp3": 405, "tmp4": 405, "dword": [405, 406], "transposit": 405, "discuss": 405, "typic": 405, "4x4": 405, "mxkxn": 405, "problem": [405, 409], "densiti": 405, "fma": 405, "bubbl": 405, "16x4": 405, "highlight": 405, "4x": 405, "talent": 405, "smart": 405, "gui": [405, 406], "swizzl": 405, "workaround": 405, "unfortun": 405, "difficulti": 405, "bad": 405, "2x1": 405, "conclus": 405, "against": 405, "brief": 406, "sparse_lib_verbos": 406, "sparselib_verbos": 406, "nthr": 406, "224": [406, 407], "exec": 406, "shape_256_256_128": 406, "4658": [406, 407], "56982": 406, "itt": 406, "dne_with_sparselib_vtun": 406, "opt": 406, "dcmake_vtune_hom": 406, "sparse_lib_vtun": 406, "ssh": 406, "analys": 406, "verifi": 406, "sparse_lib_dump": 406, "xed64": 406, "click": 406, "xdi": 406, "push": 406, "53": [406, 407], "rbx": 406, "rbp": 406, "4154": 406, "r12": 406, "4155": 406, "r13": 406, "4156": 406, "4157": 406, "dataxf": 406, "bd00040000": 406, "ebp": 406, "0x400": 406, "4c8b3f": 406, "qword": 406, "4c8b7708": 406, "0x8": 406, "4c8b6f10": 406, "0x10": 406, "1a": 406, "avx512evex": 406, "62f17d48efc0": 406, "vpxord": 406, "zmm0": 406, "62f15d48efe4": 406, "zmm4": 406, "62513d48efc0": 406, "zmm8": 406, "2c": 406, "62511d48efe4": 406, "zmm12": 406, "62f17548efc9": 406, "zmm1": 406, "62f15548efe": 406, "zmm5": 406, "3e": 406, "62513548efc9": 406, "zmm9": 406, "62511548efe": 406, "zmm13": 406, "4a": 406, "62f16d48efd2": 406, "zmm2": 406, "62f14d48eff6": 406, "zmm6": 406, "62512d48efd2": 406, "zmm10": 406, "5c": 406, "62510d48eff6": 406, "zmm14": 406, "62": [406, 407], "62c17c481006": 406, "zmm16": 406, "zmmword": 406, "62c17c48104e01": 406, "zmm17": 406, "0x40": 406, "6f": 406, "62c17c48105602": 406, "zmm18": 406, "0x80": 406, "62427d48183f": 406, "vbroadcastss": 406, "zmm31": 406, "7c": 406, "vfma": 406, "62927d40b8c7": 406, "62927540b8cf": 406, "62926d40b8d7": 406, "8e": 406, "62427d48187f04": 406, "62927d40b8e7": 406, "9b": 406, "62927540b8ef": 406, "a1": 406, "62926d40b8f7": 406, "a7": 406, "62427d48187f08": 406, "0x20": 406, "ae": 406, "62127d40b8c7": 406, "b4": 406, "62127540b8cf": 406, "62126d40b8d7": 406, "c0": 406, "62427d48187f0c": 406, "0x30": 406, "c7": 406, "62127d40b8e7": 406, "62127540b8ef": 406, "62126d40b8f7": 406, "d9": 406, "62c17c48104603": 406, "0xc0": 406, "e0": 406, "62c17c48104e04": 406, "0x100": 406, "e7": 406, "62c17c48105605": 406, "0x140": 406, "ee": 406, "62427d48187f01": 406, "0x4": 406, "f5": 406, "fb": 406, "101": 406, "107": 406, "62427d48187f05": 406, "0x14": 406, "10e": 406, "114": 406, "11a": 406, "62427d48187f09": 406, "0x24": 406, "12d": 406, "133": 406, "139": 406, "62427d48187f0d": 406, "0x34": 406, "140": 406, "146": 406, "14c": 406, "152": 406, "62c17c48104606": 406, "0x180": 406, "62c17c48104e07": 406, "0x1c0": 406, "62c17c48105608": 406, "0x200": 406, "167": [406, 407], "62427d48187f02": 406, "16e": 406, "174": 406, "17a": 406, "180": 406, "62427d48187f06": 406, "0x18": 406, "18d": 406, "193": 406, "199": 406, "62427d48187f0a": 406, "0x28": 406, "1a0": 406, "1a6": 406, "1ac": 406, "1b2": 406, "62427d48187f0e": 406, "0x38": 406, "1b9": 406, "1bf": 406, "1c5": 406, "1cb": 406, "62c17c48104609": 406, "0x240": 406, "1d2": 406, "62c17c48104e0a": 406, "0x280": 406, "1d9": 406, "62c17c4810560b": 406, "0x2c0": 406, "1e0": 406, "62427d48187f03": 406, "0xc": 406, "1e7": 406, "1ed": 406, "1f3": 406, "1f9": 406, "62427d48187f07": 406, "0x1c": 406, "200": 406, "206": 406, "20c": 406, "212": 406, "62427d48187f0b": 406, "0x2c": 406, "219": [406, 407], "21f": 406, "225": 406, "22b": 406, "62427d48187f0f": 406, "0x3c": 406, "232": [406, 407], "238": 406, "23e": 406, "62d17c48114500": 406, "24b": 406, "62d17c48116503": 406, "62517c48114506": 406, "62517c48116509": 406, "260": 406, "62d17c48114d01": 406, "267": 406, "62d17c48116d04": 406, "26e": 406, "62517c48114d07": 406, "62517c48116d0a": 406, "27c": 406, "62d17c48115502": 406, "283": 406, "62d17c48117505": 406, "28a": 406, "62517c48115508": 406, "291": 406, "62517c4811750b": 406, "298": [406, 407], "pop": 406, "415f": 406, "29a": 406, "415e": 406, "29c": 406, "415d": 406, "29e": 406, "415c": 406, "2a0": 406, "5d": 406, "2a1": 406, "5b": 406, "2a2": 406, "avx": 406, "c5f877": 406, "vzeroupp": 406, "2a5": 406, "xed3": 406, "stat": 406, "29220": 406, "236418": 406, "118": 406, "2003": 406, "54": [406, 407], "00348609": 407, "601": 407, "00310676": 407, "675": 407, "00261406": 407, "802": 407, "00216633": 407, "968": 407, "068": 407, "00164658": 407, "1273": 407, "0112255": 407, "284": 407, "00947462": 407, "885": 407, "377": 407, "00764146": 407, "1097": 407, "78": 407, "0058452": 407, "1435": 407, "00407149": 407, "2060": 407, "0127448": 407, "658": 407, "198": 407, "0111132": 407, "754": 407, "835": 407, "00940157": 407, "892": 407, "00760217": 407, "1103": 407, "0054935": 407, "1527": 407, "044202": 407, "759": 407, "0364227": 407, "0292454": 407, "1147": 407, "0223472": 407, "1501": 407, "0149058": 407, "2251": 407, "216338": 407, "620": 407, "408": 407, "179593": 407, "345": 407, "135054": 407, "806": 407, "0946983": 407, "1417": 407, "0609701": 407, "2201": 407, "190508": 407, "704": 407, "526": 407, "159566": 407, "841": 407, "130863": 407, "1025": 407, "103927": 407, "1291": 407, "0739962": 407, "1813": 407, "0250395": 407, "753": 407, "784": 407, "0210726": 407, "895": 407, "682": 407, "0170987": 407, "0130778": 407, "1443": 407, "00923343": 407, "2044": 407, "3072": 407, "112882": 407, "668": 407, "818": 407, "0879386": 407, "858": 407, "525": 407, "068835": 407, "1096": 407, "79": 407, "0487342": 407, "1549": 407, "0317559": 407, "2377": 407, "109308": 407, "679": 407, "0922471": 407, "805": 407, "638": 407, "0759107": 407, "0558945": 407, "1329": 407, "61": 407, "0358752": 407, "2071": 407, "57": 407, "00565044": 407, "742": 407, "297": 407, "00503604": 407, "832": 407, "00447544": 407, "937": 407, "182": 407, "00368479": 407, "1138": 407, "00270954": 407, "1547": 407, "0183481": 407, "386": 407, "0154121": 407, "1088": 407, "0125696": 407, "1334": 407, "00959948": 407, "1747": 407, "72": 407, "00677631": 407, "2475": 407, "0206321": 407, "813": 407, "162": 407, "0184267": 407, "483": 407, "0164699": 407, "1018": 407, "66": 407, "0135801": 407, "1235": 407, "010552": 407, "1589": 407, "0721208": 407, "930": 407, "506": 407, "059613": 407, "1125": 407, "0483781": 407, "1387": 407, "0366748": 407, "1829": 407, "83": 407, "0248571": 407, "2699": 407, "376539": 407, "712": 407, "902": 407, "31929": 407, "840": 407, "727": 407, "261265": 407, "1027": 407, "193579": 407, "1386": 407, "118429": 407, "2266": 407, "309195": 407, "177": 407, "256619": 407, "1046": 407, "213454": 407, "1257": 407, "165192": 407, "1624": 407, "118402": 407, "2267": 407, "0402931": 407, "855": 407, "0341169": 407, "0275282": 407, "1371": 407, "0211298": 407, "1786": 407, "0150693": 407, "218765": 407, "215": 407, "180921": 407, "834": 407, "592": 407, "142778": 407, "1057": 407, "097692": 407, "1545": 407, "0620034": 407, "2435": 407, "174101": 407, "853": 407, "73": 407, "148369": 407, "1001": 407, "123554": 407, "1203": 407, "0923655": 407, "1609": 407, "0591283": 407, "2513": 407, "0074474": 407, "844": 407, "00657187": 407, "00570175": 407, "00483104": 407, "1302": 407, "00367406": 407, "1712": 407, "0247063": 407, "0207462": 407, "1213": 407, "03": 407, "0169214": 407, "0129936": 407, "1936": 407, "0090376": 407, "2784": 407, "0275881": 407, "912": 407, "0240415": 407, "77": 407, "0207876": 407, "1210": 407, "0177873": 407, "1414": 407, "0140129": 407, "1795": 407, "0994565": 407, "1012": 407, "0819725": 407, "1228": 407, "0660571": 407, "1523": 407, "0497077": 407, "2025": 407, "0341912": 407, "2944": 407, "500698": 407, "804": 407, "184": 407, "420619": 407, "287": 407, "337529": 407, "1192": 407, "94": 407, "251221": 407, "1602": 407, "158668": 407, "2537": 407, "412912": 407, "155": 407, "346369": 407, "1162": 407, "2831": 407, "1422": 407, "220585": 407, "1825": 407, "156168": 407, "2578": 407, "0538395": 407, "1051": 407, "0455066": 407, "1244": 407, "036978": 407, "1531": 407, "028483": 407, "1987": 407, "0200457": 407, "2824": 407, "283445": 407, "799": 407, "069": 407, "236101": 407, "959": 407, "302": 407, "188745": 407, "1199": 407, "135532": 407, "0845544": 407, "2678": 407, "227976": 407, "977": 407, "19463": 407, "1145": 407, "161251": 407, "1382": 407, "65": 407, "123585": 407, "1804": 407, "0840322": 407, "2653": 407, "00940534": 407, "891": 407, "00821985": 407, "1020": 407, "00701343": 407, "1196": 407, "08": 407, "00579899": 407, "1446": 407, "00464705": 407, "1805": 407, "0336342": 407, "997": 407, "629": 407, "0276086": 407, "1215": 407, "0224431": 407, "1495": 407, "09": 407, "0170807": 407, "1964": 407, "0117535": 407, "2854": 407, "0358603": 407, "0310083": 407, "1082": 407, "0260486": 407, "1288": 407, "0215163": 407, "1559": 407, "0170105": 407, "1972": 407, "133295": 407, "1006": 407, "92": 407, "111186": 407, "1207": 407, "0881114": 407, "0665519": 407, "2016": 407, "0454416": 407, "2953": 407, "611718": 407, "645": 407, "533329": 407, "430288": 407, "1247": 407, "307141": 407, "198987": 407, "2698": 407, "02": [407, 412], "556249": 407, "163": 407, "462737": 407, "1160": 407, "37537": 407, "1430": 407, "28321": 407, "1895": 407, "203901": 407, "2633": 407, "0716356": 407, "1053": 407, "0603517": 407, "1250": 407, "0490096": 407, "1540": 407, "0375683": 407, "2009": 407, "0267483": 407, "2822": 407, "3572": 407, "845": 407, "437": 407, "299561": 407, "1008": 407, "228752": 407, "1320": 407, "165648": 407, "1823": 407, "105656": 407, "2858": 407, "298907": 407, "994": 407, "529": 407, "255598": 407, "1163": 407, "20824": 407, "1427": 407, "159911": 407, "1858": 407, "111211": 407, "2673": 407, "0152997": 407, "685": 407, "358": 407, "0131446": 407, "797": 407, "0109669": 407, "956": 407, "132": 407, "00921101": 407, "00755406": 407, "1388": 407, "0553082": 407, "758": 407, "351": 407, "0458481": 407, "826": 407, "0367258": 407, "1142": 407, "06": 407, "027535": 407, "018464": 407, "2271": 407, "0597882": 407, "0510217": 407, "822": 407, "062": 407, "0421644": 407, "0333436": 407, "0296385": 407, "1415": 407, "22241": 407, "337": 407, "18324": 407, "915": 407, "145322": 407, "1154": 407, "1083": 407, "0728843": 407, "2301": 407, "11793": 407, "600": 407, "929398": 407, "722": 407, "720963": 407, "823": 407, "510039": 407, "1315": 407, "336519": 407, "1994": 407, "909941": 407, "737": 407, "508": 407, "753487": 407, "644": 407, "606477": 407, "459915": 407, "1459": 407, "303455": 407, "2211": 407, "123429": 407, "764": 407, "586": 407, "103035": 407, "923": 407, "0825026": 407, "1143": 407, "0625579": 407, "1508": 407, "0426942": 407, "2210": 407, "60813": 407, "734": 407, "483053": 407, "781": 407, "462": 407, "357348": 407, "1056": 407, "256715": 407, "1470": 407, "169119": 407, "2232": 407, "503341": 407, "738": 407, "42134": 407, "881": 407, "342843": 407, "255199": 407, "1456": 407, "174091": 407, "2134": 407, "0142667": 407, "0123966": 407, "1015": 407, "0105865": 407, "1188": 407, "00860835": 407, "1461": 407, "00655363": 407, "1919": 407, "0532543": 407, "0447548": 407, "1124": 407, "0348388": 407, "1444": 407, "0266886": 407, "1885": 407, "0177431": 407, "2836": 407, "69": 407, "0549107": 407, "916": 407, "608": 407, "0475549": 407, "1058": 407, "0401657": 407, "1253": 407, "0326952": 407, "1539": 407, "025032": 407, "220947": 407, "911": 407, "178324": 407, "1128": 407, "137361": 407, "1465": 407, "103126": 407, "1952": 407, "0701429": 407, "2870": 407, "06648": 407, "755": 407, "893959": 407, "900": 407, "831": 407, "718893": 407, "1120": 407, "537405": 407, "1498": 407, "280686": 407, "2869": 407, "902588": 407, "730678": 407, "582871": 407, "1381": 407, "444133": 407, "298489": 407, "2697": 407, "581": 407, "0955952": 407, "1184": 407, "078109": 407, "1449": 407, "0596185": 407, "1899": 407, "0414047": 407, "2735": 407, "596568": 407, "497127": 407, "396634": 407, "286973": 407, "1578": 407, "167473": 407, "2704": 407, "472466": 407, "943": 407, "787": 407, "391055": 407, "1140": 407, "319865": 407, "1394": 407, "247491": 407, "1801": 407, "169874": 407, "2624": 407, "93": 407, "0213786": 407, "686": 407, "67": 407, "018228": 407, "0152068": 407, "0120525": 407, "1218": 407, "0103961": 407, "1412": 407, "0771592": 407, "761": 407, "0642402": 407, "074": 407, "0514668": 407, "0387886": 407, "1513": 407, "0256871": 407, "2285": 407, "0836219": 407, "702": 407, "0712915": 407, "664": 407, "0589148": 407, "697": 407, "0484067": 407, "0411331": 407, "311691": 407, "569": 407, "256635": 407, "204973": 407, "153086": 407, "1534": 407, "101206": 407, "2320": 407, "59625": 407, "588": 407, "583": 407, "33246": 407, "705": 407, "03849": 407, "703": 407, "738939": 407, "1271": 407, "480308": 407, "1956": 407, "26056": 407, "745": 407, "324": 407, "04874": 407, "842936": 407, "1114": 407, "59": 407, "635554": 407, "1478": 407, "42145": 407, "2229": 407, "174215": 407, "375": 407, "145836": 407, "116701": 407, "1132": 407, "0876727": 407, "1506": 407, "0595001": 407, "2220": 407, "883258": 407, "598": 407, "333": 407, "711146": 407, "743": 407, "543634": 407, "129": 407, "402406": 407, "1313": 407, "266945": 407, "1979": 407, "70404": 407, "592043": 407, "878": 407, "695": 407, "475444": 407, "1094": 407, "358932": 407, "240739": 407, "2160": 407, "0184384": 407, "909": 407, "907": 407, "0158714": 407, "013504": 407, "1242": 407, "0109927": 407, "1526": 407, "00826017": 407, "2031": 407, "061272": 407, "1095": 407, "0609618": 407, "1100": 407, "0467291": 407, "1436": 407, "0340362": 407, "1971": 407, "0231282": 407, "2901": 407, "0717247": 407, "0616923": 407, "1087": 407, "0521595": 407, "1286": 407, "0423267": 407, "1585": 407, "0321109": 407, "2089": 407, "286461": 407, "242512": 407, "181783": 407, "1476": 407, "139021": 407, "1930": 407, "0870121": 407, "3085": 407, "36322": 407, "652": 407, "08991": 407, "880185": 407, "1219": 407, "694533": 407, "366328": 407, "2931": 407, "15748": 407, "927": 407, "937824": 407, "1144": 407, "745357": 407, "1440": 407, "558061": 407, "1924": 407, "391387": 407, "2743": 407, "157349": 407, "616": 407, "129806": 407, "103083": 407, "1464": 407, "0784417": 407, "053639": 407, "2815": 407, "767569": 407, "874": 407, "641585": 407, "941": 407, "387": 407, "488558": 407, "1236": 407, "355651": 407, "1698": 407, "230945": 407, "2615": 407, "611059": 407, "514108": 407, "1156": 407, "416571": 407, "318094": 407, "1869": 407, "225023": 407, "2642": 407, "0375093": 407, "564": 407, "0317602": 407, "0261888": 407, "1281": 407, "0211151": 407, "0158951": 407, "2110": 407, "141333": 407, "949": 407, "133647": 407, "1004": 407, "0999998": 407, "0710327": 407, "1889": 407, "52": 407, "0429916": 407, "3121": 407, "147474": 407, "125344": 407, "1070": 407, "104294": 407, "0849766": 407, "1579": 407, "0624729": 407, "2148": 407, "701639": 407, "765": 407, "534615": 407, "359791": 407, "1492": 407, "2612": 407, "2055": 407, "183193": 407, "2930": 407, "92067": 407, "735": 407, "271": 407, "4402": 407, "880": 407, "046": 407, "69186": 407, "1269": 407, "17436": 407, "1828": 407, "880179": 407, "2439": 407, "62123": 407, "264": 407, "14905": 407, "999": 407, "64253": 407, "1307": 407, "1413": 407, "1881": 407, "771439": 407, "2783": 407, "369429": 407, "451": 407, "288236": 407, "1047": 407, "209526": 407, "1441": 407, "148115": 407, "2038": 407, "106089": 407, "2846": 407, "53204": 407, "465": 407, "28593": 407, "939": 407, "368": 407, "0852": 407, "1113": 407, "685382": 407, "1762": 407, "408357": 407, "2958": 407, "4521": 407, "13466": 407, "853916": 407, "1392": 407, "642672": 407, "1850": 407, "446442": 407, "2663": 407, "0574189": 407, "876": 407, "0460811": 407, "1092": 407, "0389357": 407, "1292": 407, "031279": 407, "0234498": 407, "2146": 407, "204966": 407, "17364": 407, "1159": 407, "141097": 407, "1426": 407, "105192": 407, "1913": 407, "0677766": 407, "2970": 407, "21269": 407, "946": 407, "573": 407, "191564": 407, "1050": 407, "156368": 407, "1287": 407, "1565": 407, "0933565": 407, "2156": 407, "84983": 407, "789777": 407, "1019": 407, "598168": 407, "1346": 407, "433492": 407, "1857": 407, "269504": 407, "2988": 407, "74845": 407, "859": 407, "348": 407, "96945": 407, "811": 407, "505": 407, "77082": 407, "76407": 407, "1826": 407, "09719": 407, "2935": 407, "73162": 407, "00241": 407, "1072": 407, "39024": 407, "77317": 407, "1816": 407, "19536": 407, "2694": 407, "517278": 407, "875": 407, "708": 407, "382208": 407, "1185": 407, "317837": 407, "1425": 407, "233231": 407, "1942": 407, "152925": 407, "2962": 407, "44309": 407, "741": 407, "62409": 407, "1115": 407, "64963": 407, "1098": 407, "03923": 407, "1743": 407, "625089": 407, "2898": 407, "07006": 407, "861": 407, "632": 407, "64247": 407, "1085": 407, "33386": 407, "1337": 407, "994935": 407, "1792": 407, "68383": 407, "2608": 407, "0713578": 407, "940": 407, "0612457": 407, "0516788": 407, "1298": 407, "0414834": 407, "1617": 407, "0309886": 407, "2165": 407, "282241": 407, "951": 407, "085": 407, "238855": 407, "1123": 407, "193713": 407, "1385": 407, "146781": 407, "81": 407, "0938959": 407, "286141": 407, "122": 407, "257138": 407, "1043": 407, "214208": 407, "167575": 407, "1601": 407, "124072": 407, "2163": 407, "21431": 407, "884": 407, "237": 407, "955251": 407, "775294": 407, "1384": 407, "63282": 407, "1696": 407, "37333": 407, "2876": 407, "87335": 407, "317": 407, "65059": 407, "1176": 407, "94733": 407, "1457": 407, "62241": 407, "1637": 407, "47752": 407, "2906": 407, "75786": 407, "83024": 407, "889": 407, "87429": 407, "1108": 407, "87685": 407, "75328": 407, "2449": 407, "718776": 407, "289": 407, "561317": 407, "1076": 407, "429166": 407, "1407": 407, "317204": 407, "1904": 407, "208555": 407, "2896": 407, "94057": 407, "30458": 407, "1048": 407, "6702": 407, "25799": 407, "1920": 407, "84121": 407, "2871": 407, "34423": 407, "711": 407, "77444": 407, "857": 407, "10049": 407, "52509": 407, "926038": 407, "2568": 407, "00203027": 407, "1032": 407, "00198061": 407, "00179382": 407, "1169": 407, "00163713": 407, "1280": [407, 409], "00171023": 407, "1226": 407, "00395783": 407, "2119": 407, "00340452": 407, "2463": 407, "00308582": 407, "2718": 407, "00292684": 407, "2866": 407, "00217889": 407, "3849": 407, "00437142": 407, "1918": 407, "00418212": 407, "2005": 407, "00344785": 407, "2433": 407, "00291005": 407, "2882": 407, "00293671": 407, "2856": 407, "0120946": 407, "2774": 407, "0103377": 407, "3245": 407, "00850778": 407, "3943": 407, "00659512": 407, "5087": 407, "00484669": 407, "6923": 407, "0524509": 407, "2558": 407, "0428737": 407, "3130": 407, "0323642": 407, "4147": 407, "0231199": 407, "5805": 407, "0152199": 407, "8818": 407, "0451228": 407, "2974": 407, "0373823": 407, "3590": 407, "0302746": 407, "4433": 407, "023182": 407, "5789": 407, "0161696": 407, "8300": 407, "00731429": 407, "2580": 407, "00633179": 407, "2980": 407, "00535855": 407, "3522": 407, "00449335": 407, "4200": 407, "00341811": 407, "5521": 407, "0270028": 407, "2795": 407, "02197": 407, "3436": 407, "0177477": 407, "4253": 407, "0131335": 407, "5748": 407, "00897444": 407, "8412": 407, "0257188": 407, "2889": 407, "0218969": 407, "3393": 407, "0180933": 407, "4107": 407, "013742": 407, "5408": 407, "00992419": 407, "7488": 407, "00289114": 407, "1450": 407, "00245821": 407, "00252331": 407, "1662": 407, "00226557": 407, "1851": 407, "00180316": 407, "2326": 407, "00578904": 407, "00500361": 407, "3353": 407, "0042401": 407, "3956": 407, "00350486": 407, "4786": 407, "00297233": 407, "5644": 407, "00693265": 407, "2420": 407, "00593063": 407, "2828": 407, "00526697": 407, "3185": 407, "00480098": 407, "3494": 407, "00385131": 407, "4356": 407, "0193516": 407, "3467": 407, "0166254": 407, "4036": 407, "0132869": 407, "5050": 407, "0106293": 407, "6313": 407, "00759056": 407, "8841": 407, "0977256": 407, "2746": 407, "0813271": 407, "0656322": 407, "4090": 407, "0476463": 407, "5633": 407, "0295362": 407, "9088": 407, "0736189": 407, "3646": 407, "0603789": 407, "4445": 407, "0489938": 407, "5478": 407, "036992": 407, "7256": 407, "0258802": 407, "10372": 407, "0116589": 407, "3237": 407, "00979113": 407, "3855": 407, "00811779": 407, "4650": 407, "00667871": 407, "5652": 407, "00493861": 407, "7643": 407, "0537768": 407, "2807": 407, "0459135": 407, "3288": 407, "03588": 407, "4208": 407, "0252901": 407, "5970": 407, "0167419": 407, "9018": 407, "0407051": 407, "3651": 407, "0342908": 407, "4334": 407, "028568": 407, "5202": 407, "0218703": 407, "6796": 407, "016186": 407, "9183": 407, "0031551": 407, "0029515": 407, "00265488": 407, "2369": 407, "00243581": 407, "2582": 407, "00223598": 407, "2813": 407, "00745008": 407, "3377": 407, "00656544": 407, "3833": 407, "00542595": 407, "4638": 407, "00425647": 407, "5912": 407, "0034657": 407, "7261": 407, "00835933": 407, "3010": 407, "00741956": 407, "3391": 407, "0065352": 407, "3850": 407, "00555918": 407, "4526": 407, "00488058": 407, "5156": 407, "0257262": 407, "3912": 407, "0217468": 407, "4628": 407, "0176505": 407, "5703": 407, "0137122": 407, "7341": 407, "00980134": 407, "10270": 407, "124749": 407, "3227": 407, "103385": 407, "3894": 407, "0832193": 407, "4838": 407, "0626013": 407, "6432": 407, "0397992": 407, "10117": 407, "101071": 407, "3983": 407, "0825665": 407, "4876": 407, "0668515": 407, "6023": 407, "0487727": 407, "8255": 407, "0354192": 407, "11368": 407, "0147718": 407, "0127799": 407, "4430": 407, "0105324": 407, "5376": 407, "00869796": 407, "6509": 407, "00643591": 407, "8798": 407, "0698868": 407, "3240": 407, "0588583": 407, "3848": 407, "0473412": 407, "4784": 407, "0346142": 407, "6543": 407, "0222947": 407, "10159": 407, "0538146": 407, "4142": 407, "0454583": 407, "4904": 407, "0373579": 407, "5968": 407, "0291396": 407, "7651": 407, "0208901": 407, "10672": 407, "00393589": 407, "00332212": 407, "2525": 407, "00317296": 407, "2643": 407, "00269113": 407, "3117": 407, "00235812": 407, "3557": 407, "009382": 407, "3576": 407, "00828943": 407, "4047": 407, "00672351": 407, "4990": 407, "00514768": 407, "6518": 407, "0040612": 407, "8262": 407, "0107115": 407, "3132": 407, "00920252": 407, "00794258": 407, "4224": 407, "00698123": 407, "4806": 407, "00561026": 407, "5980": 407, "0345669": 407, "3882": 407, "0289719": 407, "4632": 407, "0232584": 407, "5770": 407, "0179766": 407, "7466": 407, "0128144": 407, "10474": 407, "158162": 407, "3394": 407, "132552": 407, "4050": 407, "101844": 407, "5271": 407, "080936": 407, "6633": 407, "0530097": 407, "10127": 407, "135839": 407, "3952": 407, "11116": 407, "4829": 407, "0899513": 407, "0633017": 407, "8481": 407, "0467462": 407, "11484": 407, "0192628": 407, "3919": 407, "0164591": 407, "4586": 407, "0135348": 407, "5578": 407, "0107712": 407, "7009": 407, "00761117": 407, "9919": 407, "0854876": 407, "3532": 407, "0747271": 407, "4041": 407, "0604759": 407, "4993": 407, "0417964": 407, "7225": 407, "0275467": 407, "10962": 407, "0713821": 407, "4164": 407, "0600772": 407, "4948": 407, "0496581": 407, "5986": 407, "0381385": 407, "7794": 407, "027025": 407, "10999": 407, "00502473": 407, "2086": 407, "00451855": 407, "00396819": 407, "00338962": 407, "3093": 407, "00315343": 407, "3325": 407, "0147951": 407, "2834": 407, "0126225": 407, "3322": 407, "010269": 407, "4084": 407, "00785878": 407, "5337": 407, "00570293": 407, "7354": 407, "0161691": 407, "2594": 407, "0144483": 407, "2902": 407, "011705": 407, "3583": 407, "0101487": 407, "4132": 407, "00879332": 407, "4769": 407, "0560297": 407, "2994": 407, "0467998": 407, "3584": 407, "0374397": 407, "4481": 407, "028166": 407, "5956": 407, "0192593": 407, "8711": 407, "277815": 407, "2415": 407, "229837": 407, "2919": 407, "1787": 407, "3755": 407, "126545": 407, "5303": 407, "0835321": 407, "8033": 407, "224925": 407, "2983": 407, "184256": 407, "3642": 407, "146452": 407, "4582": 407, "108899": 407, "6162": 407, "0740655": 407, "9060": 407, "0319455": 407, "2954": 407, "0268136": 407, "3519": 407, "0217062": 407, "4347": 407, "0166666": 407, "5662": 407, "0116466": 407, "8102": 407, "150549": 407, "2507": 407, "119951": 407, "3147": 407, "0893092": 407, "4226": 407, "0637226": 407, "5923": 407, "0427839": 407, "8823": 407, "122421": 407, "3035": 407, "102244": 407, "0822007": 407, "4520": 407, "0622484": 407, "5969": 407, "0429436": 407, "8652": 407, "00481074": 407, "00443796": 407, "2835": 407, "00389863": 407, "00343822": 407, "3659": 407, "00297784": 407, "4225": 407, "0145757": 407, "3453": 407, "012078": 407, "4167": 407, "00896329": 407, "5615": 407, "00727645": 407, "6917": 407, "00548478": 407, "9176": 407, "0150624": 407, "3341": 407, "0132428": 407, "3800": 407, "011443": 407, "4398": 407, "0092883": 407, "5418": 407, "00744553": 407, "6759": 407, "0543977": 407, "3701": 407, "0445693": 407, "4517": 407, "0363329": 407, "5541": 407, "0270492": 407, "7442": 407, "0187415": 407, "10742": 407, "267367": 407, "3011": 407, "223615": 407, "3601": 407, "1797": 407, "134716": 407, "5977": 407, "0692752": 407, "11624": 407, "222661": 407, "3616": 407, "179525": 407, "4485": 407, "139298": 407, "5781": 407, "0958787": 407, "8399": 407, "176292": 407, "4568": 407, "0700283": 407, "0258341": 407, "4383": 407, "0207504": 407, "5457": 407, "0161277": 407, "7021": 407, "0116008": 407, "9761": 407, "148512": 407, "3050": 407, "124238": 407, "0995304": 407, "4551": 407, "0714324": 407, "6341": 407, "044154": 407, "10259": 407, "113174": 407, "3940": 407, "0961662": 407, "4636": 407, "0765841": 407, "5822": 407, "0592912": 407, "7520": 407, "0416614": 407, "10703": 407, "00655654": 407, "2239": 407, "00584761": 407, "2510": 407, "00502113": 407, "2923": 407, "00466269": 407, "3148": 407, "00393276": 407, "3732": 407, "0203923": 407, "2879": 407, "0171018": 407, "3433": 407, "0137027": 407, "4285": 407, "0109527": 407, "5361": 407, "00749636": 407, "7833": 407, "0221319": 407, "0193761": 407, "3030": 407, "0158773": 407, "3698": 407, "0134367": 407, "4370": 407, "0116365": 407, "5046": 407, "0780751": 407, "3008": 407, "0651551": 407, "3604": 407, "0521945": 407, "4500": 407, "0394101": 407, "5959": 407, "0262706": 407, "8940": 407, "398509": 407, "2357": 407, "332153": 407, "259051": 407, "3626": 407, "184412": 407, "5094": 407, "119678": 407, "7850": 407, "313656": 407, "2995": 407, "257989": 407, "3641": 407, "206049": 407, "4559": 407, "152848": 407, "6146": 407, "103125": 407, "9110": 407, "0444861": 407, "2969": 407, "037334": 407, "3538": 407, "0302293": 407, "0231979": 407, "5695": 407, "0158702": 407, "8325": 407, "219777": 407, "2404": 407, "17764": 407, "2975": 407, "135864": 407, "3889": 407, "100424": 407, "5262": 407, "0677547": 407, "7799": 407, "172356": 407, "3018": 407, "144231": 407, "3606": 407, "116019": 407, "4483": 407, "0873881": 407, "5953": 407, "0596004": 407, "8728": 407, "00609695": 407, "2751": 407, "00517637": 407, "3241": 407, "00448956": 407, "3736": 407, "00394876": 407, "4248": 407, "00317463": 407, "5284": 407, "0204832": 407, "3276": 407, "0137691": 407, "4873": 407, "0114194": 407, "5876": 407, "00893304": 407, "7512": 407, "00653312": 407, "10272": 407, "0192409": 407, "3487": 407, "0168348": 407, "3986": 407, "0142343": 407, "4714": 407, "0119455": 407, "5617": 407, "00910648": 407, "7369": 407, "0781101": 407, "0614806": 407, "4366": 407, "046201": 407, "5810": 407, "0357023": 407, "7518": 407, "0222103": 407, "12086": 407, "326917": 407, "3284": 407, "273363": 407, "3927": 407, "220994": 407, "4858": 407, "166153": 407, "6462": 407, "0854403": 407, "12567": 407, "311348": 407, "3448": 407, "243012": 407, "4418": 407, "187933": 407, "5713": 407, "126819": 407, "8466": 407, "0855686": 407, "12548": 407, "0404778": 407, "3730": 407, "0329699": 407, "4579": 407, "0265272": 407, "5692": 407, "0207815": 407, "7265": 407, "0139037": 407, "10860": 407, "183003": 407, "161443": 407, "3741": 407, "129767": 407, "4654": 407, "0893345": 407, "6760": 407, "0610684": 407, "9890": 407, "15525": 407, "3829": 407, "125772": 407, "4727": 407, "101434": 407, "5861": 407, "0765083": 407, "7770": 407, "0537321": 407, "11064": 407, "0104209": 407, "3219": 407, "00908195": 407, "3694": 407, "00781277": 407, "4294": 407, "00651108": 407, "5153": 407, "0051719": 407, "6487": 407, "0321377": 407, "4176": 407, "0269904": 407, "4972": 407, "0220014": 407, "6100": 407, "016901": 407, "7941": 407, "0120042": 407, "11180": 407, "0373802": 407, "0314895": 407, "4262": 407, "0266731": 407, "5031": 407, "0217822": 407, "6161": 407, "0168219": 407, "7978": 407, "176031": 407, "3049": 407, "134442": 407, "3993": 407, "0843776": 407, "6362": 407, "0640577": 407, "8381": 407, "043787": 407, "12261": 407, "697876": 407, "3077": 407, "615338": 407, "3489": 407, "350147": 407, "6133": 407, "267289": 407, "8034": 407, "179695": 407, "11950": 407, "703207": 407, "3053": 407, "561805": 407, "3822": 407, "423052": 407, "5076": 407, "254835": 407, "171434": 407, "12526": 407, "0933483": 407, "3235": 407, "0725632": 407, "4161": 407, "0539197": 407, "5600": 407, "0376119": 407, "8029": 407, "0263137": 407, "11476": 407, "407388": 407, "340939": 407, "3543": 407, "261028": 407, "4627": 407, "151649": 407, "7965": 407, "103379": 407, "11684": 407, "358769": 407, "3314": 407, "283046": 407, "4201": 407, "212152": 407, "5604": 407, "158502": 407, "7502": 407, "107514": 407, "11059": 407, "0148329": 407, "0129116": 407, "3898": 407, "0110537": 407, "4553": 407, "00925277": 407, "5439": 407, "00716987": 407, "7019": 407, "0526609": 407, "3823": 407, "0447282": 407, "4501": 407, "0365834": 407, "5503": 407, "0274874": 407, "7324": 407, "0183895": 407, "10947": 407, "0556653": 407, "0465882": 407, "4321": 407, "039411": 407, "5108": 407, "0318745": 407, "6316": 407, "024706": 407, "8148": 407, "263316": 407, "3058": 407, "198303": 407, "4061": 407, "141966": 407, "5672": 407, "105849": 407, "7608": 407, "0687866": 407, "11707": 407, "793822": 407, "4057": 407, "996979": 407, "3230": 407, "54288": 407, "5933": 407, "412174": 407, "7815": 407, "274441": 407, "11737": 407, "03474": 407, "3113": 407, "832701": 407, "3868": 407, "564787": 407, "421781": 407, "7637": 407, "271587": 407, "11860": 407, "130834": 407, "3462": 407, "0943305": 407, "4802": 407, "0760123": 407, "0580473": 407, "7803": 407, "0395342": 407, "11458": 407, "635729": 407, "2850": 407, "379899": 407, "307908": 407, "5884": 407, "233057": 407, "7774": 407, "157518": 407, "11503": 407, "518276": 407, "3441": 407, "422517": 407, "4221": 407, "323476": 407, "5513": 407, "247251": 407, "7213": 407, "163369": 407, "10917": 407, "0192313": 407, "0168147": 407, "3991": 407, "0143274": 407, "4683": 407, "011932": 407, "5624": 407, "00914975": 407, "7334": 407, "0723144": 407, "3712": 407, "0613803": 407, "4373": 407, "050021": 407, "5366": 407, "0376949": 407, "7121": 407, "0249397": 407, "10763": 407, "0796627": 407, "3369": 407, "0616695": 407, "4352": 407, "0521326": 407, "5149": 407, "042188": 407, "0325741": 407, "8240": 407, "380582": 407, "2821": 407, "24038": 407, "4466": 407, "195271": 407, "5498": 407, "146935": 407, "7307": 407, "0948318": 407, "11322": 407, "08794": 407, "3947": 407, "913626": 407, "4701": 407, "737943": 407, "5820": 407, "558473": 407, "7690": 407, "369466": 407, "51009": 407, "2844": 407, "26974": 407, "3382": 407, "778244": 407, "5518": 407, "589803": 407, "7282": 407, "375284": 407, "11444": 407, "160705": 407, "3758": 407, "135495": 407, "4457": 407, "108718": 407, "5555": 407, "0811198": 407, "7445": 407, "0533513": 407, "11320": 407, "614109": 407, "3934": 407, "518614": 407, "418491": 407, "5772": 407, "31592": 407, "7647": 407, "211893": 407, "11401": 407, "836616": 407, "2842": 407, "699579": 407, "3399": 407, "544194": 407, "379699": 407, "228043": 407, "10428": 407, "un": 408, "u": 408, "sparsity_al": 408, "hotmap": 408, "jpg": 408, "x16": 409, "environment_vari": 409, "kernel_typ": [409, 410], "perfom": 409, "introduct": 409, "benchmark_it": 409, "benchmark_no_refresh": 409, "refresh": 409, "kxn": 409, "sparse_ratio": 409, "micro_b": 409, "output_fp32": 409, "micro_oc": 409, "sub_func_level": 409, "3d_infer": 409, "automaticlli": 409, "dsparse_lib_use_amx": 409, "amx_bf16_x16": 409, "output_bf16": 409, "interv": 409, "lower_bound": 409, "upper_bound": 409, "invalid": 409, "fp32_relu": 409, "src_dt": 409, "dst_dt": 409, "tanspos": 409, "4d": 409, "bs0": 409, "bs1": 409, "scr2": 409, "avx512f_p2031_p2013": 409, "has_binary_add": 409, "tile_n": 409, "coeffici": 409, "vnni_noperm_p2031_p1302": 409, "suuport": 409, "d0xd1x": 409, "d0": 409, "dst_type": 409, "padding_mask": 409, "badd_dim": 409, "blank": 409, "large_weight_threshold": 409, "add_bia": 409, "channel_num": 409, "quantize_dim_elt_num": 409, "src_data_typ": 409, "newli": 409, "subdir": 409, "benchmark_dir": 409, "bench_": 409, "test_": 409, "entranc": 409, "get_true_data_": 409, "check_result_": 409, "gen_case_": 409, "run_bench_": 409, "calc_flop": 409, "get_refresh_data_idx": 409, "benchmark_util": 409, "labl": 410, "run_ci": 410, "overwrit": 410, "it_per_cor": 410, "discard": 410, "new_input_fil": 410, "medium_n": 410, "ci": 410, "apach": 411, "copyright": 411, "parti": 411, "accompani": 411, "research": 411, "wish": 411, "bibtex": 411, "misc": 411, "hanwen": 411, "haihao": 411, "shen": 411, "dong": 411, "hengyu": 411, "meng": 411, "wenxin": 411, "zhang": 411, "howpublish": 411, "url": 411, "year": 411, "logo": 411, "atom": 411, "phi": 411, "pentium": 411, "vtune": 411, "corpor": 411, "subsidiari": 411, "toler": 412, "rel": 412, "absolut": [412, 415, 416], "proport": [412, 413], "vision": 414, "speech": 414, "multimod": 414, "text_classifi": 414, "great": 414, "9998425245285034": 414, "believ": 414, "beauti": 414, "evoc": 414, "ve": 414, "seen": 414, "9998886585235596": 414, "bear": 415, "brain": 415, "damag": 415, "hypothesi": 415, "yann": 415, "lecun": 415, "salient": 415, "anywher": 415, "filter": 415, "magnitud": 415, "lowest": 415, "freez": 415, "grouplasso": 415, "hyper": 415, "didn": 415, "pruning_conf": 415, "littl": 416, "degrad": 416, "ex": 416, "affin": 416, "math": 416, "zeropoint": 416, "asymmetr": 416, "overflow": 416, "fp16": 416, "unseen": 416, "peopl": 416, "emul": 416, "fake": 416, "backward": 416, "mimic": 416, "made": 416, "ultim": 416, "either": 416, "pain": 416, "lossi": 416, "fx": 416, "eager": 416, "qat": 416, "site": 417, "secur": 421, "legal": 421, "injector": 423}, "objects": {"": [[349, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [349, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [349, 1, 1, "_CPPv42jd", "jd"], [349, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [351, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [352, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [352, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [352, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [352, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [352, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [352, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [350, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [350, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [350, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [350, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [350, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [350, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [350, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [350, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [350, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [352, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [352, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [352, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [352, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [352, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [352, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [352, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [352, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [352, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [352, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [349, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [349, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [349, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [349, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [349, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [349, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [349, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [349, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [349, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [349, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [350, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [350, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [350, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [350, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [350, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [350, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [350, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [350, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [350, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [350, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [350, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [350, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [350, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [350, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [350, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [350, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [350, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [350, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [350, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [350, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [350, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [350, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [350, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [350, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [350, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [350, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [350, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [349, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [349, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [349, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [349, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [349, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [349, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [349, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [349, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [349, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [349, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [349, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [349, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [349, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [349, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [350, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [350, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [350, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [350, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [350, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [350, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [350, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [350, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [350, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [350, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [350, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [350, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [350, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [350, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [350, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [350, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [350, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [350, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [350, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [350, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [350, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [350, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [350, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [350, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [350, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [350, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [350, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [350, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [350, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [350, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [350, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [350, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [350, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute"], [350, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [350, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute::ctx"], [350, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [350, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [350, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [350, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [350, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [350, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [350, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [350, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [350, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [350, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [350, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [350, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [350, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [350, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [350, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [350, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [350, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [350, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [350, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [350, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [350, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [350, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [350, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [350, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [350, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [350, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [350, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [350, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [350, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [350, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [350, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [350, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [350, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [350, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [350, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [350, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [350, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [350, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [350, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [350, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [350, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [350, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [350, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [351, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [351, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [351, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [351, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [351, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [351, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [351, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [351, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [351, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [351, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [351, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [351, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [351, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [351, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [351, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [351, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [351, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [351, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [351, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [351, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [351, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [351, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [351, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [351, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [351, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [351, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [351, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [351, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [351, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [351, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [351, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [350, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [350, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [350, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [350, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [350, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [350, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [350, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [350, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [350, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [350, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [350, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [350, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [350, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [350, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [350, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [350, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [350, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [350, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [350, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [350, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [350, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [350, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [350, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [350, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [350, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [350, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [350, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [350, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [350, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [350, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [350, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [350, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [350, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [350, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [350, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [350, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [350, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [350, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [350, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [352, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [352, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [352, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [352, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [352, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [352, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [352, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [352, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [352, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [352, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [352, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [352, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [352, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [352, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [352, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [352, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [352, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [352, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [352, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [352, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [352, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [352, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [352, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [352, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [352, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [352, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [352, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [352, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [352, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [352, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [352, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [352, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [352, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [352, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [352, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [352, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [352, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [352, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [352, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [352, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [352, 1, 1, "_CPPv4N2jd3ssd12matmul_inputE", "jd::ssd::matmul_input"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::APPEND_SUM"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::SCALE0"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::SRC0"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::SRC1"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::SRC2"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::ZP0"], [352, 6, 1, "_CPPv4N2jd3ssd12matmul_input5inputE", "jd::ssd::matmul_input::input"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::input::APPEND_SUM"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::input::SCALE0"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::input::SRC0"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::input::SRC1"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::input::SRC2"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::input::ZP0"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::input::matmul_io_MAX"], [352, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::matmul_io_MAX"], [352, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [352, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [352, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [352, 1, 1, "_CPPv4N2jd3ssd13matmul_outputE", "jd::ssd::matmul_output"], [352, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::DST0"], [352, 6, 1, "_CPPv4N2jd3ssd13matmul_output6outputE", "jd::ssd::matmul_output::output"], [352, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::output::DST0"], [352, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [352, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [352, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [352, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [352, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [352, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [352, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [352, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [352, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [352, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [352, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [352, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [352, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [352, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [352, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [352, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [352, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [352, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [352, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [352, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [352, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [352, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [352, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [352, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [352, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [352, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [352, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [352, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [352, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [352, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [352, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [352, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [352, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [352, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [352, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [352, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [352, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [352, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [352, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [352, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [352, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [352, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [352, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [352, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [352, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [352, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [352, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [352, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [352, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [352, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [352, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [352, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [352, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [352, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [352, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [352, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [352, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [352, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [352, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [352, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [352, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [352, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [352, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [350, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [350, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [350, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [350, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [350, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [350, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [350, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [350, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [350, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [350, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [350, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [350, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [350, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [350, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [350, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [350, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [350, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [350, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [350, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [0, 9, 0, "-", "clang-format"], [1, 9, 0, "-", "convert_falcon"], [2, 9, 0, "-", "convert_gptj"], [3, 9, 0, "-", "convert_gptneox"], [4, 9, 0, "-", "convert_llama"], [5, 9, 0, "-", "convert_mpt"], [6, 9, 0, "-", "gptj_binding"], [221, 9, 0, "-", "intel_extension_for_transformers"], [258, 9, 0, "-", "sparsity_all"], [259, 9, 0, "-", "test_add_cls_token"], [260, 9, 0, "-", "test_add_embeddings"], [261, 9, 0, "-", "test_add_zeros"], [262, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [263, 9, 0, "-", "test_attention_reshape"], [264, 9, 0, "-", "test_baddbmm"], [265, 9, 0, "-", "test_bert_mini_fp32"], [266, 9, 0, "-", "test_binary_op"], [267, 9, 0, "-", "test_binaryop"], [268, 9, 0, "-", "test_cast_to"], [269, 9, 0, "-", "test_concat"], [270, 9, 0, "-", "test_conv_reshape"], [271, 9, 0, "-", "test_decoder_attn_reshape"], [272, 9, 0, "-", "test_dispatcher_tuning_acc"], [273, 9, 0, "-", "test_dispatcher_tuning_throughput"], [274, 9, 0, "-", "test_dolly_pattern"], [275, 9, 0, "-", "test_dynamic_quantization"], [276, 9, 0, "-", "test_electra"], [277, 9, 0, "-", "test_embedding"], [278, 9, 0, "-", "test_embeddingbag"], [279, 9, 0, "-", "test_execution_options"], [280, 9, 0, "-", "test_fwk"], [281, 9, 0, "-", "test_gather"], [282, 9, 0, "-", "test_gelu"], [283, 9, 0, "-", "test_gpt_int8"], [284, 9, 0, "-", "test_graph_dispatch"], [285, 9, 0, "-", "test_graph_optimizer"], [286, 9, 0, "-", "test_insert_input_output_data"], [287, 9, 0, "-", "test_is_supported_onnx_graph"], [288, 9, 0, "-", "test_last_layer_shape"], [289, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [290, 9, 0, "-", "test_layer_norm_with_transpose"], [291, 9, 0, "-", "test_layernorm"], [292, 9, 0, "-", "test_linear"], [293, 9, 0, "-", "test_linear_int8"], [294, 9, 0, "-", "test_llama_pattern"], [295, 9, 0, "-", "test_main"], [296, 9, 0, "-", "test_matmul"], [297, 9, 0, "-", "test_matmul_int8"], [298, 9, 0, "-", "test_matmul_with_bias_relu"], [299, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [300, 9, 0, "-", "test_matmul_with_bias_tanh"], [301, 9, 0, "-", "test_merged_embeddingbag"], [302, 9, 0, "-", "test_model"], [303, 9, 0, "-", "test_neox_rotary_pos_emb"], [304, 9, 0, "-", "test_onnx_utils"], [305, 9, 0, "-", "test_operator_adaptor"], [306, 9, 0, "-", "test_ops"], [307, 9, 0, "-", "test_padding_seq"], [308, 9, 0, "-", "test_padding_sequence"], [309, 9, 0, "-", "test_pattern_dispatch"], [310, 9, 0, "-", "test_permute"], [311, 9, 0, "-", "test_position_embeddings"], [312, 9, 0, "-", "test_pow"], [313, 9, 0, "-", "test_primitive_cache_acc"], [314, 9, 0, "-", "test_primitive_cache_throughput"], [315, 9, 0, "-", "test_qkv_merge"], [316, 9, 0, "-", "test_qkv_reshape"], [317, 9, 0, "-", "test_quant_onnx_execute"], [318, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [319, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [320, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [321, 9, 0, "-", "test_size"], [322, 9, 0, "-", "test_slice"], [323, 9, 0, "-", "test_softmax"], [324, 9, 0, "-", "test_start_end_logits"], [325, 9, 0, "-", "test_static_compressed_buffer"], [326, 9, 0, "-", "test_tanh"], [327, 9, 0, "-", "test_text_encoder"], [328, 9, 0, "-", "test_text_encoder_bf16"], [329, 9, 0, "-", "test_tf_utils"], [330, 9, 0, "-", "test_token_type_embeddings"], [331, 9, 0, "-", "test_transpose"], [332, 9, 0, "-", "test_transpose_batch_matmul"], [333, 9, 0, "-", "test_unet"], [334, 9, 0, "-", "test_unet_bf16"], [335, 9, 0, "-", "test_unsqueeze"], [336, 9, 0, "-", "test_vae_decoder"], [337, 9, 0, "-", "test_vae_decoder_bf16"], [338, 9, 0, "-", "test_weight_sharing_acc"], [339, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [340, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [341, 9, 0, "-", "test_weight_sharing_throughput"]], "convert_falcon": [[1, 10, 1, "", "bytes_to_unicode"]], "convert_gptj": [[2, 10, 1, "", "bytes_to_unicode"]], "convert_gptneox": [[3, 10, 1, "", "bytes_to_unicode"]], "convert_llama": [[4, 11, 1, "", "LazyUnpickler"], [4, 11, 1, "", "NEFileType"], [4, 10, 1, "", "bounded_parallel_map"], [4, 10, 1, "", "find_multifile_paths"], [4, 10, 1, "", "handle_quantization"], [4, 10, 1, "", "load_some_model"], [4, 10, 1, "", "nth_multifile_path"]], "convert_llama.LazyUnpickler": [[4, 12, 1, "", "find_class"]], "convert_mpt": [[5, 10, 1, "", "bytes_to_unicode"]], "intel_extension_for_transformers": [[7, 9, 0, "-", "backends"], [212, 9, 0, "-", "evaluation"], [228, 9, 0, "-", "optimization"], [256, 9, 0, "-", "preprocessing"]], "intel_extension_for_transformers.backends": [[207, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[18, 9, 0, "-", "compile"], [207, 10, 1, "", "neural_engine_bin"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[8, 9, 0, "-", "compile"], [9, 9, 0, "-", "dynamic_quantize"], [11, 9, 0, "-", "extractors"], [16, 9, 0, "-", "graph"], [17, 9, 0, "-", "graph_utils"], [19, 9, 0, "-", "loaders"], [21, 9, 0, "-", "logger"], [22, 9, 0, "-", "onnx_utils"], [44, 9, 0, "-", "ops"], [90, 9, 0, "-", "optimizer"], [114, 9, 0, "-", "sub_graph"], [205, 9, 0, "-", "tf_utils"], [206, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, 10, 1, "", "compile"], [8, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[10, 9, 0, "-", "extractor"], [12, 9, 0, "-", "onnx_extractor"], [13, 9, 0, "-", "tf_extractor"], [14, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, 11, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[15, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[15, 12, 1, "", "add_config_item"], [15, 12, 1, "", "change_node_input_tensors"], [15, 12, 1, "", "change_node_output_tensors"], [15, 12, 1, "", "dump_tensor"], [15, 12, 1, "", "engine_init"], [15, 12, 1, "", "get_next_node_names"], [15, 12, 1, "", "get_node_by_name"], [15, 12, 1, "", "get_node_id"], [15, 12, 1, "", "get_pre_node_names"], [15, 12, 1, "", "get_sparse_nodes_name"], [15, 12, 1, "", "get_tensor_idx"], [15, 12, 1, "", "graph_dispatch"], [15, 12, 1, "", "graph_init"], [15, 12, 1, "", "inference"], [15, 12, 1, "", "inquire_config_item"], [15, 12, 1, "", "insert_nodes"], [15, 12, 1, "", "modify_node_connections"], [15, 12, 1, "", "remove_nodes"], [15, 12, 1, "", "rename_node"], [15, 12, 1, "", "save"], [15, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, 11, 1, "", "LazyImport"], [17, 10, 1, "", "autocast_init"], [17, 10, 1, "", "construct_node"], [17, 10, 1, "", "del_environ_var"], [17, 10, 1, "", "del_environ_vars"], [17, 10, 1, "", "environ_info_init"], [17, 10, 1, "", "get_autocast_info"], [17, 10, 1, "", "get_data_dtype"], [17, 10, 1, "", "get_environ_info"], [17, 10, 1, "", "get_model_fwk_name"], [17, 10, 1, "", "get_quant_info"], [17, 10, 1, "", "insert_environ_info"], [17, 10, 1, "", "insert_pattern"], [17, 10, 1, "", "insert_quant_info"], [17, 10, 1, "", "list2str"], [17, 10, 1, "", "names_from_input"], [17, 10, 1, "", "pattern_mapping"], [17, 10, 1, "", "pattern_mapping_conf_validation"], [17, 10, 1, "", "quant_info_init"], [17, 10, 1, "", "remove_environ_info_item"], [17, 10, 1, "", "remove_environ_info_items"], [17, 10, 1, "", "search_pattern"], [17, 10, 1, "", "search_straight_pattern"], [17, 10, 1, "", "set_autocast"], [17, 10, 1, "", "set_environ_var"], [17, 10, 1, "", "set_environ_vars"], [17, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[20, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, 11, 1, "", "Logger"], [21, 10, 1, "", "debug"], [21, 10, 1, "", "error"], [21, 10, 1, "", "fatal"], [21, 10, 1, "", "info"], [21, 10, 1, "", "log"], [21, 10, 1, "", "warn"], [21, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[21, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, 10, 1, "", "bias_to_int32"], [22, 10, 1, "", "change_num_name"], [22, 10, 1, "", "get_children"], [22, 10, 1, "", "get_initializer_children_names"], [22, 10, 1, "", "get_node_children_names"], [22, 10, 1, "", "graph_node_names_details"], [22, 10, 1, "", "is_supported_onnx_graph"], [22, 10, 1, "", "is_supported_onnx_node"], [22, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[23, 9, 0, "-", "all"], [24, 9, 0, "-", "assert"], [25, 9, 0, "-", "baddbmm"], [26, 9, 0, "-", "batch_matmul"], [27, 9, 0, "-", "batch_matmul_v2"], [28, 9, 0, "-", "bias_add"], [29, 9, 0, "-", "binary_op"], [30, 9, 0, "-", "cast"], [31, 9, 0, "-", "concat"], [32, 9, 0, "-", "conv"], [33, 9, 0, "-", "cos"], [34, 9, 0, "-", "empty_ops"], [35, 9, 0, "-", "expand_dims"], [36, 9, 0, "-", "fused_batch_matmul_v2"], [37, 9, 0, "-", "fused_batch_norm_v3"], [38, 9, 0, "-", "fused_gemm"], [39, 9, 0, "-", "fused_matmul"], [40, 9, 0, "-", "gather"], [41, 9, 0, "-", "gather_elements"], [42, 9, 0, "-", "gelu"], [43, 9, 0, "-", "gemm"], [45, 9, 0, "-", "iterator_get_next"], [46, 9, 0, "-", "iterator_v2"], [47, 9, 0, "-", "layer_normalization"], [48, 9, 0, "-", "log_softmax"], [49, 9, 0, "-", "map_and_batch_dataset"], [50, 9, 0, "-", "matmul"], [51, 9, 0, "-", "mean"], [52, 9, 0, "-", "mkl_layer_norm"], [53, 9, 0, "-", "model_dataset"], [54, 9, 0, "-", "one_hot"], [55, 9, 0, "-", "onnx_input"], [56, 9, 0, "-", "op"], [57, 9, 0, "-", "optimize_dataset"], [58, 9, 0, "-", "pack"], [59, 9, 0, "-", "padding_sequence"], [60, 9, 0, "-", "placeholder"], [61, 9, 0, "-", "pos_embed"], [62, 9, 0, "-", "pow"], [63, 9, 0, "-", "quantize_linear"], [64, 9, 0, "-", "quantize_v2"], [65, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [66, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [67, 9, 0, "-", "reduce_mean"], [68, 9, 0, "-", "reduce_sum"], [69, 9, 0, "-", "reorder"], [70, 9, 0, "-", "reshape"], [71, 9, 0, "-", "resize"], [72, 9, 0, "-", "rsub"], [73, 9, 0, "-", "scatter_elements"], [74, 9, 0, "-", "shape"], [75, 9, 0, "-", "sin"], [76, 9, 0, "-", "size"], [77, 9, 0, "-", "slice"], [78, 9, 0, "-", "slice_position_ids"], [79, 9, 0, "-", "softmax"], [80, 9, 0, "-", "split"], [81, 9, 0, "-", "squeeze"], [82, 9, 0, "-", "strided_slice"], [83, 9, 0, "-", "tensor"], [84, 9, 0, "-", "top_k"], [85, 9, 0, "-", "transpose"], [86, 9, 0, "-", "unpack"], [87, 9, 0, "-", "unsqueeze"], [88, 9, 0, "-", "view"], [89, 9, 0, "-", "where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, 11, 1, "", "Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, 11, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, 11, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, 11, 1, "", "Add"], [34, 11, 1, "", "AddV2"], [34, 11, 1, "", "Arange"], [34, 11, 1, "", "BinaryAdd"], [34, 11, 1, "", "Constant"], [34, 11, 1, "", "ConstantOfShape"], [34, 11, 1, "", "Convolution"], [34, 11, 1, "", "CumSum"], [34, 11, 1, "", "Dequantize"], [34, 11, 1, "", "DequantizeLinear"], [34, 11, 1, "", "Einsum"], [34, 11, 1, "", "EmbeddingBag"], [34, 11, 1, "", "Erf"], [34, 11, 1, "", "Expand"], [34, 11, 1, "", "ExpandIndices"], [34, 11, 1, "", "Fill"], [34, 11, 1, "", "FlatMapDataset"], [34, 11, 1, "", "Flatten"], [34, 11, 1, "", "Floor_divide"], [34, 11, 1, "", "Identity"], [34, 11, 1, "", "InnerProduct"], [34, 11, 1, "", "Input"], [34, 11, 1, "", "LatRange"], [34, 11, 1, "", "ListConstruct"], [34, 11, 1, "", "ListUnpack"], [34, 11, 1, "", "Loop"], [34, 11, 1, "", "MakeIterator"], [34, 11, 1, "", "Masked_fill"], [34, 11, 1, "", "MatMulWithBias"], [34, 11, 1, "", "MatMulWithBiasAdd"], [34, 11, 1, "", "MatMulWithBiasGelu"], [34, 11, 1, "", "MatMulWithBiasRelu"], [34, 11, 1, "", "MatMulWithBiasSigmoid"], [34, 11, 1, "", "MatMulWithBiasTanh"], [34, 11, 1, "", "Matmul"], [34, 11, 1, "", "Max"], [34, 11, 1, "", "MergedEmbeddingbag"], [34, 11, 1, "", "MultiHeadAttenion"], [34, 11, 1, "", "Onehot"], [34, 11, 1, "", "OpAny"], [34, 11, 1, "", "Output"], [34, 11, 1, "", "PositionIds"], [34, 11, 1, "", "QLinearAdd"], [34, 11, 1, "", "QLinearMatMul"], [34, 11, 1, "", "QLinearMul"], [34, 11, 1, "", "Range"], [34, 11, 1, "", "RealDiv"], [34, 11, 1, "", "Reciprocal"], [34, 11, 1, "", "Relu"], [34, 11, 1, "", "Repeat"], [34, 11, 1, "", "Rsqrt"], [34, 11, 1, "", "SequenceLength"], [34, 11, 1, "", "Sigmoid"], [34, 11, 1, "", "Silu"], [34, 11, 1, "", "Sqrt"], [34, 11, 1, "", "Square"], [34, 11, 1, "", "SquaredDifference"], [34, 11, 1, "", "Stack"], [34, 11, 1, "", "StopGradient"], [34, 11, 1, "", "Tanh"], [34, 11, 1, "", "TensorSliceDataset"], [34, 11, 1, "", "Tile"], [34, 11, 1, "", "TokenTypeIds"], [34, 11, 1, "", "TransposeBatchMatMul"], [34, 11, 1, "", "Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, 11, 1, "", "Gather"], [40, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, 11, 1, "", "LayerNorm"], [47, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, 11, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[55, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, 11, 1, "", "Operator"], [56, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[56, 12, 1, "", "construct"], [56, 12, 1, "", "extract"], [56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, 11, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, 11, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, 11, 1, "", "Quantize"], [63, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, 11, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, 11, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, 11, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, 11, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, 11, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, 11, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, 11, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, 11, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[81, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[82, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[84, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[85, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[86, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[87, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, 11, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[88, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where": [[89, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, 11, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[90, 12, 1, "", "optimize"], [90, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[91, 9, 0, "-", "InnerproductReshapeFusion"], [92, 9, 0, "-", "add_cls_token"], [93, 9, 0, "-", "add_embeddings"], [94, 9, 0, "-", "arangewithreciprocal"], [95, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [96, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [97, 9, 0, "-", "attentionBlock_QKVPreReshape"], [98, 9, 0, "-", "attentionBlock_QKVReshape"], [99, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [100, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [101, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [102, 9, 0, "-", "attention_reshape"], [103, 9, 0, "-", "cast_to"], [104, 9, 0, "-", "collect_quant_info"], [105, 9, 0, "-", "conv_reshape"], [106, 9, 0, "-", "decoder_attn_reshape"], [107, 9, 0, "-", "einsumwitharange"], [108, 9, 0, "-", "embeddingbag"], [109, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [110, 9, 0, "-", "gelu"], [111, 9, 0, "-", "generate_sequence"], [112, 9, 0, "-", "groupNorm"], [113, 9, 0, "-", "groupNormSwish"], [115, 9, 0, "-", "innerproductwithbiasgelu"], [116, 9, 0, "-", "innerproductwithslice"], [117, 9, 0, "-", "innerproductwithswish"], [118, 9, 0, "-", "input_data"], [119, 9, 0, "-", "input_file"], [120, 9, 0, "-", "insert_bf16_node"], [121, 9, 0, "-", "insert_quant_node"], [122, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [123, 9, 0, "-", "interact_features"], [124, 9, 0, "-", "last_layer_shape"], [125, 9, 0, "-", "layer_norm"], [126, 9, 0, "-", "layer_norm_with_reduce_mean"], [127, 9, 0, "-", "layer_norm_with_transpose"], [128, 9, 0, "-", "llama_embeding"], [129, 9, 0, "-", "llama_matmulwithtranspose"], [130, 9, 0, "-", "llama_postprocess"], [131, 9, 0, "-", "llama_rotary_pos_emb"], [132, 9, 0, "-", "lower_all_tuples"], [133, 9, 0, "-", "matmul_with_bias"], [134, 9, 0, "-", "matmul_with_bias_add"], [135, 9, 0, "-", "matmul_with_bias_gelu"], [136, 9, 0, "-", "matmul_with_bias_relu"], [137, 9, 0, "-", "matmul_with_bias_sigmoid"], [138, 9, 0, "-", "matmul_with_bias_tanh"], [139, 9, 0, "-", "matmul_with_bias_unsqueeze"], [140, 9, 0, "-", "matmul_with_transpose"], [141, 9, 0, "-", "matmul_with_transpose_scale_add"], [142, 9, 0, "-", "merged_embeddingbag"], [143, 9, 0, "-", "multi_head_attention"], [144, 9, 0, "-", "neox_reorder_change"], [145, 9, 0, "-", "neox_rotary_pos_emb"], [146, 9, 0, "-", "operator_adaptor"], [147, 9, 0, "-", "output_data"], [148, 9, 0, "-", "padding_sequence"], [149, 9, 0, "-", "pattern"], [150, 9, 0, "-", "position_embeddings"], [151, 9, 0, "-", "position_embeddings_v1"], [152, 9, 0, "-", "qkv_merge"], [153, 9, 0, "-", "qkv_reshape"], [154, 9, 0, "-", "quant_gather_to_bf16"], [155, 9, 0, "-", "quantize_fusion"], [156, 9, 0, "-", "quantized_graph_dtype_refactor"], [157, 9, 0, "-", "remove_constant_op"], [158, 9, 0, "-", "remove_last_view"], [159, 9, 0, "-", "remove_range"], [160, 9, 0, "-", "remove_unused_operator"], [161, 9, 0, "-", "remove_zeros"], [162, 9, 0, "-", "removeslice"], [163, 9, 0, "-", "reshape_after_restore_hidden_states"], [164, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [165, 9, 0, "-", "reshape_before_restore_hidden_states"], [166, 9, 0, "-", "reshape_fusion"], [167, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [168, 9, 0, "-", "rms_norm"], [169, 9, 0, "-", "rotary_pos_emb"], [170, 9, 0, "-", "slicemask"], [171, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [172, 9, 0, "-", "stableDiffusion_MHA"], [173, 9, 0, "-", "stableDiffusion_MHAReshape"], [174, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [175, 9, 0, "-", "stableDiffusion_bf16Convert"], [176, 9, 0, "-", "start_end_logits"], [177, 9, 0, "-", "subgraph_matcher"], [178, 9, 0, "-", "textEncdoer_word_embedding"], [179, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [180, 9, 0, "-", "textEncoder_AttentionReshape"], [181, 9, 0, "-", "textEncoder_KVReshape"], [182, 9, 0, "-", "textEncoder_MulReshape"], [183, 9, 0, "-", "textEncoder_QReshape"], [184, 9, 0, "-", "textEncoder_SoftmaxReshape"], [185, 9, 0, "-", "textEncoder_causal_attention_mask"], [186, 9, 0, "-", "token_type_embeddings"], [187, 9, 0, "-", "token_type_embeddings_v1"], [188, 9, 0, "-", "torch_embedding"], [189, 9, 0, "-", "torch_ip_insert_bias"], [190, 9, 0, "-", "torch_unpack_baddbmm"], [191, 9, 0, "-", "torchinsertbf16node"], [192, 9, 0, "-", "torchpaddingsquence"], [193, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [194, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [195, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [196, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [197, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [198, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [199, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [200, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [201, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [202, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [203, 9, 0, "-", "transpose_batch_matmul"], [204, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[91, 11, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, 11, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[95, 11, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[96, 11, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[97, 11, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[98, 11, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[99, 11, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, 11, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, 11, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, 11, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, 11, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[112, 11, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[113, 11, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, 11, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, 11, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, 11, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, 11, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, 11, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, 11, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, 11, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, 11, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, 11, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, 11, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, 11, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, 11, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, 11, 1, "", "NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, 11, 1, "", "NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, 11, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, 11, 1, "", "Pattern"], [149, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, 11, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, 11, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, 11, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, 11, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, 11, 1, "", "RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, 11, 1, "", "RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, 11, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, 11, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, 11, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, 11, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[171, 11, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[172, 11, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[173, 11, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[174, 11, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[175, 11, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[178, 11, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[179, 11, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[180, 11, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[181, 11, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[182, 11, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[183, 11, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[184, 11, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[185, 11, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, 11, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, 11, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, 11, 1, "", "TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, 11, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[193, 11, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[194, 11, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[195, 11, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[196, 11, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[197, 11, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[198, 11, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[199, 11, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[200, 11, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[201, 11, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[202, 11, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, 13, 1, "", "TF_DTYPE_ID"], [205, 10, 1, "", "create_tf_node"], [205, 10, 1, "", "get_tensor_dest_op"], [205, 10, 1, "", "graph_node_names_details"], [205, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, 10, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[211, 9, 0, "-", "hf_eval"], [214, 9, 0, "-", "lm_code_eval"], [216, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.hf_eval": [[208, 9, 0, "-", "evaluator"], [210, 9, 0, "-", "hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[209, 9, 0, "-", "cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, 11, 1, "", "DataCollatorForSupervisedDataset"], [209, 10, 1, "", "preprocess"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[213, 9, 0, "-", "evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, 10, 1, "", "evaluate"], [213, 10, 1, "", "pattern_match"]], "intel_extension_for_transformers.evaluation.lm_eval": [[215, 9, 0, "-", "evaluator"], [218, 9, 0, "-", "models"], [219, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, 10, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[217, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, 11, 1, "", "AutoCausalLM"], [217, 11, 1, "", "AutoSeq2SeqLM"], [217, 11, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[220, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, 11, 1, "", "LambadaOpenAI"], [220, 11, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[222, 9, 0, "-", "benchmark"], [223, 9, 0, "-", "config"], [224, 9, 0, "-", "distillation"], [227, 9, 0, "-", "dynamic"], [230, 9, 0, "-", "mixture"], [231, 9, 0, "-", "model"], [232, 9, 0, "-", "modeling"], [236, 9, 0, "-", "nas"], [238, 9, 0, "-", "optimizer"], [239, 9, 0, "-", "optimizer_tf"], [240, 9, 0, "-", "pipeline"], [241, 9, 0, "-", "pruner"], [243, 9, 0, "-", "pruning"], [244, 9, 0, "-", "quantization"], [245, 9, 0, "-", "trainer"], [247, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[222, 10, 1, "", "benchmark"], [222, 10, 1, "", "get_example_inputs"], [222, 10, 1, "", "preprocess_model"], [222, 10, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[223, 11, 1, "", "AutoDistillationConfig"], [223, 11, 1, "", "BenchmarkConfig"], [223, 11, 1, "", "DistillationConfig"], [223, 11, 1, "", "DynamicLengthConfig"], [223, 11, 1, "", "FlashDistillationConfig"], [223, 11, 1, "", "NASConfig"], [223, 11, 1, "", "Provider"], [223, 11, 1, "", "PrunerV2"], [223, 11, 1, "", "PruningConfig"], [223, 11, 1, "", "QuantizationConfig"], [223, 11, 1, "", "TFDistillationConfig"], [223, 11, 1, "", "WeightPruningConfig"], [223, 10, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[223, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[224, 11, 1, "", "Criterion"], [224, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[225, 9, 0, "-", "drop_and_restore_utils"], [226, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, 10, 1, "", "sample_layer_configuration"], [225, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, 11, 1, "", "Evolution"], [226, 10, 1, "", "approx_ratio"], [226, 10, 1, "", "inverse"], [226, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[226, 12, 1, "", "add_gene"], [226, 12, 1, "", "convex_hull"], [226, 12, 1, "", "crossover"], [226, 12, 1, "", "get_store"], [226, 12, 1, "", "load_store"], [226, 12, 1, "", "mutate"], [226, 12, 1, "", "pareto_frontier"], [226, 12, 1, "", "save_population"], [226, 12, 1, "", "save_store"], [226, 12, 1, "", "set_lower_constraint"], [226, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[229, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[229, 12, 1, "", "create_distillers"], [229, 12, 1, "", "estimate"], [229, 12, 1, "", "init_by_cfg"], [229, 12, 1, "", "load_search_results"], [229, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[231, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[231, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.modeling": [[233, 9, 0, "-", "modeling_base_seq2seq"], [234, 9, 0, "-", "modeling_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, 11, 1, "", "INCDecoder"], [234, 11, 1, "", "INCEncoder"]], "intel_extension_for_transformers.optimization.nas": [[235, 9, 0, "-", "basic_nas"], [237, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[235, 12, 1, "", "estimate"], [235, 12, 1, "", "execute"], [235, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[238, 11, 1, "", "NoTrainerOptimizer"], [238, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[238, 12, 1, "", "distill"], [238, 12, 1, "", "init_distiller"], [238, 12, 1, "", "init_pruner"], [238, 12, 1, "", "init_quantizer"], [238, 12, 1, "", "prune"], [238, 12, 1, "", "quantize"], [238, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[238, 12, 1, "", "fit"], [238, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[239, 12, 1, "", "autodistill"], [239, 12, 1, "", "build_train_func"], [239, 12, 1, "", "builtin_eval_func"], [239, 12, 1, "", "distill"], [239, 12, 1, "", "init_distiller"], [239, 12, 1, "", "init_pruner"], [239, 12, 1, "", "init_quantizer"], [239, 12, 1, "", "model_builder_builtin"], [239, 12, 1, "", "prune"], [239, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[240, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[242, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[242, 14, 1, "", "config_file_path"], [242, 12, 1, "", "get_sparsity_ratio"], [242, 14, 1, "", "model"], [242, 12, 1, "", "on_after_eval"], [242, 12, 1, "", "on_after_optimizer_step"], [242, 12, 1, "", "on_before_eval"], [242, 12, 1, "", "on_before_optimizer_step"], [242, 12, 1, "", "on_epoch_begin"], [242, 12, 1, "", "on_epoch_end"], [242, 12, 1, "", "on_step_begin"], [242, 12, 1, "", "on_step_end"], [242, 12, 1, "", "on_train_begin"], [242, 12, 1, "", "on_train_end"], [242, 14, 1, "", "pruner_info"], [242, 14, 1, "", "pruners"], [242, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[243, 11, 1, "", "PrunerConfig"], [243, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[244, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[245, 11, 1, "", "BaseTrainer"], [245, 11, 1, "", "NLPSeq2SeqTrainer"], [245, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[245, 12, 1, "", "auto_distil_evaluation_loop"], [245, 12, 1, "", "autodistillation"], [245, 12, 1, "", "benchmark"], [245, 12, 1, "", "builtin_eval_func"], [245, 12, 1, "", "builtin_train_func"], [245, 12, 1, "", "compute_loss"], [245, 12, 1, "", "create_optimizer_builtin"], [245, 12, 1, "", "distill"], [245, 12, 1, "", "export_to_bf16_onnx"], [245, 12, 1, "", "export_to_fp32_onnx"], [245, 12, 1, "", "export_to_int8_onnx"], [245, 12, 1, "", "export_to_jit"], [245, 12, 1, "", "export_to_onnx"], [245, 12, 1, "", "init_distiller"], [245, 12, 1, "", "init_pruner"], [245, 12, 1, "", "init_quantizer"], [245, 12, 1, "", "model_builder_builtin"], [245, 12, 1, "", "nas"], [245, 12, 1, "", "orchestrate_optimizations"], [245, 12, 1, "", "prune"], [245, 12, 1, "", "quantize"], [245, 12, 1, "", "run_evolutionary_search"], [245, 12, 1, "", "set_dynamic_config"], [245, 12, 1, "", "train"], [245, 12, 1, "", "training_step"], [245, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[245, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[246, 9, 0, "-", "get_throughput"], [248, 9, 0, "-", "metrics"], [249, 9, 0, "-", "models"], [252, 9, 0, "-", "objectives"], [253, 9, 0, "-", "utility"], [254, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[250, 9, 0, "-", "modeling_bert_dynamic"], [251, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, 11, 1, "", "BertAttention"], [250, 11, 1, "", "BertEmbeddings"], [250, 11, 1, "", "BertEncoder"], [250, 11, 1, "", "BertForMaskedLM"], [250, 11, 1, "", "BertForMultipleChoice"], [250, 11, 1, "", "BertForNextSentencePrediction"], [250, 11, 1, "", "BertForPreTraining"], [250, 11, 1, "", "BertForPreTrainingOutput"], [250, 11, 1, "", "BertForQuestionAnswering"], [250, 11, 1, "", "BertForSequenceClassification"], [250, 11, 1, "", "BertForTokenClassification"], [250, 11, 1, "", "BertIntermediate"], [250, 11, 1, "", "BertLMHeadModel"], [250, 11, 1, "", "BertLMPredictionHead"], [250, 11, 1, "", "BertLayer"], [250, 11, 1, "", "BertModel"], [250, 11, 1, "", "BertOnlyMLMHead"], [250, 11, 1, "", "BertOnlyNSPHead"], [250, 11, 1, "", "BertOutput"], [250, 11, 1, "", "BertPooler"], [250, 11, 1, "", "BertPreTrainedModel"], [250, 11, 1, "", "BertPreTrainingHeads"], [250, 11, 1, "", "BertPredictionHeadTransform"], [250, 11, 1, "", "BertSelfAttention"], [250, 11, 1, "", "BertSelfOutput"], [250, 10, 1, "", "expand_gather"], [250, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "prepare_inputs_for_generation"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "prepare_inputs_for_generation"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[250, 12, 1, "", "feed_forward_chunk"], [250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_input_embeddings"], [250, 12, 1, "", "set_input_embeddings"], [250, 12, 1, "", "set_length_config"], [250, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, 11, 1, "", "RobertaAttention"], [251, 11, 1, "", "RobertaClassificationHead"], [251, 11, 1, "", "RobertaEmbeddings"], [251, 11, 1, "", "RobertaEncoder"], [251, 11, 1, "", "RobertaForCausalLM"], [251, 11, 1, "", "RobertaForMaskedLM"], [251, 11, 1, "", "RobertaForMultipleChoice"], [251, 11, 1, "", "RobertaForQuestionAnswering"], [251, 11, 1, "", "RobertaForSequenceClassification"], [251, 11, 1, "", "RobertaForTokenClassification"], [251, 11, 1, "", "RobertaIntermediate"], [251, 11, 1, "", "RobertaLMHead"], [251, 11, 1, "", "RobertaLayer"], [251, 11, 1, "", "RobertaModel"], [251, 11, 1, "", "RobertaOutput"], [251, 11, 1, "", "RobertaPooler"], [251, 11, 1, "", "RobertaPreTrainedModel"], [251, 11, 1, "", "RobertaSelfAttention"], [251, 11, 1, "", "RobertaSelfOutput"], [251, 10, 1, "", "create_position_ids_from_input_ids"], [251, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[251, 12, 1, "", "create_position_ids_from_inputs_embeds"], [251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "prepare_inputs_for_generation"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[251, 12, 1, "", "feed_forward_chunk"], [251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_input_embeddings"], [251, 12, 1, "", "set_input_embeddings"], [251, 12, 1, "", "set_length_config"], [251, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[251, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[252, 12, 1, "", "modelsize"], [252, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, 11, 1, "", "TFDataloader"], [254, 10, 1, "", "distributed_init"], [254, 10, 1, "", "get_filepath"], [254, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[255, 9, 0, "-", "data_augmentation"], [257, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, 11, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[255, 12, 1, "", "data_augment"], [255, 12, 1, "", "mit_data_augmentation"], [255, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[257, 11, 1, "", "AugmenterType"], [257, 10, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[259, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[260, 11, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_add_zeros": [[261, 11, 1, "", "TestTorchOP"]], "test_add_zeros.TestTorchOP": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[263, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_baddbmm": [[264, 11, 1, "", "TestTorchOP"]], "test_baddbmm.TestTorchOP": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[265, 11, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_binary_op": [[266, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_binaryop": [[267, 11, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_cast_to": [[268, 11, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_concat": [[269, 11, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[270, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[271, 11, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[272, 11, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[273, 11, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_dolly_pattern": [[274, 11, 1, "", "TestTorchOP"]], "test_dolly_pattern.TestTorchOP": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[275, 11, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_electra": [[276, 11, 1, "", "TestElectra"]], "test_electra.TestElectra": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_embedding": [[277, 11, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[278, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_execution_options": [[279, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_fwk": [[280, 11, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_gather": [[281, 11, 1, "", "TestTorchOP"]], "test_gather.TestTorchOP": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_gelu": [[282, 11, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[283, 11, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[284, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[285, 11, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[286, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[287, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"], [287, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[288, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[289, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[290, 11, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_layernorm": [[291, 11, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_linear": [[292, 11, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[293, 11, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[294, 11, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_main": [[295, 11, 1, "", "TestMain"]], "test_main.TestMain": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_matmul": [[296, 11, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[297, 11, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[298, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[299, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[300, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[301, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_neox_rotary_pos_emb": [[303, 11, 1, "", "TestTorchOP"]], "test_neox_rotary_pos_emb.TestTorchOP": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[304, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[305, 11, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_ops": [[306, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[307, 11, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[308, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[309, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_permute": [[310, 11, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[311, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_pow": [[312, 11, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[313, 11, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[314, 11, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[315, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[316, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[317, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[318, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[318, 12, 1, "", "setUpClass"], [318, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[319, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[319, 12, 1, "", "setUpClass"], [319, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[320, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[320, 12, 1, "", "setUpClass"], [320, 12, 1, "", "tearDownClass"]], "test_size": [[321, 11, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[321, 12, 1, "", "setUpClass"], [321, 12, 1, "", "tearDownClass"]], "test_slice": [[322, 11, 1, "", "TestTorchOP"]], "test_slice.TestTorchOP": [[322, 12, 1, "", "setUpClass"], [322, 12, 1, "", "tearDownClass"]], "test_softmax": [[323, 11, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[323, 12, 1, "", "setUpClass"], [323, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[324, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[324, 12, 1, "", "setUpClass"], [324, 12, 1, "", "tearDownClass"]], "test_static_compressed_buffer": [[325, 11, 1, "", "TestSCBuffer"]], "test_static_compressed_buffer.TestSCBuffer": [[325, 12, 1, "", "setUpClass"], [325, 12, 1, "", "tearDownClass"]], "test_tanh": [[326, 11, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[326, 12, 1, "", "setUpClass"], [326, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[327, 11, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[327, 12, 1, "", "setUpClass"], [327, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[328, 11, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[328, 12, 1, "", "setUpClass"], [328, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[329, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[329, 12, 1, "", "setUpClass"], [329, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[330, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[330, 12, 1, "", "setUpClass"], [330, 12, 1, "", "tearDownClass"]], "test_transpose": [[331, 11, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[331, 12, 1, "", "setUpClass"], [331, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[332, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[332, 12, 1, "", "setUpClass"], [332, 12, 1, "", "tearDownClass"]], "test_unet": [[333, 11, 1, "", "TestUnet"]], "test_unet.TestUnet": [[333, 12, 1, "", "setUpClass"], [333, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[334, 11, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[334, 12, 1, "", "setUpClass"], [334, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[335, 11, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[335, 12, 1, "", "setUpClass"], [335, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[336, 11, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[336, 12, 1, "", "setUpClass"], [336, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[337, 11, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[337, 12, 1, "", "setUpClass"], [337, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[338, 11, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[338, 12, 1, "", "setUpClass"], [338, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[339, 11, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[339, 12, 1, "", "setUpClass"], [339, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[340, 11, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[340, 12, 1, "", "setUpClass"], [340, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[341, 11, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[341, 12, 1, "", "setUpClass"], [341, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:data", "14": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "data", "Python data"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"clang": 0, "format": [0, 386, 400, 410], "convert_falcon": 1, "modul": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "content": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 393, 420, 425], "function": [1, 2, 3, 4, 5, 8, 17, 21, 22, 44, 56, 114, 149, 205, 206, 207, 209, 213, 215, 222, 223, 225, 226, 240, 250, 251, 253, 254, 257], "convert_gptj": 2, "convert_gptneox": 3, "convert_llama": 4, "class": [4, 10, 12, 13, 14, 15, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 217, 220, 223, 224, 226, 229, 231, 234, 235, 237, 238, 239, 242, 243, 244, 245, 248, 250, 251, 252, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 361, 412], "convert_mpt": 5, "gptj_bind": 6, "intel_extension_for_transform": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 380], "backend": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 377, 382, 414], "subpackag": [7, 18, 207, 228], "neural_engin": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "compil": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 346, 386, 392], "dynamic_quant": 9, "extractor": [10, 11, 12, 13, 14], "submodul": [11, 16, 18, 19, 44, 114, 219, 227, 228, 230, 236, 241, 247, 249, 256], "onnx_extractor": 12, "tf_extractor": 13, "torch_extractor": 14, "graph": [15, 16, 347, 382, 384, 385, 392], "graph_util": 17, "loader": [19, 20], "logger": 21, "onnx_util": 22, "op": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 381, 384], "all": 23, "assert": 24, "baddbmm": 25, "batch_matmul": 26, "batch_matmul_v2": 27, "bias_add": 28, "binary_op": 29, "cast": 30, "concat": 31, "conv": 32, "co": 33, "empty_op": 34, "expand_dim": 35, "fused_batch_matmul_v2": 36, "fused_batch_norm_v3": 37, "fused_gemm": 38, "fused_matmul": 39, "gather": 40, "gather_el": 41, "gelu": [42, 110], "gemm": [43, 399, 400, 402, 405], "packag": [44, 114, 207], "attribut": [44, 114, 205, 371, 381], "iterator_get_next": 45, "iterator_v2": 46, "layer_norm": [47, 125], "log_softmax": 48, "map_and_batch_dataset": 49, "matmul": [50, 401, 402, 403], "mean": [51, 397], "mkl_layer_norm": 52, "model_dataset": 53, "one_hot": 54, "onnx_input": 55, "optimize_dataset": 57, "pack": 58, "padding_sequ": [59, 148], "placehold": 60, "pos_emb": 61, "pow": 62, "quantize_linear": 63, "quantize_v2": 64, "quantized_fused_matmul_and_dequant": 65, "quantized_matmul_with_bias_and_dequant": 66, "reduce_mean": 67, "reduce_sum": 68, "reorder": [69, 399, 403, 404, 405], "reshap": 70, "resiz": 71, "rsub": 72, "scatter_el": 73, "shape": 74, "sin": 75, "size": [76, 393, 401], "slice": 77, "slice_position_id": 78, "softmax": [79, 409], "split": 80, "squeez": 81, "strided_slic": 82, "tensor": 83, "top_k": 84, "transpos": [85, 403, 404], "unpack": 86, "unsqueez": 87, "view": 88, "where": 89, "optim": [90, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 356, 357], "sub_graph": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "innerproductreshapefus": 91, "add_cls_token": 92, "add_embed": 93, "arangewithreciproc": 94, "attentionblock_attentionmaskaddreshap": 95, "attentionblock_constantofshapewithmul": 96, "attentionblock_qkvprereshap": 97, "attentionblock_qkvreshap": 98, "attentionblock_weightreshapeto4d": 99, "attention_mask_length_adaptive_keep_indic": 100, "attention_output_layer_norm_length_adaptive_keep_indic": 101, "attention_reshap": 102, "cast_to": 103, "collect_quant_info": 104, "conv_reshap": 105, "decoder_attn_reshap": 106, "einsumwitharang": 107, "embeddingbag": 108, "embeddings_to_2d_before_inner_product": 109, "generate_sequ": 111, "groupnorm": 112, "groupnormswish": 113, "innerproductwithbiasgelu": 115, "innerproductwithslic": 116, "innerproductwithswish": 117, "input_data": 118, "input_fil": 119, "insert_bf16_nod": 120, "insert_quant_nod": 121, "int8_bf16_mixed_precision_check": 122, "interact_featur": 123, "last_layer_shap": 124, "layer_norm_with_reduce_mean": 126, "layer_norm_with_transpos": 127, "llama_embed": 128, "llama_matmulwithtranspos": 129, "llama_postprocess": 130, "llama_rotary_pos_emb": 131, "lower_all_tupl": 132, "matmul_with_bia": 133, "matmul_with_bias_add": 134, "matmul_with_bias_gelu": 135, "matmul_with_bias_relu": 136, "matmul_with_bias_sigmoid": 137, "matmul_with_bias_tanh": 138, "matmul_with_bias_unsqueez": 139, "matmul_with_transpos": 140, "matmul_with_transpose_scale_add": 141, "merged_embeddingbag": 142, "multi_head_attent": 143, "neox_reorder_chang": 144, "neox_rotary_pos_emb": 145, "operator_adaptor": 146, "output_data": 147, "pattern": [149, 381, 384, 385, 389, 399, 400, 405], "position_embed": 150, "position_embeddings_v1": 151, "qkv_merg": 152, "qkv_reshap": 153, "quant_gather_to_bf16": 154, "quantize_fus": 155, "quantized_graph_dtype_refactor": 156, "remove_constant_op": 157, "remove_last_view": 158, "remove_rang": 159, "remove_unused_oper": 160, "remove_zero": 161, "removeslic": 162, "reshape_after_restore_hidden_st": 163, "reshape_before_and_after_attention_out_layer_norm_gather_el": 164, "reshape_before_restore_hidden_st": 165, "reshape_fus": 166, "restore_hidden_states_in_length_adaptive_update_indic": 167, "rms_norm": 168, "rotary_pos_emb": 169, "slicemask": 170, "stablediffusion_explicitnhwctranspos": 171, "stablediffusion_mha": 172, "stablediffusion_mhareshap": 173, "stablediffusion_reshapefus": 174, "stablediffusion_bf16convert": 175, "start_end_logit": 176, "subgraph_match": 177, "textencdoer_word_embed": 178, "textencoder_attentionmaskaddreshap": 179, "textencoder_attentionreshap": 180, "textencoder_kvreshap": 181, "textencoder_mulreshap": 182, "textencoder_qreshap": 183, "textencoder_softmaxreshap": 184, "textencoder_causal_attention_mask": 185, "token_type_embed": 186, "token_type_embeddings_v1": 187, "torch_embed": 188, "torch_ip_insert_bia": 189, "torch_unpack_baddbmm": 190, "torchinsertbf16nod": 191, "torchpaddingsqu": 192, "transformer2dmodel_attentionmaskaddreshap": 193, "transformer2dmodel_constantofshapewithmul": 194, "transformer2dmodel_ffnslic": 195, "transformer2dmodel_ffnslice_1": 196, "transformer2dmodel_qkvprereshap": 197, "transformer2dmodel_qkvreshap": 198, "transformer2dmodel_qkvreshape4d": 199, "transformer2dmodel_encoderhiddenstatesreshap": 200, "transformer2dmodel_getsamplebatch": 201, "transformer2dmodel_sampleslic": 202, "transpose_batch_matmul": 203, "word_embed": 204, "tf_util": 205, "torch_util": 206, "evalu": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "hf_eval": [208, 209, 210, 211], "hf_dataset": [209, 210], "cnn_dailymail": 209, "lm_code_ev": [213, 214], "lm_eval": [215, 216, 217, 218, 219, 220], "model": [217, 218, 231, 232, 233, 234, 249, 250, 251, 343, 355, 362, 374, 377, 382, 383, 386, 387, 392, 408, 414], "huggingfac": 217, "task": [219, 220], "lambada": 220, "benchmark": [222, 362, 387, 409], "config": [223, 354, 361, 381, 384], "distil": [224, 361, 375, 376, 378], "dynam": [225, 226, 227, 401, 416], "drop_and_restore_util": 225, "evolut": 226, "mixtur": [229, 230], "auto_distil": 229, "modeling_base_seq2seq": 233, "modeling_seq2seq": 234, "na": [235, 236, 237, 376], "basic_na": 235, "optimizer_tf": [239, 361], "pipelin": [240, 361, 414], "pruner": [241, 242], "prune": [242, 243, 376, 378, 415], "quantiz": [244, 376, 378, 387, 393, 416], "trainer": [245, 358, 361, 375, 415, 416], "util": [246, 247, 248, 249, 250, 251, 252, 253, 254, 257], "get_throughput": 246, "metric": [248, 375, 412, 415, 416], "modeling_bert_dynam": 250, "modeling_roberta_dynam": 251, "object": [252, 413, 416], "utility_tf": 254, "preprocess": [255, 256, 257, 401], "data_augment": 255, "sparsity_al": 258, "test_add_cls_token": 259, "test_add_embed": 260, "test_add_zero": 261, "test_attention_output_layer_norm_length_adaptive_keep_indic": 262, "test_attention_reshap": 263, "test_baddbmm": 264, "test_bert_mini_fp32": 265, "test_binary_op": 266, "test_binaryop": 267, "test_cast_to": 268, "test_concat": 269, "test_conv_reshap": 270, "test_decoder_attn_reshap": 271, "test_dispatcher_tuning_acc": 272, "test_dispatcher_tuning_throughput": 273, "test_dolly_pattern": 274, "test_dynamic_quant": 275, "test_electra": 276, "test_embed": 277, "test_embeddingbag": 278, "test_execution_opt": 279, "test_fwk": 280, "test_gath": 281, "test_gelu": 282, "test_gpt_int8": 283, "test_graph_dispatch": 284, "test_graph_optim": 285, "test_insert_input_output_data": 286, "test_is_supported_onnx_graph": 287, "test_last_layer_shap": 288, "test_layer_norm_with_reduce_mean": 289, "test_layer_norm_with_transpos": 290, "test_layernorm": 291, "test_linear": 292, "test_linear_int8": 293, "test_llama_pattern": 294, "test_main": 295, "test_matmul": 296, "test_matmul_int8": 297, "test_matmul_with_bias_relu": 298, "test_matmul_with_bias_sigmoid": 299, "test_matmul_with_bias_tanh": 300, "test_merged_embeddingbag": 301, "test_model": 302, "test_neox_rotary_pos_emb": 303, "test_onnx_util": 304, "test_operator_adaptor": 305, "test_op": 306, "test_padding_seq": 307, "test_padding_sequ": 308, "test_pattern_dispatch": 309, "test_permut": 310, "test_position_embed": 311, "test_pow": 312, "test_primitive_cache_acc": 313, "test_primitive_cache_throughput": 314, "test_qkv_merg": 315, "test_qkv_reshap": 316, "test_quant_onnx_execut": 317, "test_reshape_after_restore_hidden_st": 318, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 319, "test_reshape_before_restore_hidden_st": 320, "test_siz": 321, "test_slic": 322, "test_softmax": 323, "test_start_end_logit": 324, "test_static_compressed_buff": 325, "test_tanh": 326, "test_text_encod": 327, "test_text_encoder_bf16": 328, "test_tf_util": 329, "test_token_type_embed": 330, "test_transpos": 331, "test_transpose_batch_matmul": 332, "test_unet": 333, "test_unet_bf16": 334, "test_unsqueez": 335, "test_vae_decod": 336, "test_vae_decoder_bf16": 337, "test_weight_sharing_acc": 338, "test_weight_sharing_dispatcher_tuning_acc": 339, "test_weight_sharing_dispatcher_tuning_throughtput": 340, "test_weight_sharing_throughput": 341, "secur": 342, "polici": 342, "report": 342, "vulner": 342, "intel": [343, 360, 365, 373, 374, 376, 379, 421], "extens": [343, 360, 365, 373, 374, 376, 379, 421], "transform": [343, 360, 365, 373, 374, 376, 378, 379, 394, 421], "acceler": [343, 378, 394, 398], "base": [343, 376, 393], "platform": [343, 391, 407], "select": 343, "public": 343, "event": 343, "api": [344, 345, 348, 353, 359, 361, 362, 377, 383, 394], "python": [345, 383], "engin": [348, 349, 369, 376, 378, 380, 382, 384, 386, 387, 391, 425], "kernel": [350, 353, 366, 384, 394, 398, 401, 409, 422], "operator_desc": [351, 396, 397], "oper": [352, 383, 388], "specif": 352, "type": [352, 381, 415], "pytorch": [356, 361, 362, 375, 376], "tensorflow": [357, 361, 375, 376], "user": [359, 370, 394, 396, 397, 418, 426], "face": 359, "architectur": [360, 382], "autodistil": 361, "design": [361, 387], "framework": [361, 396, 397], "criterion": [361, 375], "knowledgedistillationloss": 361, "intermediatelayersknowledgedistillationloss": 361, "usag": [361, 375, 377, 396, 397, 409, 415], "flash": 361, "exampl": [361, 362, 363, 376, 377, 383, 386, 409, 413, 414, 419], "regular": 361, "introduct": [362, 373, 375, 377, 381, 383, 384, 385, 386, 389, 390, 394, 396, 397, 398, 399, 403, 408, 412, 413, 414, 415, 416], "get": [362, 373, 374, 378, 383, 387, 412, 416], "start": [362, 373, 374, 378, 393, 412, 416], "stock": [362, 376], "ipex": [362, 376], "output": [362, 374], "featur": [364, 396, 397, 416, 420], "welcom": [365, 421], "document": [365, 421], "section": [365, 421], "implement": [367, 423], "detail": [367, 401, 404, 423], "perform": [368, 391, 393, 394, 406, 407, 424], "neural": [369, 376, 378, 380, 382, 391, 425], "guid": [370, 418, 426], "contributor": [371, 372], "coven": [371, 372], "code": [371, 372], "conduct": [371, 372], "our": 371, "pledg": 371, "standard": 371, "respons": 371, "scope": 371, "enforc": 371, "contribut": 372, "guidelin": 372, "pull": 372, "request": 372, "checklist": 372, "templat": 372, "support": [372, 373, 374, 377, 386, 391, 392, 394, 412, 413, 416], "data": [373, 400, 407], "augment": 373, "instal": [373, 374, 379, 380, 387, 394], "depend": 373, "script": [373, 375, 415, 416], "paramet": 373, "text": 373, "gener": [373, 382, 393], "argument": 373, "overview": 374, "recommend": 374, "hardwar": [374, 379], "valid": [374, 379, 407], "environ": [374, 379, 387], "how": [374, 384, 390, 392, 408], "work": [374, 398], "1": [374, 382, 383, 387, 388, 408], "prerequisit": [374, 379, 380, 387, 401], "2": [374, 382, 387, 388, 408], "from": [374, 379, 380], "pypi": [374, 379], "conda": 374, "3": [374, 382, 408], "sourc": [374, 379], "To": [374, 387], "run": [374, 382, 383, 387, 392, 408], "requir": [374, 379], "prepar": [374, 386, 387, 408], "dataset": [374, 387], "compress": [374, 390], "4": [374, 382, 407], "infer": [374, 382, 395, 414], "expect": 374, "summari": [374, 412], "next": 374, "step": 374, "learn": 374, "more": [374, 384, 390, 398], "knowledg": [375, 376], "intermedi": 375, "layer": [375, 402], "creat": [375, 385, 415, 416], "an": [375, 386, 415, 416], "instanc": [375, 415, 416], "option": [375, 384, 390, 393, 415, 416], "distillationconfig": 375, "length": [376, 378], "adapt": [376, 378], "auto": 376, "orchestr": 376, "refer": [376, 394], "deploy": 376, "dens": [376, 398], "spars": [376, 383, 398, 399, 400, 402, 405, 408], "export": 377, "onnx": [377, 382, 386, 387], "matrix": [377, 391, 394, 401, 413, 416], "fp32": 377, "bf16": 377, "int8": [377, 387, 414], "For": [377, 409], "executor": [377, 388, 414], "system": [379, 393], "softwar": 379, "stabl": 380, "version": 380, "pip": 380, "binari": [380, 382, 396], "deploi": [380, 382], "bare": 380, "metal": 380, "add": [381, 388], "custom": [381, 382, 388], "regist": [381, 388], "node": [381, 385], "set": [381, 383], "map": [381, 385, 393], "fuse": 381, "new": [381, 385], "after": 381, "fusion": [381, 385], "integr": 382, "tf": [382, 393], "us": [382, 392, 401], "through": 382, "manual": 382, "yaml": 382, "weight": [382, 401, 408], "build": [382, 394, 409], "profil": [383, 406], "profl": 383, "you": 383, "can": 383, "onli": 383, "engine_profil": 383, "befor": 383, "c": 383, "part": 383, "csv": 383, "ratio": 383, "total": 383, "level": 383, "json": 383, "iter": 383, "tune": [384, 387, 393, 416], "dispatch": 384, "best": 384, "relat": 384, "runtim": 384, "turn": [384, 390], "mechan": 384, "dict": 385, "obtain": 385, "necessari": 385, "inform": [385, 411], "construct": 385, "establish": 385, "connect": 385, "remov": [385, 389], "old": 385, "insert": 385, "ir": [386, 387], "low": 387, "precis": 387, "its": 387, "accuraci": [387, 416], "h": 388, "includ": 388, "cpp": 388, "src": 388, "recogn": 389, "represent": 389, "pars": 389, "list": [389, 415], "search": 389, "each": 389, "straight": 389, "chain": 389, "splice": 389, "sub": 389, "main": 389, "duplic": 389, "result": [389, 408], "static": [390, 409, 416], "buffer": 390, "configur": [391, 407], "itrex": 392, "convert": 392, "tabl": 393, "quick": 393, "unix": 393, "linux": 393, "maco": 393, "etc": 393, "common": 393, "input": [393, 410], "prompt": 393, "interact": 393, "revers": 393, "In": 393, "prefix": 393, "suffix": 393, "instruct": [393, 400], "mode": 393, "context": 393, "manag": 393, "keep": 393, "flag": 393, "number": 393, "token": 393, "predict": 393, "temperatur": 393, "repeat": 393, "penalti": 393, "top": 393, "k": 393, "sampl": 393, "p": 393, "tail": 393, "free": 393, "local": 393, "typic": 393, "mirostat": 393, "logit": 393, "bia": 393, "rng": 393, "seed": 393, "memori": [393, 395], "thread": [393, 398, 407], "mlock": 393, "No": 393, "float": 393, "32": 393, "batch": 393, "cach": [393, 395], "addit": 393, "librari": 394, "test": 394, "sparse_matmul": [394, 409], "3d": 395, "layout": 395, "spmm_vnni": [395, 409], "issu": 395, "injector": [396, 397], "param_typ": [396, 397], "hpp": [396, 397], "jit_binaryop_injector": 396, "develop": [396, 397, 409], "": [396, 397], "perspect": [396, 397], "element": 397, "wise": 397, "alpha": 397, "beta": 397, "scale": 397, "jit_eltwise_injector": 397, "naiv": 398, "tile": 398, "effici": 398, "per": 398, "prefetch": 398, "amx": 399, "brief": 399, "isa": 399, "avx512f": 400, "kei": 400, "loop": 400, "quant": 401, "problem": [401, 402, 403, 404], "descript": [401, 402, 404], "differ": 401, "jit": 401, "path": 401, "one": 401, "stage": 401, "two": 401, "normal": 402, "layernorm": 402, "pre": 402, "comput": 402, "spmm": 402, "direct": 402, "layernorm_ba": [402, 409], "statement": 403, "matmul_p2031_2013": 403, "matmul_avx512f_p2031_p2013": [403, 409], "matmul_noperm_p2031_p1302": 403, "matmul_vnni_noperm_p2013_p1302": 403, "beforehand": 403, "mha": [404, 409], "calcul": 404, "vnni": 405, "On": 405, "fly": 405, "activ": 405, "candid": 405, "verbos": 406, "vtune": 406, "sde": 406, "singl": 407, "multi": 407, "visual": 408, "distribut": 408, "setup": 408, "below": 408, "command": 408, "analysi": 408, "spmm_avx512f": 409, "spmm_amx_bf16_x16": 409, "eltwiseop": 409, "transpose_matmul": 409, "matmul_vnni_noperm_p2031_p1302": 409, "attent": 409, "dynamic_quant_matmul": 409, "dynamic_qu": 409, "legal": 411, "licens": 411, "citat": 411, "trademark": 411, "prunerconfig": 415, "pruningconfig": 415, "fundament": 416, "approach": 416, "post": 416, "train": 416, "awar": 416, "quantizationconfig": 416, "releas": 417, "note": 417}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"clang-format": [[0, "module-clang-format"]], "convert_falcon": [[1, "module-convert_falcon"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [8, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [194, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [209, "module-contents"], [213, "module-contents"], [215, "module-contents"], [217, "module-contents"], [220, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [229, "module-contents"], [231, "module-contents"], [234, "module-contents"], [235, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [248, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [257, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"], [318, "module-contents"], [319, "module-contents"], [320, "module-contents"], [321, "module-contents"], [322, "module-contents"], [323, "module-contents"], [324, "module-contents"], [325, "module-contents"], [326, "module-contents"], [327, "module-contents"], [328, "module-contents"], [329, "module-contents"], [330, "module-contents"], [331, "module-contents"], [332, "module-contents"], [333, "module-contents"], [334, "module-contents"], [335, "module-contents"], [336, "module-contents"], [337, "module-contents"], [338, "module-contents"], [339, "module-contents"], [340, "module-contents"], [341, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [8, "functions"], [17, "functions"], [21, "functions"], [22, "functions"], [44, "functions"], [56, "functions"], [114, "functions"], [149, "functions"], [205, "functions"], [206, "functions"], [207, "functions"], [209, "functions"], [213, "functions"], [215, "functions"], [222, "functions"], [223, "functions"], [225, "functions"], [226, "functions"], [240, "functions"], [250, "functions"], [251, "functions"], [253, "functions"], [254, "functions"], [257, "functions"]], "convert_gptj": [[2, "module-convert_gptj"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "convert_llama": [[4, "module-convert_llama"]], "Classes": [[4, "classes"], [10, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [191, "classes"], [192, "classes"], [193, "classes"], [194, "classes"], [195, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [204, "classes"], [209, "classes"], [217, "classes"], [220, "classes"], [223, "classes"], [224, "classes"], [226, "classes"], [229, "classes"], [231, "classes"], [234, "classes"], [235, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [248, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [254, "classes"], [255, "classes"], [257, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"], [318, "classes"], [319, "classes"], [320, "classes"], [321, "classes"], [322, "classes"], [323, "classes"], [324, "classes"], [325, "classes"], [326, "classes"], [327, "classes"], [328, "classes"], [329, "classes"], [330, "classes"], [331, "classes"], [332, "classes"], [333, "classes"], [334, "classes"], [335, "classes"], [336, "classes"], [337, "classes"], [338, "classes"], [339, "classes"], [340, "classes"], [341, "classes"]], "convert_mpt": [[5, "module-convert_mpt"]], "gptj_binding": [[6, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[7, "module-intel_extension_for_transformers.backends"]], "Subpackages": [[7, "subpackages"], [18, "subpackages"], [207, "subpackages"], [228, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[11, "submodules"], [16, "submodules"], [18, "submodules"], [19, "submodules"], [44, "submodules"], [114, "submodules"], [219, "submodules"], [227, "submodules"], [228, "submodules"], [230, "submodules"], [236, "submodules"], [241, "submodules"], [247, "submodules"], [249, "submodules"], [256, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[44, "package-contents"], [114, "package-contents"], [207, "package-contents"]], "Attributes": [[44, "attributes"], [114, "attributes"], [205, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[207, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[212, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[221, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[222, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[223, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[224, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[227, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[228, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[230, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[231, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[232, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[236, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[238, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[240, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[241, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[244, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[245, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[247, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[249, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[256, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[257, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[258, "module-sparsity_all"]], "test_add_cls_token": [[259, "module-test_add_cls_token"]], "test_add_embeddings": [[260, "module-test_add_embeddings"]], "test_add_zeros": [[261, "module-test_add_zeros"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[263, "module-test_attention_reshape"]], "test_baddbmm": [[264, "module-test_baddbmm"]], "test_bert_mini_fp32": [[265, "module-test_bert_mini_fp32"]], "test_binary_op": [[266, "module-test_binary_op"]], "test_binaryop": [[267, "module-test_binaryop"]], "test_cast_to": [[268, "module-test_cast_to"]], "test_concat": [[269, "module-test_concat"]], "test_conv_reshape": [[270, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[271, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[272, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[273, "module-test_dispatcher_tuning_throughput"]], "test_dolly_pattern": [[274, "module-test_dolly_pattern"]], "test_dynamic_quantization": [[275, "module-test_dynamic_quantization"]], "test_electra": [[276, "module-test_electra"]], "test_embedding": [[277, "module-test_embedding"]], "test_embeddingbag": [[278, "module-test_embeddingbag"]], "test_execution_options": [[279, "module-test_execution_options"]], "test_fwk": [[280, "module-test_fwk"]], "test_gather": [[281, "module-test_gather"]], "test_gelu": [[282, "module-test_gelu"]], "test_gpt_int8": [[283, "module-test_gpt_int8"]], "test_graph_dispatch": [[284, "module-test_graph_dispatch"]], "test_graph_optimizer": [[285, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[286, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[287, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[288, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[289, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[290, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[291, "module-test_layernorm"]], "test_linear": [[292, "module-test_linear"]], "test_linear_int8": [[293, "module-test_linear_int8"]], "test_llama_pattern": [[294, "module-test_llama_pattern"]], "test_main": [[295, "module-test_main"]], "test_matmul": [[296, "module-test_matmul"]], "test_matmul_int8": [[297, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[298, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[299, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[300, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[301, "module-test_merged_embeddingbag"]], "test_model": [[302, "module-test_model"]], "test_neox_rotary_pos_emb": [[303, "module-test_neox_rotary_pos_emb"]], "test_onnx_utils": [[304, "module-test_onnx_utils"]], "test_operator_adaptor": [[305, "module-test_operator_adaptor"]], "test_ops": [[306, "module-test_ops"]], "test_padding_seq": [[307, "module-test_padding_seq"]], "test_padding_sequence": [[308, "module-test_padding_sequence"]], "test_pattern_dispatch": [[309, "module-test_pattern_dispatch"]], "test_permute": [[310, "module-test_permute"]], "test_position_embeddings": [[311, "module-test_position_embeddings"]], "test_pow": [[312, "module-test_pow"]], "test_primitive_cache_acc": [[313, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[314, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[315, "module-test_qkv_merge"]], "test_qkv_reshape": [[316, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[317, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[318, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[319, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[320, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[321, "module-test_size"]], "test_slice": [[322, "module-test_slice"]], "test_softmax": [[323, "module-test_softmax"]], "test_start_end_logits": [[324, "module-test_start_end_logits"]], "test_static_compressed_buffer": [[325, "module-test_static_compressed_buffer"]], "test_tanh": [[326, "module-test_tanh"]], "test_text_encoder": [[327, "module-test_text_encoder"]], "test_text_encoder_bf16": [[328, "module-test_text_encoder_bf16"]], "test_tf_utils": [[329, "module-test_tf_utils"]], "test_token_type_embeddings": [[330, "module-test_token_type_embeddings"]], "test_transpose": [[331, "module-test_transpose"]], "test_transpose_batch_matmul": [[332, "module-test_transpose_batch_matmul"]], "test_unet": [[333, "module-test_unet"]], "test_unet_bf16": [[334, "module-test_unet_bf16"]], "test_unsqueeze": [[335, "module-test_unsqueeze"]], "test_vae_decoder": [[336, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[337, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[338, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[339, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[340, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[341, "module-test_weight_sharing_throughput"]], "Security Policy": [[342, "security-policy"]], "Report a Vulnerability": [[342, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[343, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[343, "selected-publications-events"]], "API": [[344, "api"]], "Python APIs": [[345, "python-apis"]], "Compile": [[346, "compile"]], "Graph": [[347, "graph"]], "Engine API": [[348, "engine-api"]], "Class engine": [[349, "class-engine"]], "Class Kernel": [[350, "class-kernel"]], "Class operator_desc": [[351, "class-operator-desc"]], "Operator Specific Types": [[352, "operator-specific-types"]], "Kernel APIs": [[353, "kernel-apis"]], "Config": [[354, "config"]], "Model": [[355, "model"]], "PyTorch Optimizer": [[356, "pytorch-optimizer"]], "TensorFlow Optimizer": [[357, "tensorflow-optimizer"]], "Trainer": [[358, "trainer"]], "User-facing API": [[359, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[360, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[361, "autodistillation-design"]], "AutoDistillation Pipeline": [[361, "autodistillation-pipeline"]], "Framework Class Design": [[361, "framework-class-design"]], "Criterion Class Design": [[361, "criterion-class-design"]], "KnowledgeDistillationLoss": [[361, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[361, "intermediatelayersknowledgedistillationloss"]], "Usage": [[361, "usage"], [396, "usage"], [397, "usage"], [409, "usage"], [415, "usage"]], "Pytorch": [[361, "pytorch"]], "AutoDistillation API in Trainer": [[361, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[361, "flash-distillation-config-example"]], "Regular distillation config example": [[361, "regular-distillation-config-example"]], "AutoDistillation config example": [[361, "autodistillation-config-example"], [361, "id1"]], "Tensorflow": [[361, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[361, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[361, "distillation-config-example"]], "Benchmark": [[362, "benchmark"]], "Introduction": [[362, "introduction"], [373, "introduction"], [375, "introduction"], [377, "introduction"], [381, "introduction"], [383, "introduction"], [384, "introduction"], [385, "introduction"], [386, "introduction"], [389, "introduction"], [390, "introduction"], [394, "introduction"], [396, "introduction"], [397, "introduction"], [398, "introduction"], [403, "introduction"], [408, "introduction"], [412, "introduction"], [413, "introduction"], [414, "introduction"], [415, "introduction"], [416, "introduction"]], "Get Started with Benchmark API": [[362, "get-started-with-benchmark-api"]], "Examples": [[362, "examples"], [376, "examples"], [377, "examples"], [409, "examples"], [409, "id1"], [409, "id2"], [409, "id3"], [409, "id4"], [409, "id5"], [409, "id6"], [409, "id7"], [409, "id8"], [409, "id9"], [409, "id10"], [409, "id11"], [414, "examples"]], "Stock Pytorch Model": [[362, "stock-pytorch-model"]], "IPEX Model": [[362, "ipex-model"]], "Benchmark Output": [[362, "benchmark-output"]], "Example": [[363, "example"], [419, "example"]], "Features": [[364, "features"], [420, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[365, "welcome-to-intel-extension-for-transformers-documentation"], [421, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[365, "sections"], [421, "sections"]], "Kernels": [[366, "kernels"], [422, "kernels"]], "Implementation Details": [[367, "implementation-details"], [423, "implementation-details"]], "Performance": [[368, "performance"], [391, "performance"], [394, "performance"], [424, "performance"]], "Neural Engine": [[369, "neural-engine"], [425, "neural-engine"]], "User Guide": [[370, "user-guide"], [418, "user-guide"], [426, "user-guide"]], "Contributor Covenant Code of Conduct": [[371, "contributor-covenant-code-of-conduct"], [372, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[371, "our-pledge"]], "Our Standards": [[371, "our-standards"]], "Our Responsibilities": [[371, "our-responsibilities"]], "Scope": [[371, "scope"]], "Enforcement": [[371, "enforcement"]], "Attribution": [[371, "attribution"]], "Contribution Guidelines": [[372, "contribution-guidelines"]], "Pull Request Checklist": [[372, "pull-request-checklist"]], "Pull Request Template": [[372, "pull-request-template"]], "Support": [[372, "support"], [374, "support"]], "Data Augmentation": [[373, "data-augmentation"], [373, "id1"]], "Getting Started": [[373, "getting-started"], [378, "getting-started"]], "Install Dependency": [[373, "install-dependency"]], "Install Intel Extension for Transformers": [[373, "install-intel-extension-for-transformers"], [379, "install-intel-extension-for-transformers"]], "Script": [[373, "script"]], "Parameters of Data Augmentation": [[373, "parameters-of-data-augmentation"]], "Supported Augmenter": [[373, "supported-augmenter"]], "Text Generation Augmenter": [[373, "text-generation-augmenter"]], "Augmenter Arguments:": [[373, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[374, "intel-extension-for-transformers"]], "Overview": [[374, "overview"]], "Recommended Hardware": [[374, "recommended-hardware"]], "Validated Hardware Environment": [[374, "validated-hardware-environment"], [379, "validated-hardware-environment"]], "How it Works": [[374, "how-it-works"]], "Get Started": [[374, "get-started"], [416, "get-started"]], "1. Prerequisites": [[374, "prerequisites"]], "2. Installation": [[374, "installation"]], "2.1 Install from PyPi": [[374, "install-from-pypi"]], "2.2 Install from Conda": [[374, "install-from-conda"]], "2.3 Install from Source": [[374, "install-from-source"]], "3. How To Run": [[374, "how-to-run"]], "3.1 Install Requirements": [[374, "install-requirements"]], "3.2 Prepare Datasets": [[374, "prepare-datasets"]], "3.3 Model Compression": [[374, "model-compression"]], "3.4 Model Inference": [[374, "model-inference"]], "Expected Output": [[374, "expected-output"]], "Summary and Next Steps": [[374, "summary-and-next-steps"]], "Learn More": [[374, "learn-more"]], "Distillation": [[375, "distillation"], [375, "id1"], [376, "distillation"], [378, "distillation"]], "Knowledge Distillation": [[375, "knowledge-distillation"], [376, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[375, "intermediate-layer-knowledge-distillation"]], "usage": [[375, "usage"]], "Pytorch Script:": [[375, "pytorch-script"]], "Tensorflow Script:": [[375, "tensorflow-script"]], "Create an Instance of Metric": [[375, "create-an-instance-of-metric"], [416, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[375, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[375, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[375, "distill-with-trainer"]], "Quantization": [[376, "quantization"], [378, "quantization"], [393, "quantization"], [416, "quantization"]], "Stock PyTorch Examples": [[376, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[376, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[376, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[376, "length-adaptive-transformers"]], "Pruning": [[376, "pruning"], [378, "pruning"], [415, "pruning"]], "Auto Distillation (NAS Based)": [[376, "auto-distillation-nas-based"]], "Orchestrate": [[376, "orchestrate"]], "Reference Deployment on Neural Engine": [[376, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[376, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[376, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[377, "export-to-onnx"]], "Supported Model Export Matrix": [[377, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[377, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[377, "export-to-bf16-onnx-model"]], "API usage": [[377, "api-usage"]], "Export to INT8 ONNX Model": [[377, "export-to-int8-onnx-model"]], "For executor backend": [[377, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[378, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[378, "transformers-accelerated-neural-engine"]], "Installation": [[379, "installation"], [380, "installation"], [394, "installation"]], "Install from Pypi": [[379, "install-from-pypi"]], "Install from Source": [[379, "install-from-source"]], "Prerequisites": [[379, "prerequisites"], [380, "prerequisites"]], "System Requirements": [[379, "system-requirements"]], "Validated Software Environment": [[379, "validated-software-environment"]], "Install": [[380, "install"]], "Install stable version intel_extension_for_transformers from pip": [[380, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[380, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[381, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[381, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[381, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[381, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[382, "deploy-and-integration"]], "1. Architecture": [[382, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[382, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[382, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[382, "run-the-inference-by-engine"], [382, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[382, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[382, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[382, "integrate-neural-engine-as-backend"]], "Profiling": [[383, "profiling"]], "Profling API": [[383, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[383, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[383, "profiling-examples"]], "Parts of CSV Profiling": [[383, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[383, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[383, "operator-profiling-part"]], "Total Profiling Part": [[383, "total-profiling-part"]], "Levels of JSON Profiling": [[383, "levels-of-json-profiling"]], "Model Level": [[383, "model-level"]], "Iteration Level": [[383, "iteration-level"]], "Operator Level": [[383, "operator-level"]], "Engine Tuning": [[384, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[384, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[384, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[384, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[384, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[384, "more-tuning-options"]], "Graph Fusion": [[385, "graph-fusion"]], "Pattern Mapping Dict": [[385, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[385, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[385, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[385, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[386, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[386, "supported-onnx-format"]], "Compile Examples": [[386, "compile-examples"]], "Prepare ONNX Model": [[386, "prepare-onnx-model"]], "Compile to IR": [[386, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[387, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[387, "design"]], "Prerequisite": [[387, "prerequisite"]], "Install environment": [[387, "install-environment"]], "Prepare Dataset": [[387, "prepare-dataset"]], "Prepare ONNX model": [[387, "prepare-onnx-model"]], "Run tuning and benchmark": [[387, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[387, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[387, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[388, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[388, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[388, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[389, "pattern-recognize"]], "Pattern Representation": [[389, "pattern-representation"]], "Parse Pattern Representation List": [[389, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[389, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[389, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Static Compressed Buffer": [[390, "static-compressed-buffer"]], "How to Turn on Static Compressed Buffer": [[390, "how-to-turn-on-static-compressed-buffer"]], "More Options": [[390, "more-options"]], "Neural Engine Support Matrix": [[391, "neural-engine-support-matrix"]], "platform configuration": [[391, "platform-configuration"]], "ITREX Graph": [[392, "itrex-graph"]], "Compile Graph": [[392, "compile-graph"]], "How to use": [[392, "how-to-use"]], "Convert model": [[392, "convert-model"]], "Run Models": [[392, "run-models"]], "Supported model": [[392, "supported-model"]], "Table of Contents": [[393, "table-of-contents"]], "Quick Start": [[393, "quick-start"]], "Unix-based systems (Linux, macOS, etc.):": [[393, "unix-based-systems-linux-macos-etc"]], "Common Options": [[393, "common-options"]], "Input Prompts": [[393, "input-prompts"]], "Interaction": [[393, "interaction"]], "Interaction Options": [[393, "interaction-options"]], "Reverse Prompts": [[393, "reverse-prompts"]], "In-Prefix": [[393, "in-prefix"]], "In-Suffix": [[393, "in-suffix"]], "Instruction Mode": [[393, "instruction-mode"]], "Context Management": [[393, "context-management"]], "Context Size": [[393, "context-size"]], "Keep Prompt": [[393, "keep-prompt"]], "Generation Flags": [[393, "generation-flags"]], "Number of Tokens to Predict": [[393, "number-of-tokens-to-predict"]], "Temperature": [[393, "temperature"]], "Repeat Penalty": [[393, "repeat-penalty"]], "Top-K Sampling": [[393, "top-k-sampling"]], "Top-P Sampling": [[393, "top-p-sampling"]], "Tail Free Sampling (TFS)": [[393, "tail-free-sampling-tfs"]], "Locally Typical Sampling": [[393, "locally-typical-sampling"]], "Mirostat Sampling": [[393, "mirostat-sampling"]], "Logit Bias": [[393, "logit-bias"]], "RNG Seed": [[393, "rng-seed"]], "Performance Tuning and Memory Options": [[393, "performance-tuning-and-memory-options"]], "Number of Threads": [[393, "number-of-threads"]], "Mlock": [[393, "mlock"]], "No Memory Mapping": [[393, "no-memory-mapping"]], "Memory Float 32": [[393, "memory-float-32"]], "Batch Size": [[393, "batch-size"]], "Prompt Caching": [[393, "prompt-caching"]], "Additional Options": [[393, "additional-options"]], "Transformers-Accelerated Libraries": [[394, "transformers-accelerated-libraries"]], "Build": [[394, "build"], [409, "build"]], "Test": [[394, "test"]], "API reference for users": [[394, "api-reference-for-users"]], "sparse_matmul kernel:": [[394, "sparse-matmul-kernel"]], "Supported Matrix": [[394, "supported-matrix"]], "3D Inference": [[395, "d-inference"]], "Memory Layout in SPMM_VNNI": [[395, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[395, "cache-issues"]], "SPMM_VNNI 3D Inference": [[395, "spmm-vnni-3d-inference"]], "Binary Injectors": [[396, "binary-injectors"]], "Framework Features": [[396, "framework-features"], [397, "framework-features"]], "param_type.hpp": [[396, "param-type-hpp"]], "operator_desc.hpp": [[396, "operator-desc-hpp"], [397, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[396, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[396, "developer-s-perspective"]], "User\u2019s Perspective": [[396, "user-s-perspective"], [397, "user-s-perspective"]], "Element-wise Injector": [[397, "element-wise-injector"]], "param_types.hpp": [[397, "param-types-hpp"]], "alpha,beta,scale meaning": [[397, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[397, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[397, "developer-s-perspective"]], "Dense and Sparse": [[398, "dense-and-sparse"]], "Naive": [[398, "naive"]], "Tile": [[398, "tile"]], "Efficient kernel": [[398, "efficient-kernel"]], "More work per thread": [[398, "more-work-per-thread"]], "Prefetch": [[398, "prefetch"]], "Sparse acceleration": [[398, "sparse-acceleration"]], "Sparse GEMM AMX": [[399, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[399, "brief-introduction-for-isas"]], "Pattern": [[399, "pattern"]], "Reorder": [[399, "reorder"]], "Sparse GEMM AVX512F": [[400, "sparse-gemm-avx512f"]], "Key Instruction": [[400, "key-instruction"]], "Sparse Pattern & Data Format": [[400, "sparse-pattern-data-format"]], "Loops": [[400, "loops"]], "Dynamic Quant Matmul": [[401, "dynamic-quant-matmul"]], "problem description": [[401, "problem-description"]], "Kernel details": [[401, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[401, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[401, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[401, "different-jit-paths-for-different-weight-size"]], "one-stage jit-path": [[401, "one-stage-jit-path"]], "two-stage jit-path": [[401, "two-stage-jit-path"]], "Sparse GEMM with Layer-Normalize": [[402, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[402, "problem-description"]], "layernormalized sparse matmul": [[402, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[402, "pre-compute-spmm"]], "Direct Layernorm_ba": [[402, "direct-layernorm-ba"]], "Transposed MatMul": [[403, "transposed-matmul"]], "Problem Statements": [[403, "problem-statements"]], "Matmul_p2031_2013": [[403, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[403, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[403, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[403, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[403, "reorder-beforehand"]], "Transposed MHA": [[404, "transposed-mha"]], "Problem description": [[404, "problem-description"]], "Details": [[404, "details"]], "Reordering": [[404, "reordering"]], "Calculation": [[404, "calculation"]], "Sparse GEMM VNNI": [[405, "sparse-gemm-vnni"]], "On the fly activation reordering": [[405, "on-the-fly-activation-reordering"]], "Candidate patterns": [[405, "candidate-patterns"]], "Performance and Profiling": [[406, "performance-and-profiling"]], "Verbose": [[406, "verbose"]], "VTune": [[406, "vtune"]], "SDE": [[406, "sde"]], "Validated Performance Data": [[407, "validated-performance-data"]], "Single Thread": [[407, "single-thread"]], "Multi Thread (Thread = 4)": [[407, "multi-thread-thread-4"]], "Platform Configuration": [[407, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[408, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[408, "setups"]], "1. Prepare the sparse model": [[408, "prepare-the-sparse-model"]], "2. Run below commands": [[408, "run-below-commands"]], "3. Analysis results": [[408, "analysis-results"]], "Benchmark for Kernels": [[409, "benchmark-for-kernels"]], "sparse_matmul": [[409, "sparse-matmul"]], "spmm_avx512f": [[409, "spmm-avx512f"]], "spmm_vnni": [[409, "spmm-vnni"]], "spmm_amx_bf16_x16": [[409, "spmm-amx-bf16-x16"]], "eltwiseop": [[409, "eltwiseop"]], "layernorm_ba": [[409, "layernorm-ba"]], "transpose_matmul": [[409, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[409, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[409, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[409, "softmax"]], "attention": [[409, "attention"]], "Static MHA": [[409, "static-mha"]], "dynamic_quant_matmul": [[409, "dynamic-quant-matmul"]], "dynamic_quant": [[409, "dynamic-quant"]], "For developers": [[409, "for-developers"]], "Inputs format": [[410, "inputs-format"]], "Legal Information": [[411, "legal-information"]], "License": [[411, "license"]], "Citation": [[411, "citation"]], "Trademarks": [[411, "trademarks"]], "Metrics": [[412, "metrics"]], "Supported Metric": [[412, "supported-metric"]], "Metric Class Summary": [[412, "metric-class-summary"]], "Get Start with Metrics": [[412, "get-start-with-metrics"]], "Objective": [[413, "objective"]], "Supported Objectives Matrix:": [[413, "supported-objectives-matrix"]], "Examples:": [[413, "examples"]], "Pipeline": [[414, "pipeline"]], "Pipeline Inference for INT8 Model": [[414, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[414, "pipeline-inference-for-executor-backend"]], "Pruning types": [[415, "pruning-types"]], "Script:": [[415, "script"], [416, "script"]], "Create an instance of Metric": [[415, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[415, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[415, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[415, "prune-with-trainer"]], "Quantization Fundamentals": [[416, "quantization-fundamentals"]], "Quantization Approach": [[416, "quantization-approach"]], "Post Training Dynamic Quantization": [[416, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[416, "post-training-static-quantization"]], "Quantization Aware Training": [[416, "quantization-aware-training"]], "Accuracy Aware Tuning": [[416, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[416, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[416, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[416, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[416, "quantization-with-trainer"]], "Release": [[417, "release"]], "Release Notes": [[417, "release-notes"]], "Contents:": [[420, null], [425, null]]}, "indexentries": {"clang-format": [[0, "module-clang-format"]], "module": [[0, "module-clang-format"], [1, "module-convert_falcon"], [2, "module-convert_gptj"], [3, "module-convert_gptneox"], [4, "module-convert_llama"], [5, "module-convert_mpt"], [6, "module-gptj_binding"], [7, "module-intel_extension_for_transformers.backends"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [207, "module-intel_extension_for_transformers.backends.neural_engine"], [208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"], [209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"], [210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"], [211, "module-intel_extension_for_transformers.evaluation.hf_eval"], [212, "module-intel_extension_for_transformers.evaluation"], [213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"], [214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"], [215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [216, "module-intel_extension_for_transformers.evaluation.lm_eval"], [217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [221, "module-intel_extension_for_transformers"], [222, "module-intel_extension_for_transformers.optimization.benchmark"], [223, "module-intel_extension_for_transformers.optimization.config"], [224, "module-intel_extension_for_transformers.optimization.distillation"], [225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [227, "module-intel_extension_for_transformers.optimization.dynamic"], [228, "module-intel_extension_for_transformers.optimization"], [229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [230, "module-intel_extension_for_transformers.optimization.mixture"], [231, "module-intel_extension_for_transformers.optimization.model"], [232, "module-intel_extension_for_transformers.optimization.modeling"], [233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"], [234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"], [235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [236, "module-intel_extension_for_transformers.optimization.nas"], [237, "module-intel_extension_for_transformers.optimization.nas.nas"], [238, "module-intel_extension_for_transformers.optimization.optimizer"], [239, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [240, "module-intel_extension_for_transformers.optimization.pipeline"], [241, "module-intel_extension_for_transformers.optimization.pruner"], [242, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [243, "module-intel_extension_for_transformers.optimization.pruning"], [244, "module-intel_extension_for_transformers.optimization.quantization"], [245, "module-intel_extension_for_transformers.optimization.trainer"], [246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [247, "module-intel_extension_for_transformers.optimization.utils"], [248, "module-intel_extension_for_transformers.optimization.utils.metrics"], [249, "module-intel_extension_for_transformers.optimization.utils.models"], [250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [252, "module-intel_extension_for_transformers.optimization.utils.objectives"], [253, "module-intel_extension_for_transformers.optimization.utils.utility"], [254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [256, "module-intel_extension_for_transformers.preprocessing"], [257, "module-intel_extension_for_transformers.preprocessing.utils"], [258, "module-sparsity_all"], [259, "module-test_add_cls_token"], [260, "module-test_add_embeddings"], [261, "module-test_add_zeros"], [262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [263, "module-test_attention_reshape"], [264, "module-test_baddbmm"], [265, "module-test_bert_mini_fp32"], [266, "module-test_binary_op"], [267, "module-test_binaryop"], [268, "module-test_cast_to"], [269, "module-test_concat"], [270, "module-test_conv_reshape"], [271, "module-test_decoder_attn_reshape"], [272, "module-test_dispatcher_tuning_acc"], [273, "module-test_dispatcher_tuning_throughput"], [274, "module-test_dolly_pattern"], [275, "module-test_dynamic_quantization"], [276, "module-test_electra"], [277, "module-test_embedding"], [278, "module-test_embeddingbag"], [279, "module-test_execution_options"], [280, "module-test_fwk"], [281, "module-test_gather"], [282, "module-test_gelu"], [283, "module-test_gpt_int8"], [284, "module-test_graph_dispatch"], [285, "module-test_graph_optimizer"], [286, "module-test_insert_input_output_data"], [287, "module-test_is_supported_onnx_graph"], [288, "module-test_last_layer_shape"], [289, "module-test_layer_norm_with_reduce_mean"], [290, "module-test_layer_norm_with_transpose"], [291, "module-test_layernorm"], [292, "module-test_linear"], [293, "module-test_linear_int8"], [294, "module-test_llama_pattern"], [295, "module-test_main"], [296, "module-test_matmul"], [297, "module-test_matmul_int8"], [298, "module-test_matmul_with_bias_relu"], [299, "module-test_matmul_with_bias_sigmoid"], [300, "module-test_matmul_with_bias_tanh"], [301, "module-test_merged_embeddingbag"], [302, "module-test_model"], [303, "module-test_neox_rotary_pos_emb"], [304, "module-test_onnx_utils"], [305, "module-test_operator_adaptor"], [306, "module-test_ops"], [307, "module-test_padding_seq"], [308, "module-test_padding_sequence"], [309, "module-test_pattern_dispatch"], [310, "module-test_permute"], [311, "module-test_position_embeddings"], [312, "module-test_pow"], [313, "module-test_primitive_cache_acc"], [314, "module-test_primitive_cache_throughput"], [315, "module-test_qkv_merge"], [316, "module-test_qkv_reshape"], [317, "module-test_quant_onnx_execute"], [318, "module-test_reshape_after_restore_hidden_states"], [319, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [320, "module-test_reshape_before_restore_hidden_states"], [321, "module-test_size"], [322, "module-test_slice"], [323, "module-test_softmax"], [324, "module-test_start_end_logits"], [325, "module-test_static_compressed_buffer"], [326, "module-test_tanh"], [327, "module-test_text_encoder"], [328, "module-test_text_encoder_bf16"], [329, "module-test_tf_utils"], [330, "module-test_token_type_embeddings"], [331, "module-test_transpose"], [332, "module-test_transpose_batch_matmul"], [333, "module-test_unet"], [334, "module-test_unet_bf16"], [335, "module-test_unsqueeze"], [336, "module-test_vae_decoder"], [337, "module-test_vae_decoder_bf16"], [338, "module-test_weight_sharing_acc"], [339, "module-test_weight_sharing_dispatcher_tuning_acc"], [340, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [341, "module-test_weight_sharing_throughput"]], "bytes_to_unicode() (in module convert_falcon)": [[1, "convert_falcon.bytes_to_unicode"]], "convert_falcon": [[1, "module-convert_falcon"]], "bytes_to_unicode() (in module convert_gptj)": [[2, "convert_gptj.bytes_to_unicode"]], "convert_gptj": [[2, "module-convert_gptj"]], "bytes_to_unicode() (in module convert_gptneox)": [[3, "convert_gptneox.bytes_to_unicode"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "lazyunpickler (class in convert_llama)": [[4, "convert_llama.LazyUnpickler"]], "nefiletype (class in convert_llama)": [[4, "convert_llama.NEFileType"]], "bounded_parallel_map() (in module convert_llama)": [[4, "convert_llama.bounded_parallel_map"]], "convert_llama": [[4, "module-convert_llama"]], "find_class() (convert_llama.lazyunpickler method)": [[4, "convert_llama.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_llama)": [[4, "convert_llama.find_multifile_paths"]], "handle_quantization() (in module convert_llama)": [[4, "convert_llama.handle_quantization"]], "load_some_model() (in module convert_llama)": [[4, "convert_llama.load_some_model"]], "nth_multifile_path() (in module convert_llama)": [[4, "convert_llama.nth_multifile_path"]], "bytes_to_unicode() (in module convert_mpt)": [[5, "convert_mpt.bytes_to_unicode"]], "convert_mpt": [[5, "module-convert_mpt"]], "gptj_binding": [[6, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[7, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "baddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.baddbmm method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "zeros (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.where)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.where.where method)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "neoxreorderchange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change.NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "neoxroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb.NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeunusedoperator (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator.RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "removezeros (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros.RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchunpackbaddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm.TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[193, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[194, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[195, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[196, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[197, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[198, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[199, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[200, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[201, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[202, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[207, "module-intel_extension_for_transformers.backends.neural_engine"]], "neural_engine_bin() (in module intel_extension_for_transformers.backends.neural_engine)": [[207, "intel_extension_for_transformers.backends.neural_engine.neural_engine_bin"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "datacollatorforsuperviseddataset (class in intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[209, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.DataCollatorForSupervisedDataset"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "preprocess() (in module intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[209, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.preprocess"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[212, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[213, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "pattern_match() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[213, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.pattern_match"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[215, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[220, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[220, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[221, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[222, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[223, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[223, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[224, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[224, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[224, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[225, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[225, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[227, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[228, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[230, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[231, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[231, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[231, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[232, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "incdecoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[234, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCDecoder"]], "incencoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[234, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCEncoder"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[236, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[237, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[238, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[240, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[240, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[241, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[243, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[243, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[244, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[244, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[245, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[247, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[248, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[249, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[253, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[256, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[257, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[257, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[257, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[258, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[259, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[259, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[259, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[259, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[260, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[260, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[260, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[260, "module-test_add_embeddings"]], "testtorchop (class in test_add_zeros)": [[261, "test_add_zeros.TestTorchOP"]], "setupclass() (test_add_zeros.testtorchop class method)": [[261, "test_add_zeros.TestTorchOP.setUpClass"]], "teardownclass() (test_add_zeros.testtorchop class method)": [[261, "test_add_zeros.TestTorchOP.tearDownClass"]], "test_add_zeros": [[261, "module-test_add_zeros"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[263, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[263, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[263, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[263, "module-test_attention_reshape"]], "testtorchop (class in test_baddbmm)": [[264, "test_baddbmm.TestTorchOP"]], "setupclass() (test_baddbmm.testtorchop class method)": [[264, "test_baddbmm.TestTorchOP.setUpClass"]], "teardownclass() (test_baddbmm.testtorchop class method)": [[264, "test_baddbmm.TestTorchOP.tearDownClass"]], "test_baddbmm": [[264, "module-test_baddbmm"]], "testtorchmodel (class in test_bert_mini_fp32)": [[265, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[265, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[265, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[265, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[266, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[266, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[266, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[266, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[267, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[267, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[267, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[267, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[268, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[268, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[268, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[268, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[269, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[269, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[269, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[269, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[270, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[270, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[270, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[270, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[271, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[271, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[271, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[271, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[272, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[272, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[272, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[272, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[273, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[273, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[273, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[273, "module-test_dispatcher_tuning_throughput"]], "testtorchop (class in test_dolly_pattern)": [[274, "test_dolly_pattern.TestTorchOP"]], "setupclass() (test_dolly_pattern.testtorchop class method)": [[274, "test_dolly_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_dolly_pattern.testtorchop class method)": [[274, "test_dolly_pattern.TestTorchOP.tearDownClass"]], "test_dolly_pattern": [[274, "module-test_dolly_pattern"]], "testdynamicquantization (class in test_dynamic_quantization)": [[275, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[275, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[275, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[275, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[276, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[276, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[276, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[276, "module-test_electra"]], "testtorchop (class in test_embedding)": [[277, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[277, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[277, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[277, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[278, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[278, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[278, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[278, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[279, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[279, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[279, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[279, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[280, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[280, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[280, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[280, "module-test_fwk"]], "testtorchop (class in test_gather)": [[281, "test_gather.TestTorchOP"]], "setupclass() (test_gather.testtorchop class method)": [[281, "test_gather.TestTorchOP.setUpClass"]], "teardownclass() (test_gather.testtorchop class method)": [[281, "test_gather.TestTorchOP.tearDownClass"]], "test_gather": [[281, "module-test_gather"]], "testtorchop (class in test_gelu)": [[282, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[282, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[282, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[282, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[283, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[283, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[283, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[283, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[284, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[284, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[284, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[284, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[285, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[285, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[285, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[285, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[286, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[286, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[286, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[286, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[287, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[287, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[287, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[287, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[287, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[288, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[288, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[288, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[288, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[289, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[289, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[289, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[289, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[290, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[290, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[290, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[290, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[291, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[291, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[291, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[291, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[292, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[292, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[292, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[292, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[293, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[293, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[293, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[293, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[294, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[294, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[294, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[294, "module-test_llama_pattern"]], "testmain (class in test_main)": [[295, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[295, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[295, "test_main.TestMain.tearDownClass"]], "test_main": [[295, "module-test_main"]], "testtorchop (class in test_matmul)": [[296, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[296, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[296, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[296, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[297, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[297, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[297, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[297, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[298, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[298, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[298, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[298, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[299, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[299, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[299, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[299, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[300, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[300, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[300, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[300, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[301, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[301, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[301, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[301, "module-test_merged_embeddingbag"]], "test_model": [[302, "module-test_model"]], "testtorchop (class in test_neox_rotary_pos_emb)": [[303, "test_neox_rotary_pos_emb.TestTorchOP"]], "setupclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[303, "test_neox_rotary_pos_emb.TestTorchOP.setUpClass"]], "teardownclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[303, "test_neox_rotary_pos_emb.TestTorchOP.tearDownClass"]], "test_neox_rotary_pos_emb": [[303, "module-test_neox_rotary_pos_emb"]], "testonnxutils (class in test_onnx_utils)": [[304, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[304, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[304, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[304, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[305, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[305, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[305, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[305, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[306, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[306, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[306, "test_ops.TestOps.tearDownClass"]], "test_ops": [[306, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[307, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[307, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[307, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[307, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[308, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[308, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[308, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[308, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[309, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[309, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[309, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[309, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[310, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[310, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[310, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[310, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[311, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[311, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[311, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[311, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[312, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[312, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[312, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[312, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[313, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[313, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[313, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[313, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[314, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[314, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[314, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[314, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[315, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[315, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[315, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[315, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[316, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[316, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[316, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[316, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[317, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[317, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[317, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[317, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[318, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[318, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[318, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[318, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[319, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[319, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[319, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[319, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[320, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[320, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[320, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[320, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[321, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[321, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[321, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[321, "module-test_size"]], "testtorchop (class in test_slice)": [[322, "test_slice.TestTorchOP"]], "setupclass() (test_slice.testtorchop class method)": [[322, "test_slice.TestTorchOP.setUpClass"]], "teardownclass() (test_slice.testtorchop class method)": [[322, "test_slice.TestTorchOP.tearDownClass"]], "test_slice": [[322, "module-test_slice"]], "testtorchop (class in test_softmax)": [[323, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[323, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[323, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[323, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[324, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[324, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[324, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[324, "module-test_start_end_logits"]], "testscbuffer (class in test_static_compressed_buffer)": [[325, "test_static_compressed_buffer.TestSCBuffer"]], "setupclass() (test_static_compressed_buffer.testscbuffer class method)": [[325, "test_static_compressed_buffer.TestSCBuffer.setUpClass"]], "teardownclass() (test_static_compressed_buffer.testscbuffer class method)": [[325, "test_static_compressed_buffer.TestSCBuffer.tearDownClass"]], "test_static_compressed_buffer": [[325, "module-test_static_compressed_buffer"]], "testtorchop (class in test_tanh)": [[326, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[326, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[326, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[326, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[327, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[327, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[327, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[327, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[328, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[328, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[328, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[328, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[329, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[329, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[329, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[329, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[330, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[330, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[330, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[330, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[331, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[331, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[331, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[331, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[332, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[332, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[332, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[332, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[333, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[333, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[333, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[333, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[334, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[334, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[334, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[334, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[335, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[335, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[335, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[335, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[336, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[336, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[336, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[336, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[337, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[337, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[337, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[337, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[338, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[338, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[338, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[338, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[339, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[339, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[339, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[339, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[340, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[340, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[340, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[340, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[341, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[341, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[341, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[341, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[349, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[349, "c.NULL_INSTANCE"]], "jd (c++ type)": [[349, "_CPPv42jd"], [350, "_CPPv42jd"], [351, "_CPPv42jd"], [352, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[349, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[349, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[349, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[349, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[349, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[349, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[349, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[349, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[349, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[349, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[349, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[349, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[349, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[349, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[349, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[349, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[349, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[349, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[349, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[350, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[350, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [350, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[350, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[350, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[350, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [350, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[350, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[350, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[350, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [350, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[350, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[350, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[350, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [350, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[350, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[350, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[350, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [350, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[350, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[350, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[350, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [350, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[350, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[350, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[350, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [350, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[350, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[350, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[350, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [350, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[350, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[350, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[350, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [350, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[350, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[350, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[350, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [350, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[350, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[350, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[350, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [350, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[350, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[350, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[350, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [350, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[350, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[350, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[350, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[350, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[350, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [350, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[350, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[350, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[350, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[350, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[350, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t"], [350, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[350, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[350, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[350, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [350, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[350, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[350, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[350, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [350, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[350, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[350, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[350, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [350, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[350, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[350, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[350, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [350, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[350, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[350, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[350, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [350, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[350, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[350, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[350, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [350, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[350, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[350, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[350, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [350, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[350, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[350, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[350, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [350, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[350, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[350, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[350, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [350, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[350, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[350, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[350, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[350, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[350, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[350, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[350, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[350, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[350, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[350, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [350, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[350, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[350, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[350, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [350, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[350, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[350, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[350, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [350, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[350, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[350, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[350, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [350, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[350, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[350, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[350, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [350, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[350, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[350, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[350, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [350, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[350, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[350, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[350, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [350, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[350, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[350, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[350, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [350, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[350, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[350, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[350, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [350, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[350, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[350, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[350, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [350, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[350, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[351, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[351, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[351, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[351, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[351, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[351, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[351, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[351, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[351, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[351, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [351, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [351, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[351, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[351, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[351, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[351, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[351, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[351, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[351, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[351, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[352, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[352, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[352, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[352, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[352, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[352, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[352, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[352, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[352, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[352, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[352, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[352, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[352, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[352, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[352, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[352, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[352, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[352, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[352, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[352, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[352, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[352, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[352, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[352, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[352, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[352, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[352, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[352, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[352, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[352, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[352, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[352, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_input (c++ type)": [[352, "_CPPv4N2jd3ssd12matmul_inputE"]], "jd::ssd::matmul_input::input (c++ enum)": [[352, "_CPPv4N2jd3ssd12matmul_input5inputE"]], "jd::ssd::matmul_input::input::append_sum (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME"]], "jd::ssd::matmul_input::input::scale0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E"]], "jd::ssd::matmul_input::input::src0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E"]], "jd::ssd::matmul_input::input::src1 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E"]], "jd::ssd::matmul_input::input::src2 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E"]], "jd::ssd::matmul_input::input::zp0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E"]], "jd::ssd::matmul_input::input::matmul_io_max (c++ enumerator)": [[352, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE"]], "jd::ssd::matmul_io (c++ type)": [[352, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[352, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[352, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_output (c++ type)": [[352, "_CPPv4N2jd3ssd13matmul_outputE"]], "jd::ssd::matmul_output::output (c++ enum)": [[352, "_CPPv4N2jd3ssd13matmul_output6outputE"]], "jd::ssd::matmul_output::output::dst0 (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13matmul_output6output4DST0E"]], "jd::ssd::matmul_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[352, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[352, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[352, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[352, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[352, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[352, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[352, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[352, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[352, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[352, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[352, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[352, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[352, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[352, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[352, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[352, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[352, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[352, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[352, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[352, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[352, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[352, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[352, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[352, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[352, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[352, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[352, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[352, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[352, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[352, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[352, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[352, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[352, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[352, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[352, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[352, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})