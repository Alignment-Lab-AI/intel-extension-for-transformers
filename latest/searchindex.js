Search.setIndex({"docnames": ["autoapi/clangformat/index", "autoapi/convert_falcon/index", "autoapi/convert_gptj/index", "autoapi/convert_gptneox/index", "autoapi/convert_llama/index", "autoapi/convert_mpt/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/modeling/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_add_zeros/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_baddbmm/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv/index", "autoapi/test_conv_int8/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dolly_pattern/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gather/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_neox_rotary_pos_emb/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_slice/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_static_compressed_buffer/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_two_linear/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/clangformat/index.rst", "autoapi/convert_falcon/index.rst", "autoapi/convert_gptj/index.rst", "autoapi/convert_gptneox/index.rst", "autoapi/convert_llama/index.rst", "autoapi/convert_mpt/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_add_zeros/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_baddbmm/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv/index.rst", "autoapi/test_conv_int8/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dolly_pattern/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gather/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_neox_rotary_pos_emb/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_slice/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_static_compressed_buffer/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_two_linear/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">clang-format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_falcon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptneox</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_llama</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_mpt</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.where</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dolly_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_static_compressed_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_two_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Static Compressed Buffer", "Neural Engine Support Matrix", "ITREX Graph", "Table of Contents", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"bytes_to_unicod": [1, 2, 3, 5], "sourc": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 214, 216, 219, 221, 222, 223, 224, 225, 228, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 384, 398, 405, 411, 413], "return": [1, 2, 3, 4, 5, 11, 12, 13, 16, 21, 55, 148, 204, 205, 212, 214, 221, 224, 228, 230, 234, 236, 238, 239, 241, 244, 249, 250, 363, 364, 375, 376, 383, 387, 391, 395, 398, 399, 414], "list": [1, 2, 3, 4, 5, 11, 12, 13, 14, 16, 21, 55, 204, 205, 212, 214, 222, 223, 237, 241, 242, 244, 249, 250, 376, 377, 382, 383, 384, 387, 392, 398, 399, 412, 418], "utf": [1, 2, 3, 5], "8": [1, 2, 3, 4, 5, 16, 244, 354, 363, 376, 378, 379, 381, 383, 385, 387, 389, 391, 393, 395, 399, 400, 401, 407, 408, 409, 411, 418], "byte": [1, 2, 3, 4, 5, 401, 407], "correspond": [1, 2, 3, 5, 7, 11, 12, 16, 363, 383, 387, 391, 396, 403, 407, 410, 418], "unicod": [1, 2, 3, 5], "string": [1, 2, 3, 4, 5, 16, 21, 204, 205, 214, 225, 234, 236, 241, 253, 254, 353, 375, 377, 383, 386, 387, 390, 395, 399, 414, 415, 417, 418], "The": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 219, 222, 224, 225, 228, 230, 233, 234, 236, 238, 241, 244, 247, 249, 250, 251, 253, 254, 256, 345, 347, 350, 352, 353, 355, 361, 363, 364, 373, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 411, 414, 416, 417, 418], "revers": [1, 2, 3, 5], "bpe": [1, 2, 3, 5], "code": [1, 2, 3, 5, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 354, 376, 380, 381, 383, 386, 394, 395, 399, 400, 401, 402, 403, 408, 411, 413], "work": [1, 2, 3, 5, 244, 344, 392, 395, 399, 416], "thi": [1, 2, 3, 4, 5, 9, 16, 181, 214, 233, 241, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 354, 363, 373, 374, 375, 376, 377, 379, 383, 384, 385, 386, 387, 390, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 416, 418], "mean": [1, 2, 3, 5, 16, 17, 43, 206, 219, 222, 249, 250, 254, 354, 375, 383, 384, 385, 386, 387, 391, 392, 394, 395, 397, 398, 400, 404, 407, 411, 414, 417, 418], "you": [1, 2, 3, 5, 16, 216, 222, 237, 249, 250, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 374, 375, 376, 377, 379, 383, 384, 386, 387, 388, 391, 392, 394, 395, 398, 399, 401, 408, 410, 411, 413, 414, 416, 417, 418, 419], "need": [1, 2, 3, 4, 5, 16, 121, 222, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 375, 376, 377, 383, 385, 386, 387, 388, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 411, 417, 418, 419], "larg": [1, 2, 3, 5, 377, 378, 391, 392, 393, 394, 395, 397, 400, 403, 404, 405, 411], "charact": [1, 2, 3, 5, 395], "your": [1, 2, 3, 5, 16, 244, 254, 256, 345, 374, 375, 376, 380, 383, 384, 385, 386, 387, 394, 395, 398, 399, 411, 413, 416], "vocab": [1, 2, 3, 5], "want": [1, 2, 3, 5, 222, 237, 364, 370, 383, 385, 386, 388, 391, 392, 395, 397, 398, 399, 411, 414, 426], "avoid": [1, 2, 3, 5, 244, 249, 250, 391, 395, 397, 399, 403, 405, 406, 411], "unk": [1, 2, 3, 5], "when": [1, 2, 3, 5, 204, 222, 244, 249, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 373, 378, 383, 384, 386, 387, 390, 391, 392, 395, 397, 399, 400, 402, 403, 404, 406, 407, 411, 414, 415, 418], "re": [1, 2, 3, 5, 230, 395, 401], "someth": [1, 2, 3, 5, 204], "like": [1, 2, 3, 5, 7, 11, 12, 13, 16, 111, 112, 204, 254, 375, 376, 377, 380, 383, 384, 385, 386, 387, 388, 391, 392, 395, 398, 399, 401, 408, 414, 415, 417, 418], "10b": [1, 2, 3, 5], "token": [1, 2, 3, 5, 208, 212, 216, 237, 249, 250, 254, 364, 375, 376, 378, 380, 388, 392, 394, 416], "dataset": [1, 2, 3, 5, 219, 238, 244, 253, 254, 364, 375, 378, 414, 418], "end": [1, 2, 3, 5, 16, 241, 249, 250, 254, 345, 376, 385, 388, 390, 391, 395, 399, 408], "up": [1, 2, 3, 4, 5, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 385, 387, 392, 395, 399, 411], "around": [1, 2, 3, 5], "5k": [1, 2, 3, 5], "decent": [1, 2, 3, 5], "coverag": [1, 2, 3, 5], "i": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 16, 21, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 214, 219, 222, 228, 238, 241, 244, 249, 250, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 350, 351, 352, 353, 354, 355, 361, 363, 364, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424], "signific": [1, 3, 377, 395], "percentag": [1, 2, 3, 5], "normal": [1, 2, 3, 5, 354, 398, 406, 425], "sai": [1, 2, 3, 5, 407], "32k": [1, 2, 3, 5], "To": [1, 2, 3, 5, 219, 249, 250, 363, 374, 383, 395, 400, 403, 405, 407, 411, 412], "we": [1, 2, 3, 5, 230, 234, 250, 370, 373, 375, 376, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 414, 415, 416, 418, 426], "lookup": [1, 2, 3, 5], "tabl": [1, 2, 3, 5, 386, 399, 407], "between": [1, 2, 3, 5, 11, 12, 249, 250, 354, 363, 377, 395, 404, 407, 411, 418], "And": [1, 2, 3, 5, 121, 385, 386, 387, 388, 391, 398], "map": [1, 2, 3, 4, 5, 11, 12, 16, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 244, 363, 376, 377, 392, 397, 418], "whitespac": [1, 2, 3, 5, 412], "control": [1, 2, 3, 4, 5, 16, 221, 222, 363, 383, 395], "barf": [1, 2, 3, 5], "signfic": [2, 5], "nefiletyp": 4, "gener": [4, 16, 111, 112, 221, 222, 241, 244, 249, 250, 254, 364, 376, 377, 383, 387, 391, 398, 399, 402, 403, 406, 408, 410, 411, 414, 415, 418], "enumer": [4, 256, 354], "deriv": [4, 352, 404, 405], "from": [4, 14, 16, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 204, 205, 221, 225, 228, 230, 241, 244, 249, 250, 254, 363, 364, 373, 375, 377, 378, 380, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 398, 399, 402, 404, 405, 406, 407, 414, 415, 416, 417, 418], "defin": [4, 16, 214, 222, 234, 236, 237, 241, 244, 351, 363, 373, 376, 377, 383, 384, 390, 391, 407, 412, 414, 417, 418], "new": [4, 7, 11, 12, 13, 16, 21, 244, 374, 391, 392, 395, 398, 399, 412, 419], "handle_quant": 4, "model": [4, 7, 11, 12, 13, 14, 16, 19, 21, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 185, 186, 187, 189, 190, 191, 202, 203, 205, 212, 214, 219, 221, 222, 225, 227, 228, 234, 237, 238, 239, 241, 244, 253, 254, 361, 363, 375, 377, 378, 380, 382, 383, 386, 387, 391, 392, 393, 395, 398, 403, 404, 405, 406, 409, 413, 414, 415, 417, 418, 427], "lazymodel": 4, "convert": [4, 7, 11, 12, 16, 21, 204, 221, 222, 379, 389, 392, 406, 411, 418], "entri": [4, 206, 238, 244, 249, 250, 413], "foo": 4, "qweight": 4, "scale": [4, 21, 244, 354, 398, 403, 406, 418], "etc": [4, 228, 244, 363, 377, 385], "which": [4, 7, 11, 12, 13, 16, 159, 204, 222, 224, 228, 230, 244, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 375, 377, 382, 383, 384, 386, 387, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 414, 417, 418], "resolv": [4, 344], "unquantizedtensor": 4, "raw": 4, "data": [4, 16, 82, 208, 221, 254, 256, 354, 363, 376, 378, 383, 384, 386, 388, 389, 390, 392, 397, 398, 399, 400, 403, 404, 407, 411, 418, 422, 426], "one": [4, 7, 11, 12, 16, 212, 241, 249, 354, 363, 376, 377, 380, 382, 383, 385, 386, 387, 391, 392, 394, 395, 398, 400, 401, 406, 410, 411, 416], "weight": [4, 89, 222, 249, 250, 354, 363, 377, 379, 385, 386, 388, 397, 400, 401, 402, 406, 407, 411, 414, 415, 417, 418], "quantizedtensor": 4, "lazyunpickl": 4, "fp": 4, "io": [4, 354, 390], "data_base_path": 4, "str": [4, 16, 55, 148, 208, 214, 216, 221, 222, 223, 230, 233, 237, 239, 242, 244, 247, 249, 250, 251, 254, 256, 364, 375], "zip_fil": 4, "zipfil": 4, "take": [4, 373, 377, 385, 387, 390, 398, 406, 407], "binari": [4, 381, 399, 406, 411, 425], "file": [4, 7, 9, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 148, 176, 222, 225, 228, 230, 234, 236, 241, 244, 245, 254, 351, 352, 353, 354, 375, 376, 383, 384, 385, 386, 388, 390, 394, 395, 398, 399, 410, 411, 412, 413], "read": [4, 241, 376, 384, 394], "pickl": 4, "stream": [4, 390], "protocol": [4, 404], "version": [4, 219, 230, 244, 373, 376, 381, 386, 393, 409, 413], "detect": [4, 16], "automat": [4, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 375, 385, 386, 387, 395, 398, 411], "so": [4, 16, 230, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 377, 382, 383, 386, 387, 390, 391, 398, 400, 401, 402, 403, 404, 406, 407, 408, 411, 414, 415, 417, 418], "argument": [4, 214, 222, 241, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 377, 385, 412, 414, 415, 417, 418], "past": [4, 249, 250], "object": [4, 11, 12, 13, 204, 214, 222, 227, 234, 236, 237, 238, 239, 241, 244, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 376, 377, 380, 383, 390, 417, 422], "": [4, 16, 21, 55, 108, 204, 222, 244, 250, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 352, 363, 373, 376, 377, 383, 384, 385, 387, 388, 390, 392, 393, 395, 400, 404, 406, 409, 411, 412, 416, 418], "represent": [4, 16, 373, 380, 383, 387, 388], "ar": [4, 16, 111, 112, 159, 219, 224, 225, 241, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 363, 373, 374, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 417, 418], "ignor": [4, 214, 244, 249, 250, 383, 395], "must": [4, 16, 219, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 381, 387, 391, 397, 398, 400, 407], "have": [4, 7, 16, 204, 214, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 374, 376, 383, 384, 385, 386, 387, 388, 391, 392, 395, 399, 403, 404, 405, 406, 410, 411, 413, 414, 415, 416, 417, 418], "two": [4, 16, 244, 377, 383, 386, 387, 389, 390, 392, 398, 399, 401, 404, 405, 406, 407, 415, 416, 417, 418], "method": [4, 16, 225, 236, 242, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 375, 378, 395, 398, 401, 403, 406, 408, 417, 418], "an": [4, 9, 16, 21, 204, 236, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 373, 375, 376, 378, 379, 380, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 397, 398, 399, 403, 404, 407, 412, 414, 416, 427], "integ": [4, 375, 379, 386, 387, 407, 411, 417, 418], "readlin": 4, "requir": [4, 16, 145, 219, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 380, 387, 389, 391, 393, 395, 397, 400, 401, 403, 410, 411, 418], "both": [4, 228, 244, 249, 250, 373, 375, 380, 395, 403, 405, 410, 411, 412, 414, 418], "should": [4, 16, 230, 244, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 384, 386, 387, 390, 391, 397, 398, 399, 404, 411, 412, 414, 415, 418], "thu": [4, 402, 418], "can": [4, 7, 16, 111, 112, 121, 145, 216, 230, 241, 244, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 375, 376, 377, 379, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 415, 416, 417, 418], "open": [4, 373, 375, 384, 388, 394], "bytesio": 4, "ani": [4, 16, 230, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 374, 383, 391, 395, 416], "other": [4, 16, 71, 121, 230, 354, 373, 374, 375, 376, 383, 384, 385, 386, 387, 391, 392, 393, 395, 403, 406, 407, 409, 411, 413, 418], "custom": [4, 16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 214, 238, 244, 254, 345, 363, 376, 385, 387, 395, 427], "meet": [4, 351, 352, 353, 354, 383, 401, 403, 407], "interfac": [4, 7, 206, 222, 249, 250, 352, 379, 382, 396], "option": [4, 16, 214, 221, 222, 230, 237, 239, 244, 249, 250, 363, 364, 385, 391, 398, 407, 411], "keyword": [4, 244], "fix_import": 4, "encod": [4, 233, 249, 250, 363, 385, 391], "error": [4, 20, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 390, 408], "us": [4, 7, 16, 21, 55, 148, 159, 181, 204, 214, 219, 221, 222, 224, 228, 230, 233, 234, 237, 238, 244, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 373, 374, 375, 376, 377, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418], "compat": [4, 381], "support": [4, 16, 21, 148, 214, 216, 222, 225, 239, 242, 243, 254, 354, 380, 381, 382, 383, 384, 385, 386, 390, 391, 399, 403, 404, 406, 408, 410, 411, 416, 417, 421], "python": [4, 11, 12, 16, 249, 250, 350, 361, 374, 375, 376, 381, 382, 383, 384, 386, 388, 389, 394, 410], "2": [4, 16, 219, 222, 224, 249, 354, 363, 364, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 391, 392, 393, 395, 400, 401, 402, 407, 408, 409, 411, 413, 414, 416], "If": [4, 16, 224, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 374, 377, 379, 383, 385, 386, 387, 388, 391, 395, 398, 404, 411, 413, 414, 417, 418], "true": [4, 14, 214, 222, 244, 247, 249, 250, 251, 363, 376, 379, 380, 382, 383, 385, 386, 392, 398, 399, 405, 408, 411, 414, 415, 418], "try": [4, 386, 394, 418], "old": [4, 16], "name": [4, 11, 12, 13, 14, 16, 21, 55, 82, 148, 204, 214, 222, 223, 230, 239, 242, 247, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 389, 391, 393, 399, 409, 410, 413, 414, 415, 416, 417, 418], "3": [4, 16, 354, 363, 364, 375, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 399, 401, 402, 407, 409, 411, 412, 414], "tell": [4, 385, 387, 398, 399], "how": [4, 222, 224, 244, 344, 374, 383, 384, 385, 388, 389, 391, 395, 399, 400, 401, 411, 414, 417], "decod": [4, 233, 249, 250, 392, 408], "bit": [4, 379, 380, 394, 395, 397, 398, 404, 407, 418], "instanc": [4, 222, 228, 234, 244, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 373, 384, 385, 393, 409, 412, 414, 415, 416], "default": [4, 221, 222, 230, 237, 239, 244, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 375, 376, 377, 383, 386, 392, 393, 395, 399, 403, 407, 408, 409, 411, 414, 415, 417, 418], "ascii": 4, "strict": 4, "respect": [4, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 384, 387, 388], "find_class": 4, "specifi": [4, 16, 216, 222, 224, 234, 236, 238, 242, 243, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 387, 388, 392, 395, 399, 403, 405, 411, 417, 418], "necessari": [4, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 390, 395, 407, 411], "import": [4, 14, 16, 239, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 375, 376, 377, 380, 383, 384, 386, 388, 391, 392, 395, 398, 399, 403, 414, 415, 416, 417, 418], "subclass": [4, 55, 148, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352], "mai": [4, 7, 16, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 354, 373, 374, 376, 383, 386, 391, 392, 394, 395, 400, 401, 402, 404, 405, 406, 407, 411, 413, 418], "overrid": [4, 230, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 390], "e": [4, 16, 111, 112, 214, 222, 228, 244, 363, 373, 376, 377, 386, 395, 398, 399, 404, 405, 411, 412], "g": [4, 214, 222, 228, 244, 363, 377, 394, 395, 398, 399, 404, 412], "restrict": 4, "unpickl": 4, "arbitrari": [4, 383], "call": [4, 16, 108, 140, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 379, 383, 386, 387, 392, 397, 398, 399, 406, 407, 418], "whenev": [4, 395], "pass": [4, 241, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 354, 392, 398, 399, 416, 418], "bounded_parallel_map": 4, "func": [4, 16, 363, 386], "callabl": [4, 237, 238, 244, 363], "In": [4, 16, 228, 244, 249, 363, 373, 376, 383, 384, 385, 386, 387, 388, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 414, 415, 418], "out": [4, 14, 16, 244, 374, 376, 383, 384, 387, 395, 396, 405, 418], "iter": [4, 214, 222, 228, 244, 363, 364, 376, 384, 386, 390, 392, 398, 402, 405, 406, 411, 412], "concurr": 4, "int": [4, 16, 214, 216, 221, 222, 242, 244, 249, 354, 364, 383, 398, 399, 400, 403], "parallel": [4, 402, 403, 404, 407, 411], "backpressur": 4, "caller": 4, "doesn": [4, 16, 363, 395, 398, 407, 411], "t": [4, 16, 222, 249, 250, 352, 354, 363, 375, 377, 390, 392, 394, 395, 397, 398, 400, 403, 405, 406, 407, 411, 417], "next": [4, 7, 14, 249, 250, 363, 387, 388, 395, 398, 400, 402, 404, 405, 406, 407], "fast": [4, 222, 345, 376, 380], "enough": [4, 375, 392, 403, 418], "stop": [4, 216, 222, 254, 375, 395, 418], "some": [4, 16, 145, 159, 250, 376, 383, 384, 385, 386, 387, 390, 391, 392, 395, 398, 399, 403, 407, 418], "point": [4, 206, 244, 249, 250, 363, 387, 398, 399, 403, 406, 418], "rather": [4, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 387, 398], "than": [4, 224, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 385, 386, 387, 395, 398, 403, 405, 410, 411, 418], "let": [4, 385, 390, 400, 401], "result": [4, 16, 214, 228, 238, 244, 345, 363, 364, 373, 376, 378, 383, 386, 387, 393, 395, 398, 399, 400, 403, 404, 405, 406, 407, 409, 413, 417, 418], "pile": 4, "memori": [4, 244, 390, 392, 398, 399, 400, 401, 402, 404, 405, 406, 407, 415, 418], "specif": [4, 16, 230, 234, 353, 355, 363, 373, 377, 381, 383, 386, 387, 395, 397, 402, 403, 404, 410, 411, 414, 415, 416, 418], "max": [4, 33, 222, 224, 244, 376, 392, 393, 398, 400, 402, 407, 409, 418], "output": [4, 14, 16, 21, 33, 204, 205, 222, 237, 244, 249, 250, 354, 363, 375, 377, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 402, 403, 404, 405, 407, 411, 416], "valu": [4, 16, 21, 204, 205, 212, 221, 222, 237, 241, 244, 249, 250, 354, 375, 376, 377, 383, 384, 385, 386, 387, 395, 398, 399, 400, 401, 403, 405, 406, 411, 414, 415, 417, 418], "buffer": [4, 403, 404, 406], "per": [4, 214, 385, 393, 398, 401, 409, 411, 412, 417], "thread": [4, 393], "nth_multifile_path": 4, "path": [4, 16, 214, 222, 228, 230, 234, 236, 237, 241, 244, 253, 254, 375, 376, 380, 384, 385, 386, 388, 392, 395, 408, 410, 411], "pathlib": 4, "n": [4, 16, 225, 249, 250, 354, 375, 377, 386, 387, 389, 393, 394, 395, 397, 400, 401, 402, 403, 406, 407, 409, 411], "none": [4, 7, 14, 16, 21, 54, 55, 82, 89, 204, 205, 214, 221, 222, 223, 224, 225, 228, 234, 237, 238, 239, 242, 244, 247, 249, 250, 251, 252, 253, 354, 363, 375, 377, 378, 379, 385, 414, 415, 417, 418], "given": [4, 222, 230, 249, 250, 375, 391, 399, 402, 405, 407, 417], "belong": [4, 16, 383, 418], "multi": [4, 216, 384, 385, 386], "bin": [4, 7, 14, 237, 384, 385, 386, 388, 394, 395, 408, 410], "1": [4, 16, 221, 222, 223, 242, 244, 249, 250, 252, 254, 354, 363, 364, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 414, 416, 417, 418], "nth": 4, "find_multifile_path": 4, "whole": [4, 16, 219, 228, 363, 378, 385, 386, 402, 403, 404, 406, 408], "load_some_model": 4, "modelplu": 4, "load": [4, 19, 225, 228, 238, 239, 244, 249, 250, 376, 383, 384, 385, 386, 388, 392, 395, 397, 399, 400, 401, 402, 407], "format": [4, 20, 89, 214, 244, 363, 385, 394, 395, 405, 406, 409, 410, 418], "neural_engin": [6, 376, 380, 382, 383, 384, 385, 386, 388, 391, 392, 396, 411], "compil": [6, 206, 347, 380, 382, 383, 384, 386, 387, 389, 391, 392, 427], "extractor": [6, 16, 17, 206, 386, 388, 391], "graph": [6, 7, 9, 11, 12, 13, 16, 17, 18, 21, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 347, 376, 377, 383, 388, 391, 392, 402, 405, 407, 427], "loader": [6, 7, 17, 206, 386, 388, 391], "op": [6, 7, 11, 12, 13, 16, 17, 21, 121, 145, 156, 204, 205, 206, 222, 244, 354, 385, 390, 391, 392, 398, 399, 411, 412, 418], "sub_graph": [6, 17, 206, 383, 386], "graph_util": [6, 17, 206, 383, 387, 391], "logger": [6, 17, 206, 408], "onnx_util": [6, 17, 206], "optim": [6, 17, 206, 345, 361, 363, 364, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 392, 395, 398, 399, 400, 402, 414, 415, 416, 417, 418], "tf_util": [6, 17, 206], "torch_util": [6, 17, 206], "neural": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 113, 145, 176, 204, 205, 206, 230, 233, 238, 345, 363, 364, 372, 376, 377, 383, 385, 386, 387, 388, 392, 402, 410, 415, 418, 421, 428], "engin": [7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 113, 145, 176, 204, 205, 206, 228, 244, 346, 355, 363, 372, 376, 383, 385, 387, 390, 392, 398, 403, 406, 410, 421, 428], "start_pipelin": 7, "config": [7, 14, 16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 221, 224, 227, 228, 233, 237, 238, 239, 241, 244, 249, 250, 361, 364, 375, 376, 377, 378, 380, 384, 385, 387, 390, 398, 411, 416, 417], "pipelin": [7, 227, 228, 234, 422], "firstli": 7, "get": [7, 14, 16, 20, 21, 204, 205, 224, 225, 244, 251, 253, 256, 379, 383, 386, 387, 388, 390, 391, 395, 398, 405, 407, 412, 416, 423], "comput": [7, 16, 204, 219, 244, 249, 250, 368, 376, 380, 391, 395, 396, 397, 398, 399, 400, 403, 405, 406, 410, 416, 418, 424], "framework": [7, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 145, 222, 228, 239, 244, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 368, 377, 378, 381, 383, 384, 388, 392, 396, 416, 417, 418, 424], "contain": [7, 16, 21, 111, 112, 204, 205, 212, 241, 244, 249, 250, 254, 363, 368, 375, 377, 383, 384, 386, 387, 391, 395, 396, 398, 410, 411, 412, 417, 418, 424], "node": [7, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 181, 204, 205, 253, 379, 391, 393, 409], "edg": 7, "tensor": [7, 11, 12, 13, 14, 16, 17, 21, 43, 71, 145, 204, 205, 206, 221, 244, 249, 250, 354, 383, 384, 385, 387, 388, 390, 392, 405, 410, 411, 417, 418], "Then": [7, 16, 377, 387, 388, 406, 407, 411, 417, 418], "extract": [7, 9, 11, 12, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 383, 386, 388], "pack": [7, 17, 43, 206, 407], "them": [7, 11, 12, 16, 383, 384, 387, 395, 398, 401, 403, 406, 407, 418], "our": [7, 375, 379, 391, 398, 400, 401, 403, 405, 406, 407, 416], "form": [7, 16, 214, 244, 377, 385, 391, 397, 402, 406, 411], "exploit": [7, 391], "abov": [7, 16, 249, 250, 382, 383, 386, 387, 391, 395, 400, 401, 403, 404, 405, 410], "consist": [7, 374, 395], "sub": [7, 16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 383, 386, 387, 398, 405, 406], "see": [7, 16, 111, 112, 214, 219, 249, 250, 344, 373, 376, 383, 385, 386, 387, 388, 391, 393, 394, 395, 397, 402, 406, 408, 409, 410, 411, 413], "big": [7, 386, 387, 392], "layernorm": [7, 16, 46, 124, 383, 387, 391, 396, 411], "There": [7, 377, 383, 384, 385, 404, 408, 411, 415, 417], "differ": [7, 14, 19, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 185, 186, 187, 189, 190, 191, 202, 203, 224, 236, 363, 373, 375, 376, 377, 380, 383, 384, 386, 387, 388, 391, 395, 397, 404, 407, 414, 415, 417, 418], "flow": [7, 16, 383, 387, 395], "subgraph": [7, 16, 176, 386, 388], "final": [7, 386, 387, 388, 390, 391, 395, 400, 403, 404, 406, 414], "yaml": [7, 14, 16, 234, 236, 244, 385, 386, 388, 392, 410], "configur": [7, 99, 222, 224, 230, 234, 236, 238, 241, 242, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 354, 363, 375, 378, 379, 386, 397, 398, 402, 419], "infer": [7, 14, 19, 221, 233, 238, 244, 250, 345, 378, 380, 382, 383, 385, 386, 387, 388, 392, 394, 395, 401, 403, 404, 406, 415, 418, 425], "base": [9, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 239, 244, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352, 363, 375, 376, 379, 380, 381, 388, 390, 393, 400, 402, 403, 404, 405, 406, 408, 409, 416], "tensorflow": [9, 12, 22, 23, 25, 26, 27, 29, 34, 36, 41, 44, 45, 48, 49, 50, 52, 53, 56, 57, 59, 60, 63, 65, 66, 69, 80, 81, 85, 204, 222, 228, 238, 253, 361, 380, 381, 384, 391, 418], "onnx": [9, 11, 21, 205, 214, 222, 244, 376, 380, 383, 385, 386, 405, 416, 422, 427], "pleas": [9, 11, 12, 241, 254, 256, 344, 363, 364, 375, 377, 378, 380, 383, 387, 390, 394, 395, 396, 397, 398, 399, 403, 406, 411, 417, 418], "refer": [9, 11, 12, 219, 241, 254, 256, 363, 375, 376, 377, 380, 387, 390, 394, 395, 401, 403, 406, 411, 413, 417, 418], "onnx_extractor": [9, 10, 17, 206], "py": [9, 375, 383, 385, 389, 394, 410], "tf_extractor": [9, 10, 17, 206], "more": [9, 11, 12, 16, 111, 112, 344, 377, 380, 382, 383, 385, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 407, 409, 410, 411], "detail": [9, 16, 363, 368, 370, 373, 374, 376, 377, 378, 380, 382, 383, 385, 386, 387, 390, 391, 393, 394, 395, 396, 401, 408, 409, 411, 417, 418, 424, 426], "A": [9, 16, 224, 234, 239, 241, 244, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 384, 391, 393, 395, 397, 400, 401, 407, 409, 411], "super": [9, 383, 386], "oper": [9, 11, 12, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 145, 159, 204, 205, 353, 355, 368, 378, 382, 383, 384, 386, 388, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 411, 418, 424, 427], "do": [9, 222, 225, 237, 238, 241, 244, 373, 379, 383, 384, 386, 387, 391, 392, 395, 398, 400, 403, 417, 418], "addit": [9, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 376, 378, 385, 400, 404, 412, 419], "attribut": [9, 11, 12, 13, 16, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 363, 385, 387, 390, 399], "without": [9, 237, 244, 373, 377, 383, 384, 395, 404, 407, 408, 411], "modifi": [9, 14, 16, 121, 145, 219, 241, 250, 384, 385, 388, 394, 395], "topologi": 9, "modul": [10, 15, 17, 18, 43, 113, 206, 235, 363, 388, 389], "torch_extractor": [10, 17, 206], "all": [11, 12, 13, 14, 16, 17, 43, 55, 145, 148, 159, 206, 212, 241, 244, 249, 250, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 363, 373, 376, 377, 382, 383, 384, 385, 387, 391, 393, 394, 395, 398, 399, 400, 401, 403, 406, 409, 414, 417, 418], "input": [11, 12, 14, 16, 21, 33, 111, 112, 145, 204, 205, 221, 238, 239, 244, 249, 250, 354, 363, 364, 375, 376, 377, 379, 380, 384, 385, 386, 387, 390, 392, 402, 404, 405, 407, 411, 416], "compos": [11, 12, 13, 228, 244, 363, 383, 388, 406], "order": [11, 12, 14, 16, 228, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 375, 383, 385, 391, 397, 403, 404, 406, 407], "origin": [11, 12, 16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 219, 221, 241, 254, 375, 377, 383, 388, 394, 395, 404, 405, 418], "calcul": [11, 12, 111, 112, 225, 241, 363, 385, 391, 397, 399, 400, 403, 404, 407, 411, 418], "notic": [11, 12, 388, 398, 405, 406, 413], "For": [11, 12, 16, 21, 145, 344, 363, 373, 376, 380, 383, 386, 387, 391, 392, 393, 395, 396, 398, 401, 405, 406, 407, 408, 409, 416], "relat": [11, 12, 244, 370, 377, 383, 387, 391, 392, 401, 406, 417, 418, 426], "deatil": [11, 12], "api": [11, 12, 14, 254, 345, 374, 376, 384, 386, 387, 388, 390, 391, 398, 399, 416, 423], "onnxextractor": 11, "decor": [11, 12, 13, 21, 55, 148, 204, 205], "graph_def": [11, 12, 13, 204], "ha": [11, 12, 13, 16, 254, 363, 374, 375, 376, 383, 386, 387, 389, 390, 391, 394, 395, 397, 399, 403, 411, 418], "input_tensor": [11, 12, 13, 16, 21, 55, 204, 205, 249, 250, 383, 387], "output_tensor": [11, 12, 13, 16, 21, 55, 204, 205, 383, 387], "record": [11, 12, 13, 219, 363, 385, 386], "dest": [11, 12, 13, 16, 21, 204], "paramet": [11, 12, 13, 16, 21, 55, 148, 204, 205, 214, 221, 222, 224, 228, 230, 233, 234, 236, 237, 238, 239, 242, 244, 249, 250, 253, 254, 345, 354, 363, 364, 376, 377, 385, 391, 395, 414, 417], "onnxmodel": [11, 21], "type": [11, 12, 13, 16, 21, 55, 148, 204, 205, 214, 221, 222, 224, 230, 233, 238, 239, 244, 249, 253, 254, 256, 355, 363, 374, 375, 376, 377, 378, 379, 384, 385, 386, 388, 391, 394, 395, 396, 398, 399, 404, 410, 411, 414, 415, 418], "tensorflowextractor": 12, "tensorflowmodel": [12, 204], "torch": [13, 88, 111, 112, 205, 214, 221, 222, 233, 244, 249, 250, 364, 376, 416], "torchextractor": 13, "torchscript": [13, 75, 205, 221, 222, 244, 364], "defint": [14, 89], "add_config_item": 14, "kei": [14, 16, 21, 204, 241, 244, 249, 250, 345, 376, 385, 386, 387, 395, 398, 399, 401], "val": [14, 16], "add": [14, 16, 33, 222, 225, 241, 377, 384, 385, 386, 387, 391, 394, 395, 396, 398, 399, 406, 411, 412, 427], "pair": [14, 222, 249, 384, 399, 407], "framework_modeling_config": 14, "inquire_config_item": 14, "insert_nod": 14, "index": [14, 249, 250, 253, 354, 387, 390, 391], "insert": [14, 16, 388, 390, 391, 395, 398, 399, 418], "ir": [14, 383, 384, 385, 386, 392, 408, 410, 427], "remove_nod": 14, "node_nam": [14, 16, 21, 204, 383, 387], "remov": [14, 16, 156, 159, 250, 373, 374, 399, 417], "get_node_id": [14, 383], "id": [14, 16, 230, 250, 253, 395, 399, 400], "accord": [14, 383, 386, 395, 407], "get_node_by_nam": 14, "rename_nod": 14, "old_nam": 14, "new_nam": 14, "change_node_input_tensor": 14, "mode": [14, 221, 223, 242, 243, 363, 385, 389, 404, 406, 411, 412, 418], "change_node_output_tensor": 14, "get_pre_node_nam": 14, "previou": [14, 228, 244, 376, 384, 403, 419], "get_next_node_nam": 14, "get_tensor_idx": 14, "tensor_nam": [14, 21, 204], "from_output": 14, "modify_node_connect": 14, "dump_tensor": 14, "tensor_list": 14, "dump": [14, 418], "engine_init": 14, "net_info": 14, "weight_data": 14, "b": [14, 16, 21, 249, 383, 391, 394, 395, 397, 400, 401, 402, 406, 407, 411], "refresh_model": 14, "pybind": 14, "executor": [14, 383, 384, 385], "input_data": [14, 16, 17, 113, 206, 384], "graph_init": [14, 384, 386], "load_weight": 14, "fals": [14, 214, 222, 223, 225, 230, 244, 249, 250, 354, 363, 364, 377, 380, 383, 386, 398, 399, 411, 414], "initi": [14, 16, 21, 24, 28, 46, 55, 76, 222, 234, 244, 249, 250, 354, 363, 394, 395, 398, 399, 403, 416, 417], "exampl": [14, 16, 145, 208, 214, 222, 249, 250, 254, 345, 346, 367, 373, 375, 376, 377, 380, 383, 384, 386, 387, 389, 390, 391, 392, 395, 396, 398, 400, 414, 417, 418, 423], "newgraph": 14, "conf": [14, 222, 384, 385, 386, 390, 410], "input_0": [14, 384, 386], "input_1": [14, 384, 386], "input_2": [14, 384, 386], "save": [14, 214, 225, 237, 244, 375, 376, 383, 384, 385, 388, 392, 401, 405, 407, 418], "output_dir": [14, 214, 237, 244, 363, 375, 388, 389], "ymal": 14, "graph_dispatch": [14, 386], "tune": [14, 208, 222, 244, 345, 375, 376, 377, 413, 414, 415, 417, 427], "inputs_shap": [14, 386], "dispatch": 14, "get_sparse_nodes_nam": 14, "threshold": [14, 395, 411], "0": [14, 16, 204, 214, 222, 223, 225, 242, 247, 249, 250, 252, 253, 254, 351, 352, 354, 363, 364, 375, 376, 377, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418], "7": [14, 16, 354, 363, 376, 378, 381, 382, 383, 387, 389, 391, 393, 401, 409, 411, 414, 418], "sparsiti": [14, 222, 241, 393, 411, 417], "spars": [14, 345, 354, 376, 386, 396, 397, 406, 411, 425], "transpose_mode_int8": 14, "node_name_list": 14, "transpos": [14, 17, 43, 68, 206, 249, 250, 385, 386, 396, 397, 401, 403, 404, 407, 411, 425], "innerproduct": [14, 33, 121, 385, 386, 396], "reorder": [14, 17, 43, 206, 403, 404], "util": [16, 21, 204, 205, 222, 224, 227, 255, 375, 383, 391, 394, 395, 397, 404, 407, 411], "names_from_input": 16, "static": [16, 251, 351, 354, 385, 388, 398, 401, 403, 416], "valid": [16, 222, 238, 244, 364, 374, 375, 377, 380, 391, 413, 419, 426], "field": [16, 222, 375, 398, 399, 418], "tupl": [16, 224, 239, 249, 250], "nodedef": [16, 204], "also": [16, 374, 376, 383, 384, 385, 387, 388, 390, 391, 392, 394, 395, 397, 398, 399, 400, 403, 406, 407, 408, 415, 418], "get_data_dtyp": 16, "const": [16, 21, 204, 351, 352, 353, 354, 390, 396, 398, 399, 400, 401], "dtype": [16, 21, 82, 204, 205, 244, 376, 379, 384, 385, 386, 390], "numpi": [16, 21, 376, 384], "dtypes_dict": 16, "autocast_init": 16, "quant": [16, 121, 222, 396, 411, 418, 425], "info": [16, 20, 21, 111, 112, 204, 205, 363, 376, 383, 408], "set_autocast": 16, "get_autocast_info": 16, "quant_info_init": 16, "insert_quant_info": 16, "get_quant_info": 16, "environ_info_init": 16, "environ": [16, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 384, 411, 412], "insert_environ_info": 16, "remove_environ_info_item": 16, "item": [16, 364, 376, 380], "get_environ_info": 16, "search_straight_pattern": [16, 391], "input_pattern": [16, 391], "search": [16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 222, 225, 228, 234, 244, 363, 378, 387], "user": [16, 214, 241, 249, 250, 254, 345, 346, 363, 364, 367, 370, 376, 379, 383, 385, 387, 389, 392, 395, 403, 405, 408, 411, 415, 416, 423, 426], "pattern": [16, 17, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 212, 222, 352, 388, 397, 400, 410, 417, 427], "intern": [16, 387, 395, 403], "grpah": [16, 21, 204], "structur": [16, 378, 383, 384, 386, 394, 395, 402, 406, 410, 417], "attent": [16, 249, 250, 352, 363, 373, 385, 391, 405], "chain": [16, 398, 399], "straight": 16, "sequenc": [16, 208, 216, 224, 249, 250, 376, 380, 383, 387, 391, 395, 402, 411], "It": [16, 108, 230, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 377, 383, 385, 386, 387, 390, 391, 392, 395, 402, 403, 405, 406, 411], "otherwis": [16, 214, 373, 383, 386, 403, 411], "op_typ": [16, 21, 55, 204, 205, 383, 386, 387, 399], "element": [16, 241, 244, 383, 391, 396, 400, 402, 405, 407, 411, 425], "could": [16, 241, 352, 373, 383, 384, 385, 387, 388, 391, 401, 410, 411, 417, 418], "mandatori": 16, "while": [16, 384, 387, 391, 395, 400, 403, 406, 411, 418], "stand": [16, 383], "mybe": 16, "mul": [16, 383, 387, 391, 398], "addv2": [16, 33, 391], "equal": [16, 244, 387, 395, 397, 398], "below": [16, 222, 345, 363, 374, 375, 376, 377, 383, 384, 386, 388, 391, 395, 397, 402, 404, 405, 406, 407, 415], "length": [16, 222, 224, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 376, 387, 391, 395, 398, 411, 418], "match": [16, 212, 363, 377, 386, 387, 391, 402, 405], "24": [16, 363, 391, 393, 401, 409], "layer": [16, 222, 224, 241, 249, 250, 363, 385, 391, 395, 398, 402, 405, 417, 425], "each": [16, 111, 112, 214, 222, 228, 244, 249, 250, 254, 363, 375, 385, 386, 387, 395, 397, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 417], "still": [16, 241, 345, 391, 400, 418], "last": [16, 219, 222, 244, 249, 250, 387, 391, 392, 395, 397, 402, 403, 405, 418], "former": [16, 391], "here": [16, 234, 244, 370, 376, 382, 383, 386, 387, 388, 390, 391, 395, 399, 407, 418, 419, 426], "search_pattern": [16, 391], "pattern_list": 16, "complet": [16, 383, 393, 395, 400, 403, 406, 409], "its": [16, 145, 228, 244, 363, 373, 377, 383, 384, 387, 388, 391, 395, 402, 403, 404, 407, 410, 411, 413], "op_idx": 16, "howev": [16, 241, 386, 387, 391, 392, 395, 397, 401, 404, 407], "due": [16, 249, 387, 391, 395, 397, 418], "few": [16, 214, 402], "complic": [16, 383, 391], "thei": [16, 219, 230, 373, 377, 382, 391, 392, 395, 397, 398, 399, 401, 405, 411], "therefor": [16, 379, 397, 402, 405, 407, 418], "fist": 16, "repres": [16, 241, 373, 385, 387, 391, 395, 397, 399, 400, 403, 418], "main": [16, 216, 241, 244, 249, 250, 254, 387, 395, 404, 411], "top": [16, 345, 375, 376, 402], "down": [16, 395], "head": [16, 249, 250, 391, 399, 405, 406], "tail": [16, 391, 408], "left": [16, 249, 250, 401, 405, 407], "bert_large_squad": 16, "pb": [16, 380], "squareddiffer": [16, 33, 391], "4": [16, 222, 242, 244, 249, 250, 354, 363, 364, 373, 375, 377, 378, 381, 383, 385, 386, 387, 390, 391, 392, 393, 394, 395, 401, 402, 403, 404, 407, 408, 411, 417], "rsqrt": [16, 33, 391], "5": [16, 94, 95, 96, 97, 177, 178, 179, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 223, 354, 363, 364, 375, 377, 383, 384, 385, 387, 390, 391, 393, 395, 401, 409, 411], "9": [16, 222, 254, 363, 375, 376, 380, 381, 383, 391, 393, 395, 401, 409, 411, 417], "6": [16, 354, 363, 377, 378, 382, 383, 387, 391, 393, 399, 401, 408, 409, 418], "same": [16, 250, 377, 379, 383, 384, 385, 387, 388, 391, 394, 395, 397, 400, 403, 404, 407, 410, 411, 412], "follow": [16, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 216, 249, 250, 347, 350, 355, 361, 364, 373, 374, 375, 376, 377, 381, 383, 385, 386, 387, 388, 390, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 418], "frozen": [16, 384, 388], "had": [16, 383], "better": [16, 108, 228, 238, 244, 363, 383, 384, 385, 386, 395, 397, 403, 404, 405, 406, 410, 414, 415, 418], "identifi": [16, 230, 400], "own": [16, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 383, 387, 388, 394, 395, 398, 404, 415], "casual": 16, "tf": [16, 238, 249, 363], "start": [16, 249, 250, 385, 391, 412, 423], "mostli": [16, 391], "longest": [16, 391], "sometim": [16, 387, 418], "connect": [16, 395, 417], "But": [16, 384, 397, 416], "don": [16, 222, 249, 250, 390, 392, 395, 398], "least": [16, 212, 241, 395, 404], "exist": [16, 230, 254, 363, 380, 383, 416], "relationship": 16, "sever": [16, 375, 383, 388, 391, 392, 395, 397, 411, 418], "split": [16, 17, 43, 206, 364, 375, 386, 397, 401, 403, 404], "representtaion": 16, "idx": [16, 399], "outsid": [16, 249, 250, 387, 391], "give": [16, 383, 387, 397], "just": [16, 250, 376, 383, 384, 385, 386, 387, 388, 391, 395, 399, 407, 410, 414], "empti": [16, 33, 387, 391, 399, 412], "algorithm": [16, 55, 148, 222, 234, 354, 363, 375, 386, 387, 390, 391, 395, 397, 398, 404, 411, 417, 418], "kind": [16, 99, 353, 390, 404, 411], "beaus": 16, "make": [16, 55, 145, 244, 364, 373, 374, 382, 383, 384, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 411], "sure": [16, 145, 364, 383, 395, 400, 411], "check": [16, 21, 121, 222, 244, 370, 374, 376, 383, 386, 387, 391, 395, 399, 426], "symmetr": [16, 391, 403, 411, 418], "consecut": [16, 401, 407], "y": [16, 111, 112, 399], "o": [16, 254, 363, 375, 376, 381, 393, 399, 404, 409], "shape": [16, 17, 43, 82, 206, 249, 250, 354, 363, 376, 384, 385, 386, 390, 392, 397, 403, 405, 411], "df": [16, 391], "duplic": 16, "would": [16, 383, 387, 388, 391, 392, 395, 408], "perform": [16, 222, 228, 234, 244, 249, 250, 251, 363, 364, 368, 376, 377, 379, 380, 384, 385, 386, 389, 394, 397, 400, 401, 402, 403, 404, 405, 406, 407, 411, 414, 415, 417, 418, 424], "befor": [16, 222, 241, 244, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 374, 377, 379, 383, 386, 387, 388, 391, 395, 398, 399, 400, 401, 403, 404, 406, 411, 418], "splice": 16, "de": 16, "total": [16, 222, 224, 249, 363, 364, 375, 387, 391, 395, 400, 407, 408], "step": [16, 222, 241, 244, 382, 383, 385, 387, 388, 389, 390, 391, 392, 398, 403, 405, 406, 411], "c": [16, 206, 355, 376, 381, 382, 383, 384, 386, 391, 393, 394, 395, 400, 402, 409, 411], "d": [16, 363, 375, 377, 397, 405], "f": [16, 354, 377, 390, 408, 418], "c1": 16, "d1": [16, 411], "c2": 16, "d2": 16, "c3": [16, 408], "d3": [16, 408], "now": [16, 254, 382, 383, 384, 386, 387, 388, 394, 398, 399, 406, 411, 416], "set": [16, 55, 214, 216, 223, 224, 237, 238, 244, 249, 250, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 364, 373, 375, 376, 384, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 399, 402, 411], "part": [16, 214, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 387, 390, 391, 392, 395, 406, 407], "As": [16, 377, 383, 385, 387, 388, 401, 405, 407], "appli": [16, 222, 373, 378, 380, 394, 395, 398, 399, 403, 404, 405, 407, 411, 417, 418], "everi": [16, 241, 383, 397, 411], "right": [16, 249, 250, 373, 395, 401, 405, 407, 416], "construct_nod": 16, "attr": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 353, 383, 384, 398, 399], "construct": [16, 55, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 398, 399], "new_nod": 16, "insert_pattern": 16, "target_node_nam": 16, "replac": [16, 250, 376, 377, 380, 383, 387, 417, 418], "ccontain": 16, "insid": [16, 387, 390, 402, 404], "been": [16, 249, 250, 374, 377, 399, 403, 416], "pattern_map": [16, 383, 387], "pattern_nam": 16, "mapping_dict": 16, "mapping_config": 16, "first": [16, 140, 222, 244, 375, 382, 383, 386, 387, 389, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 418], "second": [16, 222, 249, 250, 364, 382, 387, 389, 390, 391, 401, 402, 405, 407, 408, 411, 418], "third": [16, 387, 402, 407, 413], "reshap": [16, 17, 43, 60, 181, 206, 383, 384, 385, 390], "paddingsequ": [16, 58, 147, 384], "search_mod": [16, 383, 387], "embed": [16, 249, 250, 384, 387, 391, 398], "m": [16, 354, 376, 377, 378, 385, 386, 393, 394, 395, 397, 400, 401, 402, 403, 404, 406, 407, 409, 411], "after": [16, 108, 145, 159, 181, 241, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 379, 382, 385, 386, 387, 388, 390, 391, 395, 397, 399, 404, 406, 407, 410, 411, 412, 418], "fusion": [16, 99, 145, 159, 390, 391, 398, 399, 404, 427], "about": [16, 373, 376, 383, 387, 390, 393, 395, 399, 407, 409], "in_pattern": 16, "input_id": [16, 249, 250, 380, 384, 392], "segment_id": [16, 380, 384], "input_mask": [16, 380, 384], "out_pattern": 16, "th": [16, 387], "berfor": 16, "match_result": 16, "_n": 16, "reshape_0": [16, 387], "dict": [16, 21, 204, 205, 208, 214, 222, 234, 239, 241, 242, 244, 249, 250, 254, 375, 383, 384, 417], "where": [16, 17, 43, 206, 249, 250, 363, 377, 387, 395, 397, 399, 402, 403, 405, 407, 411, 412], "go": [16, 395, 400], "mayb": [16, 386, 407], "happen": [16, 385, 407], "sepcial": 16, "biasadd": [16, 27, 387, 391], "bia": [16, 21, 222, 354, 385, 411], "unfix": 16, "locat": [16, 82, 383, 384, 387, 391, 407, 411, 419], "onli": [16, 214, 219, 222, 244, 249, 250, 254, 345, 364, 381, 384, 386, 387, 388, 390, 392, 394, 395, 396, 398, 399, 400, 403, 405, 406, 407, 411, 414, 416], "write": [16, 375, 383, 391, 403, 404, 406], "note": [16, 241, 364, 378, 381, 383, 384, 385, 386, 387, 389, 390, 391, 395, 398, 399, 405, 406, 407, 411, 418], "That": [16, 406, 407], "too": [16, 383, 397, 398, 403], "decompos": [16, 383], "list2str": [16, 383], "src_perm": 16, "emit": [16, 387], "ret": [16, 391, 408], "str2list": 16, "src_str": 16, "pattern_mapping_conf_valid": 16, "conf_dict": 16, "lazyimport": 16, "module_nam": 16, "lazi": 16, "till": 16, "later": [16, 383, 391], "get_model_fwk_nam": 16, "avail": [16, 347, 350, 355, 361, 376, 381, 384, 395, 402], "fwk": 16, "na": [16, 222, 227, 244, 375, 396], "set_environ_var": 16, "env": [16, 389], "var": [16, 111, 112, 354], "kv": 16, "del_environ_var": 16, "delet": [16, 230, 417], "assert": [17, 43, 206, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363], "baddbmm": [17, 43, 206], "batch_matmul": [17, 43, 206], "batch_matmul_v2": [17, 43, 206], "bias_add": [17, 21, 43, 206], "cast": [17, 43, 206], "concat": [17, 43, 206, 383], "conv": [17, 43, 206, 222, 385, 386, 399], "co": [17, 43, 88, 206, 216, 230, 376], "empty_op": [17, 43, 206, 383], "expand_dim": [17, 43, 206], "fused_batch_matmul_v2": [17, 43, 206], "fused_batch_norm_v3": [17, 43, 206], "fused_gemm": [17, 43, 206], "fused_matmul": [17, 43, 206], "gather": [17, 43, 206, 244, 249, 250, 352, 383, 398], "gather_el": [17, 43, 206, 383], "gelu": [17, 43, 113, 206, 383, 390, 396, 399, 411], "gemm": [17, 43, 206, 222, 379, 397, 400, 403, 406, 411, 425], "iterator_get_next": [17, 43, 206], "iterator_v2": [17, 43, 206, 383], "layer_norm": [17, 43, 113, 206, 383], "log_softmax": [17, 43, 206], "map_and_batch_dataset": [17, 43, 206, 383], "matmul": [17, 21, 33, 43, 121, 206, 222, 379, 385, 387, 388, 391, 396, 406, 411, 425], "mkl_layer_norm": [17, 43, 206], "model_dataset": [17, 43, 206], "one_hot": [17, 43, 206], "onnx_input": [17, 43, 206], "optimize_dataset": [17, 43, 206, 383], "padding_sequ": [17, 43, 113, 206, 384], "placehold": [17, 43, 206], "pos_emb": [17, 43, 206], "pow": [17, 43, 206, 383, 387], "quantize_linear": [17, 43, 206, 383], "quantize_v2": [17, 43, 206], "quantized_fused_matmul_and_dequant": [17, 43, 206], "quantized_matmul_with_bias_and_dequant": [17, 43, 206], "reduce_mean": [17, 43, 206, 383], "reduce_sum": [17, 43, 206], "resiz": [17, 43, 206], "rsub": [17, 43, 206], "scatter_el": [17, 43, 206], "sin": [17, 43, 206], "size": [17, 43, 206, 214, 221, 222, 244, 249, 250, 363, 373, 376, 380, 384, 386, 392, 397, 400, 402, 404, 405, 406, 411, 418], "slice_position_id": [17, 43, 206], "softmax": [17, 43, 206, 249, 352, 363, 377, 396, 405, 406], "squeez": [17, 43, 206], "strided_slic": [17, 43, 206], "top_k": [17, 43, 206, 254, 395], "unpack": [17, 43, 206, 244, 383], "unsqueez": [17, 43, 206, 383], "view": [17, 43, 206, 374, 385, 397, 419], "innerproductreshapefus": [17, 106, 113, 206], "add_cls_token": [17, 113, 206], "add_embed": [17, 113, 206], "arangewithreciproc": [17, 113, 206], "attentionblock_attentionmaskaddreshap": [17, 113, 206], "attentionblock_constantofshapewithmul": [17, 113, 206], "attentionblock_qkvprereshap": [17, 113, 206], "attentionblock_qkvreshap": [17, 113, 206], "attentionblock_weightreshapeto4d": [17, 113, 206], "attention_mask_length_adaptive_keep_indic": [17, 113, 206], "attention_output_layer_norm_length_adaptive_keep_indic": [17, 113, 206], "attention_reshap": [17, 113, 206], "cast_to": [17, 113, 206], "collect_quant_info": [17, 113, 206], "conv_reshap": [17, 113, 206], "decoder_attn_reshap": [17, 113, 206], "einsumwitharang": [17, 113, 206], "embeddingbag": [17, 33, 113, 206], "embeddings_to_2d_before_inner_product": [17, 113, 206], "generate_sequ": [17, 113, 206], "innerproductwithbiasgelu": [17, 113, 206], "innerproductwithslic": [17, 113, 206], "innerproductwithswish": [17, 113, 206], "input_fil": [17, 113, 206], "insert_bf16_nod": [17, 113, 206], "insert_quant_nod": [17, 113, 206], "int8_bf16_mixed_precision_check": [17, 113, 206], "interact_featur": [17, 113, 206], "last_layer_shap": [17, 113, 206], "layer_norm_with_reduce_mean": [17, 113, 206, 383], "layer_norm_with_transpos": [17, 113, 206], "llama_embed": [17, 113, 206], "llama_matmulwithtranspos": [17, 113, 206], "llama_postprocess": [17, 113, 206], "llama_rotary_pos_emb": [17, 113, 206], "lower_all_tupl": [17, 113, 206], "matmul_with_bia": [17, 113, 206], "matmul_with_bias_add": [17, 113, 206], "matmul_with_bias_gelu": [17, 113, 206], "matmul_with_bias_relu": [17, 113, 206], "matmul_with_bias_sigmoid": [17, 113, 206], "matmul_with_bias_tanh": [17, 113, 206], "matmul_with_bias_unsqueez": [17, 113, 206], "matmul_with_transpos": [17, 113, 206], "matmul_with_transpose_scale_add": [17, 113, 206], "merged_embeddingbag": [17, 113, 206], "neox_reorder_chang": [17, 113, 206], "neox_rotary_pos_emb": [17, 113, 206], "operator_adaptor": [17, 113, 206], "output_data": [17, 113, 206, 384], "position_embed": [17, 113, 206], "position_embeddings_v1": [17, 113, 206], "qkv_merg": [17, 113, 206], "qkv_reshap": [17, 113, 206], "quant_gather_to_bf16": [17, 113, 206], "quantize_fus": [17, 113, 206], "quantized_graph_dtype_refactor": [17, 113, 206], "remove_constant_op": [17, 113, 206], "remove_last_view": [17, 113, 206], "remove_rang": [17, 113, 206], "remove_unused_oper": [17, 113, 206], "remove_zero": [17, 113, 206], "removeslic": [17, 113, 206], "reshape_after_restore_hidden_st": [17, 113, 206], "reshape_before_and_after_attention_out_layer_norm_gather_el": [17, 113, 206], "reshape_before_restore_hidden_st": [17, 113, 206], "reshape_fus": [17, 113, 206], "restore_hidden_states_in_length_adaptive_update_indic": [17, 113, 206], "rms_norm": [17, 113, 206], "rotary_pos_emb": [17, 113, 206], "slicemask": [17, 113, 206], "stablediffusion_explicitnhwctranspos": [17, 113, 206], "stablediffusion_mhareshap": [17, 113, 206], "stablediffusion_reshapefus": [17, 113, 206], "stablediffusion_bf16convert": [17, 113, 206], "start_end_logit": [17, 113, 206], "subgraph_match": [17, 113, 206, 386], "textencdoer_word_embed": [17, 113, 206], "textencoder_attentionmaskaddreshap": [17, 113, 206], "textencoder_attentionreshap": [17, 113, 206], "textencoder_kvreshap": [17, 113, 206], "textencoder_mulreshap": [17, 113, 206], "textencoder_qreshap": [17, 113, 206], "textencoder_softmaxreshap": [17, 113, 206], "textencoder_causal_attention_mask": [17, 113, 206], "token_type_embed": [17, 113, 206, 383], "token_type_embeddings_v1": [17, 113, 206, 383], "torch_embed": [17, 113, 206], "torch_ip_insert_bia": [17, 113, 206], "torch_unpack_baddbmm": [17, 113, 206], "torchinsertbf16nod": [17, 113, 153, 206], "torchpaddingsqu": [17, 113, 206], "transformer2dmodel_attentionmaskaddreshap": [17, 113, 206], "transformer2dmodel_constantofshapewithmul": [17, 113, 206], "transformer2dmodel_ffnslic": [17, 113, 206], "transformer2dmodel_ffnslice_1": [17, 113, 206], "transformer2dmodel_qkvprereshap": [17, 113, 206], "transformer2dmodel_qkvreshap": [17, 113, 206], "transformer2dmodel_qkvreshape4d": [17, 113, 206], "transformer2dmodel_encoderhiddenstatesreshap": [17, 113, 206], "transformer2dmodel_getsamplebatch": [17, 113, 206], "transformer2dmodel_sampleslic": [17, 113, 206], "transpose_batch_matmul": [17, 113, 206, 383], "word_embed": [17, 113, 206, 384], "frontend": [19, 402], "get_logg": 20, "log": [20, 376, 384, 390], "level": [20, 250, 345, 373, 376, 386, 399, 402, 410], "msg": 20, "arg": [20, 89, 212, 216, 230, 238, 241, 244, 254, 352, 363, 385, 390], "kwarg": [20, 89, 216, 222, 230, 241, 244, 249, 250], "debug": [20, 384, 392, 395], "fatal": 20, "warn": 20, "get_children": 21, "input_name_to_nod": 21, "get_node_children_nam": 21, "nodeproto": [21, 205], "get_initializer_children_nam": 21, "graph_node_names_detail": [21, 204, 205], "pars": [21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 88, 204, 384, 390], "graph_nodes_dict": [21, 204], "Be": [21, 204], "class": [21, 204, 214, 231, 239, 354, 355, 364, 375, 377, 383, 390, 398, 399], "cerat": 21, "output_nam": [21, 384], "ouput": 21, "param": [21, 204, 244, 398, 399], "node_names_detail": [21, 204], "is_supported_onnx_graph": [21, 288], "is_supported_onnx_nod": 21, "change_num_nam": 21, "number": [21, 214, 222, 224, 225, 250, 254, 364, 375, 386, 387, 391, 394, 397, 400, 406, 407, 411, 412, 418], "bias_to_int32": 21, "bias_nod": 21, "a_scal": 21, "b_scale": 21, "int8": [21, 222, 239, 244, 376, 378, 385, 386, 388, 394, 396, 399, 404, 405, 411, 418, 427], "int32": [21, 376, 384], "matric": [21, 400, 405, 406], "arrai": [21, 384], "fp32_bia": 21, "int8_bia": 21, "int8_bias_zero_point": 21, "int8_bias_scal": 21, "int32_bia": 21, "onnx_extract_oper": 21, "framework_model": [21, 54, 55, 204], "nodes_dict": [21, 54, 55, 204, 205], "engine_graph": [21, 54, 55, 204, 205], "tf_dtype": [21, 204, 205], "set_attr": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 383], "regist": [24, 33, 46, 55, 58, 61, 62, 71, 73, 77, 87, 148, 397, 398, 399, 400, 402, 403, 404, 405, 407, 427], "tile": [24, 33, 71, 397, 401, 403, 405, 406, 407, 411], "batchmatmul": 25, "batchmatmulv2": 26, "binaryop": [28, 398], "onnxruntim": [30, 31, 32, 38, 40, 61, 62, 67, 68, 70, 71, 72, 74, 79, 83, 84, 86, 87, 376, 379, 381, 383, 389], "multiheadattenion": 33, "binaryadd": [33, 398], "constantofshap": 33, "dequantizelinear": [33, 388], "dequant": [33, 398, 399, 403, 411], "erf": [33, 390], "expand": [33, 249, 250], "fill": [33, 387, 395, 405], "flatmapdataset": 33, "ident": [33, 373, 377, 395], "makeiter": 33, "matmulwithbiasadd": [33, 133], "matmulwithbiasgelu": [33, 134], "matmulwithbiastanh": [33, 137], "matmulwithbia": [33, 132], "qlinearmatmul": [33, 388], "qlinearadd": 33, "qlinearmul": 33, "realdiv": 33, "sqrt": [33, 383, 387, 405], "squar": [33, 249, 250], "stopgradi": 33, "tanh": [33, 390, 399, 411], "tensorslicedataset": 33, "transposebatchmatmul": [33, 202, 383], "rang": [33, 222, 244, 363, 376, 383, 386, 392, 395, 411, 417, 418], "relu": [33, 399, 411], "matmulwithbiasrelu": [33, 135], "cumsum": 33, "onehot": [33, 53], "tokentypeid": 33, "positionid": 33, "loop": [33, 244, 363, 383, 398, 400, 405], "sigmoid": 33, "matmulwithbiassigmoid": [33, 136], "flatten": 33, "mergedembeddingbag": [33, 141], "convolut": [33, 377, 386], "expandindic": 33, "opani": 33, "sequencelength": [33, 393], "arang": 33, "reciproc": 33, "einsum": 33, "repeat": [33, 394, 400, 412], "stack": [33, 406], "constant": [33, 156, 244], "listconstruct": 33, "latrang": 33, "masked_fil": 33, "floor_divid": 33, "listunpack": 33, "silu": 33, "zero": [33, 241, 399, 400, 402, 403, 407, 417], "expanddim": 34, "fusedbatchnormv3": 36, "fusedgemm": 37, "fusedmatmul": 38, "gatherv2": [39, 383], "gatherel": [40, 383], "iteratorgetnext": 44, "iteratorv2": [45, 383], "logsoftmax": [47, 352], "mapandbatchdataset": [48, 383], "modeldataset": 52, "onnxinput": 54, "operator_registri": [55, 383], "operator_typ": [55, 383], "cl": [55, 148, 363], "registr": [55, 148, 383], "ordereddict": [55, 383], "optimizedataset": [56, 383], "packagepositionembed": 60, "quantizelinear": [62, 383, 388], "quantiz": [62, 222, 227, 230, 237, 238, 244, 345, 376, 379, 394, 398, 399, 403, 404, 406, 411, 414, 422, 427], "quantizev2": 63, "quantizedmatmulwithbiasanddequant": 65, "reducemean": [66, 383, 387], "reducesum": 67, "aten": 71, "self": [71, 222, 249, 250, 254, 363, 375, 383, 385], "scalar": [71, 398], "alpha": [71, 354, 404, 411], "scatterel": 72, "primconst": 75, "slicepositionid": 77, "stridedslic": 81, "source_op": 82, "dest_op": 82, "definit": [82, 399], "topk": 83, "input_shap": [89, 385, 386, 411], "weight_optim": 89, "fuse": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 388, 398, 399], "acceler": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 368, 376, 378, 379, 388, 398, 399, 403, 405, 418, 424], "strategi": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 222, 238, 400], "addclstoken": [91, 99], "addembed": 92, "stabl": [94, 95, 96, 97, 111, 112, 177, 178, 179, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 345, 376, 381, 392, 403], "diffusionv1": [94, 95, 96, 97, 178, 179, 182, 183, 184, 192, 193, 196, 197, 198], "attentionmasklengthadaptiveexpandindic": 99, "attentionoutputlayernormlengthadaptiveexpandindic": 100, "attentionreshap": 101, "castto": 102, "collectquantinfo": 103, "convreshap": 104, "decoderattnreshap": 105, "gatherwithadd": 108, "embeddingsto2dbeforeinnerproduct": 108, "operatoradaptor": [108, 145], "quantgathertobf16": [108, 153], "generatesequ": 110, "channel": [111, 112, 398, 402, 407, 411, 417], "separ": [111, 112, 373, 391, 407, 413], "num_group": [111, 112], "group": [111, 112, 378, 383, 391, 400, 405, 407, 417], "num_channel": [111, 112], "x": [111, 112, 225, 249, 250, 386, 399, 402, 403, 405, 406, 411, 418], "epsilon": [111, 112, 383], "gamma": [111, 112], "beta": [111, 112, 354, 404, 411], "http": [111, 112, 216, 219, 249, 254, 256, 375, 376, 381, 382, 384, 390, 413, 419], "pytorch": [111, 112, 214, 222, 225, 228, 230, 233, 237, 244, 249, 250, 252, 361, 375, 376, 379, 381, 389, 394, 410, 416, 417, 418], "org": [111, 112, 219, 249, 381], "doc": [111, 112, 216, 254, 383, 387, 398, 407], "nn": [111, 112, 221, 244, 402], "html": [111, 112, 390], "groupnorm": [112, 352], "inputdata": [117, 383], "inputfil": 118, "insertbf16nod": 119, "insertquantnod": 120, "quantizedgraphdtyperefactor": [121, 155], "int8bf16mixedprecisioncheck": 121, "inferenc": 121, "under": [121, 244, 376, 383, 384, 385, 388, 404, 411, 413], "in8": 121, "bf16": [121, 222, 244, 376, 378, 388, 396, 399, 401, 403, 406, 411], "mix": [121, 386], "precis": [121, 244, 379, 388, 415, 418, 427], "u8": [121, 388, 390, 399, 406, 411], "s8": [121, 388, 398, 399, 403, 411], "fp32": [121, 222, 244, 376, 378, 384, 385, 386, 388, 390, 394, 398, 399, 401, 402, 404, 406, 411, 416, 418], "interactfeatur": 122, "lastlayershap": 123, "layernormwithreducemean": [125, 383], "layernormwithtranspos": 126, "llamaembed": 127, "llamamatmulwithtranspos": 128, "llamapostprocess": 129, "roraryposemb": [130, 144, 168], "llamaroraryposemb": 130, "loweralltupl": 131, "matmulwithbiasunsqueez": 138, "matmulwithtranspos": [139, 140], "matmulwithtransposescaleadd": 140, "multiheadattent": 142, "bass": [142, 148, 171], "neoxreorderchang": 143, "neoxroraryposemb": 144, "sweep": 145, "receiv": [145, 230, 387, 391, 392, 395], "outputdata": [146, 383], "pattern_registri": [148, 383], "pattern_typ": [148, 383], "positionembed": 149, "positionembeddingsv1": 150, "qkvmerg": 151, "qkvreshap": 152, "qunatizefus": 154, "quantizedgraphdtypecheck": 155, "removeconstantop": 156, "removelastview": 157, "removerang": 158, "removeunusedoper": 159, "removezero": 160, "reshapeafterrestorehiddenst": 162, "reshapebeforeandafterattentionoutlayernormgatherel": 163, "reshapebeforerestorehiddenst": 164, "reshapefus": 165, "restorehiddenstatesinlengthadapt": 166, "rmsnorm": 167, "explicitnhwctransposeforconv": 170, "startendlogit": 175, "matcher": [176, 363, 388], "subgraphmatch": [176, 386], "textencoder_wordembed": 177, "textencoderv1": [177, 194, 195, 199, 200, 201], "qkv": [181, 386, 388], "textencoder_casualattentionmask": 184, "tokentypeembed": [185, 383], "tokentypeembeddingsv1": [186, 383], "torchembed": 187, "torchinnerproductinsertbia": 188, "torchunpackbaddbmm": 189, "torchpaddingsequ": 191, "transformer2dmodel_ffninputslic": 194, "transformer2dmodel_ffninputslice_1": 195, "transformer2dmodel_qkvreshapeto4d": 198, "wordembed": 203, "create_tf_nod": 204, "creat": [204, 219, 222, 228, 236, 244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 373, 383, 389, 390, 395, 402, 411, 414], "tendorflow": 204, "get_tensor_dest_op": 204, "store": [204, 222, 225, 228, 230, 363, 383, 387, 388, 391, 392, 397, 398, 399, 400, 401, 403, 404, 405, 407], "dest_op_nam": 204, "tf_extract_oper": 204, "tf_dtype_id": 204, "deal": [204, 363, 385], "multipl": [204, 245, 249, 250, 254, 364, 378, 383, 385, 395, 399, 400, 402, 403, 404, 405, 406, 407, 411, 414, 415], "indetermin": 204, "torch_extract_oper": 205, "neural_engine_bin": [206, 382], "datacollatorforsuperviseddataset": 208, "transform": [208, 216, 222, 238, 239, 244, 249, 250, 254, 363, 364, 368, 374, 377, 382, 383, 384, 398, 399, 404, 405, 406, 407, 413, 415, 416, 417, 418, 419, 424], "pretrainedtoken": [208, 216], "collat": 208, "supervis": 208, "fine": [208, 345, 375, 376, 395, 417, 418], "preprocess": [208, 221, 222, 375, 376, 406], "target": [208, 219, 221, 222, 244, 363, 385, 395, 407, 417], "pattern_match": 212, "source_list": 212, "task": [212, 214, 239, 250, 253, 363, 375, 376, 377, 378, 389, 395, 399, 405, 408, 416], "batch_siz": [212, 214, 216, 221, 222, 244, 249, 250, 253, 364, 376, 384, 385, 389, 395, 405, 411], "instanti": [212, 214, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "model_arg": 214, "new_fewshot": 214, "devic": [214, 225, 233, 375, 377, 384, 386, 416], "cpu": [214, 222, 345, 353, 364, 375, 376, 380, 381, 384, 390, 393, 395, 397, 399, 408, 409, 416], "no_cach": 214, "limit": [214, 222, 377, 395, 402, 406], "bootstrap_it": 214, "100000": 214, "description_dict": 214, "check_integr": 214, "decontamination_ngrams_path": 214, "seed": [214, 222, 363, 394], "1234": 214, "user_model": 214, "model_format": [214, 216], "union": [214, 244, 354], "lm": 214, "get_model": 214, "create_from_arg_str": 214, "taken": [214, 249, 250], "eval_harness_nam": 214, "__name__": 214, "num_fewshot": 214, "shot": 214, "context": [214, 219], "batch": [214, 221, 244, 354, 376, 384, 402, 403, 405, 412], "cuda": [214, 375], "run": [214, 237, 244, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 364, 375, 395, 411, 412, 418], "bool": [214, 222, 223, 230, 244, 247, 249, 250, 251, 351, 352, 353, 354, 364, 377, 383, 398, 399, 414, 415], "whether": [214, 222, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 370, 383, 385, 391, 411, 426], "cach": [214, 230, 352, 390, 400, 403, 404, 405, 411], "test": [214, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 374, 376, 378, 381, 393, 395, 409, 411, 412], "bootstrap": 214, "statist": 214, "dictionari": [214, 234, 244], "descript": [214, 244, 374, 375, 377, 385, 407, 414, 415, 417, 418], "task_nam": [214, 388, 389], "relev": [214, 376, 395], "suit": [214, 395], "provid": [214, 221, 222, 225, 230, 237, 238, 244, 249, 250, 254, 256, 345, 363, 364, 376, 378, 379, 380, 383, 392, 395, 396, 399, 404, 406, 414, 418], "autocausallm": 216, "pretrain": [216, 249, 250, 383, 395], "causal": [216, 250, 375], "languag": [216, 249, 250, 345, 373, 375, 376, 378, 416], "find": [216, 354, 363, 383, 386, 390, 391, 395, 402, 417], "hf": 216, "document": [216, 244, 345, 346, 374, 375, 376, 377, 380, 394, 395, 403, 405, 406, 407, 417, 418], "model_doc": 216, "auto": [216, 222, 228, 238, 375, 385, 390, 399], "automodelforcausallm": 216, "autoseq2seqlm": 216, "seq2seq": [216, 244, 249, 250], "automodelforseq2seqlm": 216, "multitokeneoscriteria": 216, "initial_decoder_input_length": 216, "criteria": [216, 415], "lambada": [218, 364], "word": [219, 249, 250, 378, 407], "predict": [219, 228, 244, 249, 250, 363, 375, 376, 377], "broad": 219, "discours": 219, "arxiv": [219, 249], "pdf": 219, "1606": 219, "06031": 219, "capabl": [219, 364, 395, 404, 407], "text": [219, 254, 345, 364, 376, 378, 389, 395, 399, 408, 413, 416], "understand": [219, 395, 400, 403], "collect": [219, 222, 364, 383, 385, 418], "narr": 219, "passag": 219, "share": [219, 244, 400], "characterist": [219, 373], "human": 219, "subject": [219, 413], "abl": [219, 405, 418], "guess": 219, "expos": [219, 398, 399], "sentenc": [219, 249, 250, 254, 364, 375, 376], "preced": 219, "succe": 219, "cannot": [219, 250, 354, 397, 403, 407, 412], "simpli": 219, "reli": 219, "local": [219, 230, 244, 383, 397, 400, 403], "keep": [219, 387, 394], "track": 219, "inform": [219, 238, 241, 344, 347, 350, 355, 361, 373, 374, 376, 377, 384, 385, 393, 395, 399, 402, 409, 410, 411, 417, 418, 419, 423], "broader": 219, "homepag": 219, "zenodo": 219, "2630551": 219, "x4xzn5nkjui": 219, "lambadastandard": 219, "standard": [219, 230], "lambadaopenai": 219, "openai": 219, "gpt": [219, 345, 375, 376, 378, 394], "github": [219, 254, 256, 374, 375, 376, 381, 382, 384, 390, 413, 419], "com": [219, 254, 256, 375, 376, 381, 382, 384, 393, 409, 413, 419], "issu": [219, 344, 363, 370, 373, 374, 376, 404, 418, 426], "131": [219, 393], "issuecom": 219, "497136199": 219, "pytorchbenchmark": 221, "executorbenchmark": 221, "refactor_batch_s": 221, "old_batch_s": 221, "batched_valu": 221, "get_example_input": [221, 364], "dataload": [221, 237, 244, 253, 364, 376], "batched_data": 221, "preprocess_model": 221, "example_input": [221, 364], "additional_cmd": 221, "jit": [221, 222, 244, 351, 352, 353, 354, 364, 368, 396, 398, 399, 402, 406, 411, 424], "trace": [221, 222, 364, 385], "benchmarkconfig": [221, 222, 364], "process": [221, 222, 228, 233, 234, 241, 244, 254, 363, 376, 378, 383, 384, 386, 387, 391, 392, 395, 397, 398, 400, 403, 404, 407, 417, 418], "raw_cmd": 221, "scriptmodul": 221, "model_name_or_path": [221, 230, 244, 254, 364, 375], "build": [221, 234, 238, 244, 363, 376, 381, 382, 394, 395, 397, 403, 404, 408, 415], "inc": [222, 230, 237, 238, 244, 389], "nncf": 222, "check_valu": 222, "src": [222, 354, 384, 399, 407, 411], "supported_typ": 222, "supported_valu": 222, "def": [222, 363, 364, 376, 383], "datatyp": [222, 378, 379], "uint8": [222, 405, 418], "_datatyp": 222, "dynamiclengthconfig": [222, 244, 380], "max_length": [222, 364, 376], "length_config": [222, 249, 250, 380], "const_rat": 222, "float": [222, 223, 238, 241, 242, 244, 247, 251, 354, 375, 377, 379, 383, 389, 398, 399, 400, 414, 415, 417, 418], "num_sandwich": 222, "length_drop_ratio_bound": [222, 224], "layer_dropout_prob": [222, 224], "layer_dropout_bound": [222, 224], "dynamic_train": 222, "load_store_fil": 222, "evo_it": 222, "30": [222, 395, 401], "population_s": 222, "20": [222, 364, 376, 381, 384, 389, 393, 401, 408, 409], "mutation_s": 222, "mutation_prob": [222, 225], "crossover_s": 222, "num_cpu": 222, "48": [222, 393, 394, 409], "distributed_world_s": 222, "latency_constraint": 222, "evo_eval_metr": 222, "eval_f1": [222, 225, 380, 414, 418], "dynam": [222, 227, 244, 390, 392, 395, 396, 398, 402, 404, 411, 425], "adapt": [222, 345, 373, 376, 395], "maximum": [222, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 392, 393, 409, 418], "drop": [222, 224, 378, 404, 407, 414], "ratio": [222, 224, 225, 241, 377, 409, 411, 414, 415, 417], "sandwich": 222, "num": [222, 363, 375, 385, 397, 399, 405], "train": [222, 228, 234, 237, 238, 241, 244, 345, 363, 375, 376, 377, 380, 410, 417], "dropout": [222, 224], "probabl": [222, 224, 363, 395, 404], "evolut": [222, 226, 227, 378], "popul": [222, 225], "mutat": [222, 225], "crossov": [222, 225], "distribut": [222, 253, 363, 377, 395, 404, 418, 419], "world": 222, "latenc": [222, 363, 364, 376, 378, 385, 393, 400, 418], "constraint": [222, 225, 418], "metric": [222, 227, 228, 234, 238, 244, 246, 363, 376, 380, 422], "quantizationconfig": [222, 237, 238, 244, 376, 380], "approach": [222, 234, 236, 375, 377, 378, 380, 399, 400], "posttrainingstat": [222, 378, 379, 380, 418], "basic": [222, 234, 250, 253, 376, 381, 390, 403], "timeout": [222, 418], "max_trial": [222, 363, 418], "100": [222, 244, 249, 250, 376, 395, 411, 418], "config_fil": 222, "sampling_s": 222, "use_bf16": 222, "recip": [222, 244, 375, 386, 415], "earli": [222, 418], "combin": [222, 244, 363, 386, 391, 395, 398, 399, 418], "decid": [222, 402, 418], "exit": [222, 418], "time": [222, 385, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 418], "evalu": [222, 225, 228, 234, 237, 238, 241, 244, 363, 377, 385, 395, 405, 414, 415, 417, 418], "accuraci": [222, 228, 244, 363, 377, 378, 380, 394, 403, 411, 414, 415, 417], "notraineroptim": [222, 237, 377, 417, 418], "guarante": [222, 418], "mani": [222, 224, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 385, 387, 398, 400, 401, 404, 406, 411], "sampl": [222, 224, 244, 254, 363, 364, 375, 376, 380, 393, 405, 418], "neural_compressor": [222, 237, 244], "smooth_quant": 222, "smooth": 222, "smooth_quant_arg": 222, "fast_bias_correct": 222, "correct": [222, 373, 387, 391, 395, 405], "weight_correct": 222, "gemm_to_matmul": 222, "graph_optimization_level": 222, "disable_al": 222, "enable_bas": 222, "enable_extend": 222, "enable_al": 222, "first_conv_or_matmul_quant": 222, "last_conv_or_matmul_quant": 222, "pre_post_process_quant": 222, "postprocess": 222, "add_qdq_pair_to_weight": 222, "qdq": [222, 244, 379, 388], "vaild": 222, "onnxrt_trt_ep": 222, "optypes_to_exclude_output_qu": 222, "optyp": 222, "dedicated_qdq_pair": 222, "dedic": 222, "pruningconfig": [222, 380], "epoch": [222, 241, 417], "epoch_rang": [222, 242], "initial_sparsity_ratio": [222, 242], "target_sparsity_ratio": [222, 242, 380, 417], "97": [222, 242, 409, 417], "pruner_config": [222, 380, 417], "pruner": [222, 227, 242, 244, 377, 417], "prune": [222, 227, 237, 238, 240, 244, 249, 250, 345, 376, 422], "goal": [222, 244, 417], "behavior": [222, 244, 373, 374, 377, 395, 397, 398, 403, 417, 418], "nlp": [222, 244, 254, 256, 345, 375, 376, 378, 380, 384, 417, 418], "wil": 222, "basicmagnitud": [222, 242, 378, 380, 417], "typel": 222, "init_prune_config": 222, "init": [222, 228, 237, 238, 240, 252, 253, 363, 382, 384, 399], "distillationconfig": [222, 244, 380], "criterion": [222, 223, 238, 247, 380, 414, 418], "distil": [222, 227, 228, 237, 238, 244, 375, 376, 389, 422], "inc_config": 222, "knowledgeloss": [222, 223, 377], "tfdistillationconfig": [222, 363], "loss_typ": [222, 223, 363, 377], "loss_weight": [222, 363], "train_step": [222, 363], "temperatur": [222, 223, 254, 363, 375, 377], "loss": [222, 244, 249, 250, 363, 375, 377, 418], "knowledgedistillationloss": [222, 377], "flashdistillationconfig": 222, "block_nam": [222, 363], "layer_mappings_for_knowledge_transf": [222, 363], "add_origin_loss": [222, 223, 363, 377], "flash": [222, 228, 244], "autodistillationconfig": [222, 363], "search_spac": [222, 234, 363], "search_algorithm": [222, 363], "bo": [222, 363, 413], "knowledge_transf": [222, 363], "regular_distil": [222, 363], "disil": 222, "space": [222, 228, 234, 244, 363, 373, 374, 386, 395, 397, 400], "bayesian": [222, 363], "architectur": [222, 228, 234, 238, 244, 249, 250, 363, 376, 381, 397, 404, 406], "candid": 222, "trial": [222, 244], "random": [222, 249, 363, 395, 404], "knowledg": [222, 244, 345, 363, 375, 376], "transfer": [222, 244, 253, 377], "stage": [222, 228, 244, 363], "autodistil": [222, 228, 238, 244, 422], "regular": [222, 228, 417], "nasconfig": [222, 234, 236], "parser": 222, "procedur": [222, 411], "backend": [222, 244, 252, 364, 376, 378, 380, 381, 382, 383, 386, 388, 391, 392, 396, 411, 418], "warmup": [222, 364, 386, 392], "cores_per_inst": [222, 244, 364], "num_of_inst": [222, 244, 364], "benchmark": [222, 227, 244, 245, 376, 386, 393, 396, 409, 412, 422], "skip": [222, 364, 400, 412], "core": [222, 364, 384, 393, 394, 395, 397, 403, 404, 409, 412, 413], "enabl": [222, 364, 379, 380, 393, 395, 397, 403, 404, 408, 409], "prunerv2": 222, "target_spars": 222, "pruning_typ": 222, "op_nam": 222, "excluded_op_nam": 222, "start_step": 222, "end_step": 222, "pruning_scop": 222, "pruning_frequ": 222, "min_sparsity_ratio_per_op": 222, "max_sparsity_ratio_per_op": 222, "sparsity_decay_typ": 222, "pruning_op_typ": 222, "reg_typ": [222, 399], "criterion_reduce_typ": 222, "resume_from_pruned_checkpoint": 222, "similiar": 222, "weightpruningconfig": 222, "pruning_config": [222, 237, 238, 244, 380, 417], "snip_momentum": 222, "4x1": [222, 385, 397, 407], "global": 222, "98": [222, 409], "exp": [222, 399, 406, 411], "linear": [222, 363, 377, 399, 402, 405], "ce": [223, 363, 377], "loss_weight_ratio": [223, 377], "layer_map": [223, 377], "distillationcriterionmod": 223, "restor": [224, 378], "sample_length_configur": 224, "max_seq_length": [224, 225], "num_hidden_lay": 224, "layer_config": [224, 249, 250], "length_drop_prob": 224, "length_drop_ratio": 224, "min_length": 224, "hidden": [224, 249, 250, 363, 400], "truncat": [224, 376], "less": [224, 364, 377, 386, 395, 403, 407, 417], "min": [224, 244, 418], "sample_layer_configur": 224, "layer_dropout": 224, "depend": [224, 234, 374, 382], "paramat": 224, "bound": 224, "kept": [224, 395], "evolust": 225, "evolustionari": 225, "approx_ratio": 225, "12": [225, 381, 382, 385, 393, 394, 401, 405, 408, 409, 411], "l": [225, 363, 377, 394, 395], "384": [225, 363, 386, 393, 409], "approxim": [225, 406], "invers": [225, 406], "store2str": 225, "gene": 225, "mac": 225, "score": [225, 249, 250, 416], "parent": 225, "parmat": 225, "lower_constraint": 225, "upper_constraint": 225, "eval_metr": 225, "evolutionari": [225, 244], "load_stor": 225, "store_fil": 225, "save_stor": 225, "get_stor": 225, "set_lower_constraint": 225, "setter": [225, 249, 250], "lower": [225, 254, 395, 407, 415, 418], "set_upper_constraint": 225, "upper": [225, 399], "save_popul": 225, "population_fil": 225, "convex_hul": 225, "pareto_fronti": 225, "add_gen": 225, "rai": 225, "packag": [226, 229, 345, 375, 376], "drop_and_restore_util": [226, 227], "mixtur": 227, "auto_distil": [227, 229, 363], "basic_na": [227, 235], "get_throughput": [227, 246], "utility_tf": [227, 246], "optimizer_tf": 227, "trainer": [227, 237, 361, 376, 378, 379, 380], "handl": [228, 244, 249, 250, 344, 352, 363, 390, 401, 402], "model_build": [228, 234, 238, 244, 363], "conf_fname_or_obj": [228, 234, 236], "design": [228, 244, 383, 395, 398, 399, 410, 422], "three": [228, 241, 242, 243, 244, 363, 376, 383, 387, 391, 405, 406, 417, 418], "major": [228, 244, 363, 397, 403, 404, 406, 407, 418], "explor": [228, 244, 363, 380], "compress": [228, 244, 345, 363, 377, 380, 397, 401, 403, 407, 410, 418], "discov": [228, 244, 363], "potenti": [228, 244, 354, 363, 374, 395, 404], "measur": [228, 244, 363, 364, 377, 396, 414, 415, 417, 418], "hardwar": [228, 244, 363, 374, 377, 408, 410], "select": [228, 244, 249, 250, 363, 395, 399, 411], "best": [228, 234, 244, 363, 373, 378, 395], "res_save_path": [228, 234], "model_cl": [228, 238, 244, 363], "found": [228, 234, 376, 382, 383, 407], "estim": [228, 234, 385, 407], "load_search_result": 228, "init_by_cfg": [228, 234], "create_distil": 228, "optimizedmodel": 230, "from_pretrain": [230, 249, 250, 364, 376, 380, 416], "function": [230, 234, 237, 238, 241, 244, 351, 352, 353, 363, 377, 383, 386, 387, 390, 391, 392, 395, 398, 399, 411, 414, 417, 418], "classmethod": [230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "intel": [230, 254, 344, 364, 374, 380, 382, 383, 384, 393, 394, 397, 408, 409, 413, 415, 416, 417, 418, 419], "compressor": [230, 233, 238, 345, 364, 376, 415, 418], "repositori": [230, 376], "hug": [230, 345, 376, 388], "face": [230, 345, 346, 373, 376, 388], "hub": [230, 416], "directori": [230, 237, 388, 410], "host": 230, "cache_dir": 230, "download": [230, 249, 250, 419], "force_download": 230, "forc": 230, "resume_download": 230, "incomplet": 230, "attempt": 230, "resum": [230, 244], "revis": 230, "branch": [230, 411], "tag": 230, "commit": [230, 373, 412], "sinc": [230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 377, 403, 404, 406], "git": [230, 375, 376, 381, 382, 384], "system": [230, 376, 382], "artifact": 230, "huggingfac": [230, 254, 376, 389, 414, 416], "allow": [230, 364, 395], "q_model": 230, "incencod": 233, "incdecod": 233, "pretrainedconfig": 233, "basicna": 234, "conf_fnam": 234, "obj": [234, 236], "execut": [234, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352, 363, 376, 386, 390, 396, 398, 399, 403, 404, 406, 408, 411, 412, 418], "common": [236, 373, 376, 418], "nasbas": 236, "orchestr": [237, 244], "orchestrate_optim": [237, 244], "compon": [237, 244, 398, 413], "experiment": [237, 244, 394, 399], "eval_func": [237, 238, 244, 363], "train_func": [237, 238, 244, 363], "saved_result": [237, 376], "aggreg": 237, "fit": [237, 400], "schedul": [237, 244, 363, 368, 396, 424], "save_model": [237, 253, 376], "json": [237, 254, 375], "pytorch_model": 237, "init_quant": [237, 238, 244, 398], "quant_config": [237, 238, 244, 376, 380, 418], "calib_func": 237, "calib_dataload": [237, 244], "prepar": [237, 238, 249, 250, 375, 385, 387, 390, 398, 399, 407, 418], "invok": [237, 238], "_inc_quant": 237, "calibr": [237, 244, 418], "init_prun": [237, 238, 244], "init_distil": [237, 238, 244], "distillation_config": [237, 238, 244, 377, 380], "teacher_model": [237, 238, 244, 363, 377, 380], "teacher": [237, 238, 363, 377, 378], "tfoptim": [238, 363, 377], "pretrainedmodel": [238, 244, 363], "training_args_tf": 238, "tftrainingargu": 238, "train_dataset": [238, 363, 376, 380], "eval_dataset": [238, 363, 376, 380], "compute_metr": [238, 363, 376], "task_typ": [238, 253], "task_id": [238, 253], "techniqu": [238, 376, 378, 380, 395, 418], "builtin_eval_func": [238, 244], "saved_model": 238, "quantized_model_path": 238, "larger": [238, 244, 395], "model_builder_builtin": [238, 244, 363], "arch_para": [238, 244], "built": [238, 363, 395, 415], "builder": [238, 363], "autodistillation_config": [238, 244, 363], "build_train_func": 238, "infer_framework_load_model": 239, "autoconfig": [239, 376, 380, 416], "model_class": 239, "model_kwarg": [239, 249, 250, 416], "config_file_path": 241, "pruner_info": 241, "update_config": 241, "current": [241, 242, 243, 385, 394, 395, 398, 399, 400, 402, 403, 405, 410, 411], "get_sparsity_ratio": 241, "elementwise_over_matmul_gemm_conv": 241, "elementwise_over_al": 241, "blockwise_over_matmul_gemm_conv": 241, "block": [241, 249, 250, 378, 392, 397, 400, 401, 402, 403, 404, 406, 407, 417], "on_train_begin": 241, "implement": [241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 368, 376, 383, 386, 387, 391, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 408, 411, 424], "begin": [241, 250, 363, 395, 398, 399], "ensur": [241, 395, 403], "on_epoch_begin": 241, "on_step_begin": 241, "local_step": 241, "on_before_optimizer_step": 241, "on_step_end": 241, "on_epoch_end": 241, "on_train_end": 241, "phase": [241, 377, 417], "on_before_ev": 241, "on_after_ev": 241, "on_after_optimizer_step": 241, "pruningmod": 242, "prunerconfig": [242, 380], "update_frequ": 242, "prune_typ": [242, 380, 417], "per_tensor": 242, "quantizationmod": 243, "easili": [244, 397, 398], "finetun": [244, 376, 378, 380, 416], "basetrain": 244, "builtin_train_func": 244, "automativ": 244, "low": [244, 376, 380, 395, 397, 404, 406, 415, 418, 427], "achiev": [244, 376, 395, 400, 415], "pruningconf": 244, "smaller": [244, 377, 395, 417], "config_list": 244, "optimizt": 244, "create_optimizer_builtin": 244, "resume_from_checkpoint": 244, "optuna": 244, "ignore_keys_for_ev": 244, "tor": 244, "checkpoint": [244, 249], "present": [244, 249, 406], "state": [244, 249, 250, 376, 393, 395, 409], "hyperparamet": [244, 363, 395], "dure": [244, 384, 392, 395, 403, 407, 412, 415, 417, 418], "hide": [244, 249, 250], "deprec": [244, 249, 250], "training_step": 244, "inject": [244, 395, 399], "being": [244, 395], "fed": 244, "most": [244, 376, 387, 391, 392, 395, 398, 399, 400, 403, 405, 416], "expect": [244, 249, 250, 373, 374, 395, 407, 415], "label": [244, 249, 250, 254, 375, 412, 416], "accept": [244, 373, 416], "training_step_length_adapt": 244, "compute_loss": 244, "return_output": 244, "By": [244, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 395], "nas_config": 244, "baseic": 244, "callabel": 244, "auto_distil_evaluation_loop": 244, "prediction_loss_onli": 244, "ignore_kei": 244, "metric_key_prefix": 244, "eval": [244, 363, 414], "trainer_util": 244, "evalloopoutput": 244, "doe": [244, 383, 398, 399, 400, 401, 402, 405, 411], "huge": 244, "prefix": [244, 411], "export_to_onnx": [244, 376, 379], "tranfer": 244, "paramert": 244, "export_to_fp32_onnx": 244, "save_path": [244, 379], "opset_vers": [244, 379], "14": [244, 379, 393, 401, 408, 409], "do_constant_fold": [244, 379], "verbos": [244, 379, 395], "export": [244, 376, 385, 388, 416, 422], "fold": [244, 411], "export_to_bf16_onnx": 244, "export_to_int8_onnx": 244, "quant_format": [244, 379], "s8s8": [244, 379, 403], "sample_s": 244, "calibrate_method": 244, "minmax": 244, "scale_map": [244, 376], "export_to_jit": 244, "set_dynamic_config": [244, 380], "dynamic_config": [244, 380], "run_evolutionary_search": 244, "nlptrainer": [244, 376, 377, 380, 417, 418], "nlpseq2seqtrain": 244, "special": [245, 399, 405], "trigger": [245, 374, 395], "greater_is_bett": [247, 251, 363, 380, 414, 415, 418], "is_rel": [247, 380, 414, 418], "01": [247, 380, 409, 414, 418], "weight_ratio": [247, 251, 414, 415, 418], "modeling_bert_dynam": 248, "modeling_roberta_dynam": 248, "bert": [249, 363, 376, 377, 378, 384, 385, 386, 389, 391, 392, 393, 398, 403, 404, 405, 406], "load_tf_weights_in_bert": 249, "tf_checkpoint_path": 249, "bertembed": [249, 250], "posit": [249, 250, 373, 376, 380, 386, 391, 395, 411, 416], "token_typ": 249, "forward": [249, 250, 363, 385, 390, 418], "longtensor": [249, 250], "token_type_id": [249, 250, 392], "position_id": [249, 250], "inputs_emb": [249, 250], "floattensor": [249, 250], "past_key_values_length": [249, 250], "bertselfattent": 249, "position_embedding_typ": [249, 250], "transpose_for_scor": [249, 250], "hidden_st": [249, 250], "attention_mask": [249, 250, 392], "head_mask": [249, 250], "encoder_hidden_st": [249, 250], "encoder_attention_mask": [249, 250], "past_key_valu": [249, 250], "output_attent": [249, 250], "bertselfoutput": 249, "bertattent": 249, "prune_head": [249, 250], "bertintermedi": 249, "intermedi": [249, 363, 383, 388, 391, 407, 418], "bertoutput": 249, "bertlay": 249, "output_length": [249, 250], "always_keep_cls_token": [249, 250], "feed_forward_chunk": [249, 250], "attention_output": [249, 250], "feed": [249, 250, 377, 384], "chunk": 249, "bertencod": 249, "use_cach": [249, 250], "output_hidden_st": [249, 250], "return_dict": [249, 250], "modeling_output": [249, 250], "basemodeloutputwithpastandcrossattent": [249, 250], "bertpool": 249, "pooler": [249, 250], "bertpredictionheadtransform": 249, "bertlmpredictionhead": 249, "bertonlymlmhead": 249, "mask": [249, 250, 354, 378, 398, 399, 401, 403, 406], "sequence_output": 249, "bertonlynsphead": 249, "pooled_output": 249, "bertpretraininghead": 249, "bertpretrainedmodel": 249, "abstract": [249, 250], "simpl": [249, 250, 376, 381, 384, 394, 398, 406, 416], "bertforpretrainingoutput": 249, "bertforpretrain": 249, "sum": [249, 364, 377, 385, 404, 406, 407, 411], "classif": [249, 250, 345, 363, 376, 377, 378, 389, 416], "prediction_logit": [249, 250], "sequence_length": [249, 250], "vocab_s": [249, 250], "vocabulari": 249, "seq_relationship_logit": 249, "continu": [249, 395, 397, 400, 404, 405], "hidden_s": [249, 250, 363], "plu": 249, "num_head": [249, 250], "averag": [249, 364, 376, 385], "bertmodel": 249, "add_pooling_lay": [249, 250], "behav": [249, 250], "well": [249, 250, 379, 418, 419], "case": [249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 377, 378, 385, 386, 392, 395, 397, 399, 400, 401, 411, 412], "cross": [249, 250], "ad": [249, 250, 383, 387, 391, 395, 398, 407, 411, 416], "describ": [249, 250, 353, 375, 400, 402, 405, 411, 414, 415], "ab": [249, 418], "1706": [249, 393, 409], "03762": 249, "ashish": [249, 250], "vaswani": [249, 250], "noam": [249, 250], "shazeer": [249, 250], "niki": [249, 250], "parmar": [249, 250], "jakob": [249, 250], "uszkoreit": [249, 250], "llion": [249, 250], "jone": [249, 250], "aidan": [249, 250], "gomez": [249, 250], "lukasz": [249, 250], "kaiser": [249, 250], "illia": [249, 250], "polosukhin": [249, 250], "is_decod": [249, 250], "add_cross_attent": [249, 250], "get_input_embed": [249, 250], "getter": [249, 250], "set_input_embed": [249, 250], "set_length_config": [249, 250], "set_output_attent": [249, 250], "basemodeloutputwithpoolingandcrossattent": [249, 250], "pad": [249, 250, 364, 376, 385, 403, 407, 411], "indic": [249, 250, 354, 391, 398, 399, 405, 407, 411, 414], "n_layer": [249, 250], "embed_size_per_head": [249, 250], "precomput": [249, 250], "speed": [249, 250, 383, 387, 395], "decoder_input_id": [249, 250], "those": [249, 250, 405, 417, 418], "instead": [249, 250, 395, 400], "get_output_embed": [249, 250], "set_output_embed": [249, 250], "new_embed": [249, 250], "next_sentence_label": 249, "docstr": [249, 250], "legaci": [249, 250], "berttoken": 249, "uncas": [249, 363, 376, 378, 380, 388, 416], "hello": [249, 250, 395], "my": [249, 250], "dog": [249, 250], "cute": [249, 250], "return_tensor": [249, 250, 364, 376, 380], "pt": [249, 250, 364, 376, 380, 416], "bertlmheadmodel": 249, "causallmoutputwithcrossattent": [249, 250], "prepare_inputs_for_gener": [249, 250], "bertformaskedlm": 249, "maskedlmoutput": [249, 250], "bertfornextsentencepredict": 249, "nextsentencepredictoroutput": 249, "prompt": 249, "itali": 249, "pizza": 249, "serv": 249, "formal": 249, "restaur": 249, "unslic": 249, "next_sent": 249, "sky": 249, "blue": 249, "shorter": [249, 395], "wavelength": 249, "light": 249, "logit": [249, 250, 363, 376, 377, 380, 384], "wa": 249, "bertforsequenceclassif": 249, "sequenceclassifieroutput": [249, 250], "regress": [249, 250, 375], "num_label": [249, 250, 376, 380], "entropi": [249, 250, 363, 395], "bertformultiplechoic": 249, "choic": [249, 250, 378, 392], "multiplechoicemodeloutput": [249, 250], "num_choic": [249, 250], "dimens": [249, 250, 363, 377, 386, 402, 403, 405, 407, 411], "bertfortokenclassif": 249, "tokenclassifieroutput": [249, 250], "bertforquestionansw": 249, "question": [249, 373, 374, 376, 378, 401], "answer": [249, 250, 373, 378], "start_posit": [249, 250], "end_posit": [249, 250], "questionansweringmodeloutput": [249, 250], "span": [249, 250], "clamp": [249, 250], "account": [249, 250, 373], "expand_gath": [249, 250], "dim": [249, 250, 384, 390, 397, 403, 407, 411], "roberta": [250, 378], "robertaembed": 250, "tini": [250, 378], "tweak": 250, "create_position_ids_from_inputs_emb": 250, "directli": [250, 395, 398, 401, 404], "sequenti": [250, 387, 398, 399, 402], "robertaselfattent": 250, "robertaselfoutput": 250, "robertaattent": 250, "attenion": 250, "robertaintermedi": 250, "intermidi": 250, "robertaoutput": 250, "robertalay": 250, "robertaencod": 250, "roberata": 250, "robertapool": 250, "robertapretrainedmodel": 250, "update_keys_to_ignor": 250, "del_keys_to_ignor": 250, "robertamodel": 250, "_": [250, 363, 375, 377, 382, 383, 384, 385, 386, 387, 388, 390, 391, 395, 396, 397, 398, 399, 403, 404, 405, 406, 411, 414, 415, 416, 417, 418], "robertaforcausallm": 250, "robertatoken": 250, "robertaconfig": 250, "robertaformaskedlm": 250, "robertalmhead": 250, "featur": [250, 345, 363, 372, 374, 376, 377, 388, 391, 394, 397, 404, 408, 416, 419, 428], "robertaforsequenceclassif": 250, "robertaformultiplechoic": 250, "robertafortokenclassif": 250, "robertaclassificationhead": 250, "robertaforquestionansw": 250, "quanstion": 250, "create_position_ids_from_input_id": 250, "padding_idx": 250, "non": [250, 395, 402, 405, 407, 411, 412], "symbol": 250, "fairseq": 250, "make_posit": 250, "models": [251, 378, 415], "distributed_init": [252, 253], "gloo": 252, "world_siz": 252, "rank": [252, 395], "init_method": 252, "master_addr": 252, "127": [252, 385, 408, 409, 418], "master_port": 252, "12345": 252, "distibut": 252, "tfdataload": 253, "worker_address": 253, "worker": 253, "address": [253, 345, 373, 398, 403, 404], "treat": [253, 383], "chief": 253, "get_filepath": 253, "base_dirpath": 253, "folder": [253, 382, 383, 384, 385, 386, 388], "keras2savedmodel": 253, "kera": 253, "augment": [254, 256, 422], "extens": [254, 374, 380, 382, 383, 384, 413, 415, 416, 417, 419], "blob": 254, "md": [254, 385, 388], "dataaugment": [254, 375], "augmenter_typ": [254, 375], "wai": [254, 376, 385, 386, 387, 391, 394, 395, 397, 399, 405, 408], "enhanc": [254, 380, 402], "textgenerationaug": [254, 375], "keyboardaug": [254, 375], "aug": [254, 345, 375], "input_dataset": [254, 375], "origin_data": 254, "output_path": [254, 375, 394], "join": [254, 375], "result_path": [254, 375], "test1": [254, 375], "cv": [254, 375], "augmenter_argu": [254, 375], "gpt2": [254, 375], "medium": [254, 345, 375, 376, 412], "data_aug": [254, 375], "text_generation_augment": 254, "raw_dataset": [254, 375, 376, 380], "No": [254, 378], "glue": [254, 375, 376], "sst2": [254, 364, 375, 376, 378, 385, 389], "eo": [254, 375, 395], "k": [254, 354, 375, 386, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411], "p": [254, 375, 376, 394], "top_p": [254, 395], "effect": [254, 345, 375, 376, 383, 395, 411], "tend": 254, "toward": [254, 373], "greedi": 254, "repetition_penalti": 254, "primarili": [254, 395], "ctrl": [254, 375, 378, 395], "num_return_sent": 254, "entir": [254, 385, 397, 403, 404, 417], "num_sampl": 254, "condit": [254, 375, 386, 387, 413], "stop_token": 254, "mit_data_augment": 254, "nlpaug": [254, 256, 375], "librari": [254, 256, 368, 374, 398, 399, 424], "help": [254, 256, 375, 376, 391, 395, 398, 410], "machin": [254, 256, 375, 411], "learn": [254, 256, 345, 375, 388, 395, 399, 415, 418], "project": [254, 256, 373, 374, 375, 394], "makcedward": [254, 256], "suffix": 254, "csv": [254, 375], "column_nam": 254, "sentence1": 254, "sentence2": 254, "data_augment": [255, 375], "augmentertyp": 256, "get_augmenter_from_typ": 256, "aug_typ": 256, "augment_typ": 256, "testaddclstoken": 258, "methodnam": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "runtest": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "whose": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 391], "singl": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 394, 400, 405], "itself": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 408], "place": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 392, 399, 404, 417], "fixtur": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "testcas": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "constructor": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 390], "author": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 413], "deconstruct": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "setup": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "teardown": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "__init__": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383], "alwai": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 391, 395, 403, 412], "chang": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 374, 383, 394, 395, 397, 398, 407, 412, 413], "signatur": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "failureexcept": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "determin": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373, 386, 395, 408], "except": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 386, 395, 398], "rais": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 395], "fail": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "deem": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373], "longmessag": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "long": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 391], "messag": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 395], "includ": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352, 353, 354, 373, 374, 376, 378, 384, 385, 386, 395, 396, 399, 407, 411, 413, 418], "repr": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "print": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 391, 395], "failur": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "explicit": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352, 373, 390, 399], "maxdiff": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "diff": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "difflib": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "look": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 383, 385, 395, 399, 400], "individu": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 373], "setupclass": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "hook": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "teardownclass": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "testaddembed": 259, "testtorchop": [260, 263, 266, 268, 269, 270, 275, 278, 282, 283, 292, 293, 295, 297, 298, 304, 308, 311, 313, 322, 323, 324, 327, 332, 337], "testattentionreshap": [261, 262, 317, 320], "testtorchmodel": [264, 284], "testbinaryop": 265, "testcastto": 267, "testconvreshap": 271, "testdecoderattnreshap": 272, "testdispatchertuningacc": 273, "testdispatchertuningthroughput": 274, "testdynamicquant": 276, "testelectra": 277, "testembeddingbag": 279, "testexecutionopt": [280, 286], "testfwk": 281, "testgraphdispatch": 285, "testinsertinputouputdata": 287, "testissupportedonnxgraph": 288, "testlastlayershap": 289, "testlayernormwithreducemean": [290, 319, 321], "testlayernormwithtranspos": 291, "testtorchlinear": [294, 334], "testmain": 296, "testmatmulwithbiasrelu": 299, "testmatmulwithbiassigmoid": 300, "testmatmulwithbiastanh": 301, "testmergedembeddingbag": 302, "testonnxutil": 305, "testoperatoradaptor": 306, "testop": 307, "testpaddingsequ": 309, "testpatterndispatch": 310, "testpositionembed": 312, "testprimitivecacheacc": 314, "testprimitivecachethroughput": 315, "testqkvmerg": 316, "testquantonnxexecut": 318, "teststartendlogit": 325, "testscbuff": 326, "testtextencod": 328, "testtextencoderbf16": 329, "testtfutil": 330, "testtokentypeembed": 331, "testtransposebatchmatmul": 333, "testunet": 335, "testunetbf16": 336, "testvaedecod": 338, "testvaedecoderbf16": 339, "testweightsharingacc": 340, "testweightsharingdispatchertuningacc": 341, "testweightsharingdispatchertuningthroughput": 342, "testweightsharingthroughput": 343, "center": 344, "guidelin": 344, "innov": [345, 376], "toolkit": [345, 376, 378], "particular": 345, "4th": [345, 376], "xeon": [345, 376, 378, 381, 397, 406, 409, 413, 418], "scalabl": [345, 376, 378, 381, 398], "processor": [345, 376, 378, 381, 393, 409], "sapphir": [345, 376, 381], "rapid": [345, 376, 381], "codenam": 345, "seamless": [345, 376, 395], "experi": [345, 373, 376, 395, 401, 406, 407], "extend": [345, 376, 400], "leverag": [345, 363, 376, 377, 380, 395], "advanc": [345, 363, 373, 376, 396, 408], "softwar": [345, 376, 413], "uniqu": [345, 376], "awar": [345, 376], "runtim": [345, 354, 376, 408, 411, 418], "releas": [345, 376, 423], "neurip": [345, 376], "2022": [345, 376, 393, 409], "paper": [345, 376, 380], "distilbert": [345, 363, 376, 378, 380, 388, 416], "quala": [345, 376, 378, 380], "minilm": [345, 376, 378, 380], "2021": [345, 376], "onc": [345, 376, 385, 395, 406], "pre": [345, 376, 387, 400, 410], "diffus": [345, 376, 378, 403], "j": [345, 376, 378, 382, 383, 384, 394, 396, 402, 407, 408, 411], "6b": [345, 376, 378], "neox": [345, 376, 394], "bloom": [345, 376], "176b": [345, 376], "t5": [345, 376, 378], "flan": [345, 376], "workflow": [345, 376, 377, 386, 388, 405], "setfit": [345, 376], "sentiment": [345, 376], "analysi": [345, 376], "dlsa": [345, 376], "neuralchat": [345, 376], "chatbot": [345, 376], "through": [345, 364, 376, 383, 398, 401, 402, 403, 408], "effici": [345, 376, 380, 392], "peft": [345, 376], "domain": [345, 368, 376, 395, 396, 424], "blog": [345, 376], "publish": [345, 373, 376, 413], "april": 345, "2023": [345, 413], "tech": 345, "artifici": 345, "intellig": 345, "ai": [345, 376], "With": [345, 406, 418], "mlperf": 345, "bar": 345, "5x": 345, "commun": [345, 373], "mleffici": [345, 376], "dec": [345, 376], "nov": [345, 376], "coher": [345, 395, 404], "novemb": 345, "alibaba": 345, "deep": [345, 375, 376, 388, 399, 415, 418], "purif": 345, "kernel": [346, 354, 372, 384, 385, 390, 393, 394, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 428], "namespac": [351, 352, 353, 354], "jd": [351, 352, 353, 354, 399, 411], "convent": [351, 352, 353, 354], "refactor": [351, 352, 353, 354], "engine_t": 351, "cpu_engine_t": 351, "gpu_ocl_engine_t": 351, "public": [351, 352, 353, 354, 373, 390, 398, 399], "inlin": [351, 352, 353, 398], "engine_kind": [351, 353, 399], "runtime_kind": [351, 353], "virtual": [351, 352, 353, 390, 398, 399], "get_engine_kind": 351, "get_runtime_kind": 351, "std": [351, 352, 353, 354, 396, 398, 399], "vector": [351, 352, 353, 354, 390, 396, 398, 399, 400, 402, 405, 407], "impl_list_item_t": [351, 352], "get_implementation_list": 351, "operator_desc": [351, 352, 355, 396], "op_desc": [351, 352, 396, 399], "create_kernel": 351, "shared_ptr": [351, 352, 390], "kernel_t": [351, 352], "stream_t": 351, "create_stream": 351, "create_memory_storag": 351, "memory_storage_t": 351, "protect": [351, 352], "engine_kind_": [351, 353], "runtime_kind_": [351, 353], "cpu_inst": 351, "null_inst": 351, "storag": 351, "empty_list": 351, "templat": [352, 354], "typenam": [352, 354], "arg_t": 352, "void": [352, 353, 354, 390, 396, 398, 399, 400], "proxy_bas": 352, "hpp": [352, 353, 354, 386, 396, 411], "proxi": [352, 368, 396, 424], "anyth": 352, "similar": [352, 387, 398, 401, 402, 404, 405, 417], "onednn": [352, 390], "struct": [352, 354, 398, 399], "oneapi": [352, 390, 408], "dnnl": [352, 386, 390], "136": 352, "reset_sp": 352, "sp": 352, "get_sp": 352, "create_proxy_object": 352, "result_ref": 352, "privat": [352, 353, 373, 384, 390, 397, 398, 399, 403, 404], "member": [352, 353, 354, 373, 390, 398, 399], "data_handle_": 352, "kernel_desc_proxi": 352, "kernel_desc_t": 352, "real": [352, 386, 395, 403, 404, 405, 408], "attention_desc": 352, "dynamic_quant_desc": 352, "dynamic_quant_matmul_desc": 352, "eltwiseop_desc": 352, "gather_desc": 352, "groupnorm_desc": 352, "layernorm_ba_desc": [352, 398], "layernormalized_spmm_desc": 352, "logsoftmax_desc": 352, "mha_dense_desc": 352, "slice_desc": 352, "softmax_desc": 352, "sparse_matmul_desc": [352, 396], "transpose_matmul_desc": 352, "transpose_mha_desc": 352, "kernel_kind": [352, 353, 399], "impl_list_": 352, "nullptr": [352, 354, 398], "kernel_proxi": 352, "dynamic_qu": 352, "dynamic_quant_matmul": 352, "eltwiseop": [352, 398, 399], "layernorm_ba": 352, "layernormalized_spmm": 352, "mha_dens": [352, 411], "slice": [352, 392], "sparse_matmul": [352, 408], "transpose_matmul": 352, "transpose_mha": 352, "kdp": 352, "rt_data": [352, 396], "exec_context_t": 352, "ctx": [352, 395], "size_t": [352, 354, 386, 399], "get_workspace_s": 352, "kd": [352, 363, 377], "sparse_matmul_desc_t": 352, "sparse_matmul_t": 352, "descriptor": [353, 390, 411], "ker_kind": [353, 396, 399], "kernel_prop": [353, 399], "ker_prop": [353, 396, 399], "eng_kind": [353, 396, 399], "tensor_desc": [353, 399], "ts_desc": [353, 396, 399], "unordered_map": [353, 399], "postop_attr": [353, 354, 399], "apply_postops_list": [353, 399], "rh": [353, 405], "set_binaryop_list": [353, 398], "binaryop_attr": [353, 354, 398], "binaryop_list": [353, 398], "uint64_t": 353, "impl_nthr": 353, "get_binaryop_list": [353, 398], "dim_t": [353, 354], "tensor_shap": 353, "data_typ": [353, 354, 390, 398, 399, 411], "tensor_dtyp": 353, "format_typ": 353, "tensor_ftyp": 353, "ker_kind_": [353, 399], "ker_prop_": [353, 399], "forward_infer": [353, 390, 399], "undef": [353, 354, 398, 399], "impl_nthr_": [353, 399], "ts_descs_": [353, 399], "attrs_": [353, 399], "apply_postops_list_": [353, 399], "binaryop_list_": [353, 398], "enum": [354, 398, 399], "attention_io": 354, "merge_src": 354, "merge_dst": 354, "q_weight": 354, "k_weight": 354, "v_weight": 354, "q_bia": 354, "k_bia": 354, "v_bia": 354, "q_scale": 354, "k_scale": 354, "v_scale": 354, "reshape_input": 354, "q_k_src2": 354, "q_k_scale": 354, "qk_v_output_zero_point": 354, "qk_v_output_scal": 354, "ssd": [354, 399, 411], "eltwiseop_param_t": [354, 399], "element_num": [354, 399], "in_dt": 354, "out_dt": 354, "element_num_each_th": 354, "remain_el": 354, "eltwiseop_data_t": 354, "dst": [354, 390, 398, 399, 401, 402, 403, 406, 407, 411], "doxygenfil": 354, "gather_typ": 354, "spec_translnorm_typ": 354, "direct": 354, "layernorm_ba_param_t": 354, "input_dt": [354, 398, 411], "output_dt": [354, 411], "output2_dt": 354, "spec_typ": [354, 411], "row_num": 354, "col_num": 354, "process_col": [354, 398], "direct_process_row": 354, "process_batch_per_k": 354, "ker_per_batch": 354, "batch_num": 354, "thread_elt_offset": [354, 398], "split_output": 354, "layernorm_ba_data_t": 354, "dst2": 354, "process_row": 354, "anonym": 354, "ep": 354, "1e": 354, "matmul_param_t": 354, "m_tile": 354, "n_tile": 354, "matmul_fp8_param_t": 354, "bfloat16_t": 354, "weight_bf16": 354, "int8_t": 354, "weight_int8": 354, "float8_e4m3_t": 354, "weight_f8_e4m3": 354, "float8_e5m2_t": 354, "weight_f8_e5m2": 354, "uint8_t": [354, 398, 399], "weight_8bit": 354, "weight_typ": 354, "has_scale0": 354, "has_append_sum": [354, 411], "thread_num": 354, "matmul_data_t": 354, "src0": [354, 411], "src1": [354, 385, 398, 411], "src2": [354, 398, 411], "matmul_u8_data_t": 354, "zp": [354, 398], "matmul_fp8_data_t": 354, "mata": 354, "matb": 354, "matc": 354, "matd": 354, "mate": 354, "astep": 354, "bstep": 354, "cstep": 354, "dstep": 354, "kpo": 354, "matmul_input": 354, "scale0": 354, "zp0": 354, "append_sum": 354, "matmul_io_max": 354, "matmul_io": 354, "dst0": 354, "matmul_output": 354, "mean_var_reduce_param_t": 354, "bm": 354, "bn": 354, "mean_var_reduce_data_t": 354, "mean_in": 354, "var_in": 354, "mean_out": 354, "var_out": 354, "spec_softmax_typ": 354, "lut": [354, 396, 398, 399, 411], "softmax_param_t": 354, "sepc_typ": 354, "scalar_num": 354, "vec_align_len": 354, "vec_tail_len": 354, "vec_num_per_thr": 354, "vec_num_tail_thr": 354, "get_lut_exp_attr": 354, "softmax_data_t": 354, "tmp": [354, 399, 401, 403, 406], "process_vec_num": 354, "typedef": 354, "amx_params_t": 354, "amx_bf16_params_t": 354, "amx_int8_params_t": 354, "amx_inputs_t": 354, "amx_bf16f32_inputs_t": 354, "amx_bf16bf16_inputs_t": 354, "sparse_schem": 354, "scenario": [354, 375, 403], "spmm_vnni": 354, "sparse_x_dens": 354, "dense_x_spars": 354, "sparse_x_spars": 354, "subfunc_level": [354, 411], "non_kdim": 354, "kdim": 354, "subfunc_level_max": [354, 411], "variabl": [354, 384, 387, 390, 411, 412], "constexpr": 354, "wei": [354, 411], "todo": [354, 420], "yi": 354, "conflict": 354, "dst_m1": 354, "dst_m2": 354, "work_spac": 354, "vnni_param_t": 354, "spmm_type": 354, "primit": [354, 390], "jit_domain": 354, "has_bia": 354, "output_typ": [354, 385], "tile_w": 354, "sub_func": 354, "im_start": 354, "blocksiz": 354, "indptr": 354, "welford": [354, 404], "dst_t": 354, "vnni_data_t": 354, "ptr_dens": 354, "int32_t": 354, "ptr_bia": 354, "ptr_dst": 354, "ptr_scale": 354, "ptr_dst_m1": 354, "ptr_dst_m2": 354, "num_tilem": 354, "tilem": 354, "tilen": 354, "16": [354, 364, 378, 379, 384, 393, 395, 401, 402, 403, 404, 407, 408, 409, 411, 418], "blocks_per_group": 354, "64": [354, 363, 381, 385, 392, 393, 395, 403, 405, 406, 408, 409, 411], "sizeof": 354, "nnz_group": 354, "nrowptr": 354, "colidx": 354, "group_rowptr": 354, "same_src_dtyp": 354, "src_t": 354, "wgt_t": 354, "bia_t": 354, "avx512_fp32_params_t": 354, "int64_t": 354, "bsc_data_t": 354, "sparse_ptr": 354, "im_end": 354, "in_start": 354, "in_end": 354, "avx512_data_t": 354, "dens": [354, 385, 386, 391, 396, 407, 411, 417], "transpose_copy_param": 354, "srcptr": 354, "dstptr": 354, "srcstride": 354, "dststride": 354, "seq_vnni_copy_param": 354, "transpose_mha_step1_param": 354, "expsum": 354, "cfg": 354, "batchk": [354, 406], "sumstep": 354, "cbatchstep": 354, "scaleab": 354, "transpose_mha_step2_param": 354, "sumptr": 354, "transpose_mha_step3_param": 354, "scalec": 354, "zeropointc": 354, "transpose_mha_io": 354, "src_k": 354, "src_q": 354, "src_v": 354, "tmp2m": 354, "sl_pad": 354, "head_num": [354, 405, 411], "head_siz": [354, 405, 411], "seq_len": [354, 376, 384, 385, 389, 405, 411], "scale_q": 354, "scale_k": 354, "scale_v": 354, "scale_dst": 354, "zp_dst": 354, "transpose_mha_io_max": 354, "within": [363, 373, 395, 402], "arch": 363, "proposit": 363, "propos": [363, 377, 397], "promis": [363, 402, 403], "assess": 363, "128": [363, 376, 384, 385, 389, 392, 393, 394, 395, 409, 411, 418], "advisor": 363, "ever": [363, 395], "network": [363, 377, 383, 384, 385, 387, 402, 417, 418], "student": [363, 377, 378], "minim": [363, 377, 407], "done": [363, 377, 386, 403, 411, 418], "z": [363, 377, 395], "distanc": [363, 377], "euclidean": [363, 377], "kullback": [363, 377], "leibler": [363, 377], "diverg": [363, 377, 395], "term": [363, 377, 402, 405, 407, 413, 414, 415, 418], "assign": [363, 403], "cal": 363, "sloss": 363, "mismatch": 363, "512": [363, 385, 394, 395, 402, 404, 407, 409, 411], "desir": [363, 385, 395], "unmatch": 363, "agent": 363, "train_func_builtin": 363, "flash_distil": 363, "eval_func_builtin": 363, "els": [363, 364, 383, 390], "search_loop": 363, "model_arch_para": 363, "oob": 363, "246": 363, "intra_bottleneck_s": 363, "96": [363, 393, 409], "160": [363, 393, 408], "num_attention_head": 363, "intermediate_s": 363, "640": 363, "num_feedforward_network": 363, "mobilebert": [363, 377, 378], "kl": 363, "mse": 363, "best_model_arch": 363, "automodelforpretrain": 363, "higher_is_bett": 363, "10": [363, 375, 376, 381, 384, 385, 393, 395, 401, 409, 411], "42": [363, 393, 409], "500": 363, "25000": 363, "mobilebert_distil": 363, "sgd": 363, "learning_r": 363, "001": 363, "mobilebert_na": 363, "5000": 363, "partial": 363, "pylint": [363, 374], "disabl": [363, 373, 393, 395, 409, 411], "e1101": 363, "makedir": 363, "exist_ok": 363, "120": [363, 408], "240": 363, "256": [363, 385, 394, 409, 411], "eval_loss": [363, 380], "tfautomodelforsequenceclassif": 363, "inherit": [364, 377, 383, 390, 416, 417, 418], "adjust": [364, 390, 395, 418], "physic": [364, 373, 395, 405], "model_nam": [364, 416], "dataset_nam": 364, "autotoken": [364, 376, 416], "load_dataset": [364, 375, 376], "195": 364, "intel_extension_for_transform": [364, 375, 376, 377, 380, 381, 383, 384, 386, 388, 391, 392, 396, 411, 414, 415, 416, 417, 418], "summari": 364, "003": 364, "throughput": [364, 376, 393, 403], "5071": 364, "933": [364, 393], "guid": [367, 376, 377, 383, 399, 401, 423], "formerli": [368, 376, 381, 396, 424], "known": [368, 376, 395, 396, 424], "sparselib": [368, 386, 396, 424], "high": [368, 376, 384, 392, 394, 396, 403, 404, 407, 424], "assembli": [368, 396, 400, 402, 407, 408, 424], "introduc": [370, 374, 397, 398, 399, 400, 401, 403, 405, 406, 407, 418, 426], "who": [370, 373, 395, 399, 426], "might": [370, 387, 395, 426], "profil": [370, 426, 427], "intruct": [370, 426], "met": [370, 426], "request": [370, 376, 426], "interest": 373, "foster": 373, "welcom": [373, 374], "maintain": [373, 374, 376, 387, 392, 395, 419], "particip": [373, 395, 400], "harass": 373, "free": [373, 398, 411], "everyon": 373, "regardless": 373, "ag": 373, "bodi": [373, 405], "ethnic": 373, "sex": 373, "gender": 373, "express": 373, "educ": 373, "socio": 373, "econom": [373, 392], "statu": [373, 415, 418], "nation": 373, "person": 373, "appear": [373, 395], "race": 373, "religion": 373, "sexual": 373, "orient": 373, "contribut": 373, "inclus": 373, "Being": 373, "viewpoint": 373, "gracefulli": 373, "critic": 373, "focus": [373, 395], "what": [373, 398, 399, 405, 417], "show": [373, 376, 383, 384, 387, 388, 391, 395, 401, 403, 405], "empathi": 373, "unaccept": 373, "imageri": 373, "unwelcom": 373, "troll": 373, "insult": 373, "derogatori": 373, "comment": 373, "polit": 373, "attack": 373, "electron": 373, "permiss": 373, "reason": [373, 387, 390, 404], "consid": [373, 386, 395, 397, 399, 401, 412], "inappropri": 373, "profession": 373, "clarifi": 373, "appropri": [373, 383, 398, 406], "fair": 373, "action": 373, "edit": 373, "reject": 373, "wiki": 373, "align": [373, 397, 399, 407], "ban": 373, "temporarili": 373, "perman": 373, "threaten": 373, "offens": 373, "harm": [373, 407], "offici": 373, "mail": 373, "post": [373, 385, 411], "via": [373, 398, 401, 408], "social": 373, "media": 373, "act": [373, 402], "appoint": 373, "onlin": [373, 376, 404], "offlin": [373, 401, 407, 418], "event": 373, "further": [373, 380, 386, 395, 402], "abus": 373, "report": [373, 374, 376], "contact": [373, 419], "complaint": 373, "review": [373, 374], "investig": [373, 407], "circumst": 373, "team": 373, "oblig": 373, "confidenti": 373, "regard": 373, "incid": 373, "polici": [373, 423], "good": [373, 400, 401], "faith": 373, "temporari": [373, 405], "repercuss": 373, "leadership": 373, "faq": 373, "page": [373, 374, 376, 380], "improv": [374, 376, 385, 395, 398, 400, 402, 403, 407, 418], "send": 374, "style": 374, "flake8": 374, "autopep8": 374, "clean": 374, "bug": [374, 376], "fix": [374, 386, 401], "jira": 374, "ticket": 374, "xxx": [374, 376], "risk": [374, 395], "pr": [374, 411], "reproduc": [374, 395], "submit": [374, 376, 395], "reach": [374, 376, 395], "intend": [374, 395], "safe": 374, "collabor": 374, "adher": 374, "tool": [375, 376, 378, 385, 392, 396, 411], "integr": [375, 427], "lab": 375, "pip": [375, 376, 381, 383, 389, 410], "clone": [375, 376, 381, 382, 383], "itrex": [375, 376, 381, 382, 384], "cd": [375, 376, 381, 382, 383, 384, 389, 394, 396, 408, 411], "v": [375, 376, 381, 383, 405, 406], "dev": 375, "data_fil": 375, "delimit": [375, 411], "asserttru": 375, "len": [375, 383, 384, 391, 405], "column": [375, 397, 402, 404, 407, 417], "conduct": 375, "deploy": [375, 376, 380, 386, 389], "ocraug": 375, "spellingaug": 375, "contextualwordembsforsentenceaug": 375, "xl": 375, "xlnet": [375, 378], "Not": [375, 402], "rescu": 375, "natur": [375, 376, 378, 395, 404], "sst": [375, 376, 378, 380, 416], "txt": [375, 384, 386, 389, 408, 410], "w": [375, 384, 385, 386, 397, 400, 406], "fw": 375, "clm": [375, 378], "train_fil": 375, "validation_fil": 375, "model_dir": 375, "python3": [375, 382], "run_clm": 375, "do_train": 375, "do_ev": 375, "overwrite_output_dir": 375, "secondli": 375, "training_set": 375, "line": [375, 383, 386, 395, 397, 404, 405, 407, 412], "repetit": [375, 395], "penalti": [375, 394], "platform": [376, 394, 410, 418], "particularli": [376, 395], "gen": [376, 399], "imag": [376, 378, 388, 391, 401, 407], "becom": [376, 387, 392, 395, 407], "wide": [376, 377, 399, 400, 418], "art": 376, "popular": 376, "visit": [376, 393, 409], "skylak": 376, "cascad": [376, 381], "lake": [376, 381], "ic": 376, "cooper": [376, 403], "seri": [376, 395, 398, 401, 411], "hbm": 376, "develop": [376, 390, 394], "product": [376, 393, 405, 409, 415, 418], "easi": [376, 386, 388], "rich": 376, "demonstr": [376, 378, 380, 405, 407], "extrem": [376, 380, 395], "togeth": [376, 395], "significantli": [376, 395, 404, 406], "cento": [376, 381], "ubuntu": [376, 381, 393, 409], "04": [376, 378, 381, 393, 409], "window": [376, 381, 382], "succeed": 376, "grep": 376, "matrix": [376, 380, 397, 400, 401, 402, 404, 405, 406, 407, 411, 417, 421], "load_metr": 376, "np": 376, "automodelforsequenceclassif": [376, 380], "evalpredict": 376, "english": [376, 378, 380, 416], "lambda": 376, "usag": [376, 395, 414, 415], "label2id": [376, 380], "id2label": [376, 380], "neg": [376, 380, 395, 411], "pred": 376, "argmax": [376, 380], "axi": [376, 383, 385, 405, 406], "label_id": 376, "q_config": [376, 380, 418], "eval_accuraci": [376, 377, 380, 417], "tmp_trainer": 376, "enable_executor": [376, 379], "set_log_fil": 376, "load_graph": 376, "dummydataload": 376, "compute_perform": 376, "reduc": [376, 390, 395, 397, 398, 400, 402, 403, 404, 406, 407, 418], "glog_minloglevel": [376, 384, 389], "obtain": [376, 378, 385, 395, 406], "section": [376, 395, 396, 407, 408], "input_model": [376, 385, 388, 389], "warm_up": 376, "p50": 376, "50": [376, 408], "p90": 376, "90": [376, 378, 385, 393], "p99": 376, "99": [376, 378, 409], "sec": [376, 393], "tutori": [376, 384], "resourc": [376, 377, 400], "catalog": 376, "brand": [376, 413], "claim": [376, 413], "properti": [376, 384, 413], "trademark": 376, "expens": 377, "deploi": [377, 427], "power": [377, 378, 395], "mobil": 377, "shown": [377, 386, 402, 406, 407], "produc": [377, 395, 407], "instruct": [377, 387, 394, 398, 401, 403, 406, 407, 408, 411, 418], "besid": [377, 399], "often": 377, "patient": 377, "compact": 377, "agnost": 377, "summar": [377, 378], "usual": [377, 387, 397, 407, 418], "1x1": [377, 386], "d_conf": [377, 380], "tune_metr": [377, 417], "metric_": 377, "classifi": 377, "distillation_conf": 377, "distilled_model": 377, "intermediatelayersloss": 377, "meanwhil": [378, 397, 403], "posttrainingdynam": [378, 379, 418], "wikitext": 378, "10004": [378, 379], "xsum": 378, "cnn": 378, "cnn_dailymail": 378, "dm": 378, "lambdalab": 378, "sd": 378, "pokemon": 378, "mlm": 378, "plm": 378, "eleutherai": 378, "neo": 378, "125m": 378, "sshleifer": 378, "wip": [378, 401], "star": 378, "ehdwns1516": 378, "uncased_swag": 378, "swag": 378, "squad": 378, "valhalla": 378, "longform": 378, "4096": [378, 409], "squadv1": 378, "lvwerra": 378, "pegasu": 378, "samsum": 378, "textattack": [378, 388], "mrpc": [378, 388, 389], "echarlaix": 378, "acc91": 378, "d37": 378, "hybrid": 378, "elast": 378, "conll03": 378, "conll2003": 378, "small": [378, 386, 403, 405], "translat": 378, "wmt16": 378, "helsinki": 378, "opu": 378, "mt": [378, 410], "en": 378, "ro": 378, "quantizationawaretrain": [378, 379], "maskinun": 378, "distilgpt2": 378, "rocketknight1": 378, "dslim": 378, "ner": 378, "mb": 378, "f1": [378, 414], "gflop": [378, 409, 412], "speedup": 378, "compar": [378, 394, 395, 397, 400, 411, 418], "415": [378, 393], "47": [378, 393, 409], "88": [378, 393, 408, 409], "58": [378, 409], "56": [378, 394, 408, 409], "35": [378, 393, 409], "1x": 378, "la": [378, 400], "minilmv2": 378, "115": 378, "89": [378, 409], "28": [378, 393, 401, 409], "76": [378, 408, 409], "33x": 378, "269": 378, "253": 378, "252": [378, 408], "202": 378, "104": 378, "34": [378, 409], "87": [378, 409], "11": [378, 381, 389, 401, 409], "44": [378, 385, 393, 408, 409], "49": [378, 391, 393, 409], "94x": 378, "84": [378, 409], "85": [378, 393, 409], "21x": 378, "315": 378, "251": [378, 409], "242": [378, 393, 409], "159": [378, 408], "142": [378, 409], "33": [378, 392, 409], "86": [378, 409], "68": [378, 408, 409], "41": [378, 393, 409], "55": [378, 394, 408, 409], "82x": 378, "amount": [378, 395, 400], "torchprofil": 378, "platinum": [378, 393, 409], "8280": 378, "unstructur": [378, 417], "lasso": [378, 417], "nbsp": [378, 393, 409], "qnli": 378, "qqp": 378, "mnli": 378, "v1": 378, "tinybert_general_4l_312d": 378, "distilroberta": 378, "cola": 378, "krishna2020": 378, "googl": 378, "wikipedia": 378, "prajjwal1": 378, "approch": 378, "pruneofa": 378, "patternlock": [378, 417], "bhadresh": 378, "savani": 378, "emot": 378, "fac": 378, "mini": [378, 385, 389, 393], "gchhablani": 378, "philschmid": 378, "l6": 378, "h384": 378, "moshew": [378, 389], "80": [378, 385, 393, 409], "1x4": [378, 407], "desigh": 379, "32": [379, 384, 392, 393, 394, 401, 402, 404, 405, 406, 407, 408, 409, 411], "bfloat": 379, "fetch": [379, 397, 400], "flag": 379, "enable_bf16": 379, "bfloat16": 379, "qlinear": [379, 388], "u8s8": 379, "u8u8": 379, "highli": 379, "suggest": [379, 398], "quick": [380, 383], "p_conf": [380, 417], "reduct": [380, 402, 405], "accommod": 380, "budget": 380, "tradeoff": [380, 401], "dynamic_length_config": 380, "aim": [380, 383, 385, 387, 395], "opportun": 380, "hw": 380, "sw": 380, "recommend": [381, 383, 386, 389, 391, 392, 394, 395, 404, 408], "protobuf": [381, 389], "nightli": 381, "conda": [381, 389], "satisfi": [381, 391, 403], "success": 381, "gcc": [381, 382], "linux": [381, 382], "visual": [381, 395], "studio": 381, "icelak": 381, "futur": [381, 388, 398, 399, 408], "ipex": [381, 418], "13": [381, 393, 401, 409], "cmake": [382, 384, 394, 396, 408, 411], "submodul": [382, 384], "updat": [382, 384, 395, 404, 417], "recurs": [382, 384, 391], "mkdir": [382, 384, 394, 396, 408, 411], "dpython_execut": 382, "dne_with_sparselib": [382, 411], "neural_engine_pi": 382, "cpython": 382, "37m": 382, "x86_64": 382, "gnu": 382, "libkernellib": 382, "libneural_engin": 382, "lib": [382, 384], "subdirectori": 382, "pure": [382, 399], "certain": [383, 391, 395], "simplifi": [383, 387], "attach": [383, 391], "distilbert_bas": 383, "assum": [383, 391, 400], "command": [383, 384, 388, 395, 412], "repo": [383, 411], "instal": [383, 395, 410, 423], "These": [383, 387, 391, 395, 400, 406], "roughli": [383, 403], "divid": [383, 391, 397, 402, 403, 406, 412], "categori": [383, 385], "dst_shape": [383, 384, 390], "father": 383, "keep_dim": 383, "ax": [383, 405], "come": 383, "rewrit": 383, "_attr": 383, "successfulli": [383, 391], "forget": [383, 387, 390], "reinstal": 383, "enter": 383, "you_work_dir": 383, "noth": [383, 391], "wrong": [383, 391], "anoth": [383, 387, 392, 395, 408], "correctli": 383, "distil_bert_bas": 383, "pattern_mapping_config": 383, "div": [383, 387], "becaus": [383, 398, 401, 406, 418], "even": [383, 397], "delv": 383, "recogn": [383, 427], "put": [383, 384, 387, 394], "namedtupl": 383, "__call__": 383, "retriev": 383, "actual": [383, 384, 404], "equival": [383, 407], "supported_pattern": 383, "influenc": [383, 387, 395], "pattern_dict": 383, "new_node_nam": 383, "ret_old_nod": 383, "talk": 383, "denomin": 383, "numer": [383, 418], "stabil": 383, "_set_attr": 383, "ln_node_idx": 383, "finish": [383, 387, 389], "yourself": [383, 391, 394], "seq": [384, 405], "bert_model": 384, "30522": 384, "1024": [384, 385, 386, 394, 409, 411], "125018112": 384, "slightli": 384, "activ": [384, 388, 389, 392, 395, 397, 401, 402, 403, 406, 411, 418], "throught": 384, "numactl": [384, 394], "bind": [384, 394], "omp_num_thread": [384, 394], "session": [384, 392], "glog": 384, "nerual": 384, "cc": 384, "cmakelist": 384, "reus": [384, 392, 395, 403], "engine_integr": 384, "cp": [384, 394], "nlp_executor": 384, "neural_engine_exampl": 384, "ne": [384, 394], "root": 384, "ne_root": 384, "project_source_dir": 384, "link": [384, 390, 417], "runtime_output_directori": 384, "add_execut": 384, "target_include_directori": 384, "boost_inc_dir": 384, "target_link_librari": 384, "cmake_thread_libs_init": 384, "gflag": 384, "dir": 384, "set_target_properti": 384, "analyz": 385, "readm": [385, 388, 395], "run_executor": [385, 389], "model_and_token": [385, 388, 389], "Of": [385, 391, 400], "cours": [385, 391, 400], "proflil": 385, "latanc": 385, "perf": [385, 407, 411, 412], "perfrom": 385, "chrome": 385, "inst": 385, "count": [385, 390, 392], "pref": 385, "semi": 385, "70": [385, 393], "256x256": [385, 411], "settabl": 385, "256x1024": 385, "1024x256": 385, "gelu_tanh": [385, 390], "add_37": 385, "116": [385, 409], "641": 385, "00": 385, "075": 385, "0375": 385, "comparison": [385, 407], "185": 385, "801": 385, "693": 385, "366": 385, "content": 385, "part1": [385, 390], "modif": 385, "xlsx": 385, "titl": [385, 413], "model_infer": 385, "friendli": [385, 403, 404], "000": 385, "wall": 385, "durat": 385, "17": [385, 393, 401, 409], "138": 385, "iteration4": 385, "726": 385, "phrase": 385, "0m": 385, "permut": [385, 401, 405, 411], "perm": [385, 405], "add_284": 385, "028": [385, 409], "044": 385, "reshape_tim": 385, "004m": 385, "forward_tim": 385, "044m": 385, "input_tensor_nam": 385, "matmul_357": 385, "matmul_358": 385, "matmul_346": 385, "input_typ": 385, "f32": [385, 390, 394], "output_tensor_nam": 385, "output_shap": 385, "append_op": 385, "src1_perm": 385, "pictur": [386, 397, 410], "bring": [386, 402, 406, 407], "mainli": [386, 394, 403, 404], "merg": [386, 391], "off": [386, 395], "model_path": [386, 392], "isa": [386, 396, 398, 403, 406, 407, 408], "int8_model_path": 386, "shape_0": 386, "shape_1": 386, "shape_2": 386, "enlarg": 386, "subsequ": [386, 395, 403, 406], "remark": 386, "micro": [386, 397, 402, 407], "oc": [386, 411], "mk": 386, "kn": 386, "nhwc": 386, "nxhxw": 386, "h": [386, 395], "nk": 386, "km": 386, "mmkmb": 386, "mmxmb": 386, "fulfil": 386, "along": [386, 402, 405, 407], "omp": 386, "higher": [386, 394, 395, 405, 407, 411, 418], "unrol": [386, 400, 402], "know": [386, 392, 401], "disk": [386, 388, 392], "enable_op_tun": 386, "execution_opt": [386, 392], "engine_dispatch_t": 386, "workspac": 386, "row": [386, 400, 401, 403, 407, 417], "rest": [386, 387, 391, 405, 407], "hash": [386, 398], "kernel_config": [386, 411], "kernel_nam": [386, 411], "3025159985633461085": 386, "40": [386, 393, 395], "14124194128933833351": 386, "thing": 386, "affect": [386, 395, 403, 406, 412], "simul": [386, 407, 408], "warmup_it": 386, "num_iter": 386, "dispatch_table_file_root": 386, "file_root": 386, "script": [386, 388, 394, 410], "prevent": [386, 395], "imprecis": 386, "purpos": [387, 391, 398, 403], "realiz": 387, "suppli": [387, 391, 392], "recognit": [387, 391], "embeddings_reshap": 387, "said": 387, "thought": 387, "st": 387, "nd": 387, "copi": [387, 405], "greater": [387, 414, 415], "sent": 387, "written": 387, "phenomenon": 387, "Its": 387, "situat": [387, 395, 404], "nod": 387, "leav": [387, 405, 407, 411], "old_node_index": 387, "_get_pattern_info": 387, "_create_out_pattern": 387, "_replace_pattern": 387, "emitt": 388, "netron": 388, "bash": [388, 389], "prepare_model": [388, 389], "sh": [388, 389, 412], "ptq": 388, "much": [388, 395, 400], "ir_path": 388, "focu": [389, 395, 405, 414], "home": 389, "distilbert_base_uncas": 389, "r": [389, 393, 395, 409, 410, 418], "prepare_dataset": 389, "shell": 389, "tokenizer_dir": 389, "data_dir": 389, "geluoper": 390, "destructor": 390, "operatorconfig": 390, "algorithm_": 390, "eng_": 390, "eltwise_forward": 390, "gelu_p_": 390, "src_m_": 390, "dst_m_": 390, "attrs_map": 390, "operator_conf_": 390, "becuas": 390, "src_shape": 390, "dst_tensor_ptr": 390, "set_shap": 390, "stride": [390, 397], "src_stride": 390, "getstrid": 390, "dst_stride": 390, "desc": [390, 398, 399], "src_md": 390, "dst_md": 390, "part2": 390, "gelu_algorithm": 390, "gelu_erf": 390, "eltwise_gelu_erf": 390, "eltwise_gelu_tanh": 390, "gelu_d": 390, "prop_kind": 390, "primitive_desc": 390, "gelu_pd": 390, "unrefernc": 390, "manag": [390, 392], "strictli": 390, "alia": 390, "src_data": 390, "dst_data": 390, "mutable_data": 390, "data_ptr": 390, "set_data_handl": 390, "const_cast": 390, "reinterpret_cast": 390, "memory_args_": 390, "dnnl_arg_src": 390, "dnnl_arg_dst": 390, "unref": 390, "unref_tensor": 390, "especi": [390, 407], "int8_lut_optim": 390, "int8_lut_acc_test": 390, "set_dtyp": 390, "register_operator_class": 390, "rule": 391, "recruit": 391, "ln_pattern": 391, "grow": 391, "concis": 391, "intuit": [391, 403], "choos": 391, "prefer": [391, 405], "longer": [391, 395], "ones": 391, "op_type1": 391, "op_type2": 391, "type1": 391, "type2": 391, "elig": 391, "a_node_name_1": 391, "b_node_name_1": 391, "c_node_name_1": 391, "a_node_name_2": 391, "b_node_name_2": 391, "c_node_name_2": 391, "a_node_name_n": 391, "b_node_name_n": 391, "c_node_name_n": 391, "bert_large_model_path": 391, "layer_0": 391, "layer_1": 391, "layer_2": 391, "afterward": 391, "volatil": 391, "incorrect": 391, "outcom": 391, "Or": 391, "exactli": 391, "screen": 391, "occur": [391, 397, 404], "alreadi": 391, "moment": 391, "varianc": [391, 404], "batchnorm": 391, "mul_1": 391, "mul_2": 391, "add_1": 391, "cycl": [392, 408], "pointer": 392, "life": 392, "malloc": 392, "getmemori": 392, "consum": [392, 401], "lead": [392, 395, 405, 407], "wast": [392, 403, 404], "veri": [392, 397, 399, 400, 403], "alloc": [392, 399, 400], "faster": 392, "setp": 392, "activation_mem_compress": 392, "max_input_shapes_list": 392, "warm": 392, "quit": [392, 398], "llama": [392, 394, 395], "7b": [392, 394, 395], "past_k_v_0": 392, "past_k_v_1": 392, "63": [392, 393, 409], "beam": 392, "extra": [392, 395, 403], "dag": 392, "activation_dag": 392, "dump_activation_dag": 392, "execution_mod": 392, "07": [393, 409], "8375c": [393, 409], "aw": [393, 409], "c6i": [393, 409], "12xlarg": [393, 409], "vari": [393, 409], "factor": [393, 409], "www": [393, 409], "batchsiz": 393, "2652": 393, "36": [393, 409], "513": 393, "lt": [393, 409], "50m": 393, "2181": 393, "43": [393, 409], "628": 393, "1719": 393, "91": [393, 409], "75": [393, 409], "1487": [393, 409], "255": [393, 406, 418], "1220": 393, "39": [393, 409], "143": 393, "1304": 393, "46": [393, 409], "066": 393, "1102": [393, 409], "870": 393, "487": 393, "750": 393, "82": [393, 408, 409], "690": [393, 409], "188": 393, "910": [393, 409], "921": [393, 409], "729": 393, "71": [393, 408, 409], "619": 393, "38": [393, 408, 409], "821": [393, 409], "499": 393, "429": [393, 408], "936": [393, 409], "680": 393, "318": [393, 409], "557": 393, "262": 393, "467": 393, "589": 393, "405": 393, "339": 393, "473": 393, "119": [393, 409], "389": 393, "945": [393, 409], "360": 393, "274": 393, "843": 393, "259": [393, 408, 409], "442": 393, "241": 393, "364": 393, "016": [393, 409], "303": 393, "266": 393, "45": [393, 409], "05": [393, 395, 409], "221": 393, "973": 393, "112": [393, 409], "349": 393, "938": [393, 409], "275": [393, 408], "614": 393, "217": 393, "37": [393, 409], "039": 393, "301": 393, "166": 393, "033": 393, "320": 393, "769": 393, "263": 393, "724": [393, 409], "207": 393, "819": [393, 409], "181": 393, "021": 393, "979": [393, 409], "74": [393, 409], "235": 393, "091": 393, "51": [393, 409], "914": [393, 409], "698": [393, 409], "905": [393, 409], "8972": 393, "076": [393, 409], "20m": 393, "7192": 393, "19": [393, 401, 409], "906": 393, "5482": 393, "509": 393, "4808": 393, "952": 393, "3678": 393, "409": 393, "4750": 393, "975": [393, 409], "3647": 393, "867": 393, "2921": 393, "587": [393, 409], "2576": 393, "18": [393, 401, 409], "768": [393, 409], "2131": [393, 409], "913": [393, 409], "2804": 393, "096": 393, "2263": 393, "037": 393, "1938": 393, "756": [393, 409], "1581": 393, "15": [393, 395, 401, 402, 407, 409], "1409": 393, "015": 393, "2116": 393, "113": 393, "1777": 393, "972": [393, 409], "1474": 393, "392": 393, "1278": 393, "1137": 393, "752": 393, "1594": 393, "124": 393, "1347": [393, 409], "1126": 393, "993": [393, 409], "258": 393, "890": [393, 409], "877": [393, 409], "1319": 393, "1086": 393, "931": [393, 409], "545": 393, "833": 393, "332": [393, 409], "747": [393, 409], "141": 393, "1106": [393, 409], "31": [393, 401, 402, 409], "924": 393, "446": 393, "719": 393, "633": 393, "501": 393, "816": 393, "961": 393, "549": 393, "807": 393, "868": [393, 409], "701": [393, 409], "117": 393, "613": 393, "618": 393, "515": 393, "484": 393, "75384": 393, "989": 393, "1m": 393, "55628": 393, "917": 393, "49120": 393, "957": [393, 409], "41598": 393, "39218": 393, "31211": 393, "788": [393, 409], "28399": 393, "848": 393, "24910": 393, "966": 393, "20505": 393, "18575": 393, "865": 393, "25485": 393, "987": 393, "17468": 393, "16771": 393, "971": [393, 409], "16004": 393, "996": [393, 409], "13381": 393, "894": [393, 409], "13990": 393, "863": [393, 409], "13154": 393, "12535": 393, "12102": 393, "998": 393, "8426": [393, 409], "8736": 393, "8282": 393, "967": 393, "6659": 393, "898": [393, 409], "6477": 393, "6290": 393, "974": [393, 409], "8598": 393, "6449": 393, "935": [393, 409], "6263": [393, 409], "965": [393, 409], "6080": 393, "988": 393, "3684": 393, "817": [393, 409], "6246": 393, "978": 393, "6374": 393, "947": [393, 409], "6026": 393, "3300": [393, 409], "926": 393, "3226": 393, "6221": 393, "958": 393, "6322": 393, "6081": 393, "985": [393, 409], "3368": 393, "3264": 393, "distillbert": 393, "15460": 393, "296": 393, "10m": 393, "13129": 393, "363": 393, "11323": 393, "578": [393, 409], "10072": 393, "599": 393, "8689": 393, "7901": 393, "205": [393, 409], "6737": 393, "562": 393, "5440": 393, "904": [393, 409], "4920": 393, "786": [393, 409], "4460": 393, "053": 393, "5280": 393, "179": 393, "4339": 393, "244": [393, 408], "3634": [393, 409], "928": 393, "3255": 393, "211": [393, 409], "2928": 393, "197": [393, 409], "3681": 393, "527": [393, 409], "2965": [393, 409], "106": [393, 409], "2741": 393, "862": [393, 409], "2351": 393, "2150": 393, "282": 393, "2918": 393, "316": 393, "2505": [393, 409], "602": 393, "2010": [393, 409], "995": 393, "1872": 393, "609": [393, 409], "2409": 393, "983": 393, "1993": 393, "013": 393, "1671": [393, 409], "627": 393, "1484": 393, "1342": [393, 409], "1910": 393, "456": [393, 409], "1659": 393, "687": 393, "1293": 393, "245": [393, 409], "1230": 393, "798": 393, "1091": 393, "261": 393, "1627": 393, "908": 393, "1397": 393, "684": 393, "1130": 393, "1081": 393, "353": 393, "982": [393, 409], "187": [393, 408], "manufactur": [393, 409], "amazon": [393, 409], "ec2": [393, 409], "bio": [393, 409], "1021": [393, 409], "microcod": [393, 409], "0xd000331": [393, 409], "irq": [393, 409], "balanc": [393, 395, 409], "xeonplatinum": 393, "90ghz": [393, 409], "frequenc": [393, 409, 417], "9ghz": [393, 409], "5ghz": [393, 409], "socket": [393, 409], "numa": [393, 409], "turbo": [393, 409], "frequencygovern": [393, 409], "bare": 394, "metal": 394, "llm": 394, "solut": [394, 404, 407], "borrow": 394, "cpp": [394, 395, 411], "almost": 394, "macro": 394, "difficult": 394, "hierarch": 394, "bitsfrom": 394, "avx512f": [394, 396, 405, 411, 425], "x86": 394, "gpu": [394, 400], "short": 394, "ninja": 394, "65b": 394, "30b": 394, "13b": 394, "tokenizer_checklist": 394, "chk": 394, "convert_llama": 394, "outtyp": 394, "outfil": 394, "quant_llama": 394, "model_fil": 394, "out_fil": 394, "q4_j": 394, "block_siz": 394, "gemm_isa": 394, "vnni": [394, 396, 397, 401, 405, 406, 409, 411, 418, 425], "q4_j_vnni_b128": 394, "gptneox": 394, "convert_gptneox": 394, "input_model_name_or_path": 394, "quant_gptneox": 394, "mpt": 394, "convert_mpt": 394, "quant_mpt": 394, "falcon": 394, "convert_falcon": 394, "quant_falcon": 394, "main_llama": [394, 395], "color": [394, 395, 405, 407], "she": 394, "door": 394, "main_gptneox": 394, "main_mpt": 394, "main_falcon": 394, "main_gptj": 394, "q8": 394, "gptj_bind": 394, "awai": 395, "path_to_model": 395, "upon": 395, "cover": 395, "commonli": 395, "program": [395, 397, 413], "fname": 395, "ggml": 395, "respons": [395, 397, 403, 404, 406], "ins": 395, "alpaca": 395, "n_predict": 395, "ctx_size": 395, "were": 395, "2048": [395, 411], "wait": 395, "offer": 395, "engag": 395, "convers": [395, 418], "variou": 395, "press": 395, "interject": 395, "backslash": 395, "immedi": 395, "excel": 395, "differenti": 395, "distinguish": [395, 411], "tailor": 395, "chat": 395, "paus": 395, "encount": 395, "switch": 395, "jump": 395, "back": [395, 403, 404, 405, 406], "turn": [395, 405], "speak": 395, "overcom": 395, "conjunct": [395, 414], "assist": [395, 419], "technic": 395, "reset": 395, "lose": 395, "comprehend": 395, "yield": [395, 418], "increas": [395, 400], "beyond": 395, "unpredict": 395, "retain": 395, "topic": 395, "remain": 395, "divers": 395, "creativ": 395, "qualiti": 395, "infin": 395, "caus": 395, "temp": 395, "determinist": 395, "conserv": 395, "At": [395, 403, 404, 406], "pick": [395, 407], "repeat_penalti": 395, "repeat_last_n": 395, "penal": 395, "nl": 395, "newlin": 395, "monoton": 395, "strongli": 395, "lenient": 395, "histori": 395, "recent": 395, "dialogu": 395, "poetri": 395, "plai": 395, "role": 395, "nonsens": 395, "subset": 395, "cumul": 395, "nucleu": 395, "95": [395, 408, 409], "impact": [395, 401], "suppress": 395, "promot": 395, "contextu": 395, "surround": 395, "closer": 395, "perplex": 395, "mirostat_lr": 395, "rate": [395, 404], "eta": 395, "mirostat_": 395, "tau": 395, "strike": 395, "excess": 395, "boredom": 395, "trap": 395, "incoher": 395, "confus": 395, "quickli": 395, "respond": 395, "feedback": 395, "slower": 395, "token_id": 395, "likelihood": 395, "manual": [395, 408], "decreas": 395, "15043": 395, "inf": 395, "never": 395, "practic": 395, "29905": 395, "preval": 395, "latex": 395, "across": 395, "oppos": 395, "logic": [395, 406, 408], "greatli": [395, 401, 406], "lock": [395, 417], "swap": 395, "trade": 395, "advantag": 395, "ram": 395, "slow": 395, "mmap": 395, "pageout": 395, "memory_f32": 395, "cost": [395, 407], "benefit": [395, 403, 407, 418], "bla": 395, "progress": 395, "startup": 395, "primari": 395, "displai": 395, "latest": [395, 408, 419], "frequent": [395, 397], "outdat": 395, "mtest": 395, "properli": 395, "lora": 395, "impli": 395, "workdir": 396, "dne_with_test": 396, "ON": [396, 411], "ut": [396, 399], "dne_with_sparselib_onli": [396, 411], "dne_with_sparselib_benchmark": [396, 411], "test_spmm_vnni_kernel": 396, "box": 396, "profl": [396, 408], "op_attr": [396, 398, 399, 405], "spmm_desc": 396, "spmm_kern": 396, "data0": 396, "data1": 396, "data2": 396, "data3": 396, "data4": 396, "unit": [396, 403], "amx": [396, 403, 406, 411, 425], "wise": [396, 411, 425], "residu": 396, "avx512": [396, 397, 401, 418], "mha": [396, 425], "spmm": [397, 405, 411], "deeplearn": 397, "multipli": [397, 403, 407, 418], "adopt": [397, 402, 407], "modern": 397, "spatial": [397, 403], "64byte": 397, "organ": 397, "associ": 397, "access": [397, 402, 403], "b1": 397, "b2": 397, "simd": [397, 398, 402], "width": [397, 398, 402, 404, 418], "evenli": 397, "discontinu": 397, "fulli": [397, 406, 407], "worst": 397, "miss": [397, 407], "destin": [397, 402, 405, 411], "l1": 397, "l2": [397, 403, 411], "perhap": 397, "mxk": [397, 411], "bxm": 397, "xk": 397, "bxkxm": 397, "nxm": 397, "2d": [397, 411], "frac": [397, 405], "dl": 398, "changeabl": 398, "operand": [398, 402], "horizont": 398, "overhead": [398, 404, 405, 406, 407], "move": 398, "binaryop_injector": 398, "postop": [398, 399, 411], "eltwise_injector": [398, 399], "escap": [398, 399], "compute_vector": 398, "arithmet": 398, "brows": 398, "dt": [398, 399], "vpaddb": 398, "vaddp": 398, "unlik": 398, "ptr": [398, 399, 408], "static_addr": 398, "addr": 398, "binaryop_alg": 398, "per_channel_qu": 398, "per_channel_dequ": 398, "op_alg": [398, 399], "op_dt": 398, "alg": 398, "set_scal": 398, "set_zp": 398, "binary_injector_init": 398, "set_mask": 398, "reg64": [398, 399], "zmm": [398, 399, 402, 404, 407], "get_addr": 398, "broadcast": [398, 402, 407, 408, 411], "enable_mask": 398, "vector_comput": [398, 399], "bianryop": 398, "comput_vector": 398, "wrapper": 398, "jit_binary_injector": 398, "addr_typ": 398, "jit_gener": [398, 399], "opmask": [398, 399], "reg": [398, 399], "mov": [398, 408], "addr_ptr": 398, "zmm_src1": 398, "regexp": 398, "step1": [398, 399, 406], "binary_injector": 398, "step2": [398, 399, 406], "data_param": 398, "binaryop_addr": 398, "param_": [398, 399], "front": 398, "append_loop_len": 398, "zmm_byte_s": 398, "get_data_s": 398, "offset_exp": 398, "bianryop_attr_list": 398, "append_vec": 398, "binary_add": 398, "eltwis": 399, "tradit": 399, "obvious": [399, 400, 404], "useless": 399, "idea": [399, 407, 417], "xbyak": 399, "algo": 399, "aplha": 399, "sacl": 399, "postop_alg": 399, "int8_lut": 399, "postop_typ": 399, "mathemat": 399, "satur": 399, "round": [399, 418], "unus": 399, "\u03b1x": 399, "\u03b2": 399, "le": 399, "gt": 399, "eng_kind_": 399, "omp_get_max_thread": 399, "omp_get_num_proc": 399, "eltwise_injector_init": 399, "chian": 399, "escape_reg": 399, "escape_eras": 399, "eras": 399, "prepare_t": 399, "zmm_src": 399, "postop_idx": 399, "reg_idx": 399, "step0": 399, "jit_eltwiseop_t": 399, "assign_reg": 399, "eltwiseop_kd_t": 399, "op_desc_": 399, "params_": 399, "remain_task_mask": 399, "scratch_": 399, "r10": 399, "reg_src": 399, "addr_src": 399, "r15": [399, 408], "addr_dst": 399, "r14": [399, 408], "reg_param": 399, "rdi": [399, 408], "remain_element_num": 399, "rsi": 399, "getidx": 399, "rcx": 399, "rdx": 399, "rsp": 399, "step3": [399, 406], "preambl": 399, "load_param": 399, "vmovup": [399, 408], "postambl": 399, "fp32_gelu_attr": 399, "bf16_gelu_attr": 399, "push_back": 399, "gen_cas": 399, "data0_desc": 399, "postop_list": 399, "fp32_gelu": [399, 411], "fp32_exp": 399, "mask_mock1": 399, "reg64_mock1": 399, "zmm_mock1": 399, "fp32_exp_attr": 399, "data1_desc": 399, "bf16_gelu": 399, "bf16_exp": [399, 411], "bf16_exp_attr": 399, "dt1op1": 399, "dt2op2": 399, "hase": 399, "get_true_data": 399, "rf_data": 399, "your_kernel_log": 399, "apply_postop_list": 399, "unit_test_util": 399, "articl": [400, 418], "opencl": 400, "snippet": 400, "unintellig": 400, "__kernel": 400, "naive_gemm": 400, "__global": 400, "globalrow": 400, "get_global_id": 400, "globalcol": 400, "col": [400, 401, 404, 406], "over": [400, 402, 405], "acc": [400, 411, 412], "0f": 400, "mxn": [400, 406, 411], "2xk": 400, "redund": [400, 417], "asub": 400, "bsub": 400, "tile_gemm": 400, "get_local_id": 400, "get_group_id": 400, "__local": 400, "initialis": 400, "accumul": [400, 405, 407], "numtil": 400, "tiledrow": 400, "tiledcol": 400, "synchronis": 400, "barrier": 400, "clk_local_mem_f": 400, "full": [400, 413, 418], "white": 400, "figur": [400, 403, 404, 405, 407, 410], "half": [400, 406], "correspondingli": 400, "workload": [400, 405], "localmemori": 400, "tight": 400, "ll": 400, "twice": [400, 406], "ping": 400, "pong": 400, "tidm": 400, "tidn": 400, "offsetm": 400, "offset": [400, 404, 405], "offsetn": 400, "areg": 400, "breg": 400, "wm": 400, "wn": 400, "lpta": 400, "tid": 400, "mod2": 400, "div2": 400, "tiledindex": 400, "indexa": 400, "indexb": 400, "veca": 400, "vecb": 400, "tt": 400, "pragma": 400, "tdpbf16p": 401, "16x32": 401, "32x16": 401, "FOR": [401, 402, 407], "TO": 401, "colsb": 401, "endfor": [401, 402, 407], "write_row_and_zero": 401, "zero_upper_row": 401, "zero_tileconfig_start": 401, "layout": [401, 404, 405, 406], "successor": 401, "1x16": [401, 407], "concaten": [401, 407, 411], "intrins": 401, "tileloadd": 401, "nonzero": 401, "vmovdqu32": 401, "altern": [401, 407], "lot": 401, "disast": 401, "16x1": [401, 405], "fly": 401, "__m512i": 401, "_mm512_set_epi16": 401, "29": [401, 409], "27": [401, 409], "26": [401, 408, 409], "25": [401, 409, 411], "23": [401, 409], "22": [401, 409], "21": [401, 409], "__m256i": 401, "lo": 401, "_mm256_loadu_epi": 401, "li": 401, "vec": 401, "_mm512_inserti32x8": 401, "_mm512_castsi256_si512": 401, "_mm512_permutexvar_epi16": 401, "_mm512_storeu_epi32": 401, "vfmadd": 402, "vfmadd231p": [402, 408], "degre": 402, "conting": 402, "bsc": 402, "variant": 402, "bsr": 402, "openmp": 402, "relief": 402, "bottleneck": [402, 404], "microkernel": 402, "peripher": 402, "implicit": 402, "technologi": 403, "among": [403, 406], "satisfactori": 403, "inevit": 403, "solv": [403, 404, 418], "facilit": [403, 406], "flexibl": 403, "divis": 403, "tdpbssd": 403, "tile_k": 403, "formula": 403, "max_tile_k": 403, "hope": 403, "large_wei_threshold": 403, "16xpad_n": 403, "tilestor": 403, "pseudo": 403, "tile_m": [403, 411], "16xn": 403, "dp_tile_n": 403, "k_dim_dp": 403, "write_tile_to_tmp_buf": 403, "dequantize_tile_on_tmp_buf": 403, "calculate_scale_on_tmp_buf": 403, "write_back_scal": 403, "quant_tile_n": 403, "quantize_on_tmp_buf": 403, "write_tile_to_dst": 403, "scale_reduce_quant": 403, "needn": 403, "sync": 403, "2nd": [403, 406], "s8s8bf16": 403, "desid": 403, "du": 403, "until": 403, "feel": [403, 411], "suitabl": 403, "chart": 403, "again": 404, "naiv": 404, "gap": 404, "layernrom": 404, "3d": [404, 425], "poor": 404, "fewer": 404, "inconsist": 404, "scene": 404, "quarter": 404, "depict": 404, "bandwidth": [404, 406, 418], "gain": [404, 418], "brought": [404, 418], "majotr": 404, "layternorm": 404, "encapsul": 404, "ba": [404, 408, 411], "discret": 404, "append": [404, 411, 412], "overal": 404, "p2031": [405, 411], "2013": 405, "noperm": [405, 411], "p1302": [405, 411], "p2013": [405, 411], "equat": [405, 418], "dot": [405, 418], "rm": 405, "q": [405, 406], "qk": 405, "textunderscor": 405, "nativ": 405, "sparelib": 405, "axis": 405, "conceptu": 405, "head_nun": 405, "perm2031": 405, "perm2013": 405, "perm1302": 405, "concept": [405, 407], "lh": 405, "float32": [405, 418], "illustr": 405, "inner": 405, "16x16": 405, "drawn": 405, "lighter": 405, "cell": [405, 407], "respectfulli": 405, "vnni_noperm_p2013_p1302": 405, "transpose_4b_8x8": 405, "legend": 405, "explan": 405, "contigu": 405, "ellipsi": 405, "thinner": 405, "border": 405, "bolder": 405, "16x32x16": 405, "suboptim": 405, "piec": 405, "boost": 405, "twofold": 405, "unifi": 405, "roll": 405, "worth": 406, "clear": 406, "fact": [406, 418], "spr": 406, "latter": 406, "clx": 406, "4x16": [406, 407], "launch": 406, "prior": 406, "iteraion": 406, "polynomi": 406, "essenti": 406, "incom": 406, "far": 406, "four": 407, "adjac": 407, "unsign": [407, 411], "sign": [407, 418], "tmp1": 407, "zeroextend16": 407, "signextend16": 407, "tmp2": 407, "tmp3": 407, "tmp4": 407, "dword": [407, 408], "transposit": 407, "discuss": 407, "typic": 407, "4x4": 407, "mxkxn": 407, "problem": [407, 411], "densiti": 407, "fma": 407, "bubbl": 407, "16x4": 407, "highlight": 407, "4x": 407, "talent": 407, "smart": 407, "gui": [407, 408], "swizzl": 407, "workaround": 407, "unfortun": 407, "difficulti": 407, "bad": 407, "2x1": 407, "conclus": 407, "against": 407, "brief": 408, "sparse_lib_verbos": 408, "sparselib_verbos": 408, "nthr": 408, "224": [408, 409], "exec": 408, "shape_256_256_128": 408, "4658": [408, 409], "56982": 408, "itt": 408, "dne_with_sparselib_vtun": 408, "opt": 408, "dcmake_vtune_hom": 408, "sparse_lib_vtun": 408, "ssh": 408, "analys": 408, "verifi": 408, "sparse_lib_dump": 408, "xed64": 408, "click": 408, "xdi": 408, "push": 408, "53": [408, 409], "rbx": 408, "rbp": 408, "4154": 408, "r12": 408, "4155": 408, "r13": 408, "4156": 408, "4157": 408, "dataxf": 408, "bd00040000": 408, "ebp": 408, "0x400": 408, "4c8b3f": 408, "qword": 408, "4c8b7708": 408, "0x8": 408, "4c8b6f10": 408, "0x10": 408, "1a": 408, "avx512evex": 408, "62f17d48efc0": 408, "vpxord": 408, "zmm0": 408, "62f15d48efe4": 408, "zmm4": 408, "62513d48efc0": 408, "zmm8": 408, "2c": 408, "62511d48efe4": 408, "zmm12": 408, "62f17548efc9": 408, "zmm1": 408, "62f15548efe": 408, "zmm5": 408, "3e": 408, "62513548efc9": 408, "zmm9": 408, "62511548efe": 408, "zmm13": 408, "4a": 408, "62f16d48efd2": 408, "zmm2": 408, "62f14d48eff6": 408, "zmm6": 408, "62512d48efd2": 408, "zmm10": 408, "5c": 408, "62510d48eff6": 408, "zmm14": 408, "62": [408, 409], "62c17c481006": 408, "zmm16": 408, "zmmword": 408, "62c17c48104e01": 408, "zmm17": 408, "0x40": 408, "6f": 408, "62c17c48105602": 408, "zmm18": 408, "0x80": 408, "62427d48183f": 408, "vbroadcastss": 408, "zmm31": 408, "7c": 408, "vfma": 408, "62927d40b8c7": 408, "62927540b8cf": 408, "62926d40b8d7": 408, "8e": 408, "62427d48187f04": 408, "62927d40b8e7": 408, "9b": 408, "62927540b8ef": 408, "a1": 408, "62926d40b8f7": 408, "a7": 408, "62427d48187f08": 408, "0x20": 408, "ae": 408, "62127d40b8c7": 408, "b4": 408, "62127540b8cf": 408, "62126d40b8d7": 408, "c0": 408, "62427d48187f0c": 408, "0x30": 408, "c7": 408, "62127d40b8e7": 408, "62127540b8ef": 408, "62126d40b8f7": 408, "d9": 408, "62c17c48104603": 408, "0xc0": 408, "e0": 408, "62c17c48104e04": 408, "0x100": 408, "e7": 408, "62c17c48105605": 408, "0x140": 408, "ee": 408, "62427d48187f01": 408, "0x4": 408, "f5": 408, "fb": 408, "101": 408, "107": 408, "62427d48187f05": 408, "0x14": 408, "10e": 408, "114": 408, "11a": 408, "62427d48187f09": 408, "0x24": 408, "12d": 408, "133": 408, "139": 408, "62427d48187f0d": 408, "0x34": 408, "140": 408, "146": 408, "14c": 408, "152": 408, "62c17c48104606": 408, "0x180": 408, "62c17c48104e07": 408, "0x1c0": 408, "62c17c48105608": 408, "0x200": 408, "167": [408, 409], "62427d48187f02": 408, "16e": 408, "174": 408, "17a": 408, "180": 408, "62427d48187f06": 408, "0x18": 408, "18d": 408, "193": 408, "199": 408, "62427d48187f0a": 408, "0x28": 408, "1a0": 408, "1a6": 408, "1ac": 408, "1b2": 408, "62427d48187f0e": 408, "0x38": 408, "1b9": 408, "1bf": 408, "1c5": 408, "1cb": 408, "62c17c48104609": 408, "0x240": 408, "1d2": 408, "62c17c48104e0a": 408, "0x280": 408, "1d9": 408, "62c17c4810560b": 408, "0x2c0": 408, "1e0": 408, "62427d48187f03": 408, "0xc": 408, "1e7": 408, "1ed": 408, "1f3": 408, "1f9": 408, "62427d48187f07": 408, "0x1c": 408, "200": 408, "206": 408, "20c": 408, "212": 408, "62427d48187f0b": 408, "0x2c": 408, "219": [408, 409], "21f": 408, "225": 408, "22b": 408, "62427d48187f0f": 408, "0x3c": 408, "232": [408, 409], "238": 408, "23e": 408, "62d17c48114500": 408, "24b": 408, "62d17c48116503": 408, "62517c48114506": 408, "62517c48116509": 408, "260": 408, "62d17c48114d01": 408, "267": 408, "62d17c48116d04": 408, "26e": 408, "62517c48114d07": 408, "62517c48116d0a": 408, "27c": 408, "62d17c48115502": 408, "283": 408, "62d17c48117505": 408, "28a": 408, "62517c48115508": 408, "291": 408, "62517c4811750b": 408, "298": [408, 409], "pop": 408, "415f": 408, "29a": 408, "415e": 408, "29c": 408, "415d": 408, "29e": 408, "415c": 408, "2a0": 408, "5d": 408, "2a1": 408, "5b": 408, "2a2": 408, "avx": 408, "c5f877": 408, "vzeroupp": 408, "2a5": 408, "xed3": 408, "stat": 408, "29220": 408, "236418": 408, "118": 408, "2003": 408, "54": [408, 409], "00348609": 409, "601": 409, "00310676": 409, "675": 409, "00261406": 409, "802": 409, "00216633": 409, "968": 409, "068": 409, "00164658": 409, "1273": 409, "0112255": 409, "284": 409, "00947462": 409, "885": 409, "377": 409, "00764146": 409, "1097": 409, "78": 409, "0058452": 409, "1435": 409, "00407149": 409, "2060": 409, "0127448": 409, "658": 409, "198": 409, "0111132": 409, "754": 409, "835": 409, "00940157": 409, "892": 409, "00760217": 409, "1103": 409, "0054935": 409, "1527": 409, "044202": 409, "759": 409, "0364227": 409, "0292454": 409, "1147": 409, "0223472": 409, "1501": 409, "0149058": 409, "2251": 409, "216338": 409, "620": 409, "408": 409, "179593": 409, "345": 409, "135054": 409, "806": 409, "0946983": 409, "1417": 409, "0609701": 409, "2201": 409, "190508": 409, "704": 409, "526": 409, "159566": 409, "841": 409, "130863": 409, "1025": 409, "103927": 409, "1291": 409, "0739962": 409, "1813": 409, "0250395": 409, "753": 409, "784": 409, "0210726": 409, "895": 409, "682": 409, "0170987": 409, "0130778": 409, "1443": 409, "00923343": 409, "2044": 409, "3072": 409, "112882": 409, "668": 409, "818": 409, "0879386": 409, "858": 409, "525": 409, "068835": 409, "1096": 409, "79": 409, "0487342": 409, "1549": 409, "0317559": 409, "2377": 409, "109308": 409, "679": 409, "0922471": 409, "805": 409, "638": 409, "0759107": 409, "0558945": 409, "1329": 409, "61": 409, "0358752": 409, "2071": 409, "57": 409, "00565044": 409, "742": 409, "297": 409, "00503604": 409, "832": 409, "00447544": 409, "937": 409, "182": 409, "00368479": 409, "1138": 409, "00270954": 409, "1547": 409, "0183481": 409, "386": 409, "0154121": 409, "1088": 409, "0125696": 409, "1334": 409, "00959948": 409, "1747": 409, "72": 409, "00677631": 409, "2475": 409, "0206321": 409, "813": 409, "162": 409, "0184267": 409, "483": 409, "0164699": 409, "1018": 409, "66": 409, "0135801": 409, "1235": 409, "010552": 409, "1589": 409, "0721208": 409, "930": 409, "506": 409, "059613": 409, "1125": 409, "0483781": 409, "1387": 409, "0366748": 409, "1829": 409, "83": 409, "0248571": 409, "2699": 409, "376539": 409, "712": 409, "902": 409, "31929": 409, "840": 409, "727": 409, "261265": 409, "1027": 409, "193579": 409, "1386": 409, "118429": 409, "2266": 409, "309195": 409, "177": 409, "256619": 409, "1046": 409, "213454": 409, "1257": 409, "165192": 409, "1624": 409, "118402": 409, "2267": 409, "0402931": 409, "855": 409, "0341169": 409, "0275282": 409, "1371": 409, "0211298": 409, "1786": 409, "0150693": 409, "218765": 409, "215": 409, "180921": 409, "834": 409, "592": 409, "142778": 409, "1057": 409, "097692": 409, "1545": 409, "0620034": 409, "2435": 409, "174101": 409, "853": 409, "73": 409, "148369": 409, "1001": 409, "123554": 409, "1203": 409, "0923655": 409, "1609": 409, "0591283": 409, "2513": 409, "0074474": 409, "844": 409, "00657187": 409, "00570175": 409, "00483104": 409, "1302": 409, "00367406": 409, "1712": 409, "0247063": 409, "0207462": 409, "1213": 409, "03": 409, "0169214": 409, "0129936": 409, "1936": 409, "0090376": 409, "2784": 409, "0275881": 409, "912": 409, "0240415": 409, "77": 409, "0207876": 409, "1210": 409, "0177873": 409, "1414": 409, "0140129": 409, "1795": 409, "0994565": 409, "1012": 409, "0819725": 409, "1228": 409, "0660571": 409, "1523": 409, "0497077": 409, "2025": 409, "0341912": 409, "2944": 409, "500698": 409, "804": 409, "184": 409, "420619": 409, "287": 409, "337529": 409, "1192": 409, "94": 409, "251221": 409, "1602": 409, "158668": 409, "2537": 409, "412912": 409, "155": 409, "346369": 409, "1162": 409, "2831": 409, "1422": 409, "220585": 409, "1825": 409, "156168": 409, "2578": 409, "0538395": 409, "1051": 409, "0455066": 409, "1244": 409, "036978": 409, "1531": 409, "028483": 409, "1987": 409, "0200457": 409, "2824": 409, "283445": 409, "799": 409, "069": 409, "236101": 409, "959": 409, "302": 409, "188745": 409, "1199": 409, "135532": 409, "0845544": 409, "2678": 409, "227976": 409, "977": 409, "19463": 409, "1145": 409, "161251": 409, "1382": 409, "65": 409, "123585": 409, "1804": 409, "0840322": 409, "2653": 409, "00940534": 409, "891": 409, "00821985": 409, "1020": 409, "00701343": 409, "1196": 409, "08": 409, "00579899": 409, "1446": 409, "00464705": 409, "1805": 409, "0336342": 409, "997": 409, "629": 409, "0276086": 409, "1215": 409, "0224431": 409, "1495": 409, "09": 409, "0170807": 409, "1964": 409, "0117535": 409, "2854": 409, "0358603": 409, "0310083": 409, "1082": 409, "0260486": 409, "1288": 409, "0215163": 409, "1559": 409, "0170105": 409, "1972": 409, "133295": 409, "1006": 409, "92": 409, "111186": 409, "1207": 409, "0881114": 409, "0665519": 409, "2016": 409, "0454416": 409, "2953": 409, "611718": 409, "645": 409, "533329": 409, "430288": 409, "1247": 409, "307141": 409, "198987": 409, "2698": 409, "02": [409, 414], "556249": 409, "163": 409, "462737": 409, "1160": 409, "37537": 409, "1430": 409, "28321": 409, "1895": 409, "203901": 409, "2633": 409, "0716356": 409, "1053": 409, "0603517": 409, "1250": 409, "0490096": 409, "1540": 409, "0375683": 409, "2009": 409, "0267483": 409, "2822": 409, "3572": 409, "845": 409, "437": 409, "299561": 409, "1008": 409, "228752": 409, "1320": 409, "165648": 409, "1823": 409, "105656": 409, "2858": 409, "298907": 409, "994": 409, "529": 409, "255598": 409, "1163": 409, "20824": 409, "1427": 409, "159911": 409, "1858": 409, "111211": 409, "2673": 409, "0152997": 409, "685": 409, "358": 409, "0131446": 409, "797": 409, "0109669": 409, "956": 409, "132": 409, "00921101": 409, "00755406": 409, "1388": 409, "0553082": 409, "758": 409, "351": 409, "0458481": 409, "826": 409, "0367258": 409, "1142": 409, "06": 409, "027535": 409, "018464": 409, "2271": 409, "0597882": 409, "0510217": 409, "822": 409, "062": 409, "0421644": 409, "0333436": 409, "0296385": 409, "1415": 409, "22241": 409, "337": 409, "18324": 409, "915": 409, "145322": 409, "1154": 409, "1083": 409, "0728843": 409, "2301": 409, "11793": 409, "600": 409, "929398": 409, "722": 409, "720963": 409, "823": 409, "510039": 409, "1315": 409, "336519": 409, "1994": 409, "909941": 409, "737": 409, "508": 409, "753487": 409, "644": 409, "606477": 409, "459915": 409, "1459": 409, "303455": 409, "2211": 409, "123429": 409, "764": 409, "586": 409, "103035": 409, "923": 409, "0825026": 409, "1143": 409, "0625579": 409, "1508": 409, "0426942": 409, "2210": 409, "60813": 409, "734": 409, "483053": 409, "781": 409, "462": 409, "357348": 409, "1056": 409, "256715": 409, "1470": 409, "169119": 409, "2232": 409, "503341": 409, "738": 409, "42134": 409, "881": 409, "342843": 409, "255199": 409, "1456": 409, "174091": 409, "2134": 409, "0142667": 409, "0123966": 409, "1015": 409, "0105865": 409, "1188": 409, "00860835": 409, "1461": 409, "00655363": 409, "1919": 409, "0532543": 409, "0447548": 409, "1124": 409, "0348388": 409, "1444": 409, "0266886": 409, "1885": 409, "0177431": 409, "2836": 409, "69": 409, "0549107": 409, "916": 409, "608": 409, "0475549": 409, "1058": 409, "0401657": 409, "1253": 409, "0326952": 409, "1539": 409, "025032": 409, "220947": 409, "911": 409, "178324": 409, "1128": 409, "137361": 409, "1465": 409, "103126": 409, "1952": 409, "0701429": 409, "2870": 409, "06648": 409, "755": 409, "893959": 409, "900": 409, "831": 409, "718893": 409, "1120": 409, "537405": 409, "1498": 409, "280686": 409, "2869": 409, "902588": 409, "730678": 409, "582871": 409, "1381": 409, "444133": 409, "298489": 409, "2697": 409, "581": 409, "0955952": 409, "1184": 409, "078109": 409, "1449": 409, "0596185": 409, "1899": 409, "0414047": 409, "2735": 409, "596568": 409, "497127": 409, "396634": 409, "286973": 409, "1578": 409, "167473": 409, "2704": 409, "472466": 409, "943": 409, "787": 409, "391055": 409, "1140": 409, "319865": 409, "1394": 409, "247491": 409, "1801": 409, "169874": 409, "2624": 409, "93": 409, "0213786": 409, "686": 409, "67": 409, "018228": 409, "0152068": 409, "0120525": 409, "1218": 409, "0103961": 409, "1412": 409, "0771592": 409, "761": 409, "0642402": 409, "074": 409, "0514668": 409, "0387886": 409, "1513": 409, "0256871": 409, "2285": 409, "0836219": 409, "702": 409, "0712915": 409, "664": 409, "0589148": 409, "697": 409, "0484067": 409, "0411331": 409, "311691": 409, "569": 409, "256635": 409, "204973": 409, "153086": 409, "1534": 409, "101206": 409, "2320": 409, "59625": 409, "588": 409, "583": 409, "33246": 409, "705": 409, "03849": 409, "703": 409, "738939": 409, "1271": 409, "480308": 409, "1956": 409, "26056": 409, "745": 409, "324": 409, "04874": 409, "842936": 409, "1114": 409, "59": 409, "635554": 409, "1478": 409, "42145": 409, "2229": 409, "174215": 409, "375": 409, "145836": 409, "116701": 409, "1132": 409, "0876727": 409, "1506": 409, "0595001": 409, "2220": 409, "883258": 409, "598": 409, "333": 409, "711146": 409, "743": 409, "543634": 409, "129": 409, "402406": 409, "1313": 409, "266945": 409, "1979": 409, "70404": 409, "592043": 409, "878": 409, "695": 409, "475444": 409, "1094": 409, "358932": 409, "240739": 409, "2160": 409, "0184384": 409, "909": 409, "907": 409, "0158714": 409, "013504": 409, "1242": 409, "0109927": 409, "1526": 409, "00826017": 409, "2031": 409, "061272": 409, "1095": 409, "0609618": 409, "1100": 409, "0467291": 409, "1436": 409, "0340362": 409, "1971": 409, "0231282": 409, "2901": 409, "0717247": 409, "0616923": 409, "1087": 409, "0521595": 409, "1286": 409, "0423267": 409, "1585": 409, "0321109": 409, "2089": 409, "286461": 409, "242512": 409, "181783": 409, "1476": 409, "139021": 409, "1930": 409, "0870121": 409, "3085": 409, "36322": 409, "652": 409, "08991": 409, "880185": 409, "1219": 409, "694533": 409, "366328": 409, "2931": 409, "15748": 409, "927": 409, "937824": 409, "1144": 409, "745357": 409, "1440": 409, "558061": 409, "1924": 409, "391387": 409, "2743": 409, "157349": 409, "616": 409, "129806": 409, "103083": 409, "1464": 409, "0784417": 409, "053639": 409, "2815": 409, "767569": 409, "874": 409, "641585": 409, "941": 409, "387": 409, "488558": 409, "1236": 409, "355651": 409, "1698": 409, "230945": 409, "2615": 409, "611059": 409, "514108": 409, "1156": 409, "416571": 409, "318094": 409, "1869": 409, "225023": 409, "2642": 409, "0375093": 409, "564": 409, "0317602": 409, "0261888": 409, "1281": 409, "0211151": 409, "0158951": 409, "2110": 409, "141333": 409, "949": 409, "133647": 409, "1004": 409, "0999998": 409, "0710327": 409, "1889": 409, "52": 409, "0429916": 409, "3121": 409, "147474": 409, "125344": 409, "1070": 409, "104294": 409, "0849766": 409, "1579": 409, "0624729": 409, "2148": 409, "701639": 409, "765": 409, "534615": 409, "359791": 409, "1492": 409, "2612": 409, "2055": 409, "183193": 409, "2930": 409, "92067": 409, "735": 409, "271": 409, "4402": 409, "880": 409, "046": 409, "69186": 409, "1269": 409, "17436": 409, "1828": 409, "880179": 409, "2439": 409, "62123": 409, "264": 409, "14905": 409, "999": 409, "64253": 409, "1307": 409, "1413": 409, "1881": 409, "771439": 409, "2783": 409, "369429": 409, "451": 409, "288236": 409, "1047": 409, "209526": 409, "1441": 409, "148115": 409, "2038": 409, "106089": 409, "2846": 409, "53204": 409, "465": 409, "28593": 409, "939": 409, "368": 409, "0852": 409, "1113": 409, "685382": 409, "1762": 409, "408357": 409, "2958": 409, "4521": 409, "13466": 409, "853916": 409, "1392": 409, "642672": 409, "1850": 409, "446442": 409, "2663": 409, "0574189": 409, "876": 409, "0460811": 409, "1092": 409, "0389357": 409, "1292": 409, "031279": 409, "0234498": 409, "2146": 409, "204966": 409, "17364": 409, "1159": 409, "141097": 409, "1426": 409, "105192": 409, "1913": 409, "0677766": 409, "2970": 409, "21269": 409, "946": 409, "573": 409, "191564": 409, "1050": 409, "156368": 409, "1287": 409, "1565": 409, "0933565": 409, "2156": 409, "84983": 409, "789777": 409, "1019": 409, "598168": 409, "1346": 409, "433492": 409, "1857": 409, "269504": 409, "2988": 409, "74845": 409, "859": 409, "348": 409, "96945": 409, "811": 409, "505": 409, "77082": 409, "76407": 409, "1826": 409, "09719": 409, "2935": 409, "73162": 409, "00241": 409, "1072": 409, "39024": 409, "77317": 409, "1816": 409, "19536": 409, "2694": 409, "517278": 409, "875": 409, "708": 409, "382208": 409, "1185": 409, "317837": 409, "1425": 409, "233231": 409, "1942": 409, "152925": 409, "2962": 409, "44309": 409, "741": 409, "62409": 409, "1115": 409, "64963": 409, "1098": 409, "03923": 409, "1743": 409, "625089": 409, "2898": 409, "07006": 409, "861": 409, "632": 409, "64247": 409, "1085": 409, "33386": 409, "1337": 409, "994935": 409, "1792": 409, "68383": 409, "2608": 409, "0713578": 409, "940": 409, "0612457": 409, "0516788": 409, "1298": 409, "0414834": 409, "1617": 409, "0309886": 409, "2165": 409, "282241": 409, "951": 409, "085": 409, "238855": 409, "1123": 409, "193713": 409, "1385": 409, "146781": 409, "81": 409, "0938959": 409, "286141": 409, "122": 409, "257138": 409, "1043": 409, "214208": 409, "167575": 409, "1601": 409, "124072": 409, "2163": 409, "21431": 409, "884": 409, "237": 409, "955251": 409, "775294": 409, "1384": 409, "63282": 409, "1696": 409, "37333": 409, "2876": 409, "87335": 409, "317": 409, "65059": 409, "1176": 409, "94733": 409, "1457": 409, "62241": 409, "1637": 409, "47752": 409, "2906": 409, "75786": 409, "83024": 409, "889": 409, "87429": 409, "1108": 409, "87685": 409, "75328": 409, "2449": 409, "718776": 409, "289": 409, "561317": 409, "1076": 409, "429166": 409, "1407": 409, "317204": 409, "1904": 409, "208555": 409, "2896": 409, "94057": 409, "30458": 409, "1048": 409, "6702": 409, "25799": 409, "1920": 409, "84121": 409, "2871": 409, "34423": 409, "711": 409, "77444": 409, "857": 409, "10049": 409, "52509": 409, "926038": 409, "2568": 409, "00203027": 409, "1032": 409, "00198061": 409, "00179382": 409, "1169": 409, "00163713": 409, "1280": [409, 411], "00171023": 409, "1226": 409, "00395783": 409, "2119": 409, "00340452": 409, "2463": 409, "00308582": 409, "2718": 409, "00292684": 409, "2866": 409, "00217889": 409, "3849": 409, "00437142": 409, "1918": 409, "00418212": 409, "2005": 409, "00344785": 409, "2433": 409, "00291005": 409, "2882": 409, "00293671": 409, "2856": 409, "0120946": 409, "2774": 409, "0103377": 409, "3245": 409, "00850778": 409, "3943": 409, "00659512": 409, "5087": 409, "00484669": 409, "6923": 409, "0524509": 409, "2558": 409, "0428737": 409, "3130": 409, "0323642": 409, "4147": 409, "0231199": 409, "5805": 409, "0152199": 409, "8818": 409, "0451228": 409, "2974": 409, "0373823": 409, "3590": 409, "0302746": 409, "4433": 409, "023182": 409, "5789": 409, "0161696": 409, "8300": 409, "00731429": 409, "2580": 409, "00633179": 409, "2980": 409, "00535855": 409, "3522": 409, "00449335": 409, "4200": 409, "00341811": 409, "5521": 409, "0270028": 409, "2795": 409, "02197": 409, "3436": 409, "0177477": 409, "4253": 409, "0131335": 409, "5748": 409, "00897444": 409, "8412": 409, "0257188": 409, "2889": 409, "0218969": 409, "3393": 409, "0180933": 409, "4107": 409, "013742": 409, "5408": 409, "00992419": 409, "7488": 409, "00289114": 409, "1450": 409, "00245821": 409, "00252331": 409, "1662": 409, "00226557": 409, "1851": 409, "00180316": 409, "2326": 409, "00578904": 409, "00500361": 409, "3353": 409, "0042401": 409, "3956": 409, "00350486": 409, "4786": 409, "00297233": 409, "5644": 409, "00693265": 409, "2420": 409, "00593063": 409, "2828": 409, "00526697": 409, "3185": 409, "00480098": 409, "3494": 409, "00385131": 409, "4356": 409, "0193516": 409, "3467": 409, "0166254": 409, "4036": 409, "0132869": 409, "5050": 409, "0106293": 409, "6313": 409, "00759056": 409, "8841": 409, "0977256": 409, "2746": 409, "0813271": 409, "0656322": 409, "4090": 409, "0476463": 409, "5633": 409, "0295362": 409, "9088": 409, "0736189": 409, "3646": 409, "0603789": 409, "4445": 409, "0489938": 409, "5478": 409, "036992": 409, "7256": 409, "0258802": 409, "10372": 409, "0116589": 409, "3237": 409, "00979113": 409, "3855": 409, "00811779": 409, "4650": 409, "00667871": 409, "5652": 409, "00493861": 409, "7643": 409, "0537768": 409, "2807": 409, "0459135": 409, "3288": 409, "03588": 409, "4208": 409, "0252901": 409, "5970": 409, "0167419": 409, "9018": 409, "0407051": 409, "3651": 409, "0342908": 409, "4334": 409, "028568": 409, "5202": 409, "0218703": 409, "6796": 409, "016186": 409, "9183": 409, "0031551": 409, "0029515": 409, "00265488": 409, "2369": 409, "00243581": 409, "2582": 409, "00223598": 409, "2813": 409, "00745008": 409, "3377": 409, "00656544": 409, "3833": 409, "00542595": 409, "4638": 409, "00425647": 409, "5912": 409, "0034657": 409, "7261": 409, "00835933": 409, "3010": 409, "00741956": 409, "3391": 409, "0065352": 409, "3850": 409, "00555918": 409, "4526": 409, "00488058": 409, "5156": 409, "0257262": 409, "3912": 409, "0217468": 409, "4628": 409, "0176505": 409, "5703": 409, "0137122": 409, "7341": 409, "00980134": 409, "10270": 409, "124749": 409, "3227": 409, "103385": 409, "3894": 409, "0832193": 409, "4838": 409, "0626013": 409, "6432": 409, "0397992": 409, "10117": 409, "101071": 409, "3983": 409, "0825665": 409, "4876": 409, "0668515": 409, "6023": 409, "0487727": 409, "8255": 409, "0354192": 409, "11368": 409, "0147718": 409, "0127799": 409, "4430": 409, "0105324": 409, "5376": 409, "00869796": 409, "6509": 409, "00643591": 409, "8798": 409, "0698868": 409, "3240": 409, "0588583": 409, "3848": 409, "0473412": 409, "4784": 409, "0346142": 409, "6543": 409, "0222947": 409, "10159": 409, "0538146": 409, "4142": 409, "0454583": 409, "4904": 409, "0373579": 409, "5968": 409, "0291396": 409, "7651": 409, "0208901": 409, "10672": 409, "00393589": 409, "00332212": 409, "2525": 409, "00317296": 409, "2643": 409, "00269113": 409, "3117": 409, "00235812": 409, "3557": 409, "009382": 409, "3576": 409, "00828943": 409, "4047": 409, "00672351": 409, "4990": 409, "00514768": 409, "6518": 409, "0040612": 409, "8262": 409, "0107115": 409, "3132": 409, "00920252": 409, "00794258": 409, "4224": 409, "00698123": 409, "4806": 409, "00561026": 409, "5980": 409, "0345669": 409, "3882": 409, "0289719": 409, "4632": 409, "0232584": 409, "5770": 409, "0179766": 409, "7466": 409, "0128144": 409, "10474": 409, "158162": 409, "3394": 409, "132552": 409, "4050": 409, "101844": 409, "5271": 409, "080936": 409, "6633": 409, "0530097": 409, "10127": 409, "135839": 409, "3952": 409, "11116": 409, "4829": 409, "0899513": 409, "0633017": 409, "8481": 409, "0467462": 409, "11484": 409, "0192628": 409, "3919": 409, "0164591": 409, "4586": 409, "0135348": 409, "5578": 409, "0107712": 409, "7009": 409, "00761117": 409, "9919": 409, "0854876": 409, "3532": 409, "0747271": 409, "4041": 409, "0604759": 409, "4993": 409, "0417964": 409, "7225": 409, "0275467": 409, "10962": 409, "0713821": 409, "4164": 409, "0600772": 409, "4948": 409, "0496581": 409, "5986": 409, "0381385": 409, "7794": 409, "027025": 409, "10999": 409, "00502473": 409, "2086": 409, "00451855": 409, "00396819": 409, "00338962": 409, "3093": 409, "00315343": 409, "3325": 409, "0147951": 409, "2834": 409, "0126225": 409, "3322": 409, "010269": 409, "4084": 409, "00785878": 409, "5337": 409, "00570293": 409, "7354": 409, "0161691": 409, "2594": 409, "0144483": 409, "2902": 409, "011705": 409, "3583": 409, "0101487": 409, "4132": 409, "00879332": 409, "4769": 409, "0560297": 409, "2994": 409, "0467998": 409, "3584": 409, "0374397": 409, "4481": 409, "028166": 409, "5956": 409, "0192593": 409, "8711": 409, "277815": 409, "2415": 409, "229837": 409, "2919": 409, "1787": 409, "3755": 409, "126545": 409, "5303": 409, "0835321": 409, "8033": 409, "224925": 409, "2983": 409, "184256": 409, "3642": 409, "146452": 409, "4582": 409, "108899": 409, "6162": 409, "0740655": 409, "9060": 409, "0319455": 409, "2954": 409, "0268136": 409, "3519": 409, "0217062": 409, "4347": 409, "0166666": 409, "5662": 409, "0116466": 409, "8102": 409, "150549": 409, "2507": 409, "119951": 409, "3147": 409, "0893092": 409, "4226": 409, "0637226": 409, "5923": 409, "0427839": 409, "8823": 409, "122421": 409, "3035": 409, "102244": 409, "0822007": 409, "4520": 409, "0622484": 409, "5969": 409, "0429436": 409, "8652": 409, "00481074": 409, "00443796": 409, "2835": 409, "00389863": 409, "00343822": 409, "3659": 409, "00297784": 409, "4225": 409, "0145757": 409, "3453": 409, "012078": 409, "4167": 409, "00896329": 409, "5615": 409, "00727645": 409, "6917": 409, "00548478": 409, "9176": 409, "0150624": 409, "3341": 409, "0132428": 409, "3800": 409, "011443": 409, "4398": 409, "0092883": 409, "5418": 409, "00744553": 409, "6759": 409, "0543977": 409, "3701": 409, "0445693": 409, "4517": 409, "0363329": 409, "5541": 409, "0270492": 409, "7442": 409, "0187415": 409, "10742": 409, "267367": 409, "3011": 409, "223615": 409, "3601": 409, "1797": 409, "134716": 409, "5977": 409, "0692752": 409, "11624": 409, "222661": 409, "3616": 409, "179525": 409, "4485": 409, "139298": 409, "5781": 409, "0958787": 409, "8399": 409, "176292": 409, "4568": 409, "0700283": 409, "0258341": 409, "4383": 409, "0207504": 409, "5457": 409, "0161277": 409, "7021": 409, "0116008": 409, "9761": 409, "148512": 409, "3050": 409, "124238": 409, "0995304": 409, "4551": 409, "0714324": 409, "6341": 409, "044154": 409, "10259": 409, "113174": 409, "3940": 409, "0961662": 409, "4636": 409, "0765841": 409, "5822": 409, "0592912": 409, "7520": 409, "0416614": 409, "10703": 409, "00655654": 409, "2239": 409, "00584761": 409, "2510": 409, "00502113": 409, "2923": 409, "00466269": 409, "3148": 409, "00393276": 409, "3732": 409, "0203923": 409, "2879": 409, "0171018": 409, "3433": 409, "0137027": 409, "4285": 409, "0109527": 409, "5361": 409, "00749636": 409, "7833": 409, "0221319": 409, "0193761": 409, "3030": 409, "0158773": 409, "3698": 409, "0134367": 409, "4370": 409, "0116365": 409, "5046": 409, "0780751": 409, "3008": 409, "0651551": 409, "3604": 409, "0521945": 409, "4500": 409, "0394101": 409, "5959": 409, "0262706": 409, "8940": 409, "398509": 409, "2357": 409, "332153": 409, "259051": 409, "3626": 409, "184412": 409, "5094": 409, "119678": 409, "7850": 409, "313656": 409, "2995": 409, "257989": 409, "3641": 409, "206049": 409, "4559": 409, "152848": 409, "6146": 409, "103125": 409, "9110": 409, "0444861": 409, "2969": 409, "037334": 409, "3538": 409, "0302293": 409, "0231979": 409, "5695": 409, "0158702": 409, "8325": 409, "219777": 409, "2404": 409, "17764": 409, "2975": 409, "135864": 409, "3889": 409, "100424": 409, "5262": 409, "0677547": 409, "7799": 409, "172356": 409, "3018": 409, "144231": 409, "3606": 409, "116019": 409, "4483": 409, "0873881": 409, "5953": 409, "0596004": 409, "8728": 409, "00609695": 409, "2751": 409, "00517637": 409, "3241": 409, "00448956": 409, "3736": 409, "00394876": 409, "4248": 409, "00317463": 409, "5284": 409, "0204832": 409, "3276": 409, "0137691": 409, "4873": 409, "0114194": 409, "5876": 409, "00893304": 409, "7512": 409, "00653312": 409, "10272": 409, "0192409": 409, "3487": 409, "0168348": 409, "3986": 409, "0142343": 409, "4714": 409, "0119455": 409, "5617": 409, "00910648": 409, "7369": 409, "0781101": 409, "0614806": 409, "4366": 409, "046201": 409, "5810": 409, "0357023": 409, "7518": 409, "0222103": 409, "12086": 409, "326917": 409, "3284": 409, "273363": 409, "3927": 409, "220994": 409, "4858": 409, "166153": 409, "6462": 409, "0854403": 409, "12567": 409, "311348": 409, "3448": 409, "243012": 409, "4418": 409, "187933": 409, "5713": 409, "126819": 409, "8466": 409, "0855686": 409, "12548": 409, "0404778": 409, "3730": 409, "0329699": 409, "4579": 409, "0265272": 409, "5692": 409, "0207815": 409, "7265": 409, "0139037": 409, "10860": 409, "183003": 409, "161443": 409, "3741": 409, "129767": 409, "4654": 409, "0893345": 409, "6760": 409, "0610684": 409, "9890": 409, "15525": 409, "3829": 409, "125772": 409, "4727": 409, "101434": 409, "5861": 409, "0765083": 409, "7770": 409, "0537321": 409, "11064": 409, "0104209": 409, "3219": 409, "00908195": 409, "3694": 409, "00781277": 409, "4294": 409, "00651108": 409, "5153": 409, "0051719": 409, "6487": 409, "0321377": 409, "4176": 409, "0269904": 409, "4972": 409, "0220014": 409, "6100": 409, "016901": 409, "7941": 409, "0120042": 409, "11180": 409, "0373802": 409, "0314895": 409, "4262": 409, "0266731": 409, "5031": 409, "0217822": 409, "6161": 409, "0168219": 409, "7978": 409, "176031": 409, "3049": 409, "134442": 409, "3993": 409, "0843776": 409, "6362": 409, "0640577": 409, "8381": 409, "043787": 409, "12261": 409, "697876": 409, "3077": 409, "615338": 409, "3489": 409, "350147": 409, "6133": 409, "267289": 409, "8034": 409, "179695": 409, "11950": 409, "703207": 409, "3053": 409, "561805": 409, "3822": 409, "423052": 409, "5076": 409, "254835": 409, "171434": 409, "12526": 409, "0933483": 409, "3235": 409, "0725632": 409, "4161": 409, "0539197": 409, "5600": 409, "0376119": 409, "8029": 409, "0263137": 409, "11476": 409, "407388": 409, "340939": 409, "3543": 409, "261028": 409, "4627": 409, "151649": 409, "7965": 409, "103379": 409, "11684": 409, "358769": 409, "3314": 409, "283046": 409, "4201": 409, "212152": 409, "5604": 409, "158502": 409, "7502": 409, "107514": 409, "11059": 409, "0148329": 409, "0129116": 409, "3898": 409, "0110537": 409, "4553": 409, "00925277": 409, "5439": 409, "00716987": 409, "7019": 409, "0526609": 409, "3823": 409, "0447282": 409, "4501": 409, "0365834": 409, "5503": 409, "0274874": 409, "7324": 409, "0183895": 409, "10947": 409, "0556653": 409, "0465882": 409, "4321": 409, "039411": 409, "5108": 409, "0318745": 409, "6316": 409, "024706": 409, "8148": 409, "263316": 409, "3058": 409, "198303": 409, "4061": 409, "141966": 409, "5672": 409, "105849": 409, "7608": 409, "0687866": 409, "11707": 409, "793822": 409, "4057": 409, "996979": 409, "3230": 409, "54288": 409, "5933": 409, "412174": 409, "7815": 409, "274441": 409, "11737": 409, "03474": 409, "3113": 409, "832701": 409, "3868": 409, "564787": 409, "421781": 409, "7637": 409, "271587": 409, "11860": 409, "130834": 409, "3462": 409, "0943305": 409, "4802": 409, "0760123": 409, "0580473": 409, "7803": 409, "0395342": 409, "11458": 409, "635729": 409, "2850": 409, "379899": 409, "307908": 409, "5884": 409, "233057": 409, "7774": 409, "157518": 409, "11503": 409, "518276": 409, "3441": 409, "422517": 409, "4221": 409, "323476": 409, "5513": 409, "247251": 409, "7213": 409, "163369": 409, "10917": 409, "0192313": 409, "0168147": 409, "3991": 409, "0143274": 409, "4683": 409, "011932": 409, "5624": 409, "00914975": 409, "7334": 409, "0723144": 409, "3712": 409, "0613803": 409, "4373": 409, "050021": 409, "5366": 409, "0376949": 409, "7121": 409, "0249397": 409, "10763": 409, "0796627": 409, "3369": 409, "0616695": 409, "4352": 409, "0521326": 409, "5149": 409, "042188": 409, "0325741": 409, "8240": 409, "380582": 409, "2821": 409, "24038": 409, "4466": 409, "195271": 409, "5498": 409, "146935": 409, "7307": 409, "0948318": 409, "11322": 409, "08794": 409, "3947": 409, "913626": 409, "4701": 409, "737943": 409, "5820": 409, "558473": 409, "7690": 409, "369466": 409, "51009": 409, "2844": 409, "26974": 409, "3382": 409, "778244": 409, "5518": 409, "589803": 409, "7282": 409, "375284": 409, "11444": 409, "160705": 409, "3758": 409, "135495": 409, "4457": 409, "108718": 409, "5555": 409, "0811198": 409, "7445": 409, "0533513": 409, "11320": 409, "614109": 409, "3934": 409, "518614": 409, "418491": 409, "5772": 409, "31592": 409, "7647": 409, "211893": 409, "11401": 409, "836616": 409, "2842": 409, "699579": 409, "3399": 409, "544194": 409, "379699": 409, "228043": 409, "10428": 409, "un": 410, "u": 410, "sparsity_al": 410, "hotmap": 410, "jpg": 410, "x16": 411, "environment_vari": 411, "kernel_typ": [411, 412], "perfom": 411, "introduct": 411, "benchmark_it": 411, "benchmark_no_refresh": 411, "refresh": 411, "kxn": 411, "sparse_ratio": 411, "micro_b": 411, "output_fp32": 411, "micro_oc": 411, "sub_func_level": 411, "3d_infer": 411, "automaticlli": 411, "dsparse_lib_use_amx": 411, "amx_bf16_x16": 411, "output_bf16": 411, "interv": 411, "lower_bound": 411, "upper_bound": 411, "invalid": 411, "fp32_relu": 411, "src_dt": 411, "dst_dt": 411, "tanspos": 411, "4d": 411, "bs0": 411, "bs1": 411, "scr2": 411, "avx512f_p2031_p2013": 411, "has_binary_add": 411, "tile_n": 411, "coeffici": 411, "vnni_noperm_p2031_p1302": 411, "suuport": 411, "d0xd1x": 411, "d0": 411, "dst_type": 411, "padding_mask": 411, "badd_dim": 411, "blank": 411, "large_weight_threshold": 411, "add_bia": 411, "channel_num": 411, "quantize_dim_elt_num": 411, "src_data_typ": 411, "newli": 411, "subdir": 411, "benchmark_dir": 411, "bench_": 411, "test_": 411, "entranc": 411, "get_true_data_": 411, "check_result_": 411, "gen_case_": 411, "run_bench_": 411, "calc_flop": 411, "get_refresh_data_idx": 411, "benchmark_util": 411, "labl": 412, "run_ci": 412, "overwrit": 412, "it_per_cor": 412, "discard": 412, "new_input_fil": 412, "medium_n": 412, "ci": 412, "apach": 413, "copyright": 413, "parti": 413, "accompani": 413, "research": 413, "wish": 413, "bibtex": 413, "misc": 413, "hanwen": 413, "haihao": 413, "shen": 413, "dong": 413, "hengyu": 413, "meng": 413, "wenxin": 413, "zhang": 413, "howpublish": 413, "url": 413, "year": 413, "logo": 413, "atom": 413, "phi": 413, "pentium": 413, "vtune": 413, "corpor": 413, "subsidiari": 413, "toler": 414, "rel": 414, "absolut": [414, 417, 418], "proport": [414, 415], "vision": 416, "speech": 416, "multimod": 416, "text_classifi": 416, "great": 416, "9998425245285034": 416, "believ": 416, "beauti": 416, "evoc": 416, "ve": 416, "seen": 416, "9998886585235596": 416, "bear": 417, "brain": 417, "damag": 417, "hypothesi": 417, "yann": 417, "lecun": 417, "salient": 417, "anywher": 417, "filter": 417, "magnitud": 417, "lowest": 417, "freez": 417, "grouplasso": 417, "hyper": 417, "didn": 417, "pruning_conf": 417, "littl": 418, "degrad": 418, "ex": 418, "affin": 418, "math": 418, "zeropoint": 418, "asymmetr": 418, "overflow": 418, "fp16": 418, "unseen": 418, "peopl": 418, "emul": 418, "fake": 418, "backward": 418, "mimic": 418, "made": 418, "ultim": 418, "either": 418, "pain": 418, "lossi": 418, "fx": 418, "eager": 418, "qat": 418, "site": 419, "secur": 423, "legal": 423, "injector": 425}, "objects": {"": [[351, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [351, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [351, 1, 1, "_CPPv42jd", "jd"], [351, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [353, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [354, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [354, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [354, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [354, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [354, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [354, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [354, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [352, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [352, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [352, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [352, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [352, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [352, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [352, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [352, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [352, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [354, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [354, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [354, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [354, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [354, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [354, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [354, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [354, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [354, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [354, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [351, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [351, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [351, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [351, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [351, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [351, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [351, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [351, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [351, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [351, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [352, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [352, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [352, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [352, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [352, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [352, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [352, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [352, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [352, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [352, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [352, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [352, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [352, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [352, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [352, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [352, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [352, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [352, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [352, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [352, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [352, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [352, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [352, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [352, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [352, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [352, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [352, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [351, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [351, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [351, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [351, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [351, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [351, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [351, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [351, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [351, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [351, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [351, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [351, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [351, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [351, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [352, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [352, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [352, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [352, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [352, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [352, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [352, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [352, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [352, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [352, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [352, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [352, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [352, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [352, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [352, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [352, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [352, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [352, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [352, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [352, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [352, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [352, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [352, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [352, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [352, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [352, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [352, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [352, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [352, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [352, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [352, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [352, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [352, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute"], [352, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [352, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute::ctx"], [352, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [352, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [352, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [352, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [352, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [352, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [352, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [352, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [352, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [352, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [352, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [352, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [352, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [352, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [352, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [352, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [352, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [352, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [352, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [352, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [352, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [352, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [352, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [352, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [352, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [352, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [352, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [352, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [352, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [352, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [352, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [352, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [352, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [352, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [352, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [352, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [352, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [352, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [352, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [352, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [352, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [352, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [352, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [353, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [353, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [353, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [353, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [353, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [353, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [353, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [353, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [353, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [353, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [353, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [353, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [353, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [353, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [353, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [353, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [353, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [353, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [353, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [353, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [353, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [353, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [353, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [353, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [353, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [353, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [353, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [353, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [353, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [353, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [353, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [352, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [352, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [352, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [352, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [352, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [352, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [352, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [352, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [352, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [352, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [352, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [352, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [352, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [352, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [352, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [352, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [352, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [352, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [352, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [352, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [352, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [352, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [352, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [352, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [352, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [352, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [352, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [352, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [352, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [352, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [352, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [352, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [352, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [352, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [352, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [352, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [352, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [352, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [352, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [354, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [354, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [354, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [354, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [354, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [354, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [354, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [354, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [354, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [354, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [354, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [354, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [354, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [354, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [354, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [354, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [354, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [354, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [354, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [354, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [354, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [354, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [354, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [354, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [354, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [354, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [354, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [354, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [354, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [354, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [354, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [354, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [354, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [354, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [354, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [354, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [354, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [354, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [354, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [354, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [354, 1, 1, "_CPPv4N2jd3ssd12matmul_inputE", "jd::ssd::matmul_input"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::APPEND_SUM"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::SCALE0"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::SRC0"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::SRC1"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::SRC2"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::ZP0"], [354, 6, 1, "_CPPv4N2jd3ssd12matmul_input5inputE", "jd::ssd::matmul_input::input"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::input::APPEND_SUM"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::input::SCALE0"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::input::SRC0"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::input::SRC1"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::input::SRC2"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::input::ZP0"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::input::matmul_io_MAX"], [354, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::matmul_io_MAX"], [354, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [354, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [354, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [354, 1, 1, "_CPPv4N2jd3ssd13matmul_outputE", "jd::ssd::matmul_output"], [354, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::DST0"], [354, 6, 1, "_CPPv4N2jd3ssd13matmul_output6outputE", "jd::ssd::matmul_output::output"], [354, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::output::DST0"], [354, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [354, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [354, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [354, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [354, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [354, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [354, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [354, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [354, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [354, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [354, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [354, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [354, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [354, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [354, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [354, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [354, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [354, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [354, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [354, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [354, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [354, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [354, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [354, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [354, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [354, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [354, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [354, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [354, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [354, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [354, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [354, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [354, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [354, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [354, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [354, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [354, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [354, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [354, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [354, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [354, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [354, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [354, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [354, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [354, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [354, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [354, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [354, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [354, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [354, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [354, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [354, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [354, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [354, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [354, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [354, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [354, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [354, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [354, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [354, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [354, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [354, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [354, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [352, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [352, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [352, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [352, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [352, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [352, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [352, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [352, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [352, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [352, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [352, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [352, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [352, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [352, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [352, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [352, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [352, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [352, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [352, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [0, 9, 0, "-", "clang-format"], [1, 9, 0, "-", "convert_falcon"], [2, 9, 0, "-", "convert_gptj"], [3, 9, 0, "-", "convert_gptneox"], [4, 9, 0, "-", "convert_llama"], [5, 9, 0, "-", "convert_mpt"], [220, 9, 0, "-", "intel_extension_for_transformers"], [257, 9, 0, "-", "sparsity_all"], [258, 9, 0, "-", "test_add_cls_token"], [259, 9, 0, "-", "test_add_embeddings"], [260, 9, 0, "-", "test_add_zeros"], [261, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [262, 9, 0, "-", "test_attention_reshape"], [263, 9, 0, "-", "test_baddbmm"], [264, 9, 0, "-", "test_bert_mini_fp32"], [265, 9, 0, "-", "test_binary_op"], [266, 9, 0, "-", "test_binaryop"], [267, 9, 0, "-", "test_cast_to"], [268, 9, 0, "-", "test_concat"], [269, 9, 0, "-", "test_conv"], [270, 9, 0, "-", "test_conv_int8"], [271, 9, 0, "-", "test_conv_reshape"], [272, 9, 0, "-", "test_decoder_attn_reshape"], [273, 9, 0, "-", "test_dispatcher_tuning_acc"], [274, 9, 0, "-", "test_dispatcher_tuning_throughput"], [275, 9, 0, "-", "test_dolly_pattern"], [276, 9, 0, "-", "test_dynamic_quantization"], [277, 9, 0, "-", "test_electra"], [278, 9, 0, "-", "test_embedding"], [279, 9, 0, "-", "test_embeddingbag"], [280, 9, 0, "-", "test_execution_options"], [281, 9, 0, "-", "test_fwk"], [282, 9, 0, "-", "test_gather"], [283, 9, 0, "-", "test_gelu"], [284, 9, 0, "-", "test_gpt_int8"], [285, 9, 0, "-", "test_graph_dispatch"], [286, 9, 0, "-", "test_graph_optimizer"], [287, 9, 0, "-", "test_insert_input_output_data"], [288, 9, 0, "-", "test_is_supported_onnx_graph"], [289, 9, 0, "-", "test_last_layer_shape"], [290, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [291, 9, 0, "-", "test_layer_norm_with_transpose"], [292, 9, 0, "-", "test_layernorm"], [293, 9, 0, "-", "test_linear"], [294, 9, 0, "-", "test_linear_int8"], [295, 9, 0, "-", "test_llama_pattern"], [296, 9, 0, "-", "test_main"], [297, 9, 0, "-", "test_matmul"], [298, 9, 0, "-", "test_matmul_int8"], [299, 9, 0, "-", "test_matmul_with_bias_relu"], [300, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [301, 9, 0, "-", "test_matmul_with_bias_tanh"], [302, 9, 0, "-", "test_merged_embeddingbag"], [303, 9, 0, "-", "test_model"], [304, 9, 0, "-", "test_neox_rotary_pos_emb"], [305, 9, 0, "-", "test_onnx_utils"], [306, 9, 0, "-", "test_operator_adaptor"], [307, 9, 0, "-", "test_ops"], [308, 9, 0, "-", "test_padding_seq"], [309, 9, 0, "-", "test_padding_sequence"], [310, 9, 0, "-", "test_pattern_dispatch"], [311, 9, 0, "-", "test_permute"], [312, 9, 0, "-", "test_position_embeddings"], [313, 9, 0, "-", "test_pow"], [314, 9, 0, "-", "test_primitive_cache_acc"], [315, 9, 0, "-", "test_primitive_cache_throughput"], [316, 9, 0, "-", "test_qkv_merge"], [317, 9, 0, "-", "test_qkv_reshape"], [318, 9, 0, "-", "test_quant_onnx_execute"], [319, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [320, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [321, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [322, 9, 0, "-", "test_size"], [323, 9, 0, "-", "test_slice"], [324, 9, 0, "-", "test_softmax"], [325, 9, 0, "-", "test_start_end_logits"], [326, 9, 0, "-", "test_static_compressed_buffer"], [327, 9, 0, "-", "test_tanh"], [328, 9, 0, "-", "test_text_encoder"], [329, 9, 0, "-", "test_text_encoder_bf16"], [330, 9, 0, "-", "test_tf_utils"], [331, 9, 0, "-", "test_token_type_embeddings"], [332, 9, 0, "-", "test_transpose"], [333, 9, 0, "-", "test_transpose_batch_matmul"], [334, 9, 0, "-", "test_two_linear"], [335, 9, 0, "-", "test_unet"], [336, 9, 0, "-", "test_unet_bf16"], [337, 9, 0, "-", "test_unsqueeze"], [338, 9, 0, "-", "test_vae_decoder"], [339, 9, 0, "-", "test_vae_decoder_bf16"], [340, 9, 0, "-", "test_weight_sharing_acc"], [341, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [342, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [343, 9, 0, "-", "test_weight_sharing_throughput"]], "convert_falcon": [[1, 10, 1, "", "bytes_to_unicode"]], "convert_gptj": [[2, 10, 1, "", "bytes_to_unicode"]], "convert_gptneox": [[3, 10, 1, "", "bytes_to_unicode"]], "convert_llama": [[4, 11, 1, "", "LazyUnpickler"], [4, 11, 1, "", "NEFileType"], [4, 10, 1, "", "bounded_parallel_map"], [4, 10, 1, "", "find_multifile_paths"], [4, 10, 1, "", "handle_quantization"], [4, 10, 1, "", "load_some_model"], [4, 10, 1, "", "nth_multifile_path"]], "convert_llama.LazyUnpickler": [[4, 12, 1, "", "find_class"]], "convert_mpt": [[5, 10, 1, "", "bytes_to_unicode"]], "intel_extension_for_transformers": [[6, 9, 0, "-", "backends"], [211, 9, 0, "-", "evaluation"], [227, 9, 0, "-", "optimization"], [255, 9, 0, "-", "preprocessing"]], "intel_extension_for_transformers.backends": [[206, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[17, 9, 0, "-", "compile"], [206, 10, 1, "", "neural_engine_bin"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[7, 9, 0, "-", "compile"], [8, 9, 0, "-", "dynamic_quantize"], [10, 9, 0, "-", "extractors"], [15, 9, 0, "-", "graph"], [16, 9, 0, "-", "graph_utils"], [18, 9, 0, "-", "loaders"], [20, 9, 0, "-", "logger"], [21, 9, 0, "-", "onnx_utils"], [43, 9, 0, "-", "ops"], [89, 9, 0, "-", "optimizer"], [113, 9, 0, "-", "sub_graph"], [204, 9, 0, "-", "tf_utils"], [205, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[7, 10, 1, "", "compile"], [7, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[9, 9, 0, "-", "extractor"], [11, 9, 0, "-", "onnx_extractor"], [12, 9, 0, "-", "tf_extractor"], [13, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[9, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[11, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[12, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[13, 11, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[14, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[14, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[14, 12, 1, "", "add_config_item"], [14, 12, 1, "", "change_node_input_tensors"], [14, 12, 1, "", "change_node_output_tensors"], [14, 12, 1, "", "dump_tensor"], [14, 12, 1, "", "engine_init"], [14, 12, 1, "", "get_next_node_names"], [14, 12, 1, "", "get_node_by_name"], [14, 12, 1, "", "get_node_id"], [14, 12, 1, "", "get_pre_node_names"], [14, 12, 1, "", "get_sparse_nodes_name"], [14, 12, 1, "", "get_tensor_idx"], [14, 12, 1, "", "graph_dispatch"], [14, 12, 1, "", "graph_init"], [14, 12, 1, "", "inference"], [14, 12, 1, "", "inquire_config_item"], [14, 12, 1, "", "insert_nodes"], [14, 12, 1, "", "modify_node_connections"], [14, 12, 1, "", "remove_nodes"], [14, 12, 1, "", "rename_node"], [14, 12, 1, "", "save"], [14, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[16, 11, 1, "", "LazyImport"], [16, 10, 1, "", "autocast_init"], [16, 10, 1, "", "construct_node"], [16, 10, 1, "", "del_environ_var"], [16, 10, 1, "", "del_environ_vars"], [16, 10, 1, "", "environ_info_init"], [16, 10, 1, "", "get_autocast_info"], [16, 10, 1, "", "get_data_dtype"], [16, 10, 1, "", "get_environ_info"], [16, 10, 1, "", "get_model_fwk_name"], [16, 10, 1, "", "get_quant_info"], [16, 10, 1, "", "insert_environ_info"], [16, 10, 1, "", "insert_pattern"], [16, 10, 1, "", "insert_quant_info"], [16, 10, 1, "", "list2str"], [16, 10, 1, "", "names_from_input"], [16, 10, 1, "", "pattern_mapping"], [16, 10, 1, "", "pattern_mapping_conf_validation"], [16, 10, 1, "", "quant_info_init"], [16, 10, 1, "", "remove_environ_info_item"], [16, 10, 1, "", "remove_environ_info_items"], [16, 10, 1, "", "search_pattern"], [16, 10, 1, "", "search_straight_pattern"], [16, 10, 1, "", "set_autocast"], [16, 10, 1, "", "set_environ_var"], [16, 10, 1, "", "set_environ_vars"], [16, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[19, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[19, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[20, 11, 1, "", "Logger"], [20, 10, 1, "", "debug"], [20, 10, 1, "", "error"], [20, 10, 1, "", "fatal"], [20, 10, 1, "", "info"], [20, 10, 1, "", "log"], [20, 10, 1, "", "warn"], [20, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[20, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[21, 10, 1, "", "bias_to_int32"], [21, 10, 1, "", "change_num_name"], [21, 10, 1, "", "get_children"], [21, 10, 1, "", "get_initializer_children_names"], [21, 10, 1, "", "get_node_children_names"], [21, 10, 1, "", "graph_node_names_details"], [21, 10, 1, "", "is_supported_onnx_graph"], [21, 10, 1, "", "is_supported_onnx_node"], [21, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[22, 9, 0, "-", "all"], [23, 9, 0, "-", "assert"], [24, 9, 0, "-", "baddbmm"], [25, 9, 0, "-", "batch_matmul"], [26, 9, 0, "-", "batch_matmul_v2"], [27, 9, 0, "-", "bias_add"], [28, 9, 0, "-", "binary_op"], [29, 9, 0, "-", "cast"], [30, 9, 0, "-", "concat"], [31, 9, 0, "-", "conv"], [32, 9, 0, "-", "cos"], [33, 9, 0, "-", "empty_ops"], [34, 9, 0, "-", "expand_dims"], [35, 9, 0, "-", "fused_batch_matmul_v2"], [36, 9, 0, "-", "fused_batch_norm_v3"], [37, 9, 0, "-", "fused_gemm"], [38, 9, 0, "-", "fused_matmul"], [39, 9, 0, "-", "gather"], [40, 9, 0, "-", "gather_elements"], [41, 9, 0, "-", "gelu"], [42, 9, 0, "-", "gemm"], [44, 9, 0, "-", "iterator_get_next"], [45, 9, 0, "-", "iterator_v2"], [46, 9, 0, "-", "layer_normalization"], [47, 9, 0, "-", "log_softmax"], [48, 9, 0, "-", "map_and_batch_dataset"], [49, 9, 0, "-", "matmul"], [50, 9, 0, "-", "mean"], [51, 9, 0, "-", "mkl_layer_norm"], [52, 9, 0, "-", "model_dataset"], [53, 9, 0, "-", "one_hot"], [54, 9, 0, "-", "onnx_input"], [55, 9, 0, "-", "op"], [56, 9, 0, "-", "optimize_dataset"], [57, 9, 0, "-", "pack"], [58, 9, 0, "-", "padding_sequence"], [59, 9, 0, "-", "placeholder"], [60, 9, 0, "-", "pos_embed"], [61, 9, 0, "-", "pow"], [62, 9, 0, "-", "quantize_linear"], [63, 9, 0, "-", "quantize_v2"], [64, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [65, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [66, 9, 0, "-", "reduce_mean"], [67, 9, 0, "-", "reduce_sum"], [68, 9, 0, "-", "reorder"], [69, 9, 0, "-", "reshape"], [70, 9, 0, "-", "resize"], [71, 9, 0, "-", "rsub"], [72, 9, 0, "-", "scatter_elements"], [73, 9, 0, "-", "shape"], [74, 9, 0, "-", "sin"], [75, 9, 0, "-", "size"], [76, 9, 0, "-", "slice"], [77, 9, 0, "-", "slice_position_ids"], [78, 9, 0, "-", "softmax"], [79, 9, 0, "-", "split"], [80, 9, 0, "-", "squeeze"], [81, 9, 0, "-", "strided_slice"], [82, 9, 0, "-", "tensor"], [83, 9, 0, "-", "top_k"], [84, 9, 0, "-", "transpose"], [85, 9, 0, "-", "unpack"], [86, 9, 0, "-", "unsqueeze"], [87, 9, 0, "-", "view"], [88, 9, 0, "-", "where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[22, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[23, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[24, 11, 1, "", "Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[25, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[26, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[27, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[28, 11, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[29, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[30, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[31, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[32, 11, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[33, 11, 1, "", "Add"], [33, 11, 1, "", "AddV2"], [33, 11, 1, "", "Arange"], [33, 11, 1, "", "BinaryAdd"], [33, 11, 1, "", "Constant"], [33, 11, 1, "", "ConstantOfShape"], [33, 11, 1, "", "Convolution"], [33, 11, 1, "", "CumSum"], [33, 11, 1, "", "Dequantize"], [33, 11, 1, "", "DequantizeLinear"], [33, 11, 1, "", "Einsum"], [33, 11, 1, "", "EmbeddingBag"], [33, 11, 1, "", "Erf"], [33, 11, 1, "", "Expand"], [33, 11, 1, "", "ExpandIndices"], [33, 11, 1, "", "Fill"], [33, 11, 1, "", "FlatMapDataset"], [33, 11, 1, "", "Flatten"], [33, 11, 1, "", "Floor_divide"], [33, 11, 1, "", "Identity"], [33, 11, 1, "", "InnerProduct"], [33, 11, 1, "", "Input"], [33, 11, 1, "", "LatRange"], [33, 11, 1, "", "ListConstruct"], [33, 11, 1, "", "ListUnpack"], [33, 11, 1, "", "Loop"], [33, 11, 1, "", "MakeIterator"], [33, 11, 1, "", "Masked_fill"], [33, 11, 1, "", "MatMulWithBias"], [33, 11, 1, "", "MatMulWithBiasAdd"], [33, 11, 1, "", "MatMulWithBiasGelu"], [33, 11, 1, "", "MatMulWithBiasRelu"], [33, 11, 1, "", "MatMulWithBiasSigmoid"], [33, 11, 1, "", "MatMulWithBiasTanh"], [33, 11, 1, "", "Matmul"], [33, 11, 1, "", "Max"], [33, 11, 1, "", "MergedEmbeddingbag"], [33, 11, 1, "", "MultiHeadAttenion"], [33, 11, 1, "", "Onehot"], [33, 11, 1, "", "OpAny"], [33, 11, 1, "", "Output"], [33, 11, 1, "", "PositionIds"], [33, 11, 1, "", "QLinearAdd"], [33, 11, 1, "", "QLinearMatMul"], [33, 11, 1, "", "QLinearMul"], [33, 11, 1, "", "Range"], [33, 11, 1, "", "RealDiv"], [33, 11, 1, "", "Reciprocal"], [33, 11, 1, "", "Relu"], [33, 11, 1, "", "Repeat"], [33, 11, 1, "", "Rsqrt"], [33, 11, 1, "", "SequenceLength"], [33, 11, 1, "", "Sigmoid"], [33, 11, 1, "", "Silu"], [33, 11, 1, "", "Sqrt"], [33, 11, 1, "", "Square"], [33, 11, 1, "", "SquaredDifference"], [33, 11, 1, "", "Stack"], [33, 11, 1, "", "StopGradient"], [33, 11, 1, "", "Tanh"], [33, 11, 1, "", "TensorSliceDataset"], [33, 11, 1, "", "Tile"], [33, 11, 1, "", "TokenTypeIds"], [33, 11, 1, "", "TransposeBatchMatMul"], [33, 11, 1, "", "Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[34, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[36, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[36, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[37, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[38, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[39, 11, 1, "", "Gather"], [39, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[40, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[41, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[42, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[44, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[44, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[45, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[46, 11, 1, "", "LayerNorm"], [46, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[47, 11, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[48, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[49, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[50, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[52, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[53, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[54, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[54, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[55, 11, 1, "", "Operator"], [55, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[55, 12, 1, "", "construct"], [55, 12, 1, "", "extract"], [55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[56, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[57, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[58, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[59, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[60, 11, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[61, 11, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[62, 11, 1, "", "Quantize"], [62, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[63, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[65, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[66, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[67, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[68, 11, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[69, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[70, 11, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[71, 11, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[72, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[73, 11, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[74, 11, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[75, 11, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[76, 11, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[77, 11, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[78, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[79, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[80, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[81, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[81, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[82, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[83, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[83, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[84, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[84, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[85, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[85, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[86, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[86, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[87, 11, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[87, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[88, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where": [[88, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[89, 11, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[89, 12, 1, "", "optimize"], [89, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[90, 9, 0, "-", "InnerproductReshapeFusion"], [91, 9, 0, "-", "add_cls_token"], [92, 9, 0, "-", "add_embeddings"], [93, 9, 0, "-", "arangewithreciprocal"], [94, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [95, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [96, 9, 0, "-", "attentionBlock_QKVPreReshape"], [97, 9, 0, "-", "attentionBlock_QKVReshape"], [98, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [99, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [100, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [101, 9, 0, "-", "attention_reshape"], [102, 9, 0, "-", "cast_to"], [103, 9, 0, "-", "collect_quant_info"], [104, 9, 0, "-", "conv_reshape"], [105, 9, 0, "-", "decoder_attn_reshape"], [106, 9, 0, "-", "einsumwitharange"], [107, 9, 0, "-", "embeddingbag"], [108, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [109, 9, 0, "-", "gelu"], [110, 9, 0, "-", "generate_sequence"], [111, 9, 0, "-", "groupNorm"], [112, 9, 0, "-", "groupNormSwish"], [114, 9, 0, "-", "innerproductwithbiasgelu"], [115, 9, 0, "-", "innerproductwithslice"], [116, 9, 0, "-", "innerproductwithswish"], [117, 9, 0, "-", "input_data"], [118, 9, 0, "-", "input_file"], [119, 9, 0, "-", "insert_bf16_node"], [120, 9, 0, "-", "insert_quant_node"], [121, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [122, 9, 0, "-", "interact_features"], [123, 9, 0, "-", "last_layer_shape"], [124, 9, 0, "-", "layer_norm"], [125, 9, 0, "-", "layer_norm_with_reduce_mean"], [126, 9, 0, "-", "layer_norm_with_transpose"], [127, 9, 0, "-", "llama_embeding"], [128, 9, 0, "-", "llama_matmulwithtranspose"], [129, 9, 0, "-", "llama_postprocess"], [130, 9, 0, "-", "llama_rotary_pos_emb"], [131, 9, 0, "-", "lower_all_tuples"], [132, 9, 0, "-", "matmul_with_bias"], [133, 9, 0, "-", "matmul_with_bias_add"], [134, 9, 0, "-", "matmul_with_bias_gelu"], [135, 9, 0, "-", "matmul_with_bias_relu"], [136, 9, 0, "-", "matmul_with_bias_sigmoid"], [137, 9, 0, "-", "matmul_with_bias_tanh"], [138, 9, 0, "-", "matmul_with_bias_unsqueeze"], [139, 9, 0, "-", "matmul_with_transpose"], [140, 9, 0, "-", "matmul_with_transpose_scale_add"], [141, 9, 0, "-", "merged_embeddingbag"], [142, 9, 0, "-", "multi_head_attention"], [143, 9, 0, "-", "neox_reorder_change"], [144, 9, 0, "-", "neox_rotary_pos_emb"], [145, 9, 0, "-", "operator_adaptor"], [146, 9, 0, "-", "output_data"], [147, 9, 0, "-", "padding_sequence"], [148, 9, 0, "-", "pattern"], [149, 9, 0, "-", "position_embeddings"], [150, 9, 0, "-", "position_embeddings_v1"], [151, 9, 0, "-", "qkv_merge"], [152, 9, 0, "-", "qkv_reshape"], [153, 9, 0, "-", "quant_gather_to_bf16"], [154, 9, 0, "-", "quantize_fusion"], [155, 9, 0, "-", "quantized_graph_dtype_refactor"], [156, 9, 0, "-", "remove_constant_op"], [157, 9, 0, "-", "remove_last_view"], [158, 9, 0, "-", "remove_range"], [159, 9, 0, "-", "remove_unused_operator"], [160, 9, 0, "-", "remove_zeros"], [161, 9, 0, "-", "removeslice"], [162, 9, 0, "-", "reshape_after_restore_hidden_states"], [163, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [164, 9, 0, "-", "reshape_before_restore_hidden_states"], [165, 9, 0, "-", "reshape_fusion"], [166, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [167, 9, 0, "-", "rms_norm"], [168, 9, 0, "-", "rotary_pos_emb"], [169, 9, 0, "-", "slicemask"], [170, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [171, 9, 0, "-", "stableDiffusion_MHA"], [172, 9, 0, "-", "stableDiffusion_MHAReshape"], [173, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [174, 9, 0, "-", "stableDiffusion_bf16Convert"], [175, 9, 0, "-", "start_end_logits"], [176, 9, 0, "-", "subgraph_matcher"], [177, 9, 0, "-", "textEncdoer_word_embedding"], [178, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [179, 9, 0, "-", "textEncoder_AttentionReshape"], [180, 9, 0, "-", "textEncoder_KVReshape"], [181, 9, 0, "-", "textEncoder_MulReshape"], [182, 9, 0, "-", "textEncoder_QReshape"], [183, 9, 0, "-", "textEncoder_SoftmaxReshape"], [184, 9, 0, "-", "textEncoder_causal_attention_mask"], [185, 9, 0, "-", "token_type_embeddings"], [186, 9, 0, "-", "token_type_embeddings_v1"], [187, 9, 0, "-", "torch_embedding"], [188, 9, 0, "-", "torch_ip_insert_bias"], [189, 9, 0, "-", "torch_unpack_baddbmm"], [190, 9, 0, "-", "torchinsertbf16node"], [191, 9, 0, "-", "torchpaddingsquence"], [192, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [193, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [194, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [195, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [196, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [197, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [198, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [199, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [200, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [201, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [202, 9, 0, "-", "transpose_batch_matmul"], [203, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[90, 11, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[91, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[92, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[93, 11, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[94, 11, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[95, 11, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[96, 11, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[97, 11, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[98, 11, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[99, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[100, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[101, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[102, 11, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[103, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[104, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[105, 11, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[106, 11, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[107, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[108, 11, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[109, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[110, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[111, 11, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[112, 11, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[114, 11, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[115, 11, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[116, 11, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[117, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[118, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[119, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[120, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[121, 11, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[122, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[123, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[124, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[125, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[126, 11, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[127, 11, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[128, 11, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[129, 11, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[130, 11, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[131, 11, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[132, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[133, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[134, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[135, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[136, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[137, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[138, 11, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[139, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[140, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[141, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[142, 11, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[143, 11, 1, "", "NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[144, 11, 1, "", "NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[145, 11, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[146, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[147, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[148, 11, 1, "", "Pattern"], [148, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[149, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[150, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[151, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[152, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[153, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[154, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[155, 11, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[156, 11, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[157, 11, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[158, 11, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[159, 11, 1, "", "RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[160, 11, 1, "", "RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[161, 11, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[162, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[163, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[164, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[165, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[166, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[167, 11, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[168, 11, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[169, 11, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[170, 11, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[171, 11, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[172, 11, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[173, 11, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[174, 11, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[175, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[176, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[177, 11, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[178, 11, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[179, 11, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[180, 11, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[181, 11, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[182, 11, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[183, 11, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[184, 11, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[185, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[186, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[187, 11, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[188, 11, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[189, 11, 1, "", "TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[190, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[191, 11, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[192, 11, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[193, 11, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[194, 11, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[195, 11, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[196, 11, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[197, 11, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[198, 11, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[199, 11, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[200, 11, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[201, 11, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[202, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[203, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[204, 13, 1, "", "TF_DTYPE_ID"], [204, 10, 1, "", "create_tf_node"], [204, 10, 1, "", "get_tensor_dest_op"], [204, 10, 1, "", "graph_node_names_details"], [204, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[205, 10, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[210, 9, 0, "-", "hf_eval"], [213, 9, 0, "-", "lm_code_eval"], [215, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.hf_eval": [[207, 9, 0, "-", "evaluator"], [209, 9, 0, "-", "hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[208, 9, 0, "-", "cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[208, 11, 1, "", "DataCollatorForSupervisedDataset"], [208, 10, 1, "", "preprocess"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[212, 9, 0, "-", "evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[212, 10, 1, "", "evaluate"], [212, 10, 1, "", "pattern_match"]], "intel_extension_for_transformers.evaluation.lm_eval": [[214, 9, 0, "-", "evaluator"], [217, 9, 0, "-", "models"], [218, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[214, 10, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[216, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[216, 11, 1, "", "AutoCausalLM"], [216, 11, 1, "", "AutoSeq2SeqLM"], [216, 11, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[219, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[219, 11, 1, "", "LambadaOpenAI"], [219, 11, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[221, 9, 0, "-", "benchmark"], [222, 9, 0, "-", "config"], [223, 9, 0, "-", "distillation"], [226, 9, 0, "-", "dynamic"], [229, 9, 0, "-", "mixture"], [230, 9, 0, "-", "model"], [231, 9, 0, "-", "modeling"], [235, 9, 0, "-", "nas"], [237, 9, 0, "-", "optimizer"], [238, 9, 0, "-", "optimizer_tf"], [239, 9, 0, "-", "pipeline"], [240, 9, 0, "-", "pruner"], [242, 9, 0, "-", "pruning"], [243, 9, 0, "-", "quantization"], [244, 9, 0, "-", "trainer"], [246, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[221, 10, 1, "", "benchmark"], [221, 10, 1, "", "get_example_inputs"], [221, 10, 1, "", "preprocess_model"], [221, 10, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[222, 11, 1, "", "AutoDistillationConfig"], [222, 11, 1, "", "BenchmarkConfig"], [222, 11, 1, "", "DistillationConfig"], [222, 11, 1, "", "DynamicLengthConfig"], [222, 11, 1, "", "FlashDistillationConfig"], [222, 11, 1, "", "NASConfig"], [222, 11, 1, "", "Provider"], [222, 11, 1, "", "PrunerV2"], [222, 11, 1, "", "PruningConfig"], [222, 11, 1, "", "QuantizationConfig"], [222, 11, 1, "", "TFDistillationConfig"], [222, 11, 1, "", "WeightPruningConfig"], [222, 10, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[222, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[223, 11, 1, "", "Criterion"], [223, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[224, 9, 0, "-", "drop_and_restore_utils"], [225, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[224, 10, 1, "", "sample_layer_configuration"], [224, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[225, 11, 1, "", "Evolution"], [225, 10, 1, "", "approx_ratio"], [225, 10, 1, "", "inverse"], [225, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[225, 12, 1, "", "add_gene"], [225, 12, 1, "", "convex_hull"], [225, 12, 1, "", "crossover"], [225, 12, 1, "", "get_store"], [225, 12, 1, "", "load_store"], [225, 12, 1, "", "mutate"], [225, 12, 1, "", "pareto_frontier"], [225, 12, 1, "", "save_population"], [225, 12, 1, "", "save_store"], [225, 12, 1, "", "set_lower_constraint"], [225, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[228, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[228, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[228, 12, 1, "", "create_distillers"], [228, 12, 1, "", "estimate"], [228, 12, 1, "", "init_by_cfg"], [228, 12, 1, "", "load_search_results"], [228, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[230, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[230, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.modeling": [[232, 9, 0, "-", "modeling_base_seq2seq"], [233, 9, 0, "-", "modeling_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[233, 11, 1, "", "INCDecoder"], [233, 11, 1, "", "INCEncoder"]], "intel_extension_for_transformers.optimization.nas": [[234, 9, 0, "-", "basic_nas"], [236, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[234, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[234, 12, 1, "", "estimate"], [234, 12, 1, "", "execute"], [234, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[236, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[237, 11, 1, "", "NoTrainerOptimizer"], [237, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[237, 12, 1, "", "distill"], [237, 12, 1, "", "init_distiller"], [237, 12, 1, "", "init_pruner"], [237, 12, 1, "", "init_quantizer"], [237, 12, 1, "", "prune"], [237, 12, 1, "", "quantize"], [237, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[237, 12, 1, "", "fit"], [237, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[238, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[238, 12, 1, "", "autodistill"], [238, 12, 1, "", "build_train_func"], [238, 12, 1, "", "builtin_eval_func"], [238, 12, 1, "", "distill"], [238, 12, 1, "", "init_distiller"], [238, 12, 1, "", "init_pruner"], [238, 12, 1, "", "init_quantizer"], [238, 12, 1, "", "model_builder_builtin"], [238, 12, 1, "", "prune"], [238, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[239, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[241, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[241, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[241, 14, 1, "", "config_file_path"], [241, 12, 1, "", "get_sparsity_ratio"], [241, 14, 1, "", "model"], [241, 12, 1, "", "on_after_eval"], [241, 12, 1, "", "on_after_optimizer_step"], [241, 12, 1, "", "on_before_eval"], [241, 12, 1, "", "on_before_optimizer_step"], [241, 12, 1, "", "on_epoch_begin"], [241, 12, 1, "", "on_epoch_end"], [241, 12, 1, "", "on_step_begin"], [241, 12, 1, "", "on_step_end"], [241, 12, 1, "", "on_train_begin"], [241, 12, 1, "", "on_train_end"], [241, 14, 1, "", "pruner_info"], [241, 14, 1, "", "pruners"], [241, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[242, 11, 1, "", "PrunerConfig"], [242, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[243, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[244, 11, 1, "", "BaseTrainer"], [244, 11, 1, "", "NLPSeq2SeqTrainer"], [244, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[244, 12, 1, "", "auto_distil_evaluation_loop"], [244, 12, 1, "", "autodistillation"], [244, 12, 1, "", "benchmark"], [244, 12, 1, "", "builtin_eval_func"], [244, 12, 1, "", "builtin_train_func"], [244, 12, 1, "", "compute_loss"], [244, 12, 1, "", "create_optimizer_builtin"], [244, 12, 1, "", "distill"], [244, 12, 1, "", "export_to_bf16_onnx"], [244, 12, 1, "", "export_to_fp32_onnx"], [244, 12, 1, "", "export_to_int8_onnx"], [244, 12, 1, "", "export_to_jit"], [244, 12, 1, "", "export_to_onnx"], [244, 12, 1, "", "init_distiller"], [244, 12, 1, "", "init_pruner"], [244, 12, 1, "", "init_quantizer"], [244, 12, 1, "", "model_builder_builtin"], [244, 12, 1, "", "nas"], [244, 12, 1, "", "orchestrate_optimizations"], [244, 12, 1, "", "prune"], [244, 12, 1, "", "quantize"], [244, 12, 1, "", "run_evolutionary_search"], [244, 12, 1, "", "set_dynamic_config"], [244, 12, 1, "", "train"], [244, 12, 1, "", "training_step"], [244, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[244, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[245, 9, 0, "-", "get_throughput"], [247, 9, 0, "-", "metrics"], [248, 9, 0, "-", "models"], [251, 9, 0, "-", "objectives"], [252, 9, 0, "-", "utility"], [253, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[247, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[249, 9, 0, "-", "modeling_bert_dynamic"], [250, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[249, 11, 1, "", "BertAttention"], [249, 11, 1, "", "BertEmbeddings"], [249, 11, 1, "", "BertEncoder"], [249, 11, 1, "", "BertForMaskedLM"], [249, 11, 1, "", "BertForMultipleChoice"], [249, 11, 1, "", "BertForNextSentencePrediction"], [249, 11, 1, "", "BertForPreTraining"], [249, 11, 1, "", "BertForPreTrainingOutput"], [249, 11, 1, "", "BertForQuestionAnswering"], [249, 11, 1, "", "BertForSequenceClassification"], [249, 11, 1, "", "BertForTokenClassification"], [249, 11, 1, "", "BertIntermediate"], [249, 11, 1, "", "BertLMHeadModel"], [249, 11, 1, "", "BertLMPredictionHead"], [249, 11, 1, "", "BertLayer"], [249, 11, 1, "", "BertModel"], [249, 11, 1, "", "BertOnlyMLMHead"], [249, 11, 1, "", "BertOnlyNSPHead"], [249, 11, 1, "", "BertOutput"], [249, 11, 1, "", "BertPooler"], [249, 11, 1, "", "BertPreTrainedModel"], [249, 11, 1, "", "BertPreTrainingHeads"], [249, 11, 1, "", "BertPredictionHeadTransform"], [249, 11, 1, "", "BertSelfAttention"], [249, 11, 1, "", "BertSelfOutput"], [249, 10, 1, "", "expand_gather"], [249, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_output_embeddings"], [249, 12, 1, "", "prepare_inputs_for_generation"], [249, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_output_embeddings"], [249, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_output_embeddings"], [249, 12, 1, "", "prepare_inputs_for_generation"], [249, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[249, 12, 1, "", "feed_forward_chunk"], [249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_input_embeddings"], [249, 12, 1, "", "set_input_embeddings"], [249, 12, 1, "", "set_length_config"], [249, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[250, 11, 1, "", "RobertaAttention"], [250, 11, 1, "", "RobertaClassificationHead"], [250, 11, 1, "", "RobertaEmbeddings"], [250, 11, 1, "", "RobertaEncoder"], [250, 11, 1, "", "RobertaForCausalLM"], [250, 11, 1, "", "RobertaForMaskedLM"], [250, 11, 1, "", "RobertaForMultipleChoice"], [250, 11, 1, "", "RobertaForQuestionAnswering"], [250, 11, 1, "", "RobertaForSequenceClassification"], [250, 11, 1, "", "RobertaForTokenClassification"], [250, 11, 1, "", "RobertaIntermediate"], [250, 11, 1, "", "RobertaLMHead"], [250, 11, 1, "", "RobertaLayer"], [250, 11, 1, "", "RobertaModel"], [250, 11, 1, "", "RobertaOutput"], [250, 11, 1, "", "RobertaPooler"], [250, 11, 1, "", "RobertaPreTrainedModel"], [250, 11, 1, "", "RobertaSelfAttention"], [250, 11, 1, "", "RobertaSelfOutput"], [250, 10, 1, "", "create_position_ids_from_input_ids"], [250, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[250, 12, 1, "", "create_position_ids_from_inputs_embeds"], [250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "prepare_inputs_for_generation"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[250, 12, 1, "", "feed_forward_chunk"], [250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_input_embeddings"], [250, 12, 1, "", "set_input_embeddings"], [250, 12, 1, "", "set_length_config"], [250, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[250, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[251, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[251, 12, 1, "", "modelsize"], [251, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[252, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[253, 11, 1, "", "TFDataloader"], [253, 10, 1, "", "distributed_init"], [253, 10, 1, "", "get_filepath"], [253, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[254, 9, 0, "-", "data_augmentation"], [256, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[254, 11, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[254, 12, 1, "", "data_augment"], [254, 12, 1, "", "mit_data_augmentation"], [254, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[256, 11, 1, "", "AugmenterType"], [256, 10, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[258, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[259, 11, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_add_zeros": [[260, 11, 1, "", "TestTorchOP"]], "test_add_zeros.TestTorchOP": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[261, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[262, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_baddbmm": [[263, 11, 1, "", "TestTorchOP"]], "test_baddbmm.TestTorchOP": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[264, 11, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_binary_op": [[265, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_binaryop": [[266, 11, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_cast_to": [[267, 11, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_concat": [[268, 11, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_conv": [[269, 11, 1, "", "TestTorchOP"]], "test_conv.TestTorchOP": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_conv_int8": [[270, 11, 1, "", "TestTorchOP"]], "test_conv_int8.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[271, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[272, 11, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[273, 11, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[274, 11, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_dolly_pattern": [[275, 11, 1, "", "TestTorchOP"]], "test_dolly_pattern.TestTorchOP": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[276, 11, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_electra": [[277, 11, 1, "", "TestElectra"]], "test_electra.TestElectra": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_embedding": [[278, 11, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[279, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_execution_options": [[280, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_fwk": [[281, 11, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_gather": [[282, 11, 1, "", "TestTorchOP"]], "test_gather.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_gelu": [[283, 11, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[284, 11, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[285, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[286, 11, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[287, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[288, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"], [288, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[289, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[290, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[291, 11, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_layernorm": [[292, 11, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_linear": [[293, 11, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[294, 11, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[295, 11, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_main": [[296, 11, 1, "", "TestMain"]], "test_main.TestMain": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_matmul": [[297, 11, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[298, 11, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[299, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[300, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[301, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[302, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_neox_rotary_pos_emb": [[304, 11, 1, "", "TestTorchOP"]], "test_neox_rotary_pos_emb.TestTorchOP": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[305, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[306, 11, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_ops": [[307, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[308, 11, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[309, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[310, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_permute": [[311, 11, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[312, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_pow": [[313, 11, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[314, 11, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[315, 11, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[316, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[317, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[318, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[318, 12, 1, "", "setUpClass"], [318, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[319, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[319, 12, 1, "", "setUpClass"], [319, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[320, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[320, 12, 1, "", "setUpClass"], [320, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[321, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[321, 12, 1, "", "setUpClass"], [321, 12, 1, "", "tearDownClass"]], "test_size": [[322, 11, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[322, 12, 1, "", "setUpClass"], [322, 12, 1, "", "tearDownClass"]], "test_slice": [[323, 11, 1, "", "TestTorchOP"]], "test_slice.TestTorchOP": [[323, 12, 1, "", "setUpClass"], [323, 12, 1, "", "tearDownClass"]], "test_softmax": [[324, 11, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[324, 12, 1, "", "setUpClass"], [324, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[325, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[325, 12, 1, "", "setUpClass"], [325, 12, 1, "", "tearDownClass"]], "test_static_compressed_buffer": [[326, 11, 1, "", "TestSCBuffer"]], "test_static_compressed_buffer.TestSCBuffer": [[326, 12, 1, "", "setUpClass"], [326, 12, 1, "", "tearDownClass"]], "test_tanh": [[327, 11, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[327, 12, 1, "", "setUpClass"], [327, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[328, 11, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[328, 12, 1, "", "setUpClass"], [328, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[329, 11, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[329, 12, 1, "", "setUpClass"], [329, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[330, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[330, 12, 1, "", "setUpClass"], [330, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[331, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[331, 12, 1, "", "setUpClass"], [331, 12, 1, "", "tearDownClass"]], "test_transpose": [[332, 11, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[332, 12, 1, "", "setUpClass"], [332, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[333, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[333, 12, 1, "", "setUpClass"], [333, 12, 1, "", "tearDownClass"]], "test_two_linear": [[334, 11, 1, "", "TestTorchLinear"]], "test_two_linear.TestTorchLinear": [[334, 12, 1, "", "setUpClass"], [334, 12, 1, "", "tearDownClass"]], "test_unet": [[335, 11, 1, "", "TestUnet"]], "test_unet.TestUnet": [[335, 12, 1, "", "setUpClass"], [335, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[336, 11, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[336, 12, 1, "", "setUpClass"], [336, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[337, 11, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[337, 12, 1, "", "setUpClass"], [337, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[338, 11, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[338, 12, 1, "", "setUpClass"], [338, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[339, 11, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[339, 12, 1, "", "setUpClass"], [339, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[340, 11, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[340, 12, 1, "", "setUpClass"], [340, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[341, 11, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[341, 12, 1, "", "setUpClass"], [341, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[342, 11, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[342, 12, 1, "", "setUpClass"], [342, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[343, 11, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[343, 12, 1, "", "setUpClass"], [343, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:data", "14": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "data", "Python data"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"clang": 0, "format": [0, 388, 402, 412], "convert_falcon": 1, "modul": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 212, 214, 216, 219, 221, 222, 223, 224, 225, 228, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "content": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 214, 216, 219, 221, 222, 223, 224, 225, 228, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 395, 422, 427], "function": [1, 2, 3, 4, 5, 7, 16, 20, 21, 43, 55, 113, 148, 204, 205, 206, 208, 212, 214, 221, 222, 224, 225, 239, 249, 250, 252, 253, 256], "convert_gptj": 2, "convert_gptneox": 3, "convert_llama": 4, "class": [4, 9, 11, 12, 13, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 216, 219, 222, 223, 225, 228, 230, 233, 234, 236, 237, 238, 241, 242, 243, 244, 247, 249, 250, 251, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 363, 414], "convert_mpt": 5, "intel_extension_for_transform": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 382], "backend": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 379, 384, 416], "subpackag": [6, 17, 206, 227], "neural_engin": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "compil": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 348, 388, 394], "dynamic_quant": 8, "extractor": [9, 10, 11, 12, 13], "submodul": [10, 15, 17, 18, 43, 113, 218, 226, 227, 229, 235, 240, 246, 248, 255], "onnx_extractor": 11, "tf_extractor": 12, "torch_extractor": 13, "graph": [14, 15, 349, 384, 386, 387, 394], "graph_util": 16, "loader": [18, 19], "logger": 20, "onnx_util": 21, "op": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 383, 386], "all": 22, "assert": 23, "baddbmm": 24, "batch_matmul": 25, "batch_matmul_v2": 26, "bias_add": 27, "binary_op": 28, "cast": 29, "concat": 30, "conv": 31, "co": 32, "empty_op": 33, "expand_dim": 34, "fused_batch_matmul_v2": 35, "fused_batch_norm_v3": 36, "fused_gemm": 37, "fused_matmul": 38, "gather": 39, "gather_el": 40, "gelu": [41, 109], "gemm": [42, 401, 402, 404, 407], "packag": [43, 113, 206], "attribut": [43, 113, 204, 373, 383], "iterator_get_next": 44, "iterator_v2": 45, "layer_norm": [46, 124], "log_softmax": 47, "map_and_batch_dataset": 48, "matmul": [49, 403, 404, 405], "mean": [50, 399], "mkl_layer_norm": 51, "model_dataset": 52, "one_hot": 53, "onnx_input": 54, "optimize_dataset": 56, "pack": 57, "padding_sequ": [58, 147], "placehold": 59, "pos_emb": 60, "pow": 61, "quantize_linear": 62, "quantize_v2": 63, "quantized_fused_matmul_and_dequant": 64, "quantized_matmul_with_bias_and_dequant": 65, "reduce_mean": 66, "reduce_sum": 67, "reorder": [68, 401, 405, 406, 407], "reshap": 69, "resiz": 70, "rsub": 71, "scatter_el": 72, "shape": 73, "sin": 74, "size": [75, 395, 403], "slice": 76, "slice_position_id": 77, "softmax": [78, 411], "split": 79, "squeez": 80, "strided_slic": 81, "tensor": 82, "top_k": 83, "transpos": [84, 405, 406], "unpack": 85, "unsqueez": 86, "view": 87, "where": 88, "optim": [89, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 358, 359], "sub_graph": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "innerproductreshapefus": 90, "add_cls_token": 91, "add_embed": 92, "arangewithreciproc": 93, "attentionblock_attentionmaskaddreshap": 94, "attentionblock_constantofshapewithmul": 95, "attentionblock_qkvprereshap": 96, "attentionblock_qkvreshap": 97, "attentionblock_weightreshapeto4d": 98, "attention_mask_length_adaptive_keep_indic": 99, "attention_output_layer_norm_length_adaptive_keep_indic": 100, "attention_reshap": 101, "cast_to": 102, "collect_quant_info": 103, "conv_reshap": 104, "decoder_attn_reshap": 105, "einsumwitharang": 106, "embeddingbag": 107, "embeddings_to_2d_before_inner_product": 108, "generate_sequ": 110, "groupnorm": 111, "groupnormswish": 112, "innerproductwithbiasgelu": 114, "innerproductwithslic": 115, "innerproductwithswish": 116, "input_data": 117, "input_fil": 118, "insert_bf16_nod": 119, "insert_quant_nod": 120, "int8_bf16_mixed_precision_check": 121, "interact_featur": 122, "last_layer_shap": 123, "layer_norm_with_reduce_mean": 125, "layer_norm_with_transpos": 126, "llama_embed": 127, "llama_matmulwithtranspos": 128, "llama_postprocess": 129, "llama_rotary_pos_emb": 130, "lower_all_tupl": 131, "matmul_with_bia": 132, "matmul_with_bias_add": 133, "matmul_with_bias_gelu": 134, "matmul_with_bias_relu": 135, "matmul_with_bias_sigmoid": 136, "matmul_with_bias_tanh": 137, "matmul_with_bias_unsqueez": 138, "matmul_with_transpos": 139, "matmul_with_transpose_scale_add": 140, "merged_embeddingbag": 141, "multi_head_attent": 142, "neox_reorder_chang": 143, "neox_rotary_pos_emb": 144, "operator_adaptor": 145, "output_data": 146, "pattern": [148, 383, 386, 387, 391, 401, 402, 407], "position_embed": 149, "position_embeddings_v1": 150, "qkv_merg": 151, "qkv_reshap": 152, "quant_gather_to_bf16": 153, "quantize_fus": 154, "quantized_graph_dtype_refactor": 155, "remove_constant_op": 156, "remove_last_view": 157, "remove_rang": 158, "remove_unused_oper": 159, "remove_zero": 160, "removeslic": 161, "reshape_after_restore_hidden_st": 162, "reshape_before_and_after_attention_out_layer_norm_gather_el": 163, "reshape_before_restore_hidden_st": 164, "reshape_fus": 165, "restore_hidden_states_in_length_adaptive_update_indic": 166, "rms_norm": 167, "rotary_pos_emb": 168, "slicemask": 169, "stablediffusion_explicitnhwctranspos": 170, "stablediffusion_mha": 171, "stablediffusion_mhareshap": 172, "stablediffusion_reshapefus": 173, "stablediffusion_bf16convert": 174, "start_end_logit": 175, "subgraph_match": 176, "textencdoer_word_embed": 177, "textencoder_attentionmaskaddreshap": 178, "textencoder_attentionreshap": 179, "textencoder_kvreshap": 180, "textencoder_mulreshap": 181, "textencoder_qreshap": 182, "textencoder_softmaxreshap": 183, "textencoder_causal_attention_mask": 184, "token_type_embed": 185, "token_type_embeddings_v1": 186, "torch_embed": 187, "torch_ip_insert_bia": 188, "torch_unpack_baddbmm": 189, "torchinsertbf16nod": 190, "torchpaddingsqu": 191, "transformer2dmodel_attentionmaskaddreshap": 192, "transformer2dmodel_constantofshapewithmul": 193, "transformer2dmodel_ffnslic": 194, "transformer2dmodel_ffnslice_1": 195, "transformer2dmodel_qkvprereshap": 196, "transformer2dmodel_qkvreshap": 197, "transformer2dmodel_qkvreshape4d": 198, "transformer2dmodel_encoderhiddenstatesreshap": 199, "transformer2dmodel_getsamplebatch": 200, "transformer2dmodel_sampleslic": 201, "transpose_batch_matmul": 202, "word_embed": 203, "tf_util": 204, "torch_util": 205, "evalu": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "hf_eval": [207, 208, 209, 210], "hf_dataset": [208, 209], "cnn_dailymail": 208, "lm_code_ev": [212, 213], "lm_eval": [214, 215, 216, 217, 218, 219], "model": [216, 217, 230, 231, 232, 233, 248, 249, 250, 345, 357, 364, 376, 379, 384, 385, 388, 389, 394, 410, 416], "huggingfac": 216, "task": [218, 219], "lambada": 219, "benchmark": [221, 364, 389, 411], "config": [222, 356, 363, 383, 386], "distil": [223, 363, 377, 378, 380], "dynam": [224, 225, 226, 403, 418], "drop_and_restore_util": 224, "evolut": 225, "mixtur": [228, 229], "auto_distil": 228, "modeling_base_seq2seq": 232, "modeling_seq2seq": 233, "na": [234, 235, 236, 378], "basic_na": 234, "optimizer_tf": [238, 363], "pipelin": [239, 363, 416], "pruner": [240, 241], "prune": [241, 242, 378, 380, 417], "quantiz": [243, 378, 380, 389, 395, 418], "trainer": [244, 360, 363, 377, 417, 418], "util": [245, 246, 247, 248, 249, 250, 251, 252, 253, 256], "get_throughput": 245, "metric": [247, 377, 414, 417, 418], "modeling_bert_dynam": 249, "modeling_roberta_dynam": 250, "object": [251, 415, 418], "utility_tf": 253, "preprocess": [254, 255, 256, 403], "data_augment": 254, "sparsity_al": 257, "test_add_cls_token": 258, "test_add_embed": 259, "test_add_zero": 260, "test_attention_output_layer_norm_length_adaptive_keep_indic": 261, "test_attention_reshap": 262, "test_baddbmm": 263, "test_bert_mini_fp32": 264, "test_binary_op": 265, "test_binaryop": 266, "test_cast_to": 267, "test_concat": 268, "test_conv": 269, "test_conv_int8": 270, "test_conv_reshap": 271, "test_decoder_attn_reshap": 272, "test_dispatcher_tuning_acc": 273, "test_dispatcher_tuning_throughput": 274, "test_dolly_pattern": 275, "test_dynamic_quant": 276, "test_electra": 277, "test_embed": 278, "test_embeddingbag": 279, "test_execution_opt": 280, "test_fwk": 281, "test_gath": 282, "test_gelu": 283, "test_gpt_int8": 284, "test_graph_dispatch": 285, "test_graph_optim": 286, "test_insert_input_output_data": 287, "test_is_supported_onnx_graph": 288, "test_last_layer_shap": 289, "test_layer_norm_with_reduce_mean": 290, "test_layer_norm_with_transpos": 291, "test_layernorm": 292, "test_linear": 293, "test_linear_int8": 294, "test_llama_pattern": 295, "test_main": 296, "test_matmul": 297, "test_matmul_int8": 298, "test_matmul_with_bias_relu": 299, "test_matmul_with_bias_sigmoid": 300, "test_matmul_with_bias_tanh": 301, "test_merged_embeddingbag": 302, "test_model": 303, "test_neox_rotary_pos_emb": 304, "test_onnx_util": 305, "test_operator_adaptor": 306, "test_op": 307, "test_padding_seq": 308, "test_padding_sequ": 309, "test_pattern_dispatch": 310, "test_permut": 311, "test_position_embed": 312, "test_pow": 313, "test_primitive_cache_acc": 314, "test_primitive_cache_throughput": 315, "test_qkv_merg": 316, "test_qkv_reshap": 317, "test_quant_onnx_execut": 318, "test_reshape_after_restore_hidden_st": 319, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 320, "test_reshape_before_restore_hidden_st": 321, "test_siz": 322, "test_slic": 323, "test_softmax": 324, "test_start_end_logit": 325, "test_static_compressed_buff": 326, "test_tanh": 327, "test_text_encod": 328, "test_text_encoder_bf16": 329, "test_tf_util": 330, "test_token_type_embed": 331, "test_transpos": 332, "test_transpose_batch_matmul": 333, "test_two_linear": 334, "test_unet": 335, "test_unet_bf16": 336, "test_unsqueez": 337, "test_vae_decod": 338, "test_vae_decoder_bf16": 339, "test_weight_sharing_acc": 340, "test_weight_sharing_dispatcher_tuning_acc": 341, "test_weight_sharing_dispatcher_tuning_throughtput": 342, "test_weight_sharing_throughput": 343, "secur": 344, "polici": 344, "report": 344, "vulner": 344, "intel": [345, 362, 367, 375, 376, 378, 381, 423], "extens": [345, 362, 367, 375, 376, 378, 381, 423], "transform": [345, 362, 367, 375, 376, 378, 380, 381, 396, 423], "acceler": [345, 380, 396, 400], "base": [345, 378, 395], "platform": [345, 393, 409], "select": 345, "public": 345, "event": 345, "api": [346, 347, 350, 355, 361, 363, 364, 379, 385, 396], "python": [347, 385], "engin": [350, 351, 371, 378, 380, 382, 384, 386, 388, 389, 393, 427], "kernel": [352, 355, 368, 386, 396, 400, 403, 411, 424], "operator_desc": [353, 398, 399], "oper": [354, 385, 390], "specif": 354, "type": [354, 383, 417], "pytorch": [358, 363, 364, 377, 378], "tensorflow": [359, 363, 377, 378], "user": [361, 372, 396, 398, 399, 420, 428], "face": 361, "architectur": [362, 384], "autodistil": 363, "design": [363, 389], "framework": [363, 398, 399], "criterion": [363, 377], "knowledgedistillationloss": 363, "intermediatelayersknowledgedistillationloss": 363, "usag": [363, 377, 379, 398, 399, 411, 417], "flash": 363, "exampl": [363, 364, 365, 378, 379, 385, 388, 411, 415, 416, 421], "regular": 363, "introduct": [364, 375, 377, 379, 383, 385, 386, 387, 388, 391, 392, 396, 398, 399, 400, 401, 405, 410, 414, 415, 416, 417, 418], "get": [364, 375, 376, 380, 385, 389, 414, 418], "start": [364, 375, 376, 380, 395, 414, 418], "stock": [364, 378], "ipex": [364, 378], "output": [364, 376], "featur": [366, 398, 399, 418, 422], "welcom": [367, 423], "document": [367, 423], "section": [367, 423], "implement": [369, 425], "detail": [369, 403, 406, 425], "perform": [370, 393, 395, 396, 408, 409, 426], "neural": [371, 378, 380, 382, 384, 393, 427], "guid": [372, 420, 428], "contributor": [373, 374], "coven": [373, 374], "code": [373, 374], "conduct": [373, 374], "our": 373, "pledg": 373, "standard": 373, "respons": 373, "scope": 373, "enforc": 373, "contribut": 374, "guidelin": 374, "pull": 374, "request": 374, "checklist": 374, "templat": 374, "support": [374, 375, 376, 379, 388, 393, 394, 396, 414, 415, 418], "data": [375, 402, 409], "augment": 375, "instal": [375, 376, 381, 382, 389, 396], "depend": 375, "script": [375, 377, 417, 418], "paramet": 375, "text": 375, "gener": [375, 384, 395], "argument": 375, "overview": 376, "recommend": 376, "hardwar": [376, 381], "valid": [376, 381, 409], "environ": [376, 381, 389], "how": [376, 386, 392, 394, 410], "work": [376, 400], "1": [376, 384, 385, 389, 390, 410], "prerequisit": [376, 381, 382, 389, 403], "2": [376, 384, 389, 390, 410], "from": [376, 381, 382], "pypi": [376, 381], "conda": 376, "3": [376, 384, 410], "sourc": [376, 381], "To": [376, 389], "run": [376, 384, 385, 389, 394, 410], "requir": [376, 381], "prepar": [376, 388, 389, 410], "dataset": [376, 389], "compress": [376, 392], "4": [376, 384, 409], "infer": [376, 384, 397, 416], "expect": 376, "summari": [376, 414], "next": 376, "step": 376, "learn": 376, "more": [376, 386, 392, 400], "knowledg": [377, 378], "intermedi": 377, "layer": [377, 404], "creat": [377, 387, 417, 418], "an": [377, 388, 417, 418], "instanc": [377, 417, 418], "option": [377, 386, 392, 395, 417, 418], "distillationconfig": 377, "length": [378, 380], "adapt": [378, 380], "auto": 378, "orchestr": 378, "refer": [378, 396], "deploy": 378, "dens": [378, 400], "spars": [378, 385, 400, 401, 402, 404, 407, 410], "export": 379, "onnx": [379, 384, 388, 389], "matrix": [379, 393, 396, 403, 415, 418], "fp32": 379, "bf16": 379, "int8": [379, 389, 416], "For": [379, 411], "executor": [379, 390, 416], "system": [381, 395], "softwar": 381, "stabl": 382, "version": 382, "pip": 382, "binari": [382, 384, 398], "deploi": [382, 384], "bare": 382, "metal": 382, "add": [383, 390], "custom": [383, 384, 390], "regist": [383, 390], "node": [383, 387], "set": [383, 385], "map": [383, 387, 395], "fuse": 383, "new": [383, 387], "after": 383, "fusion": [383, 387], "integr": 384, "tf": [384, 395], "us": [384, 394, 403], "through": 384, "manual": 384, "yaml": 384, "weight": [384, 403, 410], "build": [384, 396, 411], "profil": [385, 408], "profl": 385, "you": 385, "can": 385, "onli": 385, "engine_profil": 385, "befor": 385, "c": 385, "part": 385, "csv": 385, "ratio": 385, "total": 385, "level": 385, "json": 385, "iter": 385, "tune": [386, 389, 395, 418], "dispatch": 386, "best": 386, "relat": 386, "runtim": 386, "turn": [386, 392], "mechan": 386, "dict": 387, "obtain": 387, "necessari": 387, "inform": [387, 413], "construct": 387, "establish": 387, "connect": 387, "remov": [387, 391], "old": 387, "insert": 387, "ir": [388, 389], "low": 389, "precis": 389, "its": 389, "accuraci": [389, 418], "h": 390, "includ": 390, "cpp": 390, "src": 390, "recogn": 391, "represent": 391, "pars": 391, "list": [391, 417], "search": 391, "each": 391, "straight": 391, "chain": 391, "splice": 391, "sub": 391, "main": 391, "duplic": 391, "result": [391, 410], "static": [392, 411, 418], "buffer": 392, "configur": [393, 409], "itrex": 394, "convert": 394, "tabl": 395, "quick": 395, "unix": 395, "linux": 395, "maco": 395, "etc": 395, "common": 395, "input": [395, 412], "prompt": 395, "interact": 395, "revers": 395, "In": 395, "prefix": 395, "suffix": 395, "instruct": [395, 402], "mode": 395, "context": 395, "manag": 395, "keep": 395, "flag": 395, "number": 395, "token": 395, "predict": 395, "temperatur": 395, "repeat": 395, "penalti": 395, "top": 395, "k": 395, "sampl": 395, "p": 395, "tail": 395, "free": 395, "local": 395, "typic": 395, "mirostat": 395, "logit": 395, "bia": 395, "rng": 395, "seed": 395, "memori": [395, 397], "thread": [395, 400, 409], "mlock": 395, "No": 395, "float": 395, "32": 395, "batch": 395, "cach": [395, 397], "addit": 395, "librari": 396, "test": 396, "sparse_matmul": [396, 411], "3d": 397, "layout": 397, "spmm_vnni": [397, 411], "issu": 397, "injector": [398, 399], "param_typ": [398, 399], "hpp": [398, 399], "jit_binaryop_injector": 398, "develop": [398, 399, 411], "": [398, 399], "perspect": [398, 399], "element": 399, "wise": 399, "alpha": 399, "beta": 399, "scale": 399, "jit_eltwise_injector": 399, "naiv": 400, "tile": 400, "effici": 400, "per": 400, "prefetch": 400, "amx": 401, "brief": 401, "isa": 401, "avx512f": 402, "kei": 402, "loop": 402, "quant": 403, "problem": [403, 404, 405, 406], "descript": [403, 404, 406], "differ": 403, "jit": 403, "path": 403, "one": 403, "stage": 403, "two": 403, "normal": 404, "layernorm": 404, "pre": 404, "comput": 404, "spmm": 404, "direct": 404, "layernorm_ba": [404, 411], "statement": 405, "matmul_p2031_2013": 405, "matmul_avx512f_p2031_p2013": [405, 411], "matmul_noperm_p2031_p1302": 405, "matmul_vnni_noperm_p2013_p1302": 405, "beforehand": 405, "mha": [406, 411], "calcul": 406, "vnni": 407, "On": 407, "fly": 407, "activ": 407, "candid": 407, "verbos": 408, "vtune": 408, "sde": 408, "singl": 409, "multi": 409, "visual": 410, "distribut": 410, "setup": 410, "below": 410, "command": 410, "analysi": 410, "spmm_avx512f": 411, "spmm_amx_bf16_x16": 411, "eltwiseop": 411, "transpose_matmul": 411, "matmul_vnni_noperm_p2031_p1302": 411, "attent": 411, "dynamic_quant_matmul": 411, "dynamic_qu": 411, "legal": 413, "licens": 413, "citat": 413, "trademark": 413, "prunerconfig": 417, "pruningconfig": 417, "fundament": 418, "approach": 418, "post": 418, "train": 418, "awar": 418, "quantizationconfig": 418, "releas": 419, "note": 419}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"clang-format": [[0, "module-clang-format"]], "convert_falcon": [[1, "module-convert_falcon"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [194, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [208, "module-contents"], [212, "module-contents"], [214, "module-contents"], [216, "module-contents"], [219, "module-contents"], [221, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [228, "module-contents"], [230, "module-contents"], [233, "module-contents"], [234, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [247, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [256, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"], [318, "module-contents"], [319, "module-contents"], [320, "module-contents"], [321, "module-contents"], [322, "module-contents"], [323, "module-contents"], [324, "module-contents"], [325, "module-contents"], [326, "module-contents"], [327, "module-contents"], [328, "module-contents"], [329, "module-contents"], [330, "module-contents"], [331, "module-contents"], [332, "module-contents"], [333, "module-contents"], [334, "module-contents"], [335, "module-contents"], [336, "module-contents"], [337, "module-contents"], [338, "module-contents"], [339, "module-contents"], [340, "module-contents"], [341, "module-contents"], [342, "module-contents"], [343, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [43, "functions"], [55, "functions"], [113, "functions"], [148, "functions"], [204, "functions"], [205, "functions"], [206, "functions"], [208, "functions"], [212, "functions"], [214, "functions"], [221, "functions"], [222, "functions"], [224, "functions"], [225, "functions"], [239, "functions"], [249, "functions"], [250, "functions"], [252, "functions"], [253, "functions"], [256, "functions"]], "convert_gptj": [[2, "module-convert_gptj"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "convert_llama": [[4, "module-convert_llama"]], "Classes": [[4, "classes"], [9, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [191, "classes"], [192, "classes"], [193, "classes"], [194, "classes"], [195, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [208, "classes"], [216, "classes"], [219, "classes"], [222, "classes"], [223, "classes"], [225, "classes"], [228, "classes"], [230, "classes"], [233, "classes"], [234, "classes"], [236, "classes"], [237, "classes"], [238, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [247, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [253, "classes"], [254, "classes"], [256, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"], [318, "classes"], [319, "classes"], [320, "classes"], [321, "classes"], [322, "classes"], [323, "classes"], [324, "classes"], [325, "classes"], [326, "classes"], [327, "classes"], [328, "classes"], [329, "classes"], [330, "classes"], [331, "classes"], [332, "classes"], [333, "classes"], [334, "classes"], [335, "classes"], [336, "classes"], [337, "classes"], [338, "classes"], [339, "classes"], [340, "classes"], [341, "classes"], [342, "classes"], [343, "classes"]], "convert_mpt": [[5, "module-convert_mpt"]], "intel_extension_for_transformers.backends": [[6, "module-intel_extension_for_transformers.backends"]], "Subpackages": [[6, "subpackages"], [17, "subpackages"], [206, "subpackages"], [227, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[10, "submodules"], [15, "submodules"], [17, "submodules"], [18, "submodules"], [43, "submodules"], [113, "submodules"], [218, "submodules"], [226, "submodules"], [227, "submodules"], [229, "submodules"], [235, "submodules"], [240, "submodules"], [246, "submodules"], [248, "submodules"], [255, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[43, "package-contents"], [113, "package-contents"], [206, "package-contents"]], "Attributes": [[43, "attributes"], [113, "attributes"], [204, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[206, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[207, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[211, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[212, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[214, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[220, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[221, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[222, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[223, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[224, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[225, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[226, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[227, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[228, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[229, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[230, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[231, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[232, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[234, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[235, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[236, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[237, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[238, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[239, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[240, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[241, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[243, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[244, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[245, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[246, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[247, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[248, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[251, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[252, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[253, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[254, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[255, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[256, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[257, "module-sparsity_all"]], "test_add_cls_token": [[258, "module-test_add_cls_token"]], "test_add_embeddings": [[259, "module-test_add_embeddings"]], "test_add_zeros": [[260, "module-test_add_zeros"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[261, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[262, "module-test_attention_reshape"]], "test_baddbmm": [[263, "module-test_baddbmm"]], "test_bert_mini_fp32": [[264, "module-test_bert_mini_fp32"]], "test_binary_op": [[265, "module-test_binary_op"]], "test_binaryop": [[266, "module-test_binaryop"]], "test_cast_to": [[267, "module-test_cast_to"]], "test_concat": [[268, "module-test_concat"]], "test_conv": [[269, "module-test_conv"]], "test_conv_int8": [[270, "module-test_conv_int8"]], "test_conv_reshape": [[271, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[272, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[273, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[274, "module-test_dispatcher_tuning_throughput"]], "test_dolly_pattern": [[275, "module-test_dolly_pattern"]], "test_dynamic_quantization": [[276, "module-test_dynamic_quantization"]], "test_electra": [[277, "module-test_electra"]], "test_embedding": [[278, "module-test_embedding"]], "test_embeddingbag": [[279, "module-test_embeddingbag"]], "test_execution_options": [[280, "module-test_execution_options"]], "test_fwk": [[281, "module-test_fwk"]], "test_gather": [[282, "module-test_gather"]], "test_gelu": [[283, "module-test_gelu"]], "test_gpt_int8": [[284, "module-test_gpt_int8"]], "test_graph_dispatch": [[285, "module-test_graph_dispatch"]], "test_graph_optimizer": [[286, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[287, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[288, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[289, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[290, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[291, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[292, "module-test_layernorm"]], "test_linear": [[293, "module-test_linear"]], "test_linear_int8": [[294, "module-test_linear_int8"]], "test_llama_pattern": [[295, "module-test_llama_pattern"]], "test_main": [[296, "module-test_main"]], "test_matmul": [[297, "module-test_matmul"]], "test_matmul_int8": [[298, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[299, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[300, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[301, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[302, "module-test_merged_embeddingbag"]], "test_model": [[303, "module-test_model"]], "test_neox_rotary_pos_emb": [[304, "module-test_neox_rotary_pos_emb"]], "test_onnx_utils": [[305, "module-test_onnx_utils"]], "test_operator_adaptor": [[306, "module-test_operator_adaptor"]], "test_ops": [[307, "module-test_ops"]], "test_padding_seq": [[308, "module-test_padding_seq"]], "test_padding_sequence": [[309, "module-test_padding_sequence"]], "test_pattern_dispatch": [[310, "module-test_pattern_dispatch"]], "test_permute": [[311, "module-test_permute"]], "test_position_embeddings": [[312, "module-test_position_embeddings"]], "test_pow": [[313, "module-test_pow"]], "test_primitive_cache_acc": [[314, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[315, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[316, "module-test_qkv_merge"]], "test_qkv_reshape": [[317, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[318, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[319, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[320, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[321, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[322, "module-test_size"]], "test_slice": [[323, "module-test_slice"]], "test_softmax": [[324, "module-test_softmax"]], "test_start_end_logits": [[325, "module-test_start_end_logits"]], "test_static_compressed_buffer": [[326, "module-test_static_compressed_buffer"]], "test_tanh": [[327, "module-test_tanh"]], "test_text_encoder": [[328, "module-test_text_encoder"]], "test_text_encoder_bf16": [[329, "module-test_text_encoder_bf16"]], "test_tf_utils": [[330, "module-test_tf_utils"]], "test_token_type_embeddings": [[331, "module-test_token_type_embeddings"]], "test_transpose": [[332, "module-test_transpose"]], "test_transpose_batch_matmul": [[333, "module-test_transpose_batch_matmul"]], "test_two_linear": [[334, "module-test_two_linear"]], "test_unet": [[335, "module-test_unet"]], "test_unet_bf16": [[336, "module-test_unet_bf16"]], "test_unsqueeze": [[337, "module-test_unsqueeze"]], "test_vae_decoder": [[338, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[339, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[340, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[341, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[342, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[343, "module-test_weight_sharing_throughput"]], "Security Policy": [[344, "security-policy"]], "Report a Vulnerability": [[344, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[345, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[345, "selected-publications-events"]], "API": [[346, "api"]], "Python APIs": [[347, "python-apis"]], "Compile": [[348, "compile"]], "Graph": [[349, "graph"]], "Engine API": [[350, "engine-api"]], "Class engine": [[351, "class-engine"]], "Class Kernel": [[352, "class-kernel"]], "Class operator_desc": [[353, "class-operator-desc"]], "Operator Specific Types": [[354, "operator-specific-types"]], "Kernel APIs": [[355, "kernel-apis"]], "Config": [[356, "config"]], "Model": [[357, "model"]], "PyTorch Optimizer": [[358, "pytorch-optimizer"]], "TensorFlow Optimizer": [[359, "tensorflow-optimizer"]], "Trainer": [[360, "trainer"]], "User-facing API": [[361, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[362, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[363, "autodistillation-design"]], "AutoDistillation Pipeline": [[363, "autodistillation-pipeline"]], "Framework Class Design": [[363, "framework-class-design"]], "Criterion Class Design": [[363, "criterion-class-design"]], "KnowledgeDistillationLoss": [[363, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[363, "intermediatelayersknowledgedistillationloss"]], "Usage": [[363, "usage"], [398, "usage"], [399, "usage"], [411, "usage"], [417, "usage"]], "Pytorch": [[363, "pytorch"]], "AutoDistillation API in Trainer": [[363, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[363, "flash-distillation-config-example"]], "Regular distillation config example": [[363, "regular-distillation-config-example"]], "AutoDistillation config example": [[363, "autodistillation-config-example"], [363, "id1"]], "Tensorflow": [[363, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[363, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[363, "distillation-config-example"]], "Benchmark": [[364, "benchmark"]], "Introduction": [[364, "introduction"], [375, "introduction"], [377, "introduction"], [379, "introduction"], [383, "introduction"], [385, "introduction"], [386, "introduction"], [387, "introduction"], [388, "introduction"], [391, "introduction"], [392, "introduction"], [396, "introduction"], [398, "introduction"], [399, "introduction"], [400, "introduction"], [405, "introduction"], [410, "introduction"], [414, "introduction"], [415, "introduction"], [416, "introduction"], [417, "introduction"], [418, "introduction"]], "Get Started with Benchmark API": [[364, "get-started-with-benchmark-api"]], "Examples": [[364, "examples"], [378, "examples"], [379, "examples"], [411, "examples"], [411, "id1"], [411, "id2"], [411, "id3"], [411, "id4"], [411, "id5"], [411, "id6"], [411, "id7"], [411, "id8"], [411, "id9"], [411, "id10"], [411, "id11"], [416, "examples"]], "Stock Pytorch Model": [[364, "stock-pytorch-model"]], "IPEX Model": [[364, "ipex-model"]], "Benchmark Output": [[364, "benchmark-output"]], "Example": [[365, "example"], [421, "example"]], "Features": [[366, "features"], [422, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[367, "welcome-to-intel-extension-for-transformers-documentation"], [423, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[367, "sections"], [423, "sections"]], "Kernels": [[368, "kernels"], [424, "kernels"]], "Implementation Details": [[369, "implementation-details"], [425, "implementation-details"]], "Performance": [[370, "performance"], [393, "performance"], [396, "performance"], [426, "performance"]], "Neural Engine": [[371, "neural-engine"], [427, "neural-engine"]], "User Guide": [[372, "user-guide"], [420, "user-guide"], [428, "user-guide"]], "Contributor Covenant Code of Conduct": [[373, "contributor-covenant-code-of-conduct"], [374, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[373, "our-pledge"]], "Our Standards": [[373, "our-standards"]], "Our Responsibilities": [[373, "our-responsibilities"]], "Scope": [[373, "scope"]], "Enforcement": [[373, "enforcement"]], "Attribution": [[373, "attribution"]], "Contribution Guidelines": [[374, "contribution-guidelines"]], "Pull Request Checklist": [[374, "pull-request-checklist"]], "Pull Request Template": [[374, "pull-request-template"]], "Support": [[374, "support"], [376, "support"]], "Data Augmentation": [[375, "data-augmentation"], [375, "id1"]], "Getting Started": [[375, "getting-started"], [380, "getting-started"]], "Install Dependency": [[375, "install-dependency"]], "Install Intel Extension for Transformers": [[375, "install-intel-extension-for-transformers"], [381, "install-intel-extension-for-transformers"]], "Script": [[375, "script"]], "Parameters of Data Augmentation": [[375, "parameters-of-data-augmentation"]], "Supported Augmenter": [[375, "supported-augmenter"]], "Text Generation Augmenter": [[375, "text-generation-augmenter"]], "Augmenter Arguments:": [[375, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[376, "intel-extension-for-transformers"]], "Overview": [[376, "overview"]], "Recommended Hardware": [[376, "recommended-hardware"]], "Validated Hardware Environment": [[376, "validated-hardware-environment"], [381, "validated-hardware-environment"]], "How it Works": [[376, "how-it-works"]], "Get Started": [[376, "get-started"], [418, "get-started"]], "1. Prerequisites": [[376, "prerequisites"]], "2. Installation": [[376, "installation"]], "2.1 Install from PyPi": [[376, "install-from-pypi"]], "2.2 Install from Conda": [[376, "install-from-conda"]], "2.3 Install from Source": [[376, "install-from-source"]], "3. How To Run": [[376, "how-to-run"]], "3.1 Install Requirements": [[376, "install-requirements"]], "3.2 Prepare Datasets": [[376, "prepare-datasets"]], "3.3 Model Compression": [[376, "model-compression"]], "3.4 Model Inference": [[376, "model-inference"]], "Expected Output": [[376, "expected-output"]], "Summary and Next Steps": [[376, "summary-and-next-steps"]], "Learn More": [[376, "learn-more"]], "Distillation": [[377, "distillation"], [377, "id1"], [378, "distillation"], [380, "distillation"]], "Knowledge Distillation": [[377, "knowledge-distillation"], [378, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[377, "intermediate-layer-knowledge-distillation"]], "usage": [[377, "usage"]], "Pytorch Script:": [[377, "pytorch-script"]], "Tensorflow Script:": [[377, "tensorflow-script"]], "Create an Instance of Metric": [[377, "create-an-instance-of-metric"], [418, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[377, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[377, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[377, "distill-with-trainer"]], "Quantization": [[378, "quantization"], [380, "quantization"], [395, "quantization"], [418, "quantization"]], "Stock PyTorch Examples": [[378, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[378, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[378, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[378, "length-adaptive-transformers"]], "Pruning": [[378, "pruning"], [380, "pruning"], [417, "pruning"]], "Auto Distillation (NAS Based)": [[378, "auto-distillation-nas-based"]], "Orchestrate": [[378, "orchestrate"]], "Reference Deployment on Neural Engine": [[378, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[378, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[378, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[379, "export-to-onnx"]], "Supported Model Export Matrix": [[379, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[379, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[379, "export-to-bf16-onnx-model"]], "API usage": [[379, "api-usage"]], "Export to INT8 ONNX Model": [[379, "export-to-int8-onnx-model"]], "For executor backend": [[379, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[380, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[380, "transformers-accelerated-neural-engine"]], "Installation": [[381, "installation"], [382, "installation"], [396, "installation"]], "Install from Pypi": [[381, "install-from-pypi"]], "Install from Source": [[381, "install-from-source"]], "Prerequisites": [[381, "prerequisites"], [382, "prerequisites"]], "System Requirements": [[381, "system-requirements"]], "Validated Software Environment": [[381, "validated-software-environment"]], "Install": [[382, "install"]], "Install stable version intel_extension_for_transformers from pip": [[382, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[382, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[383, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[383, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[383, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[383, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[384, "deploy-and-integration"]], "1. Architecture": [[384, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[384, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[384, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[384, "run-the-inference-by-engine"], [384, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[384, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[384, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[384, "integrate-neural-engine-as-backend"]], "Profiling": [[385, "profiling"]], "Profling API": [[385, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[385, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[385, "profiling-examples"]], "Parts of CSV Profiling": [[385, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[385, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[385, "operator-profiling-part"]], "Total Profiling Part": [[385, "total-profiling-part"]], "Levels of JSON Profiling": [[385, "levels-of-json-profiling"]], "Model Level": [[385, "model-level"]], "Iteration Level": [[385, "iteration-level"]], "Operator Level": [[385, "operator-level"]], "Engine Tuning": [[386, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[386, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[386, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[386, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[386, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[386, "more-tuning-options"]], "Graph Fusion": [[387, "graph-fusion"]], "Pattern Mapping Dict": [[387, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[387, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[387, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[387, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[388, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[388, "supported-onnx-format"]], "Compile Examples": [[388, "compile-examples"]], "Prepare ONNX Model": [[388, "prepare-onnx-model"]], "Compile to IR": [[388, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[389, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[389, "design"]], "Prerequisite": [[389, "prerequisite"]], "Install environment": [[389, "install-environment"]], "Prepare Dataset": [[389, "prepare-dataset"]], "Prepare ONNX model": [[389, "prepare-onnx-model"]], "Run tuning and benchmark": [[389, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[389, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[389, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[390, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[390, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[390, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[391, "pattern-recognize"]], "Pattern Representation": [[391, "pattern-representation"]], "Parse Pattern Representation List": [[391, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[391, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[391, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Static Compressed Buffer": [[392, "static-compressed-buffer"]], "How to Turn on Static Compressed Buffer": [[392, "how-to-turn-on-static-compressed-buffer"]], "More Options": [[392, "more-options"]], "Neural Engine Support Matrix": [[393, "neural-engine-support-matrix"]], "platform configuration": [[393, "platform-configuration"]], "ITREX Graph": [[394, "itrex-graph"]], "Compile Graph": [[394, "compile-graph"]], "How to use": [[394, "how-to-use"]], "Convert model": [[394, "convert-model"]], "Run Models": [[394, "run-models"]], "Supported model": [[394, "supported-model"]], "Table of Contents": [[395, "table-of-contents"]], "Quick Start": [[395, "quick-start"]], "Unix-based systems (Linux, macOS, etc.):": [[395, "unix-based-systems-linux-macos-etc"]], "Common Options": [[395, "common-options"]], "Input Prompts": [[395, "input-prompts"]], "Interaction": [[395, "interaction"]], "Interaction Options": [[395, "interaction-options"]], "Reverse Prompts": [[395, "reverse-prompts"]], "In-Prefix": [[395, "in-prefix"]], "In-Suffix": [[395, "in-suffix"]], "Instruction Mode": [[395, "instruction-mode"]], "Context Management": [[395, "context-management"]], "Context Size": [[395, "context-size"]], "Keep Prompt": [[395, "keep-prompt"]], "Generation Flags": [[395, "generation-flags"]], "Number of Tokens to Predict": [[395, "number-of-tokens-to-predict"]], "Temperature": [[395, "temperature"]], "Repeat Penalty": [[395, "repeat-penalty"]], "Top-K Sampling": [[395, "top-k-sampling"]], "Top-P Sampling": [[395, "top-p-sampling"]], "Tail Free Sampling (TFS)": [[395, "tail-free-sampling-tfs"]], "Locally Typical Sampling": [[395, "locally-typical-sampling"]], "Mirostat Sampling": [[395, "mirostat-sampling"]], "Logit Bias": [[395, "logit-bias"]], "RNG Seed": [[395, "rng-seed"]], "Performance Tuning and Memory Options": [[395, "performance-tuning-and-memory-options"]], "Number of Threads": [[395, "number-of-threads"]], "Mlock": [[395, "mlock"]], "No Memory Mapping": [[395, "no-memory-mapping"]], "Memory Float 32": [[395, "memory-float-32"]], "Batch Size": [[395, "batch-size"]], "Prompt Caching": [[395, "prompt-caching"]], "Additional Options": [[395, "additional-options"]], "Transformers-Accelerated Libraries": [[396, "transformers-accelerated-libraries"]], "Build": [[396, "build"], [411, "build"]], "Test": [[396, "test"]], "API reference for users": [[396, "api-reference-for-users"]], "sparse_matmul kernel:": [[396, "sparse-matmul-kernel"]], "Supported Matrix": [[396, "supported-matrix"]], "3D Inference": [[397, "d-inference"]], "Memory Layout in SPMM_VNNI": [[397, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[397, "cache-issues"]], "SPMM_VNNI 3D Inference": [[397, "spmm-vnni-3d-inference"]], "Binary Injectors": [[398, "binary-injectors"]], "Framework Features": [[398, "framework-features"], [399, "framework-features"]], "param_type.hpp": [[398, "param-type-hpp"]], "operator_desc.hpp": [[398, "operator-desc-hpp"], [399, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[398, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[398, "developer-s-perspective"]], "User\u2019s Perspective": [[398, "user-s-perspective"], [399, "user-s-perspective"]], "Element-wise Injector": [[399, "element-wise-injector"]], "param_types.hpp": [[399, "param-types-hpp"]], "alpha,beta,scale meaning": [[399, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[399, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[399, "developer-s-perspective"]], "Dense and Sparse": [[400, "dense-and-sparse"]], "Naive": [[400, "naive"]], "Tile": [[400, "tile"]], "Efficient kernel": [[400, "efficient-kernel"]], "More work per thread": [[400, "more-work-per-thread"]], "Prefetch": [[400, "prefetch"]], "Sparse acceleration": [[400, "sparse-acceleration"]], "Sparse GEMM AMX": [[401, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[401, "brief-introduction-for-isas"]], "Pattern": [[401, "pattern"]], "Reorder": [[401, "reorder"]], "Sparse GEMM AVX512F": [[402, "sparse-gemm-avx512f"]], "Key Instruction": [[402, "key-instruction"]], "Sparse Pattern & Data Format": [[402, "sparse-pattern-data-format"]], "Loops": [[402, "loops"]], "Dynamic Quant Matmul": [[403, "dynamic-quant-matmul"]], "problem description": [[403, "problem-description"]], "Kernel details": [[403, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[403, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[403, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[403, "different-jit-paths-for-different-weight-size"]], "one-stage jit-path": [[403, "one-stage-jit-path"]], "two-stage jit-path": [[403, "two-stage-jit-path"]], "Sparse GEMM with Layer-Normalize": [[404, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[404, "problem-description"]], "layernormalized sparse matmul": [[404, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[404, "pre-compute-spmm"]], "Direct Layernorm_ba": [[404, "direct-layernorm-ba"]], "Transposed MatMul": [[405, "transposed-matmul"]], "Problem Statements": [[405, "problem-statements"]], "Matmul_p2031_2013": [[405, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[405, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[405, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[405, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[405, "reorder-beforehand"]], "Transposed MHA": [[406, "transposed-mha"]], "Problem description": [[406, "problem-description"]], "Details": [[406, "details"]], "Reordering": [[406, "reordering"]], "Calculation": [[406, "calculation"]], "Sparse GEMM VNNI": [[407, "sparse-gemm-vnni"]], "On the fly activation reordering": [[407, "on-the-fly-activation-reordering"]], "Candidate patterns": [[407, "candidate-patterns"]], "Performance and Profiling": [[408, "performance-and-profiling"]], "Verbose": [[408, "verbose"]], "VTune": [[408, "vtune"]], "SDE": [[408, "sde"]], "Validated Performance Data": [[409, "validated-performance-data"]], "Single Thread": [[409, "single-thread"]], "Multi Thread (Thread = 4)": [[409, "multi-thread-thread-4"]], "Platform Configuration": [[409, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[410, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[410, "setups"]], "1. Prepare the sparse model": [[410, "prepare-the-sparse-model"]], "2. Run below commands": [[410, "run-below-commands"]], "3. Analysis results": [[410, "analysis-results"]], "Benchmark for Kernels": [[411, "benchmark-for-kernels"]], "sparse_matmul": [[411, "sparse-matmul"]], "spmm_avx512f": [[411, "spmm-avx512f"]], "spmm_vnni": [[411, "spmm-vnni"]], "spmm_amx_bf16_x16": [[411, "spmm-amx-bf16-x16"]], "eltwiseop": [[411, "eltwiseop"]], "layernorm_ba": [[411, "layernorm-ba"]], "transpose_matmul": [[411, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[411, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[411, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[411, "softmax"]], "attention": [[411, "attention"]], "Static MHA": [[411, "static-mha"]], "dynamic_quant_matmul": [[411, "dynamic-quant-matmul"]], "dynamic_quant": [[411, "dynamic-quant"]], "For developers": [[411, "for-developers"]], "Inputs format": [[412, "inputs-format"]], "Legal Information": [[413, "legal-information"]], "License": [[413, "license"]], "Citation": [[413, "citation"]], "Trademarks": [[413, "trademarks"]], "Metrics": [[414, "metrics"]], "Supported Metric": [[414, "supported-metric"]], "Metric Class Summary": [[414, "metric-class-summary"]], "Get Start with Metrics": [[414, "get-start-with-metrics"]], "Objective": [[415, "objective"]], "Supported Objectives Matrix:": [[415, "supported-objectives-matrix"]], "Examples:": [[415, "examples"]], "Pipeline": [[416, "pipeline"]], "Pipeline Inference for INT8 Model": [[416, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[416, "pipeline-inference-for-executor-backend"]], "Pruning types": [[417, "pruning-types"]], "Script:": [[417, "script"], [418, "script"]], "Create an instance of Metric": [[417, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[417, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[417, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[417, "prune-with-trainer"]], "Quantization Fundamentals": [[418, "quantization-fundamentals"]], "Quantization Approach": [[418, "quantization-approach"]], "Post Training Dynamic Quantization": [[418, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[418, "post-training-static-quantization"]], "Quantization Aware Training": [[418, "quantization-aware-training"]], "Accuracy Aware Tuning": [[418, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[418, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[418, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[418, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[418, "quantization-with-trainer"]], "Release": [[419, "release"]], "Release Notes": [[419, "release-notes"]], "Contents:": [[422, null], [427, null]]}, "indexentries": {"clang-format": [[0, "module-clang-format"]], "module": [[0, "module-clang-format"], [1, "module-convert_falcon"], [2, "module-convert_gptj"], [3, "module-convert_gptneox"], [4, "module-convert_llama"], [5, "module-convert_mpt"], [6, "module-intel_extension_for_transformers.backends"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [204, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [205, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [206, "module-intel_extension_for_transformers.backends.neural_engine"], [207, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"], [208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"], [209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"], [210, "module-intel_extension_for_transformers.evaluation.hf_eval"], [211, "module-intel_extension_for_transformers.evaluation"], [212, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"], [213, "module-intel_extension_for_transformers.evaluation.lm_code_eval"], [214, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [215, "module-intel_extension_for_transformers.evaluation.lm_eval"], [216, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [217, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [220, "module-intel_extension_for_transformers"], [221, "module-intel_extension_for_transformers.optimization.benchmark"], [222, "module-intel_extension_for_transformers.optimization.config"], [223, "module-intel_extension_for_transformers.optimization.distillation"], [224, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [225, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [226, "module-intel_extension_for_transformers.optimization.dynamic"], [227, "module-intel_extension_for_transformers.optimization"], [228, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [229, "module-intel_extension_for_transformers.optimization.mixture"], [230, "module-intel_extension_for_transformers.optimization.model"], [231, "module-intel_extension_for_transformers.optimization.modeling"], [232, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"], [233, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"], [234, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [235, "module-intel_extension_for_transformers.optimization.nas"], [236, "module-intel_extension_for_transformers.optimization.nas.nas"], [237, "module-intel_extension_for_transformers.optimization.optimizer"], [238, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [239, "module-intel_extension_for_transformers.optimization.pipeline"], [240, "module-intel_extension_for_transformers.optimization.pruner"], [241, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [242, "module-intel_extension_for_transformers.optimization.pruning"], [243, "module-intel_extension_for_transformers.optimization.quantization"], [244, "module-intel_extension_for_transformers.optimization.trainer"], [245, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [246, "module-intel_extension_for_transformers.optimization.utils"], [247, "module-intel_extension_for_transformers.optimization.utils.metrics"], [248, "module-intel_extension_for_transformers.optimization.utils.models"], [249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [251, "module-intel_extension_for_transformers.optimization.utils.objectives"], [252, "module-intel_extension_for_transformers.optimization.utils.utility"], [253, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [254, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [255, "module-intel_extension_for_transformers.preprocessing"], [256, "module-intel_extension_for_transformers.preprocessing.utils"], [257, "module-sparsity_all"], [258, "module-test_add_cls_token"], [259, "module-test_add_embeddings"], [260, "module-test_add_zeros"], [261, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [262, "module-test_attention_reshape"], [263, "module-test_baddbmm"], [264, "module-test_bert_mini_fp32"], [265, "module-test_binary_op"], [266, "module-test_binaryop"], [267, "module-test_cast_to"], [268, "module-test_concat"], [269, "module-test_conv"], [270, "module-test_conv_int8"], [271, "module-test_conv_reshape"], [272, "module-test_decoder_attn_reshape"], [273, "module-test_dispatcher_tuning_acc"], [274, "module-test_dispatcher_tuning_throughput"], [275, "module-test_dolly_pattern"], [276, "module-test_dynamic_quantization"], [277, "module-test_electra"], [278, "module-test_embedding"], [279, "module-test_embeddingbag"], [280, "module-test_execution_options"], [281, "module-test_fwk"], [282, "module-test_gather"], [283, "module-test_gelu"], [284, "module-test_gpt_int8"], [285, "module-test_graph_dispatch"], [286, "module-test_graph_optimizer"], [287, "module-test_insert_input_output_data"], [288, "module-test_is_supported_onnx_graph"], [289, "module-test_last_layer_shape"], [290, "module-test_layer_norm_with_reduce_mean"], [291, "module-test_layer_norm_with_transpose"], [292, "module-test_layernorm"], [293, "module-test_linear"], [294, "module-test_linear_int8"], [295, "module-test_llama_pattern"], [296, "module-test_main"], [297, "module-test_matmul"], [298, "module-test_matmul_int8"], [299, "module-test_matmul_with_bias_relu"], [300, "module-test_matmul_with_bias_sigmoid"], [301, "module-test_matmul_with_bias_tanh"], [302, "module-test_merged_embeddingbag"], [303, "module-test_model"], [304, "module-test_neox_rotary_pos_emb"], [305, "module-test_onnx_utils"], [306, "module-test_operator_adaptor"], [307, "module-test_ops"], [308, "module-test_padding_seq"], [309, "module-test_padding_sequence"], [310, "module-test_pattern_dispatch"], [311, "module-test_permute"], [312, "module-test_position_embeddings"], [313, "module-test_pow"], [314, "module-test_primitive_cache_acc"], [315, "module-test_primitive_cache_throughput"], [316, "module-test_qkv_merge"], [317, "module-test_qkv_reshape"], [318, "module-test_quant_onnx_execute"], [319, "module-test_reshape_after_restore_hidden_states"], [320, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [321, "module-test_reshape_before_restore_hidden_states"], [322, "module-test_size"], [323, "module-test_slice"], [324, "module-test_softmax"], [325, "module-test_start_end_logits"], [326, "module-test_static_compressed_buffer"], [327, "module-test_tanh"], [328, "module-test_text_encoder"], [329, "module-test_text_encoder_bf16"], [330, "module-test_tf_utils"], [331, "module-test_token_type_embeddings"], [332, "module-test_transpose"], [333, "module-test_transpose_batch_matmul"], [334, "module-test_two_linear"], [335, "module-test_unet"], [336, "module-test_unet_bf16"], [337, "module-test_unsqueeze"], [338, "module-test_vae_decoder"], [339, "module-test_vae_decoder_bf16"], [340, "module-test_weight_sharing_acc"], [341, "module-test_weight_sharing_dispatcher_tuning_acc"], [342, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [343, "module-test_weight_sharing_throughput"]], "bytes_to_unicode() (in module convert_falcon)": [[1, "convert_falcon.bytes_to_unicode"]], "convert_falcon": [[1, "module-convert_falcon"]], "bytes_to_unicode() (in module convert_gptj)": [[2, "convert_gptj.bytes_to_unicode"]], "convert_gptj": [[2, "module-convert_gptj"]], "bytes_to_unicode() (in module convert_gptneox)": [[3, "convert_gptneox.bytes_to_unicode"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "lazyunpickler (class in convert_llama)": [[4, "convert_llama.LazyUnpickler"]], "nefiletype (class in convert_llama)": [[4, "convert_llama.NEFileType"]], "bounded_parallel_map() (in module convert_llama)": [[4, "convert_llama.bounded_parallel_map"]], "convert_llama": [[4, "module-convert_llama"]], "find_class() (convert_llama.lazyunpickler method)": [[4, "convert_llama.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_llama)": [[4, "convert_llama.find_multifile_paths"]], "handle_quantization() (in module convert_llama)": [[4, "convert_llama.handle_quantization"]], "load_some_model() (in module convert_llama)": [[4, "convert_llama.load_some_model"]], "nth_multifile_path() (in module convert_llama)": [[4, "convert_llama.nth_multifile_path"]], "bytes_to_unicode() (in module convert_mpt)": [[5, "convert_mpt.bytes_to_unicode"]], "convert_mpt": [[5, "module-convert_mpt"]], "intel_extension_for_transformers.backends": [[6, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "baddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.baddbmm method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "zeros (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.where)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.where.where method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "neoxreorderchange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change.NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "neoxroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb.NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeunusedoperator (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator.RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "removezeros (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros.RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchunpackbaddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm.TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[193, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[194, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[195, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[196, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[197, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[198, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[199, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[200, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[201, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[202, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[206, "module-intel_extension_for_transformers.backends.neural_engine"]], "neural_engine_bin() (in module intel_extension_for_transformers.backends.neural_engine)": [[206, "intel_extension_for_transformers.backends.neural_engine.neural_engine_bin"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[207, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "datacollatorforsuperviseddataset (class in intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[208, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.DataCollatorForSupervisedDataset"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "preprocess() (in module intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[208, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.preprocess"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[211, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[212, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[212, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "pattern_match() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[212, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.pattern_match"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[214, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[214, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[216, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[216, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[216, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[219, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[219, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[220, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[221, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[221, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[221, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[221, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[221, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[222, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[222, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[222, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[223, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[223, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[223, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[224, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[224, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[224, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[225, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[225, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[226, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[227, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[228, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[228, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[229, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[230, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[230, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[230, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[231, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[232, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "incdecoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[233, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCDecoder"]], "incencoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[233, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCEncoder"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[234, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[234, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[234, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[234, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[234, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[235, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[236, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[236, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[237, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[237, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[237, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[238, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[238, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[239, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[239, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[240, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[241, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[241, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[242, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[242, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[243, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[243, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[244, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[244, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[244, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[244, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[245, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[246, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[247, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[247, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[248, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[251, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[251, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[251, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[251, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[252, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[252, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[253, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[253, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[253, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[253, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[253, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[254, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[254, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[254, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[254, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[254, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[255, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[256, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[256, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[256, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[257, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[258, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[258, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[258, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[258, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[259, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[259, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[259, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[259, "module-test_add_embeddings"]], "testtorchop (class in test_add_zeros)": [[260, "test_add_zeros.TestTorchOP"]], "setupclass() (test_add_zeros.testtorchop class method)": [[260, "test_add_zeros.TestTorchOP.setUpClass"]], "teardownclass() (test_add_zeros.testtorchop class method)": [[260, "test_add_zeros.TestTorchOP.tearDownClass"]], "test_add_zeros": [[260, "module-test_add_zeros"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[261, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[261, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[261, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[261, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[262, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[262, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[262, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[262, "module-test_attention_reshape"]], "testtorchop (class in test_baddbmm)": [[263, "test_baddbmm.TestTorchOP"]], "setupclass() (test_baddbmm.testtorchop class method)": [[263, "test_baddbmm.TestTorchOP.setUpClass"]], "teardownclass() (test_baddbmm.testtorchop class method)": [[263, "test_baddbmm.TestTorchOP.tearDownClass"]], "test_baddbmm": [[263, "module-test_baddbmm"]], "testtorchmodel (class in test_bert_mini_fp32)": [[264, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[264, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[264, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[264, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[265, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[265, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[265, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[265, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[266, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[266, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[266, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[266, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[267, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[267, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[267, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[267, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[268, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[268, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[268, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[268, "module-test_concat"]], "testtorchop (class in test_conv)": [[269, "test_conv.TestTorchOP"]], "setupclass() (test_conv.testtorchop class method)": [[269, "test_conv.TestTorchOP.setUpClass"]], "teardownclass() (test_conv.testtorchop class method)": [[269, "test_conv.TestTorchOP.tearDownClass"]], "test_conv": [[269, "module-test_conv"]], "testtorchop (class in test_conv_int8)": [[270, "test_conv_int8.TestTorchOP"]], "setupclass() (test_conv_int8.testtorchop class method)": [[270, "test_conv_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_conv_int8.testtorchop class method)": [[270, "test_conv_int8.TestTorchOP.tearDownClass"]], "test_conv_int8": [[270, "module-test_conv_int8"]], "testconvreshape (class in test_conv_reshape)": [[271, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[271, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[271, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[271, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[272, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[272, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[272, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[272, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[273, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[273, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[273, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[273, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[274, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[274, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[274, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[274, "module-test_dispatcher_tuning_throughput"]], "testtorchop (class in test_dolly_pattern)": [[275, "test_dolly_pattern.TestTorchOP"]], "setupclass() (test_dolly_pattern.testtorchop class method)": [[275, "test_dolly_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_dolly_pattern.testtorchop class method)": [[275, "test_dolly_pattern.TestTorchOP.tearDownClass"]], "test_dolly_pattern": [[275, "module-test_dolly_pattern"]], "testdynamicquantization (class in test_dynamic_quantization)": [[276, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[276, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[276, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[276, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[277, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[277, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[277, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[277, "module-test_electra"]], "testtorchop (class in test_embedding)": [[278, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[278, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[278, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[278, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[279, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[279, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[279, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[279, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[280, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[280, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[280, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[280, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[281, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[281, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[281, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[281, "module-test_fwk"]], "testtorchop (class in test_gather)": [[282, "test_gather.TestTorchOP"]], "setupclass() (test_gather.testtorchop class method)": [[282, "test_gather.TestTorchOP.setUpClass"]], "teardownclass() (test_gather.testtorchop class method)": [[282, "test_gather.TestTorchOP.tearDownClass"]], "test_gather": [[282, "module-test_gather"]], "testtorchop (class in test_gelu)": [[283, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[283, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[283, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[283, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[284, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[284, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[284, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[284, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[285, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[285, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[285, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[285, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[286, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[286, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[286, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[286, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[287, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[287, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[287, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[287, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[288, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[288, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[288, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[288, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[288, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[289, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[289, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[289, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[289, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[290, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[290, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[290, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[290, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[291, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[291, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[291, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[291, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[292, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[292, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[292, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[292, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[293, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[293, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[293, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[293, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[294, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[294, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[294, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[294, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[295, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[295, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[295, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[295, "module-test_llama_pattern"]], "testmain (class in test_main)": [[296, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[296, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[296, "test_main.TestMain.tearDownClass"]], "test_main": [[296, "module-test_main"]], "testtorchop (class in test_matmul)": [[297, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[297, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[297, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[297, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[298, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[298, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[298, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[298, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[299, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[299, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[299, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[299, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[300, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[300, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[300, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[300, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[301, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[301, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[301, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[301, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[302, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[302, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[302, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[302, "module-test_merged_embeddingbag"]], "test_model": [[303, "module-test_model"]], "testtorchop (class in test_neox_rotary_pos_emb)": [[304, "test_neox_rotary_pos_emb.TestTorchOP"]], "setupclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[304, "test_neox_rotary_pos_emb.TestTorchOP.setUpClass"]], "teardownclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[304, "test_neox_rotary_pos_emb.TestTorchOP.tearDownClass"]], "test_neox_rotary_pos_emb": [[304, "module-test_neox_rotary_pos_emb"]], "testonnxutils (class in test_onnx_utils)": [[305, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[305, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[305, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[305, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[306, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[306, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[306, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[306, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[307, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[307, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[307, "test_ops.TestOps.tearDownClass"]], "test_ops": [[307, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[308, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[308, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[308, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[308, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[309, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[309, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[309, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[309, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[310, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[310, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[310, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[310, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[311, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[311, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[311, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[311, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[312, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[312, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[312, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[312, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[313, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[313, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[313, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[313, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[314, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[314, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[314, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[314, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[315, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[315, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[315, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[315, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[316, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[316, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[316, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[316, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[317, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[317, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[317, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[317, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[318, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[318, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[318, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[318, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[319, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[319, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[319, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[319, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[320, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[320, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[320, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[320, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[321, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[321, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[321, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[321, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[322, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[322, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[322, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[322, "module-test_size"]], "testtorchop (class in test_slice)": [[323, "test_slice.TestTorchOP"]], "setupclass() (test_slice.testtorchop class method)": [[323, "test_slice.TestTorchOP.setUpClass"]], "teardownclass() (test_slice.testtorchop class method)": [[323, "test_slice.TestTorchOP.tearDownClass"]], "test_slice": [[323, "module-test_slice"]], "testtorchop (class in test_softmax)": [[324, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[324, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[324, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[324, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[325, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[325, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[325, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[325, "module-test_start_end_logits"]], "testscbuffer (class in test_static_compressed_buffer)": [[326, "test_static_compressed_buffer.TestSCBuffer"]], "setupclass() (test_static_compressed_buffer.testscbuffer class method)": [[326, "test_static_compressed_buffer.TestSCBuffer.setUpClass"]], "teardownclass() (test_static_compressed_buffer.testscbuffer class method)": [[326, "test_static_compressed_buffer.TestSCBuffer.tearDownClass"]], "test_static_compressed_buffer": [[326, "module-test_static_compressed_buffer"]], "testtorchop (class in test_tanh)": [[327, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[327, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[327, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[327, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[328, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[328, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[328, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[328, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[329, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[329, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[329, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[329, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[330, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[330, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[330, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[330, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[331, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[331, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[331, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[331, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[332, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[332, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[332, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[332, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[333, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[333, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[333, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[333, "module-test_transpose_batch_matmul"]], "testtorchlinear (class in test_two_linear)": [[334, "test_two_linear.TestTorchLinear"]], "setupclass() (test_two_linear.testtorchlinear class method)": [[334, "test_two_linear.TestTorchLinear.setUpClass"]], "teardownclass() (test_two_linear.testtorchlinear class method)": [[334, "test_two_linear.TestTorchLinear.tearDownClass"]], "test_two_linear": [[334, "module-test_two_linear"]], "testunet (class in test_unet)": [[335, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[335, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[335, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[335, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[336, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[336, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[336, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[336, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[337, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[337, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[337, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[337, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[338, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[338, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[338, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[338, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[339, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[339, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[339, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[339, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[340, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[340, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[340, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[340, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[341, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[341, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[341, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[341, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[342, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[342, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[342, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[342, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[343, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[343, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[343, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[343, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[351, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[351, "c.NULL_INSTANCE"]], "jd (c++ type)": [[351, "_CPPv42jd"], [352, "_CPPv42jd"], [353, "_CPPv42jd"], [354, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[351, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[351, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[351, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[351, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[351, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[351, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[351, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[351, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[351, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[351, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[351, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[351, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[351, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[351, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[351, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[351, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[351, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[351, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[351, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[352, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[352, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [352, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[352, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[352, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[352, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [352, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[352, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[352, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[352, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [352, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[352, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[352, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[352, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [352, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[352, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[352, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[352, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [352, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[352, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[352, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[352, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [352, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[352, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[352, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[352, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [352, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[352, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[352, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[352, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [352, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[352, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[352, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[352, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [352, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[352, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[352, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[352, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [352, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[352, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[352, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[352, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [352, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[352, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[352, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[352, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [352, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[352, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[352, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[352, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[352, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[352, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [352, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[352, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[352, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[352, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[352, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[352, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t"], [352, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[352, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[352, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[352, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [352, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[352, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[352, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[352, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [352, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[352, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[352, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[352, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [352, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[352, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[352, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[352, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [352, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[352, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[352, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[352, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [352, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[352, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[352, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[352, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [352, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[352, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[352, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[352, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [352, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[352, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[352, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[352, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [352, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[352, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[352, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[352, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [352, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[352, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[352, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[352, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[352, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[352, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[352, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[352, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[352, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[352, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[352, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [352, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[352, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[352, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[352, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [352, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[352, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[352, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[352, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [352, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[352, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[352, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[352, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [352, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[352, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[352, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[352, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [352, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[352, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[352, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[352, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [352, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[352, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[352, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[352, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [352, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[352, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[352, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[352, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [352, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[352, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[352, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[352, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [352, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[352, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[352, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[352, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [352, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[352, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[353, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[353, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[353, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[353, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[353, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[353, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[353, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[353, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[353, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[353, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [353, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [353, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[353, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[353, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[353, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[353, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[353, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[353, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[353, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[353, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[354, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[354, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[354, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[354, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[354, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[354, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[354, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[354, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[354, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[354, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[354, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[354, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[354, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[354, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[354, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[354, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[354, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[354, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[354, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[354, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[354, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[354, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[354, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[354, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[354, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[354, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[354, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[354, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[354, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[354, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[354, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[354, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_input (c++ type)": [[354, "_CPPv4N2jd3ssd12matmul_inputE"]], "jd::ssd::matmul_input::input (c++ enum)": [[354, "_CPPv4N2jd3ssd12matmul_input5inputE"]], "jd::ssd::matmul_input::input::append_sum (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME"]], "jd::ssd::matmul_input::input::scale0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E"]], "jd::ssd::matmul_input::input::src0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E"]], "jd::ssd::matmul_input::input::src1 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E"]], "jd::ssd::matmul_input::input::src2 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E"]], "jd::ssd::matmul_input::input::zp0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E"]], "jd::ssd::matmul_input::input::matmul_io_max (c++ enumerator)": [[354, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE"]], "jd::ssd::matmul_io (c++ type)": [[354, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[354, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[354, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_output (c++ type)": [[354, "_CPPv4N2jd3ssd13matmul_outputE"]], "jd::ssd::matmul_output::output (c++ enum)": [[354, "_CPPv4N2jd3ssd13matmul_output6outputE"]], "jd::ssd::matmul_output::output::dst0 (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13matmul_output6output4DST0E"]], "jd::ssd::matmul_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[354, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[354, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[354, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[354, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[354, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[354, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[354, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[354, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[354, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[354, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[354, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[354, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[354, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[354, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[354, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[354, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[354, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[354, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[354, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[354, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[354, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[354, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[354, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[354, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[354, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[354, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[354, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[354, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[354, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[354, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[354, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[354, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[354, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[354, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[354, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[354, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})