name: Kernel Unit Test

on:
  pull_request:
    branches: [main]
    paths:
      - intel_extension_for_transformers/llm/library/kernels/**
      - .github/workflows/unit-test-kernel.yml
      - .github/workflows/script/unitTest/**
      - '!intel_extension_for_transformers/llm/library/kernels/docs/**'
      - "!intel_extension_for_transformers/llm/runtime/graph/**"
      - '!intel_extension_for_transformers/llm/library/kernels/README.md'
  workflow_dispatch:

# If there is a new commit, the previous jobs will be canceled
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOCKER_CONFIG_NAME: "commonDockerConfig"
  REPO_NAME: "intel-extension-for-transformers"
  REPO_TAG: "py38"
  DOCKER_FILE_NAME: "devel"
  REPO_DIR: "/intel-extension-for-transformers"
  CONTAINER_NAME: "Test"
  EXTRA_CONTAINER_NAME: "chatbot"

jobs:
  unit-test:
    runs-on: [self-hosted, linux, X64, itrex-node]
    steps:
      - name: Docker Clean Up
        run: |
          docker ps -a
          if [[ $(docker ps -a | grep -i ^'${{ env.EXTRA_CONTAINER_NAME }}') ]]; then
            docker_names=$(docker ps -a | grep "${{ env.EXTRA_CONTAINER_NAME }}" | awk '{print $NF}')
            for docker_name in $(echo -e ${docker_names});
            do 
              docker start ${docker_name}
              echo "remove left files through container ..."
              docker exec ${docker_name} bash -c "ls -a ${{ env.REPO_DIR }} && rm -fr ${{ env.REPO_DIR }}/* && rm -fr ${{ env.REPO_DIR }}/.* || true"
            done
          fi
          if [[ $(docker ps -a | grep -i '${{ env.CONTAINER_NAME }}'$) ]]; then
            docker_names=$(docker ps -a | grep "${{ env.CONTAINER_NAME }}" | awk '{print $NF}')
            for docker_name in $(echo -e ${docker_names});
            do 
              docker start ${docker_name}
              echo "remove left files through container ..."
              docker exec ${docker_name} bash -c "ls -a ${{ env.REPO_DIR }} && rm -fr ${{ env.REPO_DIR }}/* && rm -fr ${{ env.REPO_DIR }}/.* || true"
            done
          fi

      - name: Checkout out Repo
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-tags: true

      - name: Docker Build
        run: |
          docker build -f ${{ github.workspace }}/.github/workflows/docker/${{ env.DOCKER_FILE_NAME }}.dockerfile -t ${{ env.REPO_NAME }}:${{ env.REPO_TAG }} .

      - name: Docker Run
        run: |
          if [[ $(docker ps -a | grep -i 'ut${{ env.CONTAINER_NAME }}'$) ]]; then
            docker stop ut${{ env.CONTAINER_NAME }}
            docker rm -vf ut${{ env.CONTAINER_NAME }} || true
          fi
          docker run -dit --disable-content-trust --privileged --name=ut${{ env.CONTAINER_NAME }} -v /dev/shm:/dev/shm \
          -v ${{ github.workspace }}:/intel-extension-for-transformers \
          -v /tf_dataset2:/tf_dataset2 \
          -v ~/.cache/oneAPI:/cache \
          ${{ env.REPO_NAME }}:${{ env.REPO_TAG }}

      - name: Env build
        run: |
          docker exec ut${{ env.CONTAINER_NAME }} \
          bash /intel-extension-for-transformers/.github/workflows/script/prepare_env.sh

      - name: Binary build
        run: |
          docker exec ut${{ env.CONTAINER_NAME }} \
          bash -c "cd /intel-extension-for-transformers/.github/workflows/script \
          && bash install_binary.sh"

      - name: Run UT
        run: |
          docker exec ut${{ env.CONTAINER_NAME }} \
          bash -c "cd /intel-extension-for-transformers/.github/workflows/script/unitTest \
          && bash run_unit_test_kernel.sh"

      - name: Publish pipeline artifact
        uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: Kernel Unit Test
          path: ${{ github.workspace }}/log_dir/unit_test*.*
